openapi: 3.0.3
servers:
  - url: https://github.com/
  - url: "{protocol}://{hostname}/api/v3"
    variables:
      hostname:
        default: HOSTNAME
        description: Self-hosted Enterprise Server or Enterprise Cloud hostname
      protocol:
        default: http
        description: Self-hosted Enterprise Server or Enterprise Cloud protocol
info:
  contact:
    name: Support
    url: https://support.github.com/contact
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  title: GitHub v3 REST API
  version: 1.1.4
  x-apisguru-categories:
    - collaboration
    - developer_tools
  x-logo:
    url: https://twitter.com/github/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/github/rest-api-description/main/descriptions/ghes-2.21/ghes-2.21.json
      version: "3.0"
  x-providerName: github.com
  x-serviceName: ghes-2.21
externalDocs:
  description: GitHub Enterprise Developer Docs
  url: https://docs.github.com/enterprise-server@2.21/rest/
tags:
  - description: Endpoints to manage GitHub Actions using the REST API.
    name: actions
  - description: Activity APIs provide access to notifications, subscriptions, and
      timelines.
    name: activity
  - description: Information for integrations and installations.
    name: apps
  - description: Monitor charges and usage from Actions and Packages.
    name: billing
  - description: Rich interactions with checks run by your integrations.
    name: checks
  - description: Retrieve code scanning alerts from a repository.
    name: code-scanning
  - description: Insight into codes of conduct for your communities.
    name: codes-of-conduct
  - description: List emojis available to use on GitHub.
    name: emojis
  - description: Administer a GitHub enterprise.
    name: enterprise-admin
  - description: View, modify your gists.
    name: gists
  - description: Raw Git functionality.
    name: git
  - description: View gitignore templates
    name: gitignore
  - description: Owner or admin management of users interactions.
    name: interactions
  - description: Interact with GitHub Issues.
    name: issues
  - description: View various OSS licenses.
    name: licenses
  - description: Render Github flavored markdown
    name: markdown
  - description: Endpoints that give information about the API.
    name: meta
  - description: Move projects to or from GitHub.
    name: migrations
  - description: Manage access of OAuth applications
    name: oauth-authorizations
  - description: Interact with GitHub Orgs.
    name: orgs
  - description: Manage packages for authenticated users and organizations.
    name: packages
  - description: Interact with GitHub Projects.
    name: projects
  - description: Interact with GitHub Pull Requests.
    name: pulls
  - description: Check your current rate limit status
    name: rate-limit
  - description: Interact with reactions to various GitHub entities.
    name: reactions
  - description: Interact with GitHub Repos.
    name: repos
  - description: Provisioning of GitHub organization membership for SCIM-enabled providers.
    name: scim
  - description: Look for stuff on GitHub.
    name: search
  - description: Retrieve secret scanning alerts from a repository.
    name: secret-scanning
  - description: Interact with GitHub Teams.
    name: teams
  - description: Interact with and view information about users and also current user.
    name: users
paths:
  /:
    get:
      description: Get Hypermedia links to resources accessible in GitHub's REST API
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#root-endpoint
      operationId: meta/root
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  authorizations_url:
                    format: uri-template
                    type: string
                  code_search_url:
                    format: uri-template
                    type: string
                  commit_search_url:
                    format: uri-template
                    type: string
                  current_user_authorizations_html_url:
                    format: uri-template
                    type: string
                  current_user_repositories_url:
                    format: uri-template
                    type: string
                  current_user_url:
                    format: uri-template
                    type: string
                  emails_url:
                    format: uri-template
                    type: string
                  emojis_url:
                    format: uri-template
                    type: string
                  events_url:
                    format: uri-template
                    type: string
                  feeds_url:
                    format: uri-template
                    type: string
                  followers_url:
                    format: uri-template
                    type: string
                  following_url:
                    format: uri-template
                    type: string
                  gists_url:
                    format: uri-template
                    type: string
                  hub_url:
                    format: uri-template
                    type: string
                  issue_search_url:
                    format: uri-template
                    type: string
                  issues_url:
                    format: uri-template
                    type: string
                  keys_url:
                    format: uri-template
                    type: string
                  label_search_url:
                    format: uri-template
                    type: string
                  notifications_url:
                    format: uri-template
                    type: string
                  organization_repositories_url:
                    format: uri-template
                    type: string
                  organization_teams_url:
                    format: uri-template
                    type: string
                  organization_url:
                    format: uri-template
                    type: string
                  public_gists_url:
                    format: uri-template
                    type: string
                  rate_limit_url:
                    format: uri-template
                    type: string
                  repository_search_url:
                    format: uri-template
                    type: string
                  repository_url:
                    format: uri-template
                    type: string
                  starred_gists_url:
                    format: uri-template
                    type: string
                  starred_url:
                    format: uri-template
                    type: string
                  topic_search_url:
                    format: uri-template
                    type: string
                  user_organizations_url:
                    format: uri-template
                    type: string
                  user_repositories_url:
                    format: uri-template
                    type: string
                  user_search_url:
                    format: uri-template
                    type: string
                  user_url:
                    format: uri-template
                    type: string
                required:
                  - current_user_url
                  - current_user_authorizations_html_url
                  - authorizations_url
                  - code_search_url
                  - commit_search_url
                  - emails_url
                  - emojis_url
                  - events_url
                  - feeds_url
                  - followers_url
                  - following_url
                  - gists_url
                  - hub_url
                  - issue_search_url
                  - issues_url
                  - keys_url
                  - label_search_url
                  - notifications_url
                  - organization_url
                  - organization_repositories_url
                  - organization_teams_url
                  - public_gists_url
                  - rate_limit_url
                  - repository_url
                  - repository_search_url
                  - current_user_repositories_url
                  - starred_url
                  - starred_gists_url
                  - user_url
                  - user_organizations_url
                  - user_repositories_url
                  - user_search_url
                type: object
          description: Response
      summary: GitHub API Root
      tags:
        - meta
      x-github:
        category: meta
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
  /admin/hooks:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#list-global-webhooks
      operationId: enterprise-admin/list-global-webhooks
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.superpro-preview+json
            type: string
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/global-hook-items"
              schema:
                items:
                  $ref: "#/components/schemas/global-hook"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List global webhooks
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: superpro
            note: >-
              The [Global Webhooks
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#global-webhooks)
              is currently available for developers to preview. To access the
              API during the preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.superpro-preview+json

              ```
            required: true
        subcategory: global-webhooks
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#create-a-global-webhook
      operationId: enterprise-admin/create-global-webhook
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.superpro-preview+json
            type: string
      requestBody:
        content:
          application/json:
            example:
              config:
                content_type: json
                secret: secret
                url: https://example.com/webhook
              events:
                - organization
                - user
              name: web
            schema:
              properties:
                active:
                  default: true
                  description: Determines if notifications are sent when the webhook is triggered.
                    Set to `true` to send notifications.
                  type: boolean
                config:
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    content_type:
                      description: The media type used to serialize the payloads. Supported values
                        include `json` and `form`. The default is `form`.
                      type: string
                    insecure_ssl:
                      description: Determines whether the SSL certificate of the host for `url` will
                        be verified when delivering payloads. Supported values
                        include `0` (verification is performed) and `1`
                        (verification is not performed). The default is `0`.
                        **We strongly recommend not setting this to `1` as you
                        are subject to man-in-the-middle and other attacks.**
                      type: string
                    secret:
                      description: If provided, the `secret` will be used as the `key` to generate the
                        HMAC hex digest value in the
                        [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#delivery-headers)
                        header.
                      type: string
                    url:
                      description: The URL to which the payloads will be delivered.
                      type: string
                  required:
                    - url
                  type: object
                events:
                  description: "The
                    [events](https://docs.github.com/enterprise-server@2.21/webhoo\
                    ks/event-payloads) that trigger this webhook. A global
                    webhook can be triggered by `user` and `organization`
                    events. Default: `user` and `organization`."
                  items:
                    type: string
                  type: array
                name:
                  description: Must be passed as "web".
                  type: string
              required:
                - name
                - config
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/global-hook"
              schema:
                $ref: "#/components/schemas/global-hook"
          description: Response
      summary: Create a global webhook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: superpro
            note: >-
              The [Global Webhooks
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#global-webhooks)
              is currently available for developers to preview. To access the
              API during the preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.superpro-preview+json

              ```
            required: true
        subcategory: global-webhooks
  "/admin/hooks/{hook_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#delete-a-global-webhook
      operationId: enterprise-admin/delete-global-webhook
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.superpro-preview+json
            type: string
        - $ref: "#/components/parameters/hook-id"
      responses:
        "204":
          description: Response
      summary: Delete a global webhook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: superpro
            note: >-
              The [Global Webhooks
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#global-webhooks)
              is currently available for developers to preview. To access the
              API during the preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.superpro-preview+json

              ```
            required: true
        subcategory: global-webhooks
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-a-global-webhook
      operationId: enterprise-admin/get-global-webhook
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.superpro-preview+json
            type: string
        - $ref: "#/components/parameters/hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/global-hook"
              schema:
                $ref: "#/components/schemas/global-hook"
          description: Response
      summary: Get a global webhook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: superpro
            note: >-
              The [Global Webhooks
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#global-webhooks)
              is currently available for developers to preview. To access the
              API during the preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.superpro-preview+json

              ```
            required: true
        subcategory: global-webhooks
    patch:
      description: Parameters that are not provided will be overwritten with the
        default value or removed if no default exists.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-a-global-webhook
      operationId: enterprise-admin/update-global-webhook
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.superpro-preview+json
            type: string
        - $ref: "#/components/parameters/hook-id"
      requestBody:
        content:
          application/json:
            example:
              config:
                url: https://example.com/webhook
              events:
                - organization
            schema:
              properties:
                active:
                  default: true
                  description: Determines if notifications are sent when the webhook is triggered.
                    Set to `true` to send notifications.
                  type: boolean
                config:
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    content_type:
                      description: The media type used to serialize the payloads. Supported values
                        include `json` and `form`. The default is `form`.
                      type: string
                    insecure_ssl:
                      description: Determines whether the SSL certificate of the host for `url` will
                        be verified when delivering payloads. Supported values
                        include `0` (verification is performed) and `1`
                        (verification is not performed). The default is `0`.
                        **We strongly recommend not setting this to `1` as you
                        are subject to man-in-the-middle and other attacks.**
                      type: string
                    secret:
                      description: If provided, the `secret` will be used as the `key` to generate the
                        HMAC hex digest value in the
                        [`X-Hub-Signature`](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#delivery-headers)
                        header.
                      type: string
                    url:
                      description: The URL to which the payloads will be delivered.
                      type: string
                  required:
                    - url
                  type: object
                events:
                  description: "The
                    [events](https://docs.github.com/enterprise-server@2.21/webhoo\
                    ks/event-payloads) that trigger this webhook. A global
                    webhook can be triggered by `user` and `organization`
                    events. Default: `user` and `organization`."
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/global-hook-2"
              schema:
                $ref: "#/components/schemas/global-hook-2"
          description: Response
      summary: Update a global webhook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: superpro
            note: >-
              The [Global Webhooks
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#global-webhooks)
              is currently available for developers to preview. To access the
              API during the preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.superpro-preview+json

              ```
            required: true
        subcategory: global-webhooks
  "/admin/hooks/{hook_id}/pings":
    post:
      description: This will trigger a [ping
        event](https://docs.github.com/enterprise-server@2.21/webhooks/#ping-event)
        to be sent to the webhook.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#ping-a-global-webhook
      operationId: enterprise-admin/ping-global-webhook
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.superpro-preview+json
            type: string
        - $ref: "#/components/parameters/hook-id"
      responses:
        "204":
          description: Response
      summary: Ping a global webhook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: superpro
            note: >-
              The [Global Webhooks
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#global-webhooks)
              is currently available for developers to preview. To access the
              API during the preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.superpro-preview+json

              ```
            required: true
        subcategory: global-webhooks
  /admin/keys:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#list-public-keys
      operationId: enterprise-admin/list-public-keys
      parameters:
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/direction"
        - in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - accessed
            type: string
        - description: Only show public keys accessed after the given time.
          in: query
          name: since
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/enterprise-public-key-items"
              schema:
                items:
                  $ref: "#/components/schemas/enterprise-public-key"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List public keys
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  "/admin/keys/{key_ids}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#delete-a-public-key
      operationId: enterprise-admin/delete-public-key
      parameters:
        - $ref: "#/components/parameters/key-ids"
      responses:
        "204":
          description: Response
      summary: Delete a public key
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  "/admin/ldap/teams/{team_id}/mapping":
    patch:
      description: >-
        Updates the [distinguished
        name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to
        map to a team. [LDAP
        synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync)
        must be enabled to map LDAP entries to a team. Use the [Create a
        team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#create-a-team)
        endpoint to create a team with LDAP mapping.


        You can also update the LDAP mapping of a child team.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team
      operationId: enterprise-admin/update-ldap-mapping-for-team
      parameters:
        - $ref: "#/components/parameters/team-id"
      requestBody:
        content:
          application/json:
            example:
              ldap_dn: cn=Enterprise Ops,ou=teams,dc=github,dc=com
            schema:
              properties:
                ldap_dn:
                  description: The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns)
                    (DN) of the LDAP entry to map to a team.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/ldap-mapping-team"
              schema:
                $ref: "#/components/schemas/ldap-mapping-team"
          description: Response
      summary: Update LDAP mapping for a team
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: ldap
  "/admin/ldap/teams/{team_id}/sync":
    post:
      description: Note that this API call does not automatically initiate an LDAP
        sync. Rather, if a `201` is returned, the sync job is queued
        successfully, and is performed when the instance is ready.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-team
      operationId: enterprise-admin/sync-ldap-mapping-for-team
      parameters:
        - $ref: "#/components/parameters/team-id"
      responses:
        "201":
          content:
            application/json:
              example:
                status: queued
              schema:
                properties:
                  status:
                    type: string
                type: object
          description: Response
      summary: Sync LDAP mapping for a team
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: ldap
  "/admin/ldap/users/{username}/mapping":
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user
      operationId: enterprise-admin/update-ldap-mapping-for-user
      parameters:
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            example:
              ldap_dn: uid=asdf,ou=users,dc=github,dc=com
            schema:
              properties:
                ldap_dn:
                  description: The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns)
                    (DN) of the LDAP entry to map to a team.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/ldap-mapping-user"
              schema:
                $ref: "#/components/schemas/ldap-mapping-user"
          description: Response
      summary: Update LDAP mapping for a user
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: ldap
  "/admin/ldap/users/{username}/sync":
    post:
      description: Note that this API call does not automatically initiate an LDAP
        sync. Rather, if a `201` is returned, the sync job is queued
        successfully, and is performed when the instance is ready.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-user
      operationId: enterprise-admin/sync-ldap-mapping-for-user
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "201":
          content:
            application/json:
              example:
                status: queued
              schema:
                properties:
                  status:
                    type: string
                type: object
          description: Response
      summary: Sync LDAP mapping for a user
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: ldap
  /admin/organizations:
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#create-an-organization
      operationId: enterprise-admin/create-org
      requestBody:
        content:
          application/json:
            example:
              admin: monalisaoctocat
              login: github
              profile_name: GitHub, Inc.
            schema:
              properties:
                admin:
                  description: The login of the user who will manage this organization.
                  type: string
                login:
                  description: The organization's username.
                  type: string
                profile_name:
                  description: The organization's display name.
                  type: string
              required:
                - login
                - admin
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/organization-simple"
              schema:
                $ref: "#/components/schemas/organization-simple"
          description: Response
      summary: Create an organization
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: orgs
  "/admin/organizations/{org}":
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-an-organization-name
      operationId: enterprise-admin/update-org-name
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            example:
              login: the-new-octocats
            schema:
              properties:
                login:
                  description: The organization's new name.
                  type: string
              required:
                - login
              type: object
      responses:
        "202":
          content:
            application/json:
              example:
                message: Job queued to rename organization. It may take a few minutes to
                  complete.
                url: https://<hostname>/api/v3/organizations/1
              schema:
                properties:
                  message:
                    type: string
                  url:
                    type: string
                type: object
          description: Response
      summary: Update an organization name
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: orgs
  /admin/pre-receive-environments:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#list-pre-receive-environments
      operationId: enterprise-admin/list-pre-receive-environments
      parameters:
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/direction"
        - in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - name
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-environment-items"
              schema:
                items:
                  $ref: "#/components/schemas/pre-receive-environment"
                type: array
          description: Response
      summary: List pre-receive environments
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-environments
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#create-a-pre-receive-environment
      operationId: enterprise-admin/create-pre-receive-environment
      requestBody:
        content:
          application/json:
            example:
              image_url: https://my_file_server/path/to/devtools_env.tar.gz
              name: DevTools Hook Env
            schema:
              properties:
                image_url:
                  description: URL from which to download a tarball of this environment.
                  type: string
                name:
                  description: The new pre-receive environment's name.
                  type: string
              required:
                - name
                - image_url
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-environment"
              schema:
                $ref: "#/components/schemas/pre-receive-environment"
          description: Response
      summary: Create a pre-receive environment
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-environments
  "/admin/pre-receive-environments/{pre_receive_environment_id}":
    delete:
      description: >-
        If you attempt to delete an environment that cannot be deleted, you
        will receive a `422 Unprocessable Entity` response.


        The possible error messages are:


        *   _Cannot modify or delete the default environment_

        *   _Cannot delete environment that has hooks_

        *   _Cannot delete environment when download is in progress_
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#delete-a-pre-receive-environment
      operationId: enterprise-admin/delete-pre-receive-environment
      parameters:
        - $ref: "#/components/parameters/pre-receive-environment-id"
      responses:
        "204":
          description: Response
        "422":
          content:
            application/json:
              examples:
                client-errors:
                  value:
                    errors:
                      - code: custom
                        message: Cannot modify or delete the default environment
                        resource: PreReceiveEnvironment
                    message: Validation Failed
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                        resource:
                          type: string
                      type: object
                    type: array
                  message:
                    type: string
                type: object
          description: Client Errors
      summary: Delete a pre-receive environment
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-environments
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-a-pre-receive-environment
      operationId: enterprise-admin/get-pre-receive-environment
      parameters:
        - $ref: "#/components/parameters/pre-receive-environment-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-environment-2"
              schema:
                $ref: "#/components/schemas/pre-receive-environment"
          description: Response
      summary: Get a pre-receive environment
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-environments
    patch:
      description: You cannot modify the default environment. If you attempt to modify
        the default environment, you will receive a `422 Unprocessable Entity`
        response.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-a-pre-receive-environment
      operationId: enterprise-admin/update-pre-receive-environment
      parameters:
        - $ref: "#/components/parameters/pre-receive-environment-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                image_url:
                  description: URL from which to download a tarball of this environment.
                  type: string
                name:
                  description: This pre-receive environment's new name.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/pre-receive-environment-default-response"
              schema:
                $ref: "#/components/schemas/pre-receive-environment"
          description: Response
        "422":
          content:
            application/json:
              examples:
                client-errors:
                  value:
                    errors:
                      - code: custom
                        message: Cannot modify or delete the default environment
                        resource: PreReceiveEnvironment
                    message: Validation Failed
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                        resource:
                          type: string
                      type: object
                    type: array
                  message:
                    type: string
                type: object
          description: Client Errors
      summary: Update a pre-receive environment
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-environments
  "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads":
    post:
      description: >-
        Triggers a new download of the environment tarball from the
        environment's `image_url`. When the download is finished, the newly
        downloaded tarball will overwrite the existing environment.


        If a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.


        The possible error messages are:


        * _Cannot modify or delete the default environment_

        * _Can not start a new download when a download is in progress_
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#start-a-pre-receive-environment-download
      operationId: enterprise-admin/start-pre-receive-environment-download
      parameters:
        - $ref: "#/components/parameters/pre-receive-environment-id"
      responses:
        "202":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/pre-receive-environment-download-status-default-re\
                    sponse"
              schema:
                $ref: "#/components/schemas/pre-receive-environment-download-status"
          description: Response
        "422":
          content:
            application/json:
              examples:
                client-errors:
                  value:
                    errors:
                      - code: custom
                        message: Can not start a new download when a download is in progress
                        resource: PreReceiveEnvironment
                    message: Validation Failed
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                        resource:
                          type: string
                      type: object
                    type: array
                  message:
                    type: string
                type: object
          description: Client Errors
      summary: Start a pre-receive environment download
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-environments
  "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest":
    get:
      description: In addition to seeing the download status at the "[Get a
        pre-receive environment](#get-a-pre-receive-environment)" endpoint,
        there is also this separate endpoint for just the download status.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment
      operationId: enterprise-admin/get-download-status-for-pre-receive-environment
      parameters:
        - $ref: "#/components/parameters/pre-receive-environment-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-environment-download-status"
              schema:
                $ref: "#/components/schemas/pre-receive-environment-download-status"
          description: Response
      summary: Get the download status for a pre-receive environment
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-environments
  /admin/pre-receive-hooks:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#list-pre-receive-hooks
      operationId: enterprise-admin/list-pre-receive-hooks
      parameters:
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/direction"
        - description: One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to) or `name`.
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - name
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-hook-items"
              schema:
                items:
                  $ref: "#/components/schemas/pre-receive-hook"
                type: array
          description: Response
      summary: List pre-receive hooks
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-hooks
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#create-a-pre-receive-hook
      operationId: enterprise-admin/create-pre-receive-hook
      requestBody:
        content:
          application/json:
            example:
              allow_downstream_configuration: false
              enforcement: disabled
              environment:
                id: 2
              name: Check Commits
              script: scripts/commit_check.sh
              script_repository:
                full_name: DevIT/hooks
            schema:
              properties:
                allow_downstream_configuration:
                  description: "Whether enforcement can be overridden at the org or repo level.
                    default: `false`"
                  type: boolean
                enforcement:
                  description: "The state of enforcement for this hook. default: `disabled`"
                  type: string
                environment:
                  additionalProperties: true
                  description: The pre-receive environment where the script is executed.
                  properties: {}
                  type: object
                name:
                  description: The name of the hook.
                  type: string
                script:
                  description: The script that the hook runs.
                  type: string
                script_repository:
                  additionalProperties: true
                  description: The GitHub repository where the script is kept.
                  properties: {}
                  type: object
              required:
                - name
                - script
                - script_repository
                - environment
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-hook"
              schema:
                $ref: "#/components/schemas/pre-receive-hook"
          description: Response
      summary: Create a pre-receive hook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-hooks
  "/admin/pre-receive-hooks/{pre_receive_hook_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#delete-a-pre-receive-hook
      operationId: enterprise-admin/delete-pre-receive-hook
      parameters:
        - $ref: "#/components/parameters/pre-receive-hook-id"
      responses:
        "204":
          description: Response
      summary: Delete a pre-receive hook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-hooks
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-a-pre-receive-hook
      operationId: enterprise-admin/get-pre-receive-hook
      parameters:
        - $ref: "#/components/parameters/pre-receive-hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-hook"
              schema:
                $ref: "#/components/schemas/pre-receive-hook"
          description: Response
      summary: Get a pre-receive hook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-hooks
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-a-pre-receive-hook
      operationId: enterprise-admin/update-pre-receive-hook
      parameters:
        - $ref: "#/components/parameters/pre-receive-hook-id"
      requestBody:
        content:
          application/json:
            example:
              allow_downstream_configuration: true
              environment:
                id: 1
              name: Check Commits
            schema:
              properties:
                allow_downstream_configuration:
                  description: Whether enforcement can be overridden at the org or repo level.
                  type: boolean
                enforcement:
                  description: The state of enforcement for this hook.
                  type: string
                environment:
                  additionalProperties: true
                  description: The pre-receive environment where the script is executed.
                  properties: {}
                  type: object
                name:
                  description: The name of the hook.
                  type: string
                script:
                  description: The script that the hook runs.
                  type: string
                script_repository:
                  additionalProperties: true
                  description: The GitHub repository where the script is kept.
                  properties: {}
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pre-receive-hook-2"
              schema:
                $ref: "#/components/schemas/pre-receive-hook"
          description: Response
      summary: Update a pre-receive hook
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: pre-receive-hooks
  /admin/tokens:
    get:
      description: Lists personal access tokens for all users, including admin users.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#list-personal-access-tokens
      operationId: enterprise-admin/list-personal-access-tokens
      parameters:
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-items"
              schema:
                items:
                  $ref: "#/components/schemas/authorization"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List personal access tokens
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  "/admin/tokens/{token_id}":
    delete:
      description: Deletes a personal access token. Returns a `403 - Forbidden` status
        when a personal access token is in use. For example, if you access this
        endpoint with the same personal access token that you are trying to
        delete, you will receive this error.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#delete-a-personal-access-token
      operationId: enterprise-admin/delete-personal-access-token
      parameters:
        - $ref: "#/components/parameters/token-id"
      responses:
        "204":
          description: Response
      summary: Delete a personal access token
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  /admin/users:
    post:
      description: >-
        If an external authentication mechanism is used, the login name
        should match the login name in the external system. If you are using
        LDAP authentication, you should also [update the LDAP
        mapping](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user)
        for the user.


        The login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `"octo_cat"` as the login, a user named `"octo-cat"` will be created.


        If the login name or email address is already associated with an account, the server will return a `422` response.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#create-a-user
      operationId: enterprise-admin/create-user
      requestBody:
        content:
          application/json:
            example:
              email: octocat@github.com
              login: monalisa
            schema:
              properties:
                email:
                  description: "**Required for built-in authentication.** The user's email
                    address. This parameter can be omitted when using CAS, LDAP,
                    or SAML. For details on built-in and centrally-managed
                    authentication, see the [GitHub authentication
                    guide](https://help.github.com/enterprise/2.21/admin/guides\
                    /user-management/authenticating-users-for-your-github-enter\
                    prise-server-instance/)."
                  type: string
                login:
                  description: The user's username.
                  type: string
              required:
                - login
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user"
              schema:
                $ref: "#/components/schemas/simple-user"
          description: Response
      summary: Create a user
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  "/admin/users/{username}":
    delete:
      description: >-
        Deleting a user will delete all their repositories, gists,
        applications, and personal settings. [Suspending a
        user](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#suspend-a-user)
        is often a better option.


        You can delete any user account except your own.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#delete-a-user
      operationId: enterprise-admin/delete-user
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
      summary: Delete a user
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-the-username-for-a-user
      operationId: enterprise-admin/update-username-for-user
      parameters:
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            example:
              login: thenewmonalisa
            schema:
              properties:
                login:
                  description: The user's new username.
                  type: string
              required:
                - login
              type: object
      responses:
        "202":
          content:
            application/json:
              example:
                message: Job queued to rename user. It may take a few minutes to complete.
                url: https://api.github.com/user/1
              schema:
                properties:
                  message:
                    type: string
                  url:
                    type: string
                type: object
          description: Response
      summary: Update the username for a user
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  "/admin/users/{username}/authorizations":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token
      operationId: enterprise-admin/delete-impersonation-o-auth-token
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
      summary: Delete an impersonation OAuth token
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#create-an-impersonation-oauth-token
      operationId: enterprise-admin/create-impersonation-o-auth-token
      parameters:
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                scopes:
                  description: A list of
                    [scopes](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response
      summary: Create an impersonation OAuth token
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  /app:
    get:
      description: >-
        Returns the GitHub App associated with the authentication
        credentials used. To see how many app installations are associated with
        this GitHub App, see the `installations_count` in the response. For more
        details about your app's installations, see the "[List installations for
        the authenticated
        app](https://docs.github.com/enterprise-server@2.21/rest/reference/apps#list-installations-for-the-authenticated-app)"
        endpoint.


        You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#get-the-authenticated-app
      operationId: apps/get-authenticated
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/integration"
              schema:
                $ref: "#/components/schemas/integration"
          description: Response
      summary: Get the authenticated app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  "/app-manifests/{code}/conversions":
    post:
      description: Use this endpoint to complete the handshake necessary when
        implementing the [GitHub App Manifest
        flow](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/creating-github-apps-from-a-manifest/).
        When you create a GitHub App with the manifest flow, you receive a
        temporary `code` used to retrieve the GitHub App's `id`, `pem` (private
        key), and `webhook_secret`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#create-a-github-app-from-a-manifest
      operationId: apps/create-from-manifest
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/integration-from-manifest"
              schema:
                allOf:
                  - $ref: "#/components/schemas/integration"
                  - additionalProperties: true
                    properties:
                      client_id:
                        type: string
                      client_secret:
                        type: string
                      pem:
                        type: string
                      webhook_secret:
                        nullable: true
                        type: string
                    required:
                      - client_id
                      - client_secret
                      - webhook_secret
                      - pem
                    type: object
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Create a GitHub App from a manifest
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /app/installations:
    get:
      description: >-
        You must use a
        [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.


        The permissions the installation has are included under the `permissions` key.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#list-installations-for-the-authenticated-app
      operationId: apps/list-installations
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-installation-items-ghes-2"
              schema:
                items:
                  $ref: "#/components/schemas/installation-ghes-2"
                type: array
          description: The permissions the installation has are included under the
            `permissions` key.
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List installations for the authenticated app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  "/app/installations/{installation_id}":
    delete:
      description: Uninstalls a GitHub App on a user, organization, or business
        account. You must use a
        [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#delete-an-installation-for-the-authenticated-app
      operationId: apps/delete-installation
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/installation_id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete an installation for the authenticated app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
    get:
      description: >-
        Enables an authenticated GitHub App to find an installation's
        information using the installation id. The installation's account type
        (`target_type`) will be either an organization or a user account,
        depending which account the repository belongs to.


        You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#get-an-installation-for-the-authenticated-app
      operationId: apps/get-installation
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/installation_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-installation-ghes-2"
              schema:
                $ref: "#/components/schemas/installation-ghes-2"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get an installation for the authenticated app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  "/app/installations/{installation_id}/access_tokens":
    post:
      description: >-
        Creates an installation access token that enables a GitHub App to
        make authenticated API requests for the app's installation on an
        organization or individual account. Installation tokens expire one hour
        from the time you create them. Using an expired token produces a status
        code of `401 - Unauthorized`, and requires creating a new installation
        token. By default the installation token has access to all repositories
        that the installation can access. To restrict the access to specific
        repositories, you can provide the `repository_ids` when creating the
        token. When you omit `repository_ids`, the response does not contain the
        `repositories` key.


        You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps/#create-an-installation-access-token-for-an-app
      operationId: apps/create-installation-access-token
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/installation_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permissions:
                  $ref: "#/components/schemas/app-permissions"
                repositories:
                  description: List of repository names that the token should have access to
                  items:
                    example: rails
                    type: string
                  type: array
                repository_ids:
                  description: List of repository IDs that the token should have access to
                  example:
                    - 1
                  items:
                    type: integer
                  type: array
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/installation-token"
              schema:
                $ref: "#/components/schemas/installation-token"
          description: Response
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create an installation access token for an app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  /applications/grants:
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `["repo", "user"]`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#list-your-grants
      operationId: oauth-authorizations/list-grants
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - description: The client ID of your GitHub app.
          in: query
          name: client_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/application-grant-items"
              schema:
                items:
                  $ref: "#/components/schemas/application-grant"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List your grants
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/applications/grants/{grant_id}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#delete-a-grant
      operationId: oauth-authorizations/delete-grant
      parameters:
        - $ref: "#/components/parameters/grant_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Delete a grant
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      deprecated: true
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations), which is used by integrations to create personal
        access tokens and OAuth tokens, and you must now create these tokens
        using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/apps/building-oaut\
        h-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth
        Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations) will be removed on November, 13, 2020. For more
        information, including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth\
        -auth-endpoint/)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#get-a-single-grant
      operationId: oauth-authorizations/get-grant
      parameters:
        - $ref: "#/components/parameters/grant_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/application-grant"
              schema:
                $ref: "#/components/schemas/application-grant"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Get a single grant
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/applications/{client_id}/grant":
    delete:
      description: >-
        OAuth application owners can revoke a grant for their OAuth
        application and a specific user. You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. You must also provide
        a valid OAuth `access_token` as an input parameter and the grant for the
        token's owner will be deleted.

        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#delete-an-app-authorization
      operationId: apps/delete-authorization
      parameters:
        - $ref: "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            example:
              access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
            schema:
              properties:
                access_token:
                  description: The OAuth access token used to authenticate to the GitHub API.
                  type: string
              type: object
      responses:
        "204":
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Delete an app authorization
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: oauth-applications
  "/applications/{client_id}/grants/{access_token}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        OAuth endpoints that contain `access_token` in the path parameter. We
        have introduced new endpoints that allow you to securely manage tokens
        for OAuth Apps by moving `access_token` to the request body. For more
        information, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.


        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under "Authorized OAuth Apps" on GitHub Enterprise Server](https://github.com/settings/applications#authorized).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#revoke-a-grant-for-an-application
      operationId: apps/revoke-grant-for-application
      parameters:
        - $ref: "#/components/parameters/client-id"
        - $ref: "#/components/parameters/access-token"
      responses:
        "204":
          description: Response
      summary: Revoke a grant for an application
      tags:
        - apps
      x-github:
        category: apps
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2021-05-05
        subcategory: oauth-applications
  "/applications/{client_id}/token":
    delete:
      description: OAuth application owners can revoke a single token for an OAuth
        application. You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#delete-an-app-token
      operationId: apps/delete-token
      parameters:
        - $ref: "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            example:
              access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
            schema:
              properties:
                access_token:
                  description: The OAuth access token used to authenticate to the GitHub API.
                  type: string
              required:
                - access_token
              type: object
      responses:
        "204":
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Delete an app token
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: oauth-applications
    patch:
      description: OAuth applications can use this API method to reset a valid OAuth
        token without end-user involvement. Applications must save the "token"
        property in the response because changes take effect immediately. You
        must use [Basic
        Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. Invalid tokens will
        return `404 NOT FOUND`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#reset-a-token
      operationId: apps/reset-token
      parameters:
        - $ref: "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth application.
                  type: string
              required:
                - access_token
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-with-user"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Reset a token
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: oauth-applications
    post:
      description: OAuth applications can use a special API method for checking OAuth
        token validity without exceeding the normal rate limits for failed login
        attempts. Authentication works differently with this particular
        endpoint. You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication)
        to use this endpoint, where the username is the OAuth application
        `client_id` and the password is its `client_secret`. Invalid tokens will
        return `404 NOT FOUND`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#check-a-token
      operationId: apps/check-token
      parameters:
        - $ref: "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth application.
                  type: string
              required:
                - access_token
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-with-user"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Check a token
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: oauth-applications
  "/applications/{client_id}/tokens/{access_token}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        OAuth endpoints that contain `access_token` in the path parameter. We
        have introduced new endpoints that allow you to securely manage tokens
        for OAuth Apps by moving `access_token` to the request body. For more
        information, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#revoke-an-authorization-for-an-application
      operationId: apps/revoke-authorization-for-application
      parameters:
        - $ref: "#/components/parameters/client-id"
        - $ref: "#/components/parameters/access-token"
      responses:
        "204":
          description: Response
      summary: Revoke an authorization for an application
      tags:
        - apps
      x-github:
        category: apps
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2021-05-05
        subcategory: oauth-applications
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        OAuth endpoints that contain `access_token` in the path parameter. We
        have introduced new endpoints that allow you to securely manage tokens
        for OAuth Apps by moving `access_token` to the request body. For more
        information, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#check-an-authorization
      operationId: apps/check-authorization
      parameters:
        - $ref: "#/components/parameters/client-id"
        - $ref: "#/components/parameters/access-token"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-with-user"
              schema:
                allOf:
                  - $ref: "#/components/schemas/authorization"
                nullable: true
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Check an authorization
      tags:
        - apps
      x-github:
        category: apps
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2021-05-05
        subcategory: oauth-applications
    post:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        OAuth endpoints that contain `access_token` in the path parameter. We
        have introduced new endpoints that allow you to securely manage tokens
        for OAuth Apps by moving `access_token` to the request body. For more
        information, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#reset-an-authorization
      operationId: apps/reset-authorization
      parameters:
        - $ref: "#/components/parameters/client-id"
        - $ref: "#/components/parameters/access-token"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-with-user"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response
      summary: Reset an authorization
      tags:
        - apps
      x-github:
        category: apps
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2021-05-05
        subcategory: oauth-applications
  "/apps/{app_slug}":
    get:
      description: >-
        **Note**: The `:app_slug` is just the URL-friendly name of your
        GitHub App. You can find this on the settings page for your GitHub App
        (e.g., `https://github.com/settings/apps/:app_slug`).


        If the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps/#get-an-app
      operationId: apps/get-by-slug
      parameters:
        - $ref: "#/components/parameters/app_slug"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/integration"
              schema:
                $ref: "#/components/schemas/integration"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get an app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  /authorizations:
    get:
      deprecated: true
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations), which is used by integrations to create personal
        access tokens and OAuth tokens, and you must now create these tokens
        using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/apps/building-oaut\
        h-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth
        Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations) will be removed on November, 13, 2020. For more
        information, including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth\
        -auth-endpoint/)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#list-your-authorizations
      operationId: oauth-authorizations/list-authorizations
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - description: The client ID of your GitHub app.
          in: query
          name: client_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-items"
              schema:
                items:
                  $ref: "#/components/schemas/authorization"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List your authorizations
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        **Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).


        Creates OAuth tokens using [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."


        To create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.


        You can also create tokens on GitHub Enterprise Server from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).


        Organizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#create-a-new-authorization
      operationId: oauth-authorizations/create-authorization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_id:
                  description: The OAuth app client key for which to create the token.
                  maxLength: 20
                  type: string
                client_secret:
                  description: The OAuth app client secret for which to create the token.
                  maxLength: 40
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from others created
                    for the same client ID and user.
                  type: string
                note:
                  description: A note to remind you what the OAuth token is for.
                  example: Update all gems
                  type: string
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                scopes:
                  description: A list of scopes that this authorization is in.
                  example:
                    - public_repo
                    - user
                  items:
                    type: string
                  nullable: true
                  type: array
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a new authorization
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/authorizations/clients/{client_id}":
    put:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        **Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).


        Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.


        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."


        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app
      operationId: oauth-authorizations/get-or-create-authorization-for-app
      parameters:
        - $ref: "#/components/parameters/client-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_secret:
                  description: The OAuth app client secret for which to create the token.
                  maxLength: 40
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from others created
                    for the same client ID and user.
                  type: string
                note:
                  description: A note to remind you what the OAuth token is for.
                  example: Update all gems
                  type: string
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                scopes:
                  description: A list of scopes that this authorization is in.
                  example:
                    - public_repo
                    - user
                  items:
                    type: string
                  nullable: true
                  type: array
              required:
                - client_secret
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-returning-an-existing-token:
                  $ref: "#/components/examples/authorization-response-if-returning-an-existing-to\
                    ken-2"
              schema:
                $ref: "#/components/schemas/authorization"
          description: if returning an existing token
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization"
              schema:
                $ref: "#/components/schemas/authorization"
          description: "**Deprecation Notice:** GitHub will discontinue the [OAuth
            Authorizations
            API](https://docs.github.com/enterprise-server@2.21/rest/reference/\
            oauth-authorizations), which is used by integrations to create
            personal access tokens and OAuth tokens, and you must now create
            these tokens using our [web application
            flow](https://docs.github.com/enterprise-server@2.21/apps/building-\
            oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth
            Authorizations
            API](https://docs.github.com/enterprise-server@2.21/rest/reference/\
            oauth-authorizations) will be removed on November, 13, 2020. For
            more information, including scheduled brownouts, see the [blog
            post](https://developer.github.com/changes/2020-02-14-deprecating-o\
            auth-auth-endpoint/)."
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get-or-create an authorization for a specific app
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/authorizations/clients/{client_id}/{fingerprint}":
    put:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        **Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).


        This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.


        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint
      operationId: oauth-authorizations/get-or-create-authorization-for-app-and-fingerprint
      parameters:
        - $ref: "#/components/parameters/client-id"
        - in: path
          name: fingerprint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_secret:
                  description: The OAuth app client secret for which to create the token.
                  maxLength: 40
                  type: string
                note:
                  description: A note to remind you what the OAuth token is for.
                  example: Update all gems
                  type: string
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                scopes:
                  description: A list of scopes that this authorization is in.
                  example:
                    - public_repo
                    - user
                  items:
                    type: string
                  nullable: true
                  type: array
              required:
                - client_secret
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-returning-an-existing-token:
                  $ref: "#/components/examples/authorization-response-if-returning-an-existing-to\
                    ken"
              schema:
                $ref: "#/components/schemas/authorization"
          description: if returning an existing token
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-3"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response if returning a new token
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get-or-create an authorization for a specific app and fingerprint
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/authorizations/{authorization_id}":
    delete:
      deprecated: true
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations), which is used by integrations to create personal
        access tokens and OAuth tokens, and you must now create these tokens
        using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/apps/building-oaut\
        h-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth
        Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations) will be removed on November, 13, 2020. For more
        information, including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth\
        -auth-endpoint/)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#delete-an-authorization
      operationId: oauth-authorizations/delete-authorization
      parameters:
        - $ref: "#/components/parameters/authorization_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Delete an authorization
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      deprecated: true
      description: "**Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations), which is used by integrations to create personal
        access tokens and OAuth tokens, and you must now create these tokens
        using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/apps/building-oaut\
        h-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth
        Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oaut\
        h-authorizations) will be removed on November, 13, 2020. For more
        information, including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth\
        -auth-endpoint/)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#get-a-single-authorization
      operationId: oauth-authorizations/get-authorization
      parameters:
        - $ref: "#/components/parameters/authorization_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-2"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Get a single authorization
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      deprecated: true
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue
        the [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."


        You can only send one of these scope keys at a time.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#update-an-existing-authorization
      operationId: oauth-authorizations/update-authorization
      parameters:
        - $ref: "#/components/parameters/authorization_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add_scopes:
                  description: A list of scopes to add to this authorization.
                  items:
                    type: string
                  type: array
                fingerprint:
                  description: A unique string to distinguish an authorization from others created
                    for the same client ID and user.
                  type: string
                note:
                  description: A note to remind you what the OAuth token is for.
                  example: Update all gems
                  type: string
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                remove_scopes:
                  description: A list of scopes to remove from this authorization.
                  items:
                    type: string
                  type: array
                scopes:
                  description: A list of scopes that this authorization is in.
                  example:
                    - public_repo
                    - user
                  items:
                    type: string
                  nullable: true
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/authorization-2"
              schema:
                $ref: "#/components/schemas/authorization"
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update an existing authorization
      tags:
        - oauth-authorizations
      x-github:
        category: oauth-authorizations
        deprecationDate: 2020-02-14
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        removalDate: 2020-11-13
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /codes_of_conduct:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/codes-of-conduct#get-all-codes-of-conduct
      operationId: codes-of-conduct/get-all-codes-of-conduct
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/code-of-conduct-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/code-of-conduct"
                type: array
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get all codes of conduct
      tags:
        - codes-of-conduct
      x-github:
        category: codes-of-conduct
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: scarlet-witch
            note: >-
              The Codes of Conduct API is currently available for developers to preview.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.scarlet-witch-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/codes_of_conduct/{key}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/codes-of-conduct#get-a-code-of-conduct
      operationId: codes-of-conduct/get-conduct-code
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/code-of-conduct"
              schema:
                $ref: "#/components/schemas/code-of-conduct"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get a code of conduct
      tags:
        - codes-of-conduct
      x-github:
        category: codes-of-conduct
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: scarlet-witch
            note: >-
              The Codes of Conduct API is currently available for developers to preview.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.scarlet-witch-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /emojis:
    get:
      description: Lists all the emojis available to use on GitHub Enterprise Server.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/emojis#get-emojis
      operationId: emojis/get
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
      summary: Get emojis
      tags:
        - emojis
      x-github:
        category: emojis
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /enterprise/settings/license:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-license-information
      operationId: enterprise-admin/get-license-information
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/license-info"
              schema:
                $ref: "#/components/schemas/license-info"
          description: Response
      summary: Get license information
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: license
  "/enterprise/stats/{type}":
    get:
      description: >-
        There are a variety of types to choose from:


        | Type         | Description                                                                                         |

        | ------------ | --------------------------------------------------------------------------------------------------- |

        | `issues`     | The number of open and closed issues.                                                               |

        | `hooks`      | The number of active and inactive hooks.                                                            |

        | `milestones` | The number of open and closed milestones.                                                           |

        | `orgs`       | The number of organizations, teams, team members, and disabled organizations.                       |

        | `comments`   | The number of comments on issues, pull requests, commits, and gists.                                |

        | `pages`      | The number of GitHub Pages sites.                                                                   |

        | `users`      | The number of suspended and admin users.                                                            |

        | `gists`      | The number of private and public gists.                                                             |

        | `pulls`      | The number of merged, mergeable, and unmergeable pull requests.                                     |

        | `repos`      | The number of organization-owned repositories, root repositories, forks, pushed commits, and wikis. |

        | `all`        | All of the statistics listed above.                                                                 |


        These statistics are cached and will be updated approximately every 10 minutes.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-statistics
      operationId: enterprise-admin/get-type-stats
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/enterprise-overview"
              schema:
                anyOf:
                  - $ref: "#/components/schemas/enterprise-overview"
          description: Response
      summary: Get statistics
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: admin-stats
  /events:
    get:
      description: We delay the public events feed by five minutes, which means the
        most recent event returned by the public events API actually occurred at
        least five minutes ago.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-public-events
      operationId: activity/list-public-events
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: List public events
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  /feeds:
    get:
      description: >-
        GitHub Enterprise Server provides several timeline resources in
        [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds
        API lists all the feeds available to the authenticated user:


        *   **Timeline**: The GitHub Enterprise Server global public timeline

        *   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#hypermedia)

        *   **Current user public**: The public timeline for the authenticated user

        *   **Current user**: The private timeline for the authenticated user

        *   **Current user actor**: The private timeline for activity created by the authenticated user

        *   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.

        *   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.


        **Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#get-feeds
      operationId: activity/get-feeds
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/feed"
              schema:
                $ref: "#/components/schemas/feed"
          description: Response
      summary: Get feeds
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: feeds
  /gists:
    get:
      description: "Lists the authenticated user's gists or if called anonymously,
        this endpoint returns all public gists:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#list-gists-for-the-authenticated-user
      operationId: gists/list
      parameters:
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-gist-items"
              schema:
                items:
                  $ref: "#/components/schemas/base-gist"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List gists for the authenticated user
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: >-
        Allows you to add a new gist with one or more files.


        **Note:** Don't name your files "gistfile" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#create-a-gist
      operationId: gists/create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the gist
                  example: Example Ruby script
                  type: string
                files:
                  additionalProperties:
                    properties:
                      content:
                        description: Content of the file
                        readOnly: false
                        type: string
                    required:
                      - content
                    type: object
                  description: Names and content for the files that make up the gist
                  example:
                    hello.rb:
                      content: puts "Hello, World!"
                  type: object
                public:
                  oneOf:
                    - default: false
                      description: Flag indicating whether the gist is public
                      example: true
                      type: boolean
                    - default: "false"
                      enum:
                        - "true"
                        - "false"
                      example: "true"
                      type: string
              required:
                - files
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist"
              schema:
                $ref: "#/components/schemas/gist-simple"
          description: Response
          headers:
            Location:
              example: https://api.github.com/gists/aa5a315d61ae9438b18d
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a gist
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /gists/public:
    get:
      description: >-
        List public gists sorted by most recently updated to least recently
        updated.


        Note: With [pagination](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#list-public-gists
      operationId: gists/list-public
      parameters:
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-gist-items"
              schema:
                items:
                  $ref: "#/components/schemas/base-gist"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List public gists
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /gists/starred:
    get:
      description: "List the authenticated user's starred gists:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#list-starred-gists
      operationId: gists/list-starred
      parameters:
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-gist-items"
              schema:
                items:
                  $ref: "#/components/schemas/base-gist"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List starred gists
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/gists/{gist_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#delete-a-gist
      operationId: gists/delete
      parameters:
        - $ref: "#/components/parameters/gist_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a gist
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#get-a-gist
      operationId: gists/get
      parameters:
        - $ref: "#/components/parameters/gist_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist"
              schema:
                $ref: "#/components/schemas/gist-simple"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden_gist"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a gist
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: Allows you to update or delete a gist file and rename gist files.
        Files from the previous version of the gist that aren't explicitly
        changed during an edit are unchanged.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists/#update-a-gist
      operationId: gists/update
      parameters:
        - $ref: "#/components/parameters/gist_id"
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - required:
                    - description
                - required:
                    - files
              nullable: true
              properties:
                description:
                  description: Description of the gist
                  example: Example Ruby script
                  type: string
                files:
                  additionalProperties:
                    anyOf:
                      - required:
                          - content
                      - required:
                          - filename
                      - maxProperties: 0
                        type: object
                    nullable: true
                    properties:
                      content:
                        description: The new content of the file
                        type: string
                      filename:
                        description: The new filename for the file
                        nullable: true
                        type: string
                    type: object
                  description: Names of files to be updated
                  example:
                    hello.rb:
                      content: blah
                      filename: goodbye.rb
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist"
              schema:
                $ref: "#/components/schemas/gist-simple"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update a gist
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/gists/{gist_id}/comments":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#list-gist-comments
      operationId: gists/list-comments
      parameters:
        - $ref: "#/components/parameters/gist_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/gist-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List gist comments
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: comments
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#create-a-gist-comment
      operationId: gists/create-comment
      parameters:
        - $ref: "#/components/parameters/gist_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The comment text.
                  example: Body of the attachment
                  maxLength: 65535
                  type: string
              required:
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist-comment"
              schema:
                $ref: "#/components/schemas/gist-comment"
          description: Response
          headers:
            Location:
              example: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Create a gist comment
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: comments
  "/gists/{gist_id}/comments/{comment_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#delete-a-gist-comment
      operationId: gists/delete-comment
      parameters:
        - $ref: "#/components/parameters/gist_id"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a gist comment
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: comments
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#get-a-gist-comment
      operationId: gists/get-comment
      parameters:
        - $ref: "#/components/parameters/gist_id"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist-comment"
              schema:
                $ref: "#/components/schemas/gist-comment"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden_gist"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a gist comment
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: comments
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#update-a-gist-comment
      operationId: gists/update-comment
      parameters:
        - $ref: "#/components/parameters/gist_id"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The comment text.
                  example: Body of the attachment
                  maxLength: 65535
                  type: string
              required:
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist-comment"
              schema:
                $ref: "#/components/schemas/gist-comment"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Update a gist comment
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: comments
  "/gists/{gist_id}/commits":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#list-gist-commits
      operationId: gists/list-commits
      parameters:
        - $ref: "#/components/parameters/gist_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist-commit-items"
              schema:
                items:
                  $ref: "#/components/schemas/gist-commit"
                type: array
          description: Response
          headers:
            Link:
              example: <https://api.github.com/resource?page=2>; rel="next"
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List gist commits
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/gists/{gist_id}/forks":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#list-gist-forks
      operationId: gists/list-forks
      parameters:
        - $ref: "#/components/parameters/gist_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist-fork-items"
              schema:
                items:
                  $ref: "#/components/schemas/gist-simple"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List gist forks
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: "**Note**: This was previously `/gists/:gist_id/fork`."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#fork-a-gist
      operationId: gists/fork
      parameters:
        - $ref: "#/components/parameters/gist_id"
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-gist"
              schema:
                $ref: "#/components/schemas/base-gist"
          description: Response
          headers:
            Location:
              example: https://api.github.com/gists/aa5a315d61ae9438b18d
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Fork a gist
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/gists/{gist_id}/star":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#unstar-a-gist
      operationId: gists/unstar
      parameters:
        - $ref: "#/components/parameters/gist_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Unstar a gist
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#check-if-a-gist-is-starred
      operationId: gists/check-is-starred
      parameters:
        - $ref: "#/components/parameters/gist_id"
      responses:
        "204":
          description: Response if gist is starred
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Not Found if gist is not starred
      summary: Check if a gist is starred
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP
        verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#star-a-gist
      operationId: gists/star
      parameters:
        - $ref: "#/components/parameters/gist_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Star a gist
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/gists/{gist_id}/{sha}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#get-a-gist-revision
      operationId: gists/get-revision
      parameters:
        - $ref: "#/components/parameters/gist_id"
        - in: path
          name: sha
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gist"
              schema:
                $ref: "#/components/schemas/gist-simple"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get a gist revision
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /gitignore/templates:
    get:
      description: List all templates available to pass as an option when [creating a
        repository](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-for-the-authenticated-user).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gitignore#get-all-gitignore-templates
      operationId: gitignore/get-all-templates
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
                - Actionscript
                - Android
                - AppceleratorTitanium
                - Autotools
                - Bancha
                - C
                - C++
              schema:
                items:
                  type: string
                type: array
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
      summary: Get all gitignore templates
      tags:
        - gitignore
      x-github:
        category: gitignore
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/gitignore/templates/{name}":
    get:
      description: >-
        The API also allows fetching the source of a single template.

        Use the raw [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) to get the raw contents.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gitignore#get-a-gitignore-template
      operationId: gitignore/get-template
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gitignore-template"
              schema:
                $ref: "#/components/schemas/gitignore-template"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
      summary: Get a gitignore template
      tags:
        - gitignore
      x-github:
        category: gitignore
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /installation/repositories:
    get:
      description: >-
        List repositories that an app installation can access.


        You must use an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#list-repositories-accessible-to-the-app-installation
      operationId: apps/list-repos-accessible-to-installation
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-paginated-2"
              schema:
                properties:
                  repositories:
                    items:
                      $ref: "#/components/schemas/repository"
                    type: array
                  repository_selection:
                    example: selected
                    type: string
                  total_count:
                    type: integer
                required:
                  - total_count
                  - repositories
                type: object
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List repositories accessible to the app installation
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: false
        subcategory: installations
  /installation/token:
    delete:
      description: >-
        Revokes the installation token you're using to authenticate as an
        installation and access this endpoint.


        Once an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the "[Create an installation access token for an app](https://docs.github.com/enterprise-server@2.21/rest/reference/apps#create-an-installation-access-token-for-an-app)" endpoint.


        You must use an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#revoke-an-installation-access-token
      operationId: apps/revoke-installation-access-token
      parameters: []
      responses:
        "204":
          description: Response
      summary: Revoke an installation access token
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: installations
  /issues:
    get:
      description: >-
        List issues assigned to the authenticated user across all visible
        repositories including owned repositories, member

        repositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not

        necessarily assigned to you.



        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull

        request id, use the "[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)" endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-issues-assigned-to-the-authenticated-user
      operationId: issues/list
      parameters:
        - description: >-
            Indicates which sorts of issues to return. Can be one of:  

            \* `assigned`: Issues assigned to you  

            \* `created`: Issues created by you  

            \* `mentioned`: Issues mentioning you  

            \* `subscribed`: Issues you're subscribed to updates for  

            \* `all`: All issues the authenticated user can see, regardless of participation or creation
          in: query
          name: filter
          required: false
          schema:
            default: assigned
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            type: string
        - description: Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - $ref: "#/components/parameters/labels"
        - description: What to sort results by. Can be either `created`, `updated`,
            `comments`.
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - comments
            type: string
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/since"
        - in: query
          name: collab
          required: false
          schema:
            type: boolean
        - in: query
          name: orgs
          required: false
          schema:
            type: boolean
        - in: query
          name: owned
          required: false
          schema:
            type: boolean
        - in: query
          name: pulls
          required: false
          schema:
            type: boolean
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-with-repo-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List issues assigned to the authenticated user
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
  /licenses:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/licenses#get-all-commonly-used-licenses
      operationId: licenses/get-all-commonly-used
      parameters:
        - in: query
          name: featured
          required: false
          schema:
            type: boolean
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/license-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/license-simple"
                type: array
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
      summary: Get all commonly used licenses
      tags:
        - licenses
      x-github:
        category: licenses
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/licenses/{license}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/licenses#get-a-license
      operationId: licenses/get
      parameters:
        - in: path
          name: license
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/license"
              schema:
                $ref: "#/components/schemas/license"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a license
      tags:
        - licenses
      x-github:
        category: licenses
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /markdown:
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/markdown#render-a-markdown-document
      operationId: markdown/render
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                context:
                  description: The repository context to use when creating references in `gfm`
                    mode.
                  type: string
                mode:
                  default: markdown
                  description: The rendering mode.
                  enum:
                    - markdown
                    - gfm
                  example: markdown
                  type: string
                text:
                  description: The Markdown text to render in HTML.
                  type: string
              required:
                - text
              type: object
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Response
          headers:
            Content-Length:
              example: "279"
              schema:
                type: string
            Content-Type:
              $ref: "#/components/headers/content-type"
            X-CommonMarker-Version:
              $ref: "#/components/headers/x-common-marker-version"
        "304":
          $ref: "#/components/responses/not_modified"
      summary: Render a Markdown document
      tags:
        - markdown
      x-github:
        category: markdown
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /markdown/raw:
    post:
      description: You must send Markdown as plain text (using a `Content-Type` header
        of `text/plain` or `text/x-markdown`) to this endpoint, rather than
        using JSON format. In raw mode, [GitHub Flavored
        Markdown](https://github.github.com/gfm/) is not supported and Markdown
        will be rendered in plain format like a README.md file. Markdown content
        must be 400 KB or less.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/markdown#render-a-markdown-document-in-raw-mode
      operationId: markdown/render-raw
      parameters: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          text/x-markdown:
            schema:
              type: string
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Response
          headers:
            X-CommonMarker-Version:
              $ref: "#/components/headers/x-common-marker-version"
        "304":
          $ref: "#/components/responses/not_modified"
      summary: Render a Markdown document in raw mode
      tags:
        - markdown
      x-github:
        category: markdown
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /meta:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/meta#get-github-meta-information
      operationId: meta/get
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/api-overview"
              schema:
                $ref: "#/components/schemas/api-overview"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
      summary: Get GitHub Enterprise Server meta information
      tags:
        - meta
      x-github:
        category: meta
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/networks/{owner}/{repo}/events":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-public-events-for-a-network-of-repositories
      operationId: activity/list-public-events-for-repo-network
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
        "301":
          $ref: "#/components/responses/moved_permanently"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List public events for a network of repositories
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  /notifications:
    get:
      description: List all notifications for the current user, sorted by most
        recently updated.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-notifications-for-the-authenticated-user
      operationId: activity/list-notifications-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/all"
        - $ref: "#/components/parameters/participating"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/before"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/thread-items"
              schema:
                items:
                  $ref: "#/components/schemas/thread"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List notifications for the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
    put:
      description: Marks all notifications as "read" removes it from the [default view
        on GitHub Enterprise Server](https://github.com/notifications). If the
        number of notifications is too large to complete in one request, you
        will receive a `202 Accepted` status and GitHub Enterprise Server will
        run an asynchronous process to mark notifications as "read." To check
        whether any "unread" notifications remain, you can use the [List
        notifications for the authenticated
        user](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#mark-notifications-as-read
      operationId: activity/mark-notifications-as-read
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                last_read_at:
                  description: Describes the last point that notifications were checked.
                  format: date-time
                  type: string
                read:
                  description: Whether the notification has been read.
                  type: boolean
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                type: object
          description: Response
        "205":
          description: Reset Content
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Mark notifications as read
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
  "/notifications/threads/{thread_id}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#get-a-thread
      operationId: activity/get-thread
      parameters:
        - $ref: "#/components/parameters/thread_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/thread"
              schema:
                $ref: "#/components/schemas/thread"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Get a thread
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#mark-a-thread-as-read
      operationId: activity/mark-thread-as-read
      parameters:
        - $ref: "#/components/parameters/thread_id"
      responses:
        "205":
          description: Reset Content
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Mark a thread as read
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
  "/notifications/threads/{thread_id}/subscription":
    delete:
      description: Mutes all future notifications for a conversation until you comment
        on the thread or get an **@mention**. If you are watching the repository
        of the thread, you will still receive notifications. To ignore future
        notifications for a repository you are watching, use the [Set a thread
        subscription](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#set-a-thread-subscription)
        endpoint and set `ignore` to `true`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#delete-a-thread-subscription
      operationId: activity/delete-thread-subscription
      parameters:
        - $ref: "#/components/parameters/thread_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Delete a thread subscription
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
    get:
      description: >-
        This checks to see if the current user is subscribed to a thread.
        You can also [get a repository
        subscription](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#get-a-repository-subscription).


        Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#get-a-thread-subscription-for-the-authenticated-user
      operationId: activity/get-thread-subscription-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/thread_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/thread-subscription"
              schema:
                $ref: "#/components/schemas/thread-subscription"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Get a thread subscription for the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
    put:
      description: >-
        If you are watching a repository, you receive notifications for all
        threads by default. Use this endpoint to ignore future notifications for
        threads until you comment on the thread or get an **@mention**.


        You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.


        Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#delete-a-thread-subscription) endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#set-a-thread-subscription
      operationId: activity/set-thread-subscription
      parameters:
        - $ref: "#/components/parameters/thread_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ignored:
                  default: false
                  description: Whether to block all notifications from a thread.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/thread-subscription"
              schema:
                $ref: "#/components/schemas/thread-subscription"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Set a thread subscription
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
  /octocat:
    get:
      description: Get the octocat as ASCII art
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/meta#get-octocat
      operationId: meta/get-octocat
      parameters:
        - description: The words to show in Octocat's speech bubble
          in: query
          name: s
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/octocat-stream:
              schema:
                type: string
          description: Response
      summary: Get Octocat
      tags:
        - meta
      x-github:
        category: meta
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
  /organizations:
    get:
      description: >-
        Lists all organizations, in the order that they were created on
        GitHub Enterprise Server.


        **Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organizations
      operationId: orgs/list
      parameters:
        - $ref: "#/components/parameters/since-org"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/organization-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/organization-simple"
                type: array
          description: Response
          headers:
            Link:
              example: <https://api.github.com/organizations?since=135>; rel="next"
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
      summary: List organizations
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}":
    get:
      description: >-
        To see many of the organization response values, you need to be an
        authenticated organization owner with the `admin:org` scope. When the
        value of `two_factor_requirement_enabled` is `true`, the organization
        requires all members, billing managers, and outside collaborators to
        enable [two-factor
        authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).


        GitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See "[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/)" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#get-an-organization
      operationId: orgs/get
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/organization-full-default-response"
              schema:
                $ref: "#/components/schemas/organization-full"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get an organization
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: surtur
            note: >-
              New repository creation permissions are available to preview. You can now
              use `members_can_create_public_repositories`,
              `members_can_create_private_repositories`, and
              `members_can_create_internal_repositories`. You can only allow
              members to create internal repositories if your organization is
              associated with an enterprise account using GitHub Enterprise
              Cloud or GitHub Enterprise Server 2.20+. These parameters provide
              more granular permissions to configure the type of repositories
              organization members can create.


              To access these new parameters during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.surtur-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: >-
        **Parameter Deprecation Notice:** GitHub Enterprise Server will
        replace and discontinue `members_allowed_repository_creation_type` in
        favor of more granular permissions. The new input parameters are
        `members_can_create_public_repositories`,
        `members_can_create_private_repositories` for all organizations and
        `members_can_create_internal_repositories` for organizations associated
        with an enterprise account using GitHub Enterprise Cloud or GitHub
        Enterprise Server 2.20+. For more information, see the [blog
        post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).


        Enables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs/#update-an-organization
      operationId: orgs/update
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            example:
              billing_email: mona@github.com
              company: GitHub
              default_repository_permission: read
              description: GitHub, the company.
              email: mona@github.com
              location: San Francisco
              members_allowed_repository_creation_type: all
              members_can_create_repositories: true
              name: github
              twitter_username: github
            schema:
              properties:
                billing_email:
                  description: Billing email address. This address is not publicized.
                  type: string
                blog:
                  example: '"http://github.blog"'
                  type: string
                company:
                  description: The company name.
                  type: string
                default_repository_permission:
                  default: read
                  description: >-
                    Default permission level members have for organization
                    repositories:  

                    \* `read` - can pull, but not push to or administer this repository.  

                    \* `write` - can pull and push, but not administer this repository.  

                    \* `admin` - can pull, push, and administer this repository.  

                    \* `none` - no permissions granted by default.
                  enum:
                    - read
                    - write
                    - admin
                    - none
                  type: string
                description:
                  description: The description of the company.
                  type: string
                email:
                  description: The publicly visible email address.
                  type: string
                has_organization_projects:
                  description: Toggles whether an organization can use organization projects.
                  type: boolean
                has_repository_projects:
                  description: Toggles whether repositories that belong to the organization can
                    use repository projects.
                  type: boolean
                location:
                  description: The location.
                  type: string
                members_allowed_repository_creation_type:
                  description: >-
                    Specifies which types of repositories non-admin organization
                    members can create. Can be one of:  

                    \* `all` - all organization members can create public and private repositories.  

                    \* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.  

                    \* `none` - only admin members can create repositories.  

                    **Note:** This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details.
                  enum:
                    - all
                    - private
                    - none
                  type: string
                members_can_create_internal_repositories:
                  description: >-
                    Toggles whether organization members can create internal
                    repositories, which are visible to all enterprise members.
                    You can only allow members to create internal repositories
                    if your organization is associated with an enterprise
                    account using GitHub Enterprise Cloud or GitHub Enterprise
                    Server 2.20+. Can be one of:  

                    \* `true` - all organization members can create internal repositories.  

                    \* `false` - only organization owners can create internal repositories.  

                    Default: `true`. For more information, see "[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.
                  type: boolean
                members_can_create_private_repositories:
                  description: >-
                    Toggles whether organization members can create private
                    repositories, which are visible to organization members with
                    permission. Can be one of:  

                    \* `true` - all organization members can create private repositories.  

                    \* `false` - only organization owners can create private repositories.  

                    Default: `true`. For more information, see "[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.
                  type: boolean
                members_can_create_public_repositories:
                  description: >-
                    Toggles whether organization members can create public
                    repositories, which are visible to anyone. Can be one of:  

                    \* `true` - all organization members can create public repositories.  

                    \* `false` - only organization owners can create public repositories.  

                    Default: `true`. For more information, see "[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.
                  type: boolean
                members_can_create_repositories:
                  default: true
                  description: >-
                    Toggles the ability of non-admin organization members to create
                    repositories. Can be one of:  

                    \* `true` - all organization members can create repositories.  

                    \* `false` - only organization owners can create repositories.  

                    Default: `true`  

                    **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.
                  type: boolean
                name:
                  description: The shorthand name of the company.
                  type: string
                twitter_username:
                  description: The Twitter username of the company.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/organization-full"
              schema:
                $ref: "#/components/schemas/organization-full"
          description: Response
        "409":
          $ref: "#/components/responses/conflict"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/validation-error"
                  - $ref: "#/components/schemas/validation-error-simple"
          description: Validation failed
      summary: Update an organization
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: surtur
            note: >-
              New repository creation permissions are available to preview. You can now
              use `members_can_create_public_repositories`,
              `members_can_create_private_repositories`, and
              `members_can_create_internal_repositories`. You can only allow
              members to create internal repositories if your organization is
              associated with an enterprise account using GitHub Enterprise
              Cloud or GitHub Enterprise Server 2.20+. These parameters provide
              more granular permissions to configure the type of repositories
              organization members can create.


              To access these new parameters during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.surtur-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/events":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-public-organization-events
      operationId: activity/list-public-org-events
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
      summary: List public organization events
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  "/orgs/{org}/hooks":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organization-webhooks
      operationId: orgs/list-webhooks
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-hook-items"
              schema:
                items:
                  $ref: "#/components/schemas/org-hook"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List organization webhooks
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
    post:
      description: "Here's how you can create a hook that posts payloads in JSON format:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#create-an-organization-webhook
      operationId: orgs/create-webhook
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            example:
              active: true
              config:
                content_type: json
                url: http://example.com/webhook
              events:
                - push
                - pull_request
              name: web
            schema:
              properties:
                active:
                  default: true
                  description: Determines if notifications are sent when the webhook is triggered.
                    Set to `true` to send notifications.
                  type: boolean
                config:
                  description: Key/value pairs to provide settings for this webhook. [These are
                    defined
                    below](https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#create-hook-config-params).
                  properties:
                    content_type:
                      $ref: "#/components/schemas/webhook-config-content-type"
                    insecure_ssl:
                      $ref: "#/components/schemas/webhook-config-insecure-ssl"
                    password:
                      example: '"password"'
                      type: string
                    secret:
                      $ref: "#/components/schemas/webhook-config-secret"
                    url:
                      $ref: "#/components/schemas/webhook-config-url"
                    username:
                      example: '"kdaigle"'
                      type: string
                  required:
                    - url
                  type: object
                events:
                  default:
                    - push
                  description: Determines what
                    [events](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads)
                    the hook is triggered for.
                  items:
                    type: string
                  type: array
                name:
                  description: Must be passed as "web".
                  type: string
              required:
                - name
                - config
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-hook"
              schema:
                $ref: "#/components/schemas/org-hook"
          description: Response
          headers:
            Location:
              example: https://api.github.com/orgs/octocat/hooks/1
              schema:
                type: string
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create an organization webhook
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#delete-an-organization-webhook
      operationId: orgs/delete-webhook
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/hook-id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete an organization webhook
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
    get:
      description: Returns a webhook configured in an organization. To get only the
        webhook `config` properties, see "[Get a webhook configuration for an
        organization](/rest/reference/orgs#get-a-webhook-configuration-for-an-organization)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#get-an-organization-webhook
      operationId: orgs/get-webhook
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-hook"
              schema:
                $ref: "#/components/schemas/org-hook"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get an organization webhook
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
    patch:
      description: Updates a webhook configured in an organization. When you update a
        webhook, the `secret` will be overwritten. If you previously had a
        `secret` set, you must provide the same `secret` or set a new `secret`
        or the secret will be removed. If you are only updating individual
        webhook `config` properties, use "[Update a webhook configuration for an
        organization](/rest/reference/orgs#update-a-webhook-configuration-for-an-organization)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#update-an-organization-webhook
      operationId: orgs/update-webhook
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/hook-id"
      requestBody:
        content:
          application/json:
            example:
              active: true
              events:
                - pull_request
            schema:
              properties:
                active:
                  default: true
                  description: Determines if notifications are sent when the webhook is triggered.
                    Set to `true` to send notifications.
                  type: boolean
                config:
                  description: Key/value pairs to provide settings for this webhook. [These are
                    defined
                    below](https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#update-hook-config-params).
                  properties:
                    content_type:
                      $ref: "#/components/schemas/webhook-config-content-type"
                    insecure_ssl:
                      $ref: "#/components/schemas/webhook-config-insecure-ssl"
                    secret:
                      $ref: "#/components/schemas/webhook-config-secret"
                    url:
                      $ref: "#/components/schemas/webhook-config-url"
                  required:
                    - url
                  type: object
                events:
                  default:
                    - push
                  description: Determines what
                    [events](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads)
                    the hook is triggered for.
                  items:
                    type: string
                  type: array
                name:
                  example: '"web"'
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-hook-2"
              schema:
                $ref: "#/components/schemas/org-hook"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update an organization webhook
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}/pings":
    post:
      description: This will trigger a [ping
        event](https://docs.github.com/enterprise-server@2.21/webhooks/#ping-event)
        to be sent to the hook.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#ping-an-organization-webhook
      operationId: orgs/ping-webhook
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/hook-id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Ping an organization webhook
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
  "/orgs/{org}/installation":
    get:
      description: >-
        Enables an authenticated GitHub App to find the organization's
        installation information.


        You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#get-an-organization-installation-for-the-authenticated-app
      operationId: apps/get-org-installation
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/installation-ghes-2"
              schema:
                $ref: "#/components/schemas/installation-ghes-2"
          description: Response
      summary: Get an organization installation for the authenticated app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  "/orgs/{org}/installations":
    get:
      description: Lists all GitHub Apps in an organization. The installation count
        includes all GitHub Apps installed on repositories in the organization.
        You must be an organization owner with `admin:read` scope to use this
        endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-app-installations-for-an-organization
      operationId: orgs/list-app-installations
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/installation-paginated-ghes-2"
              schema:
                properties:
                  installations:
                    items:
                      $ref: "#/components/schemas/installation-ghes-2"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - installations
                type: object
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List app installations for an organization
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  "/orgs/{org}/issues":
    get:
      description: >-
        List issues in an organization assigned to the authenticated user.


        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull

        request id, use the "[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)" endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-organization-issues-assigned-to-the-authenticated-user
      operationId: issues/list-for-org
      parameters:
        - $ref: "#/components/parameters/org"
        - description: >-
            Indicates which sorts of issues to return. Can be one of:  

            \* `assigned`: Issues assigned to you  

            \* `created`: Issues created by you  

            \* `mentioned`: Issues mentioning you  

            \* `subscribed`: Issues you're subscribed to updates for  

            \* `all`: All issues the authenticated user can see, regardless of participation or creation
          in: query
          name: filter
          required: false
          schema:
            default: assigned
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            type: string
        - description: Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - $ref: "#/components/parameters/labels"
        - description: What to sort results by. Can be either `created`, `updated`,
            `comments`.
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - comments
            type: string
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-with-repo-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List organization issues assigned to the authenticated user
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
  "/orgs/{org}/members":
    get:
      description: List all users who are members of an organization. If the
        authenticated user is also a member of this organization then both
        concealed and public members will be returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organization-members
      operationId: orgs/list-members
      parameters:
        - $ref: "#/components/parameters/org"
        - description: >-
            Filter members returned in the list. Can be one of:  

            \* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  

            \* `all` - All members the authenticated user can see.
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - 2fa_disabled
              - all
            type: string
        - description: |-
            Filter members returned by their role. Can be one of:  
            \* `all` - All members of the organization, regardless of role.  
            \* `admin` - Organization owners.  
            \* `member` - Non-owner organization members.
          in: query
          name: role
          required: false
          schema:
            default: all
            enum:
              - all
              - admin
              - member
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "302":
          description: Response if requester is not an organization member
          headers:
            Location:
              example: https://api.github.com/orgs/github/public_members
              schema:
                type: string
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List organization members
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/orgs/{org}/members/{username}":
    delete:
      description: Removing a user from this list will remove them from all teams and
        they will no longer have any access to the organization's repositories.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#remove-an-organization-member
      operationId: orgs/remove-member
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Remove an organization member
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
    get:
      description: Check if a user is, publicly or privately, a member of the organization.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#check-organization-membership-for-a-user
      operationId: orgs/check-membership-for-user
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response if requester is an organization member and user is a member
        "302":
          description: Response if requester is not an organization member
          headers:
            Location:
              example: https://api.github.com/orgs/github/public_members/pezra
              schema:
                type: string
        "404":
          description: Not Found if requester is an organization member and user is not a
            member
      summary: Check organization membership for a user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/orgs/{org}/memberships/{username}":
    delete:
      description: >-
        In order to remove a user's membership with an organization, the
        authenticated user must be an organization owner.


        If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#remove-organization-membership-for-a-user
      operationId: orgs/remove-membership-for-user
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Remove organization membership for a user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
    get:
      description: In order to get a user's membership with an organization, the
        authenticated user must be an organization member. The `state` parameter
        in the response can be used to identify the user's membership status.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#get-organization-membership-for-a-user
      operationId: orgs/get-membership-for-user
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-user-has-an-active-admin-membership-with-organization:
                  $ref: "#/components/examples/org-membership-response-if-user-has-an-active-admi\
                    n-membership-with-organization"
              schema:
                $ref: "#/components/schemas/org-membership"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get organization membership for a user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
    put:
      description: >-
        Only authenticated organization owners can add a member to the
        organization or update the member's role.


        *   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.
            
        *   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.


        **Rate limits**


        To prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#set-organization-membership-for-a-user
      operationId: orgs/set-membership-for-user
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                role:
                  default: member
                  description: >-
                    The role to give the user in the organization. Can be one of:  

                    \* `admin` - The user will become an owner of the organization.  

                    \* `member` - The user will become a non-owner member of the organization.
                  enum:
                    - admin
                    - member
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-user-already-had-membership-with-organization:
                  $ref: "#/components/examples/org-membership-response-if-user-has-an-active-admi\
                    n-membership-with-organization"
              schema:
                $ref: "#/components/schemas/org-membership"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Set organization membership for a user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/orgs/{org}/outside_collaborators":
    get:
      description: List all users who are outside collaborators of an organization.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-outside-collaborators-for-an-organization
      operationId: orgs/list-outside-collaborators
      parameters:
        - $ref: "#/components/parameters/org"
        - description: >-
            Filter the list of outside collaborators. Can be one of:  

            \* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  

            \* `all`: All outside collaborators.
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - 2fa_disabled
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List outside collaborators for an organization
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: outside-collaborators
  "/orgs/{org}/outside_collaborators/{username}":
    delete:
      description: Removing a user from this list will remove them from all the
        organization's repositories.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#remove-outside-collaborator-from-an-organization
      operationId: orgs/remove-outside-collaborator
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "422":
          content:
            application/json:
              examples:
                response-if-user-is-a-member-of-the-organization:
                  value:
                    documentation_url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#remove-outside-collaborator
                    message: You cannot specify an organization member to remove as an outside
                      collaborator.
              schema:
                properties:
                  documentation_url:
                    type: string
                  message:
                    type: string
                type: object
          description: Unprocessable Entity if user is a member of the organization
      summary: Remove outside collaborator from an organization
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: outside-collaborators
    put:
      description: When an organization member is converted to an outside
        collaborator, they'll only have access to the repositories that their
        current team membership allows. The user will no longer be a member of
        the organization. For more information, see "[Converting an organization
        member to an outside
        collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)".
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator
      operationId: orgs/convert-member-to-outside-collaborator
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "202":
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: User is getting converted asynchronously
        "204":
          description: User was converted
        "403":
          description: Forbidden if user is the last owner of the organization or not a
            member of the organization
        "404":
          $ref: "#/components/responses/not_found"
      summary: Convert an organization member to outside collaborator
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: outside-collaborators
  "/orgs/{org}/pre-receive-hooks":
    get:
      description: List all pre-receive hooks that are enabled or testing for this
        organization as well as any disabled hooks that can be configured at the
        organization level. Globally disabled pre-receive hooks that do not
        allow downstream configuration are not listed.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#list-pre-receive-hooks-for-an-organization
      operationId: enterprise-admin/list-pre-receive-hooks-for-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/direction"
        - description: The sort order for the response collection.
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - name
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-pre-receive-hook-items"
              schema:
                items:
                  $ref: "#/components/schemas/org-pre-receive-hook"
                type: array
          description: Response
      summary: List pre-receive hooks for an organization
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: org-pre-receive-hooks
  "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}":
    delete:
      description: Removes any overrides for this hook at the org level for this org.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-an-organization
      operationId: enterprise-admin/remove-pre-receive-hook-enforcement-for-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/pre-receive-hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-pre-receive-hook"
              schema:
                $ref: "#/components/schemas/org-pre-receive-hook"
          description: Response
      summary: Remove pre-receive hook enforcement for an organization
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: org-pre-receive-hooks
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-an-organization
      operationId: enterprise-admin/get-pre-receive-hook-for-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/pre-receive-hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-pre-receive-hook"
              schema:
                $ref: "#/components/schemas/org-pre-receive-hook"
          description: Response
      summary: Get a pre-receive hook for an organization
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: org-pre-receive-hooks
    patch:
      description: For pre-receive hooks which are allowed to be configured at the org
        level, you can set `enforcement` and `allow_downstream_configuration`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-an-organization
      operationId: enterprise-admin/update-pre-receive-hook-enforcement-for-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/pre-receive-hook-id"
      requestBody:
        content:
          application/json:
            example:
              allow_downstream_configuration: false
              enforcement: enabled
            schema:
              properties:
                allow_downstream_configuration:
                  description: Whether repositories can override enforcement.
                  type: boolean
                enforcement:
                  description: The state of enforcement for the hook on this repository.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-pre-receive-hook-2"
              schema:
                $ref: "#/components/schemas/org-pre-receive-hook"
          description: Response
      summary: Update pre-receive hook enforcement for an organization
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: org-pre-receive-hooks
  "/orgs/{org}/projects":
    get:
      description: Lists the projects in an organization. Returns a `404 Not Found`
        status if projects are disabled in the organization. If you do not have
        sufficient privileges to perform this action, a `401 Unauthorized` or
        `410 Gone` status is returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#list-organization-projects
      operationId: projects/list-for-org
      parameters:
        - $ref: "#/components/parameters/org"
        - description: Indicates the state of the projects to return. Can be either
            `open`, `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-items"
              schema:
                items:
                  $ref: "#/components/schemas/project"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: List organization projects
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: Creates an organization project board. Returns a `404 Not Found`
        status if projects are disabled in the organization. If you do not have
        sufficient privileges to perform this action, a `401 Unauthorized` or
        `410 Gone` status is returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#create-an-organization-project
      operationId: projects/create-for-org
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            example:
              body: High-level roadmap for the upcoming year.
              name: Organization Roadmap
            schema:
              properties:
                body:
                  description: The description of the project.
                  type: string
                name:
                  description: The name of the project.
                  type: string
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-2"
              schema:
                $ref: "#/components/schemas/project"
          description: Response
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Create an organization project
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/public_members":
    get:
      description: Members of an organization can choose to have their membership
        publicized or not.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-public-organization-members
      operationId: orgs/list-public-members
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List public organization members
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/orgs/{org}/public_members/{username}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user
      operationId: orgs/remove-public-membership-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
      summary: Remove public organization membership for the authenticated user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: members
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#check-public-organization-membership-for-a-user
      operationId: orgs/check-public-membership-for-user
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response if user is a public member
        "404":
          description: Not Found if user is not a public member
      summary: Check public organization membership for a user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
    put:
      description: >-
        The user can publicize their own membership. (A user cannot
        publicize the membership for another user.)


        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user
      operationId: orgs/set-public-membership-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Set public organization membership for the authenticated user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/orgs/{org}/repos":
    get:
      description: Lists repositories for the specified organization.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-organization-repositories
      operationId: repos/list-for-org
      parameters:
        - $ref: "#/components/parameters/org"
        - description: "Specifies the types of repositories you want returned. Can be one
            of `all`, `public`, `private`, `forks`, `sources`, `member`,
            `internal`. Note: For GitHub AE, can be one of `all`, `private`,
            `forks`, `sources`, `member`, `internal`. Default: `all`. If your
            organization is associated with an enterprise account using GitHub
            Enterprise Cloud or GitHub Enterprise Server 2.20+, `type` can also
            be `internal`. However, the `internal` value is not yet supported
            when a GitHub App calls this API with an installation access token."
          in: query
          name: type
          required: false
          schema:
            enum:
              - all
              - public
              - private
              - forks
              - sources
              - member
              - internal
            type: string
        - description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - pushed
              - full_name
            type: string
        - description: "Can be one of `asc` or `desc`. Default: when using `full_name`:
            `asc`, otherwise `desc`"
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List organization repositories
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: nebula
            note: >-
              You can set the visibility of a repository using the new `visibility`
              parameter in the [Repositories
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos/),
              and get a repository's visibility with a new response key. For
              more information, see the [blog
              post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).


              To access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.nebula-preview+json

              ```
            required: false
          - name: baptiste
            note: >-
              The `is_template` and `template_repository` keys are currently available
              for developer to preview. See [Create a repository using a
              template](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-using-a-template)
              to learn how to create template repositories. To access these new
              response keys during the preview period, you must provide a custom
              [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:


              ```shell

              application/vnd.github.baptiste-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: >-
        Creates a new repository in the specified organization. The
        authenticated user must be a member of the organization.


        **OAuth scope requirements**


        When using [OAuth](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:


        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.

        *   `repo` scope to create a private repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-an-organization-repository
      operationId: repos/create-in-org
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            example:
              description: This is your first repository
              has_issues: true
              has_projects: true
              has_wiki: true
              homepage: https://github.com
              name: Hello-World
              private: false
            schema:
              properties:
                allow_merge_commit:
                  default: true
                  description: Either `true` to allow merging pull requests with a merge commit,
                    or `false` to prevent merging pull requests with merge
                    commits.
                  type: boolean
                allow_rebase_merge:
                  default: true
                  description: Either `true` to allow rebase-merging pull requests, or `false` to
                    prevent rebase-merging.
                  type: boolean
                allow_squash_merge:
                  default: true
                  description: Either `true` to allow squash-merging pull requests, or `false` to
                    prevent squash-merging.
                  type: boolean
                auto_init:
                  default: false
                  description: Pass `true` to create an initial commit with empty README.
                  type: boolean
                delete_branch_on_merge:
                  default: false
                  description: Either `true` to allow automatically deleting head branches when
                    pull requests are merged, or `false` to prevent automatic
                    deletion.
                  type: boolean
                description:
                  description: A short description of the repository.
                  type: string
                gitignore_template:
                  description: Desired language or platform [.gitignore
                    template](https://github.com/github/gitignore) to apply. Use
                    the name of the template without the extension. For example,
                    "Haskell".
                  type: string
                has_issues:
                  default: true
                  description: Either `true` to enable issues for this repository or `false` to
                    disable them.
                  type: boolean
                has_projects:
                  default: true
                  description: Either `true` to enable projects for this repository or `false` to
                    disable them. **Note:** If you're creating a repository in
                    an organization that has disabled repository projects, the
                    default is `false`, and if you pass `true`, the API returns
                    an error.
                  type: boolean
                has_wiki:
                  default: true
                  description: Either `true` to enable the wiki for this repository or `false` to
                    disable it.
                  type: boolean
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                is_template:
                  default: false
                  description: Either `true` to make this repo available as a template repository
                    or `false` to prevent it.
                  type: boolean
                license_template:
                  description: Choose an [open source license
                    template](https://choosealicense.com/) that best suits your
                    needs, and then use the [license
                    keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type)
                    as the `license_template` string. For example, "mit" or
                    "mpl-2.0".
                  type: string
                name:
                  description: The name of the repository.
                  type: string
                private:
                  default: false
                  description: Whether the repository is private.
                  type: boolean
                team_id:
                  description: The id of the team that will be granted access to this repository.
                    This is only valid when creating a repository in an
                    organization.
                  type: integer
                visibility:
                  description: >-
                    Can be `public` or `private`. If your organization is associated
                    with an enterprise account using GitHub Enterprise Cloud or
                    GitHub Enterprise Server 2.20+, `visibility` can also be
                    `internal`. Note: For GitHub Enterprise Server and GitHub
                    AE, this endpoint will only list repositories available to
                    all users on the enterprise. For more information, see
                    "[Creating an internal
                    repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)"
                    in the GitHub Help documentation.  

                    The `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header.
                  enum:
                    - public
                    - private
                    - visibility
                    - internal
                  type: string
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository"
              schema:
                $ref: "#/components/schemas/repository"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create an organization repository
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: nebula
            note: >-
              You can set the visibility of a repository using the new `visibility`
              parameter in the [Repositories
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos/),
              and get a repository's visibility with a new response key. For
              more information, see the [blog
              post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).


              To access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.nebula-preview+json

              ```
            required: false
          - name: baptiste
            note: >-
              The `is_template` and `template_repository` keys are currently available
              for developer to preview. See [Create a repository using a
              template](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-using-a-template)
              to learn how to create template repositories. To access these new
              response keys during the preview period, you must provide a custom
              [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:


              ```shell

              application/vnd.github.baptiste-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams":
    get:
      description: Lists all teams in an organization that are visible to the
        authenticated user.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-teams
      operationId: teams/list
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-items"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List teams
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: >-
        To create a team, the authenticated user must be a member or owner
        of `{org}`. By default, organization members can create teams.
        Organization owners can limit team creation to organization owners. For
        more information, see "[Setting team creation
        permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization)."


        When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see "[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)".
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-team
      operationId: teams/create
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            example:
              description: A great team
              name: Justice League
              permission: admin
              privacy: closed
            schema:
              properties:
                description:
                  description: The description of the team.
                  type: string
                maintainers:
                  description: List GitHub IDs for organization members who will become team
                    maintainers.
                  items:
                    type: string
                  type: array
                name:
                  description: The name of the team.
                  type: string
                parent_team_id:
                  description: The ID of a team to set as the parent team.
                  type: integer
                permission:
                  default: pull
                  description: >-
                    **Deprecated**. The permission that new repositories will be added
                    to the team with when none is specified. Can be one of:  

                    \* `pull` - team members can pull, but not push to or administer newly-added repositories.  

                    \* `push` - team members can pull and push, but not administer newly-added repositories.  

                    \* `admin` - team members can pull, push and administer newly-added repositories.
                  enum:
                    - pull
                    - push
                    - admin
                  type: string
                privacy:
                  description: >-
                    The level of privacy this team should have. The options are:  

                    **For a non-nested team:**  

                    \* `secret` - only visible to organization owners and members of this team.  

                    \* `closed` - visible to all members of this organization.  

                    Default: `secret`  

                    **For a parent or child team:**  

                    \* `closed` - visible to all members of this organization.  

                    Default for child team: `closed`
                  enum:
                    - secret
                    - closed
                  type: string
                repo_names:
                  description: The full name (e.g., "organization-name/repository-name") of
                    repositories to add the team to.
                  items:
                    type: string
                  type: array
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-full"
              schema:
                $ref: "#/components/schemas/team-full"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a team
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}":
    delete:
      description: >-
        To delete a team, the authenticated user must be an organization
        owner or team maintainer.


        If you are an organization owner, deleting a parent team will delete all of its child teams as well.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-team
      operationId: teams/delete-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
      responses:
        "204":
          description: Response
      summary: Delete a team
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      description: >-
        Gets a team using the team's `slug`. GitHub Enterprise Server
        generates the `slug` from the team `name`.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-team-by-name
      operationId: teams/get-by-name
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-full"
              schema:
                $ref: "#/components/schemas/team-full"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a team by name
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: >-
        To edit a team, the authenticated user must either be an
        organization owner or a team maintainer.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-team
      operationId: teams/update-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
      requestBody:
        content:
          application/json:
            example:
              description: new team description
              name: new team name
              privacy: closed
            schema:
              properties:
                description:
                  description: The description of the team.
                  type: string
                name:
                  description: The name of the team.
                  type: string
                parent_team_id:
                  description: The ID of a team to set as the parent team.
                  nullable: true
                  type: integer
                permission:
                  default: pull
                  description: >-
                    **Deprecated**. The permission that new repositories will be added
                    to the team with when none is specified. Can be one of:  

                    \* `pull` - team members can pull, but not push to or administer newly-added repositories.  

                    \* `push` - team members can pull and push, but not administer newly-added repositories.  

                    \* `admin` - team members can pull, push and administer newly-added repositories.
                  enum:
                    - pull
                    - push
                    - admin
                  type: string
                privacy:
                  description: >-
                    The level of privacy this team should have. Editing teams without
                    specifying this parameter leaves `privacy` intact. When a
                    team is nested, the `privacy` for parent teams cannot be
                    `secret`. The options are:  

                    **For a non-nested team:**  

                    \* `secret` - only visible to organization owners and members of this team.  

                    \* `closed` - visible to all members of this organization.  

                    **For a parent or child team:**  

                    \* `closed` - visible to all members of this organization.
                  enum:
                    - secret
                    - closed
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-full"
              schema:
                $ref: "#/components/schemas/team-full"
          description: Response
      summary: Update a team
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/discussions":
    get:
      description: >-
        List all discussions on a team's page. OAuth access tokens require
        the `read:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussions
      operationId: teams/list-discussions-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - description: Pinned discussions only filter
          in: query
          name: pinned
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-items"
              schema:
                items:
                  $ref: "#/components/schemas/team-discussion"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List discussions
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussions
    post:
      description: >-
        Creates a new discussion post on a team's page. OAuth access tokens
        require the `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion
      operationId: teams/create-discussion-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
      requestBody:
        content:
          application/json:
            example:
              body: Hi! This is an area for us to collaborate as a team.
              title: Our first team post
            schema:
              properties:
                body:
                  description: The discussion post's body text.
                  type: string
                private:
                  default: false
                  description: Private posts are only visible to team members, organization
                    owners, and team maintainers. Public posts are visible to
                    all members of the organization. Set to `true` to create a
                    private post.
                  type: boolean
                title:
                  description: The discussion post's title.
                  type: string
              required:
                - title
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion"
              schema:
                $ref: "#/components/schemas/team-discussion"
          description: Response
      summary: Create a discussion
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussions
        triggersNotification: true
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}":
    delete:
      description: >-
        Delete a discussion from a team's page. OAuth access tokens require
        the `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion
      operationId: teams/delete-discussion-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
      responses:
        "204":
          description: Response
      summary: Delete a discussion
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: discussions
    get:
      description: >-
        Get a specific discussion on a team's page. OAuth access tokens
        require the `read:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion
      operationId: teams/get-discussion-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion"
              schema:
                $ref: "#/components/schemas/team-discussion"
          description: Response
      summary: Get a discussion
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussions
    patch:
      description: >-
        Edits the title and body text of a discussion post. Only the
        parameters you provide are updated. OAuth access tokens require the
        `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion
      operationId: teams/update-discussion-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            example:
              title: Welcome to our first team post
            schema:
              properties:
                body:
                  description: The discussion post's body text.
                  type: string
                title:
                  description: The discussion post's title.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-2"
              schema:
                $ref: "#/components/schemas/team-discussion"
          description: Response
      summary: Update a discussion
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments":
    get:
      description: >-
        List all comments on a team discussion. OAuth access tokens require
        the `read:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussion-comments
      operationId: teams/list-discussion-comments-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/team-discussion-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List discussion comments
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussion-comments
    post:
      description: >-
        Creates a new comment on a team discussion. OAuth access tokens
        require the `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion-comment
      operationId: teams/create-discussion-comment-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            example:
              body: Do you like apples?
            schema:
              properties:
                body:
                  description: The discussion comment's body text.
                  type: string
              required:
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment"
              schema:
                $ref: "#/components/schemas/team-discussion-comment"
          description: Response
      summary: Create a discussion comment
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussion-comments
        triggersNotification: true
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}":
    delete:
      description: >-
        Deletes a comment on a team discussion. OAuth access tokens require
        the `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion-comment
      operationId: teams/delete-discussion-comment-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      responses:
        "204":
          description: Response
      summary: Delete a discussion comment
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: discussion-comments
    get:
      description: >-
        Get a specific comment on a team discussion. OAuth access tokens
        require the `read:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion-comment
      operationId: teams/get-discussion-comment-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment"
              schema:
                $ref: "#/components/schemas/team-discussion-comment"
          description: Response
      summary: Get a discussion comment
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussion-comments
    patch:
      description: >-
        Edits the body text of a discussion comment. OAuth access tokens
        require the `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion-comment
      operationId: teams/update-discussion-comment-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            example:
              body: Do you like pineapples?
            schema:
              properties:
                body:
                  description: The discussion comment's body text.
                  type: string
              required:
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment-2"
              schema:
                $ref: "#/components/schemas/team-discussion-comment"
          description: Response
      summary: Update a discussion comment
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: discussion-comments
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions":
    get:
      description: >-
        List the reactions to a [team discussion
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments/).
        OAuth access tokens require the `read:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion-comment
      operationId: reactions/list-for-team-discussion-comment-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to a team discussion
            comment.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List reactions for a team discussion comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: >-
        Create a reaction to a [team discussion
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments).
        OAuth access tokens require the `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        A response with an HTTP `200` status means that you already added the
        reaction type to this team discussion comment.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-team-discussion-comment
      operationId: reactions/create-for-team-discussion-comment-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the team discussion comment.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
      summary: Create reaction for a team discussion comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}":
    delete:
      description: >-
        **Note:** You can also specify a team or organization with
        `team_id` and `org_id` using the route `DELETE
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.


        Delete a reaction to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-team-discussion-comment-reaction
      operationId: reactions/delete-for-team-discussion-comment
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
        - $ref: "#/components/parameters/reaction-id"
      responses:
        "204":
          description: Response
      summary: Delete team discussion comment reaction
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions":
    get:
      description: >-
        List the reactions to a [team
        discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions).
        OAuth access tokens require the `read:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion
      operationId: reactions/list-for-team-discussion-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to a team discussion.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List reactions for a team discussion
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: >-
        Create a reaction to a [team
        discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions).
        OAuth access tokens require the `write:discussion`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        A response with an HTTP `200` status means that you already added the
        reaction type to this team discussion.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-team-discussion
      operationId: reactions/create-for-team-discussion-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the team discussion.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
      summary: Create reaction for a team discussion
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}":
    delete:
      description: >-
        **Note:** You can also specify a team or organization with
        `team_id` and `org_id` using the route `DELETE
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.


        Delete a reaction to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-team-discussion-reaction
      operationId: reactions/delete-for-team-discussion
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/reaction-id"
      responses:
        "204":
          description: Response
      summary: Delete team discussion reaction
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/members":
    get:
      description: >-
        Team members will include the members of child teams.


        To list members in a team, the team must be visible to the authenticated user.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-members
      operationId: teams/list-members-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - description: |-
            Filters members returned by their role in the team. Can be one of:  
            \* `member` - normal members of the team.  
            \* `maintainer` - team maintainers.  
            \* `all` - all members of the team.
          in: query
          name: role
          required: false
          schema:
            default: all
            enum:
              - member
              - maintainer
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List team members
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/orgs/{org}/teams/{team_slug}/memberships/{username}":
    delete:
      description: >-
        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.


        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-team-membership-for-a-user
      operationId: teams/remove-membership-for-user-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "403":
          description: Forbidden if team synchronization is set up
      summary: Remove team membership for a user
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
    get:
      description: >-
        Team members will include the members of child teams.


        To get a user's membership with a team, the team must be visible to the authenticated user.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.


        **Note:**

        The response contains the `state` of the membership and the member's `role`.


        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see see [Create a team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-team).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user
      operationId: teams/get-membership-for-user-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-user-is-a-team-maintainer:
                  $ref: "#/components/examples/team-membership-response-if-user-is-a-team-maintai\
                    ner"
              schema:
                $ref: "#/components/schemas/team-membership"
          description: Response
        "404":
          description: if user has no team membership
      summary: Get team membership for a user
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
    put:
      description: >-
        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.


        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        An organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the "pending" state until the person accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team.


        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-membership-for-a-user
      operationId: teams/add-or-update-membership-for-user-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                role:
                  default: member
                  description: >-
                    The role that this user should have in the team. Can be one of:  

                    \* `member` - a normal member of the team.  

                    \* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.
                  enum:
                    - member
                    - maintainer
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-users-membership-with-team-is-now-pending:
                  $ref: "#/components/examples/team-membership-response-if-users-membership-with-\
                    team-is-now-pending"
              schema:
                $ref: "#/components/schemas/team-membership"
          description: Response
        "403":
          description: Forbidden if team synchronization is set up
        "422":
          description: Unprocessable Entity if you attempt to add an organization to a team
      summary: Add or update team membership for a user
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/orgs/{org}/teams/{team_slug}/projects":
    get:
      description: >-
        Lists the organization projects for a team.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-projects
      operationId: teams/list-projects-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-project-items"
              schema:
                items:
                  $ref: "#/components/schemas/team-project"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List team projects
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/projects/{project_id}":
    delete:
      description: >-
        Removes an organization project from a team. An organization owner
        or a team maintainer can remove any project from the team. To remove a
        project from a team as an organization member, the authenticated user
        must have `read` access to both the team and project, or `admin` access
        to the team or project. This endpoint removes the project from the team,
        but does not delete the project.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-a-project-from-a-team
      operationId: teams/remove-project-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/project-id"
      responses:
        "204":
          description: Response
      summary: Remove a project from a team
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      description: >-
        Checks whether a team has `read`, `write`, or `admin` permissions
        for an organization project. The response includes projects inherited
        from a parent team.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-project
      operationId: teams/check-permissions-for-project-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/project-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-project"
              schema:
                $ref: "#/components/schemas/team-project"
          description: Response
        "404":
          description: Not Found if project is not managed by this team
      summary: Check team permissions for a project
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      description: >-
        Adds an organization project to a team. To add a project to a team
        or update the team's permission on a project, the authenticated user
        must have `admin` permissions for the project. The project and team must
        be part of the same organization.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-project-permissions
      operationId: teams/add-or-update-project-permissions-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              properties:
                permission:
                  description: >-
                    The permission to grant to the team for this project. Can be one
                    of:  

                    \* `read` - team members can read, but not write to or administer this project.  

                    \* `write` - team members can read and write, but not administer this project.  

                    \* `admin` - team members can read, write and administer this project.  

                    Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
                  enum:
                    - read
                    - write
                    - admin
                  type: string
              type: object
      responses:
        "204":
          description: Response
        "403":
          content:
            application/json:
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    documentation_url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-project-permissions
                    message: Must have admin rights to Repository.
              schema:
                properties:
                  documentation_url:
                    type: string
                  message:
                    type: string
                type: object
          description: Forbidden if the project is not owned by the organization
      summary: Add or update team project permissions
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/repos":
    get:
      description: >-
        Lists a team's repositories visible to the authenticated user.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-repositories
      operationId: teams/list-repos-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List team repositories
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}":
    delete:
      description: >-
        If the authenticated user is an organization owner or a team
        maintainer, they can remove any repositories from the team. To remove a
        repository from a team as an organization member, the authenticated user
        must have admin access to the repository and must be able to see the
        team. This does not delete the repository, it just removes it from the
        team.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#remove-a-repository-from-a-team
      operationId: teams/remove-repo-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
      summary: Remove a repository from a team
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      description: >-
        Checks whether a team has `admin`, `push`, `maintain`, `triage`, or
        `pull` permission for a repository. Repositories inherited through a
        parent team will also be checked.


        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.


        If a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#check-team-permissions-for-a-repository
      operationId: teams/check-permissions-for-repo-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                alternative-response-with-repository-permissions:
                  $ref: "#/components/examples/team-repository-alternative-response-with-reposito\
                    ry-permissions"
              schema:
                $ref: "#/components/schemas/team-repository"
          description: Alternative response with repository permissions
        "204":
          description: Response if team has permission for the repository. This is the
            response when the repository media type hasn't been provded in the
            Accept header.
        "404":
          description: Not Found if team does not have permission for the repository
      summary: Check team permissions for a repository
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      description: >-
        To add a repository to a team or update the team's permission on a
        repository, the authenticated user must have admin access to the
        repository, and must be able to see the team. The repository must be
        owned by the organization, or a direct fork of a repository owned by the
        organization. You will get a `422 Unprocessable Entity` status if you
        attempt to add a repository to a team that is not owned by the
        organization. Note that, if you choose not to pass any parameters,
        you'll need to set `Content-Length` to zero when calling out to this
        endpoint. For more information, see "[HTTP
        verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.


        For more information about the permission levels, see "[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#add-or-update-team-repository-permissions
      operationId: teams/add-or-update-repo-permissions-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permission:
                  description: >-
                    The permission to grant the team on this repository. Can be one
                    of:  

                    \* `pull` - team members can pull, but not push to or administer this repository.  

                    \* `push` - team members can pull and push, but not administer this repository.  

                    \* `admin` - team members can pull, push and administer this repository.  

                    \* `maintain` - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.  

                    \* `triage` - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations.  
                      
                    If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.
                  enum:
                    - pull
                    - push
                    - admin
                    - maintain
                    - triage
                  type: string
              type: object
      responses:
        "204":
          description: Response
      summary: Add or update team repository permissions
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/orgs/{org}/teams/{team_slug}/teams":
    get:
      description: >-
        Lists the child teams of the team specified by `{team_slug}`.


        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-child-teams
      operationId: teams/list-child-in-org
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/team_slug"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-child-teams-exist:
                  $ref: "#/components/examples/team-items-response-if-child-teams-exist"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: if child teams exist
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List child teams
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/projects/columns/cards/{card_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#delete-a-project-card
      operationId: projects/delete-card
      parameters:
        - $ref: "#/components/parameters/card_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          content:
            application/json:
              schema:
                properties:
                  documentation_url:
                    type: string
                  errors:
                    items:
                      type: string
                    type: array
                  message:
                    type: string
                type: object
          description: Forbidden
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a project card
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: cards
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#get-a-project-card
      operationId: projects/get-card
      parameters:
        - $ref: "#/components/parameters/card_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-card"
              schema:
                $ref: "#/components/schemas/project-card"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a project card
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: cards
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#update-a-project-card
      operationId: projects/update-card
      parameters:
        - $ref: "#/components/parameters/card_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                archived:
                  description: Whether or not the card is archived
                  example: false
                  type: boolean
                note:
                  description: The project card's note
                  example: Update all gems
                  nullable: true
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-card"
              schema:
                $ref: "#/components/schemas/project-card"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Update an existing project card
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: cards
  "/projects/columns/cards/{card_id}/moves":
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#move-a-project-card
      operationId: projects/move-card
      parameters:
        - $ref: "#/components/parameters/card_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                column_id:
                  description: The unique identifier of the column the card should be moved to
                  example: 42
                  type: integer
                position:
                  description: The position of the card in a column
                  example: bottom
                  pattern: ^(?:top|bottom|after:\d+)$
                  type: string
              required:
                - position
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          content:
            application/json:
              schema:
                properties:
                  documentation_url:
                    type: string
                  errors:
                    items:
                      properties:
                        code:
                          type: string
                        field:
                          type: string
                        message:
                          type: string
                        resource:
                          type: string
                      type: object
                    type: array
                  message:
                    type: string
                type: object
          description: Forbidden
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    items:
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      type: object
                    type: array
                  message:
                    type: string
                type: object
          description: Response
      summary: Move a project card
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: cards
  "/projects/columns/{column_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#delete-a-project-column
      operationId: projects/delete-column
      parameters:
        - $ref: "#/components/parameters/column_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Delete a project column
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: columns
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#get-a-project-column
      operationId: projects/get-column
      parameters:
        - $ref: "#/components/parameters/column_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-column"
              schema:
                $ref: "#/components/schemas/project-column"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a project column
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: columns
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#update-a-project-column
      operationId: projects/update-column
      parameters:
        - $ref: "#/components/parameters/column_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
                - name
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-column"
              schema:
                $ref: "#/components/schemas/project-column"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Update an existing project column
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: columns
  "/projects/columns/{column_id}/cards":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#list-project-cards
      operationId: projects/list-cards
      parameters:
        - $ref: "#/components/parameters/column_id"
        - description: Filters the project cards that are returned by the card's state.
            Can be one of `all`,`archived`, or `not_archived`.
          in: query
          name: archived_state
          required: false
          schema:
            default: not_archived
            enum:
              - all
              - archived
              - not_archived
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-card-items"
              schema:
                items:
                  $ref: "#/components/schemas/project-card"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List project cards
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: cards
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#create-a-project-card
      operationId: projects/create-card
      parameters:
        - $ref: "#/components/parameters/column_id"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    note:
                      description: The project card's note
                      example: Update all gems
                      nullable: true
                      type: string
                  required:
                    - note
                  type: object
                - properties:
                    content_id:
                      description: The unique identifier of the content associated with the card
                      example: 42
                      type: integer
                    content_type:
                      description: The piece of content associated with the card
                      example: PullRequest
                      type: string
                  required:
                    - content_id
                    - content_type
                  type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-card"
              schema:
                $ref: "#/components/schemas/project-card"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/validation-error"
                  - $ref: "#/components/schemas/validation-error-simple"
          description: Validation failed
        "503":
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    items:
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      type: object
                    type: array
                  message:
                    type: string
                type: object
          description: Response
      summary: Create a project card
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: cards
  "/projects/columns/{column_id}/moves":
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#move-a-project-column
      operationId: projects/move-column
      parameters:
        - $ref: "#/components/parameters/column_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                position:
                  description: The position of the column in a project
                  example: last
                  pattern: ^(?:first|last|after:\d+)$
                  type: string
              required:
                - position
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Move a project column
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: columns
  "/projects/{project_id}":
    delete:
      description: Deletes a project board. Returns a `404 Not Found` status if
        projects are disabled.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#delete-a-project
      operationId: projects/delete
      parameters:
        - $ref: "#/components/parameters/project-id"
      responses:
        "204":
          description: Delete Success
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          content:
            application/json:
              schema:
                properties:
                  documentation_url:
                    type: string
                  errors:
                    items:
                      type: string
                    type: array
                  message:
                    type: string
                type: object
          description: Forbidden
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
      summary: Delete a project
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      description: Gets a project by its `id`. Returns a `404 Not Found` status if
        projects are disabled. If you do not have sufficient privileges to
        perform this action, a `401 Unauthorized` or `410 Gone` status is
        returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#get-a-project
      operationId: projects/get
      parameters:
        - $ref: "#/components/parameters/project-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-3"
              schema:
                $ref: "#/components/schemas/project"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Get a project
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: Updates a project board's information. Returns a `404 Not Found`
        status if projects are disabled. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone`
        status is returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#update-a-project
      operationId: projects/update
      parameters:
        - $ref: "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in January
                  nullable: true
                  type: string
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                organization_permission:
                  description: The baseline permission that all organization members have on this
                    project
                  enum:
                    - read
                    - write
                    - admin
                    - none
                  type: string
                private:
                  description: Whether or not this project can be seen by everyone.
                  type: boolean
                state:
                  description: State of the project; either 'open' or 'closed'
                  example: open
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-3"
              schema:
                $ref: "#/components/schemas/project"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          content:
            application/json:
              schema:
                properties:
                  documentation_url:
                    type: string
                  errors:
                    items:
                      type: string
                    type: array
                  message:
                    type: string
                type: object
          description: Forbidden
        "404":
          description: Not Found if the authenticated user does not have access to the
            project
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Update a project
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/projects/{project_id}/collaborators":
    get:
      description: Lists the collaborators for an organization project. For a project,
        the list of collaborators includes outside collaborators, organization
        members that are direct collaborators, organization members with access
        through team memberships, organization members with access through
        default organization permissions, and organization owners. You must be
        an organization owner or a project `admin` to list collaborators.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#list-project-collaborators
      operationId: projects/list-collaborators
      parameters:
        - $ref: "#/components/parameters/project-id"
        - description: >-
            Filters the collaborators by their affiliation. Can be one of:  

            \* `outside`: Outside collaborators of a project that are not a member of the project's organization.  

            \* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  

            \* `all`: All collaborators the authenticated user can see.
          in: query
          name: affiliation
          required: false
          schema:
            default: all
            enum:
              - outside
              - direct
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List project collaborators
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: collaborators
  "/projects/{project_id}/collaborators/{username}":
    delete:
      description: Removes a collaborator from an organization project. You must be an
        organization owner or a project `admin` to remove a collaborator.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#remove-project-collaborator
      operationId: projects/remove-collaborator
      parameters:
        - $ref: "#/components/parameters/project-id"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Remove user as a collaborator
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: collaborators
    put:
      description: Adds a collaborator to an organization project and sets their
        permission level. You must be an organization owner or a project `admin`
        to add a collaborator.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#add-project-collaborator
      operationId: projects/add-collaborator
      parameters:
        - $ref: "#/components/parameters/project-id"
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              properties:
                permission:
                  default: write
                  description: The permission to grant the collaborator.
                  enum:
                    - read
                    - write
                    - admin
                  example: write
                  type: string
              type: object
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add project collaborator
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: collaborators
  "/projects/{project_id}/collaborators/{username}/permission":
    get:
      description: "Returns the collaborator's permission level for an organization
        project. Possible values for the `permission` key: `admin`, `write`,
        `read`, `none`. You must be an organization owner or a project `admin`
        to review a user's permission level."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#get-project-permission-for-a-user
      operationId: projects/get-permission-for-user
      parameters:
        - $ref: "#/components/parameters/project-id"
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-collaborator-permission"
              schema:
                $ref: "#/components/schemas/repository-collaborator-permission"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get project permission for a user
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: collaborators
  "/projects/{project_id}/columns":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#list-project-columns
      operationId: projects/list-columns
      parameters:
        - $ref: "#/components/parameters/project-id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-column-items"
              schema:
                items:
                  $ref: "#/components/schemas/project-column"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List project columns
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: columns
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#create-a-project-column
      operationId: projects/create-column
      parameters:
        - $ref: "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              example:
                cards_url: https://api.github.com/projects/columns/367/cards
                created_at: 2016-09-05T14:18:44Z
                id: 367
                name: To Do
                node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                project_url: https://api.github.com/projects/120
                updated_at: 2016-09-05T14:22:28Z
                url: https://api.github.com/projects/columns/367
              schema:
                $ref: "#/components/schemas/project-column"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Create a project column
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory: columns
  /rate_limit:
    get:
      description: >-
        **Note:** Accessing this endpoint does not count against your REST
        API rate limit.


        **Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/rate-limit#get-rate-limit-status-for-the-authenticated-user
      operationId: rate-limit/get
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/rate-limit-overview"
              schema:
                $ref: "#/components/schemas/rate-limit-overview"
          description: Response
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/x-rate-limit-limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/x-rate-limit-remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/x-rate-limit-reset"
        "304":
          $ref: "#/components/responses/not_modified"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get rate limit status for the authenticated user
      tags:
        - rate-limit
      x-github:
        category: rate-limit
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/reactions/{reaction_id}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Reactions API. We recommend migrating your existing
        code to use the new delete reactions endpoints. For more information,
        see this [blog
        post](https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/).


        OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions) or [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions/#delete-a-reaction-legacy
      operationId: reactions/delete-legacy
      parameters:
        - $ref: "#/components/parameters/reaction-id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "410":
          $ref: "#/components/responses/gone"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Delete a reaction (Legacy)
      tags:
        - reactions
      x-github:
        category: reactions
        deprecationDate: 2020-02-26
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        removalDate: 2021-02-21
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}":
    delete:
      description: >-
        Deleting a repository requires admin access. If OAuth is used, the
        `delete_repo` scope is required.


        If an organization owner has configured the organization to prevent members from deleting organization-owned

        repositories, you will get a `403 Forbidden` response.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-repository
      operationId: repos/delete
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
        "307":
          $ref: "#/components/responses/temporary_redirect"
        "403":
          content:
            application/json:
              example:
                documentation_url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-repository
                message: Organization members cannot delete repositories.
              schema:
                properties:
                  documentation_url:
                    type: string
                  message:
                    type: string
                type: object
          description: "If an organization owner has configured the organization to
            prevent members from deleting organization-owned repositories, a
            member will get this response:"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a repository
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      description: >-
        When you pass the `scarlet-witch-preview` media type, requests to
        get a repository will also return the repository's code of conduct if it
        can be detected from the repository's code of conduct file.


        The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-repository
      operationId: repos/get
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/full-repository-default-response"
                response-with-scarlet-witch-preview-media-type:
                  $ref: "#/components/examples/full-repository-response-with-scarlet-witch-previe\
                    w-media-type"
              schema:
                $ref: "#/components/schemas/full-repository"
          description: Response
        "301":
          $ref: "#/components/responses/moved_permanently"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a repository
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: nebula
            note: >-
              You can set the visibility of a repository using the new `visibility`
              parameter in the [Repositories
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos/),
              and get a repository's visibility with a new response key. For
              more information, see the [blog
              post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).


              To access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.nebula-preview+json

              ```
            required: false
          - name: scarlet-witch
            note: >-
              The Codes of Conduct API is currently available for developers to preview.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.scarlet-witch-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: "**Note**: To edit a repository's topics, use the [Replace all
        repository
        topics](https://docs.github.com/enterprise-server@2.21/rest/reference/r\
        epos#replace-all-repository-topics) endpoint."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos/#update-a-repository
      operationId: repos/update
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              description: This is your first repository
              has_issues: true
              has_projects: true
              has_wiki: true
              homepage: https://github.com
              name: Hello-World
              private: true
            schema:
              properties:
                allow_merge_commit:
                  default: true
                  description: Either `true` to allow merging pull requests with a merge commit,
                    or `false` to prevent merging pull requests with merge
                    commits.
                  type: boolean
                allow_rebase_merge:
                  default: true
                  description: Either `true` to allow rebase-merging pull requests, or `false` to
                    prevent rebase-merging.
                  type: boolean
                allow_squash_merge:
                  default: true
                  description: Either `true` to allow squash-merging pull requests, or `false` to
                    prevent squash-merging.
                  type: boolean
                archived:
                  default: false
                  description: "`true` to archive this repository. **Note**: You cannot unarchive
                    repositories through the API."
                  type: boolean
                default_branch:
                  description: Updates the default branch for this repository.
                  type: string
                delete_branch_on_merge:
                  default: false
                  description: Either `true` to allow automatically deleting head branches when
                    pull requests are merged, or `false` to prevent automatic
                    deletion.
                  type: boolean
                description:
                  description: A short description of the repository.
                  type: string
                has_issues:
                  default: true
                  description: Either `true` to enable issues for this repository or `false` to
                    disable them.
                  type: boolean
                has_projects:
                  default: true
                  description: Either `true` to enable projects for this repository or `false` to
                    disable them. **Note:** If you're creating a repository in
                    an organization that has disabled repository projects, the
                    default is `false`, and if you pass `true`, the API returns
                    an error.
                  type: boolean
                has_wiki:
                  default: true
                  description: Either `true` to enable the wiki for this repository or `false` to
                    disable it.
                  type: boolean
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                is_template:
                  default: false
                  description: Either `true` to make this repo available as a template repository
                    or `false` to prevent it.
                  type: boolean
                name:
                  description: The name of the repository.
                  type: string
                private:
                  default: false
                  description: >-
                    Either `true` to make the repository private or `false` to make it
                    public. Default: `false`.  

                    **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.
                  type: boolean
                visibility:
                  description: Can be `public` or `private`. If your organization is associated
                    with an enterprise account using GitHub Enterprise Cloud or
                    GitHub Enterprise Server 2.20+, `visibility` can also be
                    `internal`. The `visibility` parameter overrides the
                    `private` parameter when you use both along with the
                    `nebula-preview` preview header.
                  enum:
                    - public
                    - private
                    - visibility
                    - internal
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/full-repository"
              schema:
                $ref: "#/components/schemas/full-repository"
          description: Response
        "307":
          $ref: "#/components/responses/temporary_redirect"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update a repository
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: nebula
            note: >-
              You can set the visibility of a repository using the new `visibility`
              parameter in the [Repositories
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos/),
              and get a repository's visibility with a new response key. For
              more information, see the [blog
              post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).


              To access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.nebula-preview+json

              ```
            required: false
          - name: baptiste
            note: >-
              The `is_template` and `template_repository` keys are currently available
              for developer to preview. See [Create a repository using a
              template](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-using-a-template)
              to learn how to create template repositories. To access these new
              response keys during the preview period, you must provide a custom
              [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:


              ```shell

              application/vnd.github.baptiste-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/assignees":
    get:
      description: Lists the [available
        assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/)
        for issues in a repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-assignees
      operationId: issues/list-assignees
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List assignees
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: assignees
  "/repos/{owner}/{repo}/assignees/{assignee}":
    get:
      description: >-
        Checks if a user has permission to be assigned to an issue in this
        repository.


        If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.


        Otherwise a `404` status code is returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#check-if-a-user-can-be-assigned
      operationId: issues/check-user-can-be-assigned
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: assignee
          required: true
          schema:
            type: string
      responses:
        "204":
          description: If the `assignee` can be assigned to issues in the repository, a
            `204` header with no content is returned.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/basic-error"
          description: Otherwise a `404` status code is returned.
      summary: Check if a user can be assigned
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: assignees
  "/repos/{owner}/{repo}/branches":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-branches
      operationId: repos/list-branches
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: Setting to `true` returns only protected branches. When set to
            `false`, only unprotected branches are returned. Omitting this
            parameter returns all branches.
          in: query
          name: protected
          required: false
          schema:
            type: boolean
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/short-branch-with-protection-items"
              schema:
                items:
                  $ref: "#/components/schemas/short-branch"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List branches
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-branch
      operationId: repos/get-branch
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/branch-with-protection"
          description: Response
        "301":
          $ref: "#/components/responses/moved_permanently"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get a branch
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection":
    delete:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-branch-protection
      operationId: repos/delete-branch-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Delete branch protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    get:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-branch-protection
      operationId: repos/get-branch-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/branch-protection"
              schema:
                $ref: "#/components/schemas/branch-protection"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get branch protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: luke-cage
            note: >-
              The Protected Branches API now has a setting for requiring a specified
              number of approving pull request reviews before merging. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.luke-cage-preview+json

              ```
            required: false
        subcategory: branches
    put:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Protecting a branch requires admin or owner permissions to the repository.


        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.


        **Note**: The list of users, apps, and teams in total is limited to 100 items.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-branch-protection
      operationId: repos/update-branch-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            example:
              allow_deletions: true
              allow_force_pushes: true
              enforce_admins: true
              required_linear_history: true
              required_pull_request_reviews:
                dismiss_stale_reviews: true
                dismissal_restrictions:
                  teams:
                    - justice-league
                  users:
                    - octocat
                require_code_owner_reviews: true
                required_approving_review_count: 2
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci
                strict: true
              restrictions:
                apps:
                  - super-ci
                teams:
                  - justice-league
                users:
                  - octocat
            schema:
              properties:
                allow_deletions:
                  description: 'Allows deletion of the protected branch by anyone with write
                    access to the repository. Set to `false` to prevent deletion
                    of the protected branch. Default: `false`. For more
                    information, see "[Enabling force pushes to a protected
                    branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)"
                    in the GitHub Help documentation.'
                  type: boolean
                allow_force_pushes:
                  description: 'Permits force pushes to the protected branch by anyone with write
                    access to the repository. Set to `true` to allow force
                    pushes. Set to `false` or `null` to block force pushes.
                    Default: `false`. For more information, see "[Enabling force
                    pushes to a protected
                    branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)"
                    in the GitHub Help documentation."'
                  nullable: true
                  type: boolean
                enforce_admins:
                  description: Enforce all configured restrictions for administrators. Set to
                    `true` to enforce required status checks for repository
                    administrators. Set to `null` to disable.
                  nullable: true
                  type: boolean
                required_linear_history:
                  description: 'Enforces a linear commit Git history, which prevents anyone from
                    pushing merge commits to a branch. Set to `true` to enforce
                    a linear commit history. Set to `false` to disable a linear
                    commit Git history. Your repository must allow squash
                    merging or rebase merging before you can enable a linear
                    commit history. Default: `false`. For more information, see
                    "[Requiring a linear commit
                    history](https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history)"
                    in the GitHub Help documentation.'
                  type: boolean
                required_pull_request_reviews:
                  description: Require at least one approving review on a pull request, before
                    merging. Set to `null` to disable.
                  nullable: true
                  properties:
                    dismiss_stale_reviews:
                      description: Set to `true` if you want to automatically dismiss approving
                        reviews when someone pushes a new commit.
                      type: boolean
                    dismissal_restrictions:
                      description: Specify which users and teams can dismiss pull request reviews.
                        Pass an empty `dismissal_restrictions` object to
                        disable. User and team `dismissal_restrictions` are only
                        available for organization-owned repositories. Omit this
                        parameter for personal repositories.
                      properties:
                        teams:
                          description: The list of team `slug`s with dismissal access
                          items:
                            type: string
                          type: array
                        users:
                          description: The list of user `login`s with dismissal access
                          items:
                            type: string
                          type: array
                      type: object
                    require_code_owner_reviews:
                      description: Blocks merging pull requests until [code
                        owners](https://help.github.com/articles/about-code-owners/)
                        review them.
                      type: boolean
                    required_approving_review_count:
                      description: Specify the number of reviewers required to approve pull requests.
                        Use a number between 1 and 6.
                      type: integer
                  type: object
                required_status_checks:
                  description: Require status checks to pass before merging. Set to `null` to
                    disable.
                  nullable: true
                  properties:
                    contexts:
                      description: The list of status checks to require in order to merge into this
                        branch
                      items:
                        type: string
                      type: array
                    strict:
                      description: Require branches to be up to date before merging.
                      type: boolean
                  required:
                    - strict
                    - contexts
                  type: object
                restrictions:
                  description: Restrict who can push to the protected branch. User, app, and team
                    `restrictions` are only available for organization-owned
                    repositories. Set to `null` to disable.
                  nullable: true
                  properties:
                    apps:
                      description: The list of app `slug`s with push access
                      items:
                        type: string
                      type: array
                    teams:
                      description: The list of team `slug`s with push access
                      items:
                        type: string
                      type: array
                    users:
                      description: The list of user `login`s with push access
                      items:
                        type: string
                      type: array
                  required:
                    - users
                    - teams
                  type: object
              required:
                - required_status_checks
                - enforce_admins
                - required_pull_request_reviews
                - restrictions
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/protected-branch"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Update branch protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: luke-cage
            note: >-
              The Protected Branches API now has a setting for requiring a specified
              number of approving pull request reviews before merging. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.luke-cage-preview+json

              ```
            required: false
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins":
    delete:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-admin-branch-protection
      operationId: repos/delete-admin-branch-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete admin branch protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    get:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-admin-branch-protection
      operationId: repos/get-admin-branch-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/protected-branch-admin-enforced-2"
              schema:
                $ref: "#/components/schemas/protected-branch-admin-enforced"
          description: Response
      summary: Get admin branch protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    post:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#set-admin-branch-protection
      operationId: repos/set-admin-branch-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/protected-branch-admin-enforced-2"
              schema:
                $ref: "#/components/schemas/protected-branch-admin-enforced"
          description: Response
      summary: Set admin branch protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews":
    delete:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-pull-request-review-protection
      operationId: repos/delete-pull-request-review-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete pull request review protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    get:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-pull-request-review-protection
      operationId: repos/get-pull-request-review-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/protected-branch-pull-request-review"
              schema:
                $ref: "#/components/schemas/protected-branch-pull-request-review"
          description: Response
      summary: Get pull request review protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: luke-cage
            note: >-
              The Protected Branches API now has a setting for requiring a specified
              number of approving pull request reviews before merging. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.luke-cage-preview+json

              ```
            required: false
        subcategory: branches
    patch:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.


        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-pull-request-review-protection
      operationId: repos/update-pull-request-review-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            example:
              dismiss_stale_reviews: true
              dismissal_restrictions:
                teams:
                  - justice-league
                users:
                  - octocat
              require_code_owner_reviews: true
              required_approving_review_count: 2
            schema:
              properties:
                dismiss_stale_reviews:
                  description: Set to `true` if you want to automatically dismiss approving
                    reviews when someone pushes a new commit.
                  type: boolean
                dismissal_restrictions:
                  description: Specify which users and teams can dismiss pull request reviews.
                    Pass an empty `dismissal_restrictions` object to disable.
                    User and team `dismissal_restrictions` are only available
                    for organization-owned repositories. Omit this parameter for
                    personal repositories.
                  properties:
                    teams:
                      description: The list of team `slug`s with dismissal access
                      items:
                        type: string
                      type: array
                    users:
                      description: The list of user `login`s with dismissal access
                      items:
                        type: string
                      type: array
                  type: object
                require_code_owner_reviews:
                  description: Blocks merging pull requests until [code
                    owners](https://help.github.com/articles/about-code-owners/)
                    have reviewed.
                  type: boolean
                required_approving_review_count:
                  description: Specifies the number of reviewers required to approve pull
                    requests. Use a number between 1 and 6.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/protected-branch-pull-request-review"
              schema:
                $ref: "#/components/schemas/protected-branch-pull-request-review"
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update pull request review protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: luke-cage
            note: >-
              The Protected Branches API now has a setting for requiring a specified
              number of approving pull request reviews before merging. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.luke-cage-preview+json

              ```
            required: false
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures":
    delete:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-commit-signature-protection
      operationId: repos/delete-commit-signature-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete commit signature protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: zzzax
            note: >-
              Protected Branches API can now manage a setting for requiring signed
              commits. This feature is currently available for developers to
              preview. See the [blog
              post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.zzzax-preview+json

              ```
            required: true
        subcategory: branches
    get:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.


        **Note**: You must enable branch protection to require signed commits.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-commit-signature-protection
      operationId: repos/get-commit-signature-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/protected-branch-admin-enforced"
              schema:
                $ref: "#/components/schemas/protected-branch-admin-enforced"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get commit signature protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: zzzax
            note: >-
              Protected Branches API can now manage a setting for requiring signed
              commits. This feature is currently available for developers to
              preview. See the [blog
              post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.zzzax-preview+json

              ```
            required: true
        subcategory: branches
    post:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-commit-signature-protection
      operationId: repos/create-commit-signature-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/protected-branch-admin-enforced"
              schema:
                $ref: "#/components/schemas/protected-branch-admin-enforced"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Create commit signature protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: zzzax
            note: >-
              Protected Branches API can now manage a setting for requiring signed
              commits. This feature is currently available for developers to
              preview. See the [blog
              post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.zzzax-preview+json

              ```
            required: true
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks":
    delete:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#remove-status-check-protection
      operationId: repos/remove-status-check-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "204":
          description: Response
      summary: Remove status check protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    get:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-status-checks-protection
      operationId: repos/get-status-checks-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/status-check-policy"
              schema:
                $ref: "#/components/schemas/status-check-policy"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get status checks protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    patch:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-status-check-potection
      operationId: repos/update-status-check-protection
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            example:
              contexts:
                - continuous-integration/travis-ci
              strict: true
            schema:
              properties:
                contexts:
                  description: The list of status checks to require in order to merge into this
                    branch
                  items:
                    type: string
                  type: array
                strict:
                  description: Require branches to be up to date before merging.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/status-check-policy"
              schema:
                $ref: "#/components/schemas/status-check-policy"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update status check protection
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts":
    delete:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#remove-status-check-contexts
      operationId: repos/remove-status-check-contexts
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    contexts:
                      - contexts
                  properties:
                    contexts:
                      description: contexts parameter
                      items:
                        type: string
                      type: array
                  required:
                    - contexts
                  type: object
                - description: contexts parameter
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              example:
                - continuous-integration/travis-ci
              schema:
                items:
                  type: string
                type: array
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Remove status check contexts
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: contexts
        subcategory: branches
    get:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-all-status-check-contexts
      operationId: repos/get-all-status-check-contexts
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              example:
                - continuous-integration/travis-ci
              schema:
                items:
                  type: string
                type: array
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get all status check contexts
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    post:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#add-status-check-contexts
      operationId: repos/add-status-check-contexts
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    contexts:
                      - contexts
                  properties:
                    contexts:
                      description: contexts parameter
                      items:
                        type: string
                      type: array
                  required:
                    - contexts
                  type: object
                - description: contexts parameter
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              example:
                - continuous-integration/travis-ci
                - continuous-integration/jenkins
              schema:
                items:
                  type: string
                type: array
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add status check contexts
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: contexts
        subcategory: branches
    put:
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#set-status-check-contexts
      operationId: repos/set-status-check-contexts
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    contexts:
                      - contexts
                  properties:
                    contexts:
                      description: contexts parameter
                      items:
                        type: string
                      type: array
                  required:
                    - contexts
                  type: object
                - description: contexts parameter
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              example:
                - continuous-integration/travis-ci
              schema:
                items:
                  type: string
                type: array
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Set status check contexts
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: contexts
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions":
    delete:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Disables the ability to restrict who can push to this branch.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-access-restrictions
      operationId: repos/delete-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "204":
          description: Response
      summary: Delete access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    get:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists who has access to this protected branch.


        **Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-access-restrictions
      operationId: repos/get-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/branch-restriction-policy"
              schema:
                $ref: "#/components/schemas/branch-restriction-policy"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps":
    delete:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removes the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.


        | Type    | Description                                                                                                                                                |

        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |

        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#remove-app-access-restrictions
      operationId: repos/remove-app-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    apps:
                      - my-app
                  properties:
                    apps:
                      description: apps parameter
                      items:
                        type: string
                      type: array
                  required:
                    - apps
                  type: object
                - items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/integration-items"
              schema:
                items:
                  $ref: "#/components/schemas/integration"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Remove app access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: apps
        subcategory: branches
    get:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-apps-with-access-to-the-protected-branch
      operationId: repos/get-apps-with-access-to-protected-branch
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/integration-items"
              schema:
                items:
                  $ref: "#/components/schemas/integration"
                type: array
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get apps with access to the protected branch
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    post:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Grants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.


        | Type    | Description                                                                                                                                                |

        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |

        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#add-app-access-restrictions
      operationId: repos/add-app-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    apps:
                      - my-app
                  properties:
                    apps:
                      description: apps parameter
                      items:
                        type: string
                      type: array
                  required:
                    - apps
                  type: object
                - items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/integration-items"
              schema:
                items:
                  $ref: "#/components/schemas/integration"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add app access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: apps
        subcategory: branches
    put:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.


        | Type    | Description                                                                                                                                                |

        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |

        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#set-app-access-restrictions
      operationId: repos/set-app-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    apps:
                      - my-app
                  properties:
                    apps:
                      description: apps parameter
                      items:
                        type: string
                      type: array
                  required:
                    - apps
                  type: object
                - items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/integration-items"
              schema:
                items:
                  $ref: "#/components/schemas/integration"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Set app access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: apps
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams":
    delete:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removes the ability of a team to push to this branch. You can also remove push access for child teams.


        | Type    | Description                                                                                                                                         |

        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |

        | `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#remove-team-access-restrictions
      operationId: repos/remove-team-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    teams:
                      - my-team
                  properties:
                    teams:
                      description: teams parameter
                      items:
                        type: string
                      type: array
                  required:
                    - teams
                  type: object
                - description: teams parameter
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-items"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Remove team access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: teams
        subcategory: branches
    get:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists the teams who have push access to this branch. The list includes child teams.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-teams-with-access-to-the-protected-branch
      operationId: repos/get-teams-with-access-to-protected-branch
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-items"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get teams with access to the protected branch
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    post:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Grants the specified teams push access for this branch. You can also give push access to child teams.


        | Type    | Description                                                                                                                                |

        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |

        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#add-team-access-restrictions
      operationId: repos/add-team-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    teams:
                      - my-team
                  properties:
                    teams:
                      description: teams parameter
                      items:
                        type: string
                      type: array
                  required:
                    - teams
                  type: object
                - description: teams parameter
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-items"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add team access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: teams
        subcategory: branches
    put:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.


        | Type    | Description                                                                                                                                |

        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |

        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#set-team-access-restrictions
      operationId: repos/set-team-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    teams:
                      - my-team
                  properties:
                    teams:
                      description: teams parameter
                      items:
                        type: string
                      type: array
                  required:
                    - teams
                  type: object
                - description: teams parameter
                  items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-items"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Set team access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: teams
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users":
    delete:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removes the ability of a user to push to this branch.


        | Type    | Description                                                                                                                                   |

        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |

        | `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#remove-user-access-restrictions
      operationId: repos/remove-user-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    users:
                      - mona
                  properties:
                    users:
                      description: users parameter
                      items:
                        type: string
                      type: array
                  required:
                    - users
                  type: object
                - items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Remove user access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: users
        subcategory: branches
    get:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists the people who have push access to this branch.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-users-with-access-to-the-protected-branch
      operationId: repos/get-users-with-access-to-protected-branch
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get users with access to the protected branch
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: branches
    post:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Grants the specified people push access for this branch.


        | Type    | Description                                                                                                                   |

        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |

        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#add-user-access-restrictions
      operationId: repos/add-user-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    users:
                      - mona
                  properties:
                    users:
                      description: users parameter
                      items:
                        type: string
                      type: array
                  required:
                    - users
                  type: object
                - items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add user access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: users
        subcategory: branches
    put:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.


        | Type    | Description                                                                                                                   |

        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |

        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#set-user-access-restrictions
      operationId: repos/set-user-access-restrictions
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    users:
                      - mona
                  properties:
                    users:
                      description: users parameter
                      items:
                        type: string
                      type: array
                  required:
                    - users
                  type: object
                - items:
                    type: string
                  type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Set user access restrictions
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        requestBodyParameterName: users
        subcategory: branches
  "/repos/{owner}/{repo}/check-runs":
    post:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Creates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.


        In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#create-a-check-run
      operationId: checks/create
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            examples:
              example-of-completed-conclusion:
                summary: Response for completed conclusion
                value:
                  actions:
                    - description: Allow us to fix these errors for you
                      identifier: fix_errors
                      label: Fix
                  completed_at: 2017-11-30T19:49:10Z
                  conclusion: success
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  name: mighty_readme
                  output:
                    annotations:
                      - annotation_level: warning
                        end_line: 2
                        message: Check your spelling for 'banaas'.
                        path: README.md
                        raw_details: Do you mean 'bananas' or 'banana'?
                        start_line: 2
                        title: Spell Checker
                      - annotation_level: warning
                        end_line: 4
                        message: Check your spelling for 'aples'
                        path: README.md
                        raw_details: Do you mean 'apples' or 'Naples'
                        start_line: 4
                        title: Spell Checker
                    images:
                      - alt: Super bananas
                        image_url: http://example.com/images/42
                    summary: There are 0 failures, 2 warnings, and 1 notices.
                    text: You may have some misspelled words on lines 2 and 4. You also may want to
                      add a section in your README about how to install your
                      app.
                    title: Mighty Readme report
                  started_at: 2017-11-30T19:39:10Z
                  status: completed
              example-of-in-progress-conclusion:
                summary: Response for in_progress conclusion
                value:
                  external_id: "42"
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  name: mighty_readme
                  output:
                    summary: ""
                    text: ""
                    title: Mighty Readme report
                  started_at: 2018-05-04T01:14:52Z
                  status: in_progress
            schema:
              oneOf:
                - additionalProperties: true
                  properties:
                    status:
                      enum:
                        - completed
                  required:
                    - status
                    - conclusion
                - additionalProperties: true
                  properties:
                    status:
                      enum:
                        - queued
                        - in_progress
              properties:
                actions:
                  description: Displays a button on GitHub that can be clicked to alert your app
                    to do additional tasks. For example, a code linting app can
                    display a button that automatically fixes detected errors.
                    The button created in this object is displayed after the
                    check run completes. When a user clicks the button, GitHub
                    sends the [`check_run.requested_action`
                    webhook](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#check_run)
                    to your app. Each action includes a `label`, `identifier`
                    and `description`. A maximum of three actions are accepted.
                    See the [`actions`
                    object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#actions-object)
                    description. To learn more about check runs and requested
                    actions, see "[Check runs and requested
                    actions](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#check-runs-and-requested-actions)."
                    To learn more about check runs and requested actions, see
                    "[Check runs and requested
                    actions](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#check-runs-and-requested-actions)."
                  items:
                    properties:
                      description:
                        description: A short explanation of what this action would do. The maximum size
                          is 40 characters.
                        maxLength: 40
                        type: string
                      identifier:
                        description: A reference for the action on the integrator's system. The maximum
                          size is 20 characters.
                        maxLength: 20
                        type: string
                      label:
                        description: The text to be displayed on a button in the web UI. The maximum
                          size is 20 characters.
                        maxLength: 20
                        type: string
                    required:
                      - label
                      - description
                      - identifier
                    type: object
                  maxItems: 3
                  type: array
                completed_at:
                  description: "The time the check completed. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`."
                  format: date-time
                  type: string
                conclusion:
                  description: >-
                    **Required if you provide `completed_at` or a `status` of
                    `completed`**. The final conclusion of the check. Can be one
                    of `action_required`, `cancelled`, `failure`, `neutral`,
                    `success`, `skipped`, `stale`, or `timed_out`. When the
                    conclusion is `action_required`, additional details should
                    be provided on the site specified by `details_url`.  

                    **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.
                  enum:
                    - action_required
                    - cancelled
                    - failure
                    - neutral
                    - success
                    - skipped
                    - stale
                    - timed_out
                  type: string
                details_url:
                  description: The URL of the integrator's site that has the full details of the
                    check. If the integrator does not provide this, then the
                    homepage of the GitHub app is used.
                  type: string
                external_id:
                  description: A reference for the run on the integrator's system.
                  type: string
                head_sha:
                  description: The SHA of the commit.
                  type: string
                name:
                  description: The name of the check. For example, "code-coverage".
                  type: string
                output:
                  description: Check runs can accept a variety of data in the `output` object,
                    including a `title` and `summary` and can optionally provide
                    descriptive details about the run. See the [`output`
                    object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#output-object)
                    description.
                  properties:
                    annotations:
                      description: Adds information from your analysis to specific lines of code.
                        Annotations are visible on GitHub in the **Checks** and
                        **Files changed** tab of the pull request. The Checks
                        API limits the number of annotations to a maximum of 50
                        per API request. To create more than 50 annotations, you
                        have to make multiple requests to the [Update a check
                        run](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#update-a-check-run)
                        endpoint. Each time you update the check run,
                        annotations are appended to the list of annotations that
                        already exist for the check run. For details about how
                        you can view annotations on GitHub, see "[About status
                        checks](https://help.github.com/articles/about-status-checks#checks)".
                        See the [`annotations`
                        object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#annotations-object)
                        description for details about how to use this parameter.
                      items:
                        properties:
                          annotation_level:
                            description: The level of the annotation. Can be one of `notice`, `warning`, or
                              `failure`.
                            enum:
                              - notice
                              - warning
                              - failure
                            type: string
                          end_column:
                            description: The end column of the annotation. Annotations only support
                              `start_column` and `end_column` on the same line.
                              Omit this parameter if `start_line` and `end_line`
                              have different values.
                            type: integer
                          end_line:
                            description: The end line of the annotation.
                            type: integer
                          message:
                            description: A short description of the feedback for these lines of code. The
                              maximum size is 64 KB.
                            type: string
                          path:
                            description: The path of the file to add an annotation to. For example,
                              `assets/css/main.css`.
                            type: string
                          raw_details:
                            description: Details about this annotation. The maximum size is 64 KB.
                            type: string
                          start_column:
                            description: The start column of the annotation. Annotations only support
                              `start_column` and `end_column` on the same line.
                              Omit this parameter if `start_line` and `end_line`
                              have different values.
                            type: integer
                          start_line:
                            description: The start line of the annotation.
                            type: integer
                          title:
                            description: The title that represents the annotation. The maximum size is 255
                              characters.
                            type: string
                        required:
                          - path
                          - start_line
                          - end_line
                          - annotation_level
                          - message
                        type: object
                      maxItems: 50
                      type: array
                    images:
                      description: Adds images to the output displayed in the GitHub pull request UI.
                        See the [`images`
                        object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#images-object)
                        description for details.
                      items:
                        properties:
                          alt:
                            description: The alternative text for the image.
                            type: string
                          caption:
                            description: A short image description.
                            type: string
                          image_url:
                            description: The full URL of the image.
                            type: string
                        required:
                          - alt
                          - image_url
                        type: object
                      type: array
                    summary:
                      description: The summary of the check run. This parameter supports Markdown.
                      maxLength: 65535
                      type: string
                    text:
                      description: The details of the check run. This parameter supports Markdown.
                      maxLength: 65535
                      type: string
                    title:
                      description: The title of the check run.
                      type: string
                  required:
                    - title
                    - summary
                  type: object
                started_at:
                  description: "The time that the check run began. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`."
                  format: date-time
                  type: string
                status:
                  default: queued
                  description: The current status. Can be one of `queued`, `in_progress`, or
                    `completed`.
                  enum:
                    - queued
                    - in_progress
                    - completed
                  type: string
              required:
                - name
                - head_sha
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                example-of-completed-conclusion:
                  $ref: "#/components/examples/check-run-example-of-completed-conclusion"
              schema:
                $ref: "#/components/schemas/check-run"
          description: Response
      summary: Create a check run
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: runs
  "/repos/{owner}/{repo}/check-runs/{check_run_id}":
    get:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Gets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#get-a-check-run
      operationId: checks/get
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/check_run_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-run"
              schema:
                $ref: "#/components/schemas/check-run"
          description: Response
      summary: Get a check run
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: runs
    patch:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Updates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#update-a-check-run
      operationId: checks/update
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/check_run_id"
      requestBody:
        content:
          application/json:
            example:
              completed_at: 2018-05-04T01:14:52Z
              conclusion: success
              name: mighty_readme
              output:
                annotations:
                  - annotation_level: warning
                    end_line: 2
                    message: Check your spelling for 'banaas'.
                    path: README.md
                    raw_details: Do you mean 'bananas' or 'banana'?
                    start_line: 2
                    title: Spell Checker
                  - annotation_level: warning
                    end_line: 4
                    message: Check your spelling for 'aples'
                    path: README.md
                    raw_details: Do you mean 'apples' or 'Naples'
                    start_line: 4
                    title: Spell Checker
                images:
                  - alt: Super bananas
                    image_url: http://example.com/images/42
                summary: There are 0 failures, 2 warnings, and 1 notices.
                text: You may have some misspelled words on lines 2 and 4. You also may want to
                  add a section in your README about how to install your app.
                title: Mighty Readme report
              started_at: 2018-05-04T01:14:52Z
              status: completed
            schema:
              anyOf:
                - additionalProperties: true
                  properties:
                    status:
                      enum:
                        - completed
                  required:
                    - conclusion
                - additionalProperties: true
                  properties:
                    status:
                      enum:
                        - queued
                        - in_progress
              properties:
                actions:
                  description: Possible further actions the integrator can perform, which a user
                    may trigger. Each action includes a `label`, `identifier`
                    and `description`. A maximum of three actions are accepted.
                    See the [`actions`
                    object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#actions-object)
                    description. To learn more about check runs and requested
                    actions, see "[Check runs and requested
                    actions](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#check-runs-and-requested-actions)."
                  items:
                    properties:
                      description:
                        description: A short explanation of what this action would do. The maximum size
                          is 40 characters.
                        maxLength: 40
                        type: string
                      identifier:
                        description: A reference for the action on the integrator's system. The maximum
                          size is 20 characters.
                        maxLength: 20
                        type: string
                      label:
                        description: The text to be displayed on a button in the web UI. The maximum
                          size is 20 characters.
                        maxLength: 20
                        type: string
                    required:
                      - label
                      - description
                      - identifier
                    type: object
                  maxItems: 3
                  type: array
                completed_at:
                  description: "The time the check completed. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`."
                  format: date-time
                  type: string
                conclusion:
                  description: >-
                    **Required if you provide `completed_at` or a `status` of
                    `completed`**. The final conclusion of the check. Can be one
                    of `action_required`, `cancelled`, `failure`, `neutral`,
                    `success`, `skipped`, `stale`, or `timed_out`.  

                    **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.
                  enum:
                    - action_required
                    - cancelled
                    - failure
                    - neutral
                    - success
                    - skipped
                    - stale
                    - timed_out
                  type: string
                details_url:
                  description: The URL of the integrator's site that has the full details of the
                    check.
                  type: string
                external_id:
                  description: A reference for the run on the integrator's system.
                  type: string
                name:
                  description: The name of the check. For example, "code-coverage".
                  type: string
                output:
                  description: Check runs can accept a variety of data in the `output` object,
                    including a `title` and `summary` and can optionally provide
                    descriptive details about the run. See the [`output`
                    object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#output-object-1)
                    description.
                  properties:
                    annotations:
                      description: Adds information from your analysis to specific lines of code.
                        Annotations are visible in GitHub's pull request UI.
                        Annotations are visible in GitHub's pull request UI. The
                        Checks API limits the number of annotations to a maximum
                        of 50 per API request. To create more than 50
                        annotations, you have to make multiple requests to the
                        [Update a check
                        run](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#update-a-check-run)
                        endpoint. Each time you update the check run,
                        annotations are appended to the list of annotations that
                        already exist for the check run. For details about
                        annotations in the UI, see "[About status
                        checks](https://help.github.com/articles/about-status-checks#checks)".
                        See the [`annotations`
                        object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#annotations-object-1)
                        description for details.
                      items:
                        properties:
                          annotation_level:
                            description: The level of the annotation. Can be one of `notice`, `warning`, or
                              `failure`.
                            enum:
                              - notice
                              - warning
                              - failure
                            type: string
                          end_column:
                            description: The end column of the annotation. Annotations only support
                              `start_column` and `end_column` on the same line.
                              Omit this parameter if `start_line` and `end_line`
                              have different values.
                            type: integer
                          end_line:
                            description: The end line of the annotation.
                            type: integer
                          message:
                            description: A short description of the feedback for these lines of code. The
                              maximum size is 64 KB.
                            type: string
                          path:
                            description: The path of the file to add an annotation to. For example,
                              `assets/css/main.css`.
                            type: string
                          raw_details:
                            description: Details about this annotation. The maximum size is 64 KB.
                            type: string
                          start_column:
                            description: The start column of the annotation. Annotations only support
                              `start_column` and `end_column` on the same line.
                              Omit this parameter if `start_line` and `end_line`
                              have different values.
                            type: integer
                          start_line:
                            description: The start line of the annotation.
                            type: integer
                          title:
                            description: The title that represents the annotation. The maximum size is 255
                              characters.
                            type: string
                        required:
                          - path
                          - start_line
                          - end_line
                          - annotation_level
                          - message
                        type: object
                      maxItems: 50
                      type: array
                    images:
                      description: Adds images to the output displayed in the GitHub pull request UI.
                        See the [`images`
                        object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#annotations-object-1)
                        description for details.
                      items:
                        properties:
                          alt:
                            description: The alternative text for the image.
                            type: string
                          caption:
                            description: A short image description.
                            type: string
                          image_url:
                            description: The full URL of the image.
                            type: string
                        required:
                          - alt
                          - image_url
                        type: object
                      type: array
                    summary:
                      description: Can contain Markdown.
                      maxLength: 65535
                      type: string
                    text:
                      description: Can contain Markdown.
                      maxLength: 65535
                      type: string
                    title:
                      description: "**Required**."
                      type: string
                  required:
                    - summary
                  type: object
                started_at:
                  description: "This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`."
                  format: date-time
                  type: string
                status:
                  description: The current status. Can be one of `queued`, `in_progress`, or
                    `completed`.
                  enum:
                    - queued
                    - in_progress
                    - completed
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-run"
              schema:
                $ref: "#/components/schemas/check-run"
          description: Response
      summary: Update a check run
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: runs
  "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations":
    get:
      description: Lists annotations for a check run using the annotation `id`. GitHub
        Apps must have the `checks:read` permission on a private repository or
        pull access to a public repository to get annotations for a check run.
        OAuth Apps and authenticated users must have the `repo` scope to get
        annotations for a check run in a private repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#list-check-run-annotations
      operationId: checks/list-annotations
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/check_run_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-annotation-items"
              schema:
                items:
                  $ref: "#/components/schemas/check-annotation"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List check run annotations
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: runs
  "/repos/{owner}/{repo}/check-suites":
    post:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array and a `null` value for `head_branch`.


        By default, check suites are automatically created when you create a [check run](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using "[Update repository preferences for check suites](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#update-repository-preferences-for-check-suites)". Your GitHub App must have the `checks:write` permission to create check suites.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#create-a-check-suite
      operationId: checks/create-suite
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
            schema:
              properties:
                head_sha:
                  description: The sha of the head commit.
                  type: string
              required:
                - head_sha
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-suite"
              schema:
                $ref: "#/components/schemas/check-suite"
          description: when the suite already existed
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-suite"
              schema:
                $ref: "#/components/schemas/check-suite"
          description: Response when the suite was created
      summary: Create a check suite
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/preferences":
    patch:
      description: Changes the default automatic flow when creating check suites. By
        default, a check suite is automatically created each time code is pushed
        to a repository. When you disable the automatic creation of check
        suites, you can manually [Create a check
        suite](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#create-a-check-suite).
        You must have admin permissions in the repository to set preferences for
        check suites.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#update-repository-preferences-for-check-suites
      operationId: checks/set-suites-preferences
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              auto_trigger_checks:
                - app_id: 4
                  setting: false
            schema:
              properties:
                auto_trigger_checks:
                  description: Enables or disables automatic creation of CheckSuite events upon
                    pushes to the repository. Enabled by default. See the
                    [`auto_trigger_checks`
                    object](https://docs.github.com/enterprise-server@2.21/rest/reference/checks#auto_trigger_checks-object)
                    description for details.
                  items:
                    properties:
                      app_id:
                        description: The `id` of the GitHub App.
                        type: integer
                      setting:
                        default: true
                        description: Set to `true` to enable automatic creation of CheckSuite events
                          upon pushes to the repository, or `false` to disable
                          them.
                        type: boolean
                    required:
                      - app_id
                      - setting
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-suite-preference"
              schema:
                $ref: "#/components/schemas/check-suite-preference"
          description: Response
      summary: Update repository preferences for check suites
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}":
    get:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array and a `null` value for `head_branch`.


        Gets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#get-a-check-suite
      operationId: checks/get-suite
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/check_suite_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-suite"
              schema:
                $ref: "#/components/schemas/check-suite"
          description: Response
      summary: Get a check suite
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs":
    get:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Lists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#list-check-runs-in-a-check-suite
      operationId: checks/list-for-suite
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/check_suite_id"
        - $ref: "#/components/parameters/check_name"
        - $ref: "#/components/parameters/status"
        - description: Filters check runs by their `completed_at` timestamp. Can be one of
            `latest` (returning the most recent check runs) or `all`.
          in: query
          name: filter
          required: false
          schema:
            default: latest
            enum:
              - latest
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-run-paginated"
              schema:
                properties:
                  check_runs:
                    items:
                      $ref: "#/components/schemas/check-run"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - check_runs
                type: object
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List check runs in a check suite
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: runs
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest":
    post:
      description: >-
        Triggers GitHub to rerequest an existing check suite, without
        pushing new code to a repository. This endpoint will trigger the
        [`check_suite`
        webhook](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#check_suite)
        event with the action `rerequested`. When a check suite is
        `rerequested`, its `status` is reset to `queued` and the `conclusion` is
        cleared.


        To rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#rerequest-a-check-suite
      operationId: checks/rerequest-suite
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/check_suite_id"
      responses:
        "201":
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Response
      summary: Rerequest a check suite
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: suites
  "/repos/{owner}/{repo}/collaborators":
    get:
      description: >-
        For organization-owned repositories, the list of collaborators
        includes outside collaborators, organization members that are direct
        collaborators, organization members with access through team
        memberships, organization members with access through default
        organization permissions, and organization owners.


        Team members will include the members of child teams.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-collaborators
      operationId: repos/list-collaborators
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: >-
            Filter collaborators returned by their affiliation. Can be one
            of:  

            \* `outside`: All outside collaborators of an organization-owned repository.  

            \* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  

            \* `all`: All collaborators the authenticated user can see.
          in: query
          name: affiliation
          required: false
          schema:
            default: all
            enum:
              - outside
              - direct
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/collaborator-items"
              schema:
                items:
                  $ref: "#/components/schemas/collaborator"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List repository collaborators
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: collaborators
  "/repos/{owner}/{repo}/collaborators/{username}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#remove-a-repository-collaborator
      operationId: repos/remove-collaborator
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
      summary: Remove a repository collaborator
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: collaborators
    get:
      description: >-
        For organization-owned repositories, the list of collaborators
        includes outside collaborators, organization members that are direct
        collaborators, organization members with access through team
        memberships, organization members with access through default
        organization permissions, and organization owners.


        Team members will include the members of child teams.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#check-if-a-user-is-a-repository-collaborator
      operationId: repos/check-collaborator
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response if user is a collaborator
        "404":
          description: Not Found if user is not a collaborator
      summary: Check if a user is a repository collaborator
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: collaborators
    put:
      description: >-
        This endpoint triggers
        [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)"
        and "[Dealing with abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)"
        for details.


        For more information the permission levels, see "[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".


        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."


        The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#invitations).


        **Rate limits**


        To prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#add-a-repository-collaborator
      operationId: repos/add-collaborator
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permission:
                  default: push
                  description: >-
                    The permission to grant the collaborator. **Only valid on
                    organization-owned repositories.** Can be one of:  

                    \* `pull` - can pull, but not push to or administer this repository.  

                    \* `push` - can pull and push, but not administer this repository.  

                    \* `admin` - can pull, push and administer this repository.  

                    \* `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.  

                    \* `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
                  enum:
                    - pull
                    - push
                    - admin
                    - maintain
                    - triage
                  type: string
                permissions:
                  example: '"push"'
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                response-when-a-new-invitation-is-created:
                  $ref: "#/components/examples/repository-invitation-response-when-a-new-invitati\
                    on-is-created"
              schema:
                $ref: "#/components/schemas/repository-invitation"
          description: Response when a new invitation is created
        "204":
          description: Response when person is already a collaborator
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add a repository collaborator
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: collaborators
        triggersNotification: true
  "/repos/{owner}/{repo}/collaborators/{username}/permission":
    get:
      description: Checks the repository permission of a collaborator. The possible
        repository permissions are `admin`, `write`, `read`, and `none`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-repository-permissions-for-a-user
      operationId: repos/get-collaborator-permission-level
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-user-has-admin-permissions:
                  $ref: "#/components/examples/repository-collaborator-permission-response-if-use\
                    r-has-admin-permissions"
              schema:
                $ref: "#/components/schemas/repository-collaborator-permission"
          description: if user has admin permissions
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get repository permissions for a user
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: collaborators
  "/repos/{owner}/{repo}/comments":
    get:
      description: >-
        Commit Comments use [these custom media
        types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types).
        You can read more about the use of media types in the API
        [here](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/).


        Comments are ordered by ascending ID.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commit-comments-for-a-repository
      operationId: repos/list-commit-comments-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/commit-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List commit comments for a repository
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
  "/repos/{owner}/{repo}/comments/{comment_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-commit-comment
      operationId: repos/delete-commit-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a commit comment
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: comments
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-commit-comment
      operationId: repos/get-commit-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-comment"
              schema:
                $ref: "#/components/schemas/commit-comment"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a commit comment
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-a-commit-comment
      operationId: repos/update-commit-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            example:
              body: Nice change
            schema:
              properties:
                body:
                  description: The contents of the comment
                  type: string
              required:
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-comment-2"
              schema:
                $ref: "#/components/schemas/commit-comment"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Update a commit comment
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: comments
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions":
    get:
      description: List the reactions to a [commit
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#comments).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-commit-comment
      operationId: reactions/list-for-commit-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to a commit comment.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List reactions for a commit comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: Create a reaction to a [commit
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#comments).
        A response with an HTTP `200` status means that you already added the
        reaction type to this commit comment.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-commit-comment
      operationId: reactions/create-for-commit-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the commit comment.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Reaction exists
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Reaction created
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create reaction for a commit comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      description: >-
        **Note:** You can also specify a repository by `repository_id`
        using the route `DELETE
        /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.


        Delete a reaction to a [commit comment](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#comments).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-a-commit-comment-reaction
      operationId: reactions/delete-for-commit-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
        - $ref: "#/components/parameters/reaction-id"
      responses:
        "204":
          description: Response
      summary: Delete a commit comment reaction
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/commits":
    get:
      description: >-
        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user's account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits
      operationId: repos/list-commits
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: "SHA or branch to start listing commits from. Default: the
            repository’s default branch (usually `master`)."
          in: query
          name: sha
          required: false
          schema:
            type: string
        - description: Only commits containing this file path will be returned.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: GitHub login or email address by which to filter by commit author.
          in: query
          name: author
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/since"
        - description: "Only commits before this date will be returned. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`."
          in: query
          name: until
          required: false
          schema:
            format: date-time
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-items"
              schema:
                items:
                  $ref: "#/components/schemas/commit"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "400":
          $ref: "#/components/responses/bad_request"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internal_error"
      summary: List commits
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head":
    get:
      description: >-
        Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-branches-for-head-commit
      operationId: repos/list-branches-for-head-commit
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/commit_sha"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/branch-short-items"
              schema:
                items:
                  $ref: "#/components/schemas/branch-short"
                type: array
          description: Response
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List branches for HEAD commit
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: groot
            note: >-
              Listing branches or pull requests for a commit in the Commits API is
              currently available for developers to preview. See the [blog
              post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/)
              for more details. To access the new endpoints during the preview
              period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.groot-preview+json

              ```
            required: true
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{commit_sha}/comments":
    get:
      description: Use the `:commit_sha` to specify the commit that will have its
        comments listed.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commit-comments
      operationId: repos/list-comments-for-commit
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/commit_sha"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/commit-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List commit comments
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
    post:
      description: >-
        Create a comment for a commit using its `:commit_sha`.


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-commit-comment
      operationId: repos/create-commit-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/commit_sha"
      requestBody:
        content:
          application/json:
            example:
              body: Great stuff
              line: 1
              path: file1.txt
              position: 4
            schema:
              properties:
                body:
                  description: The contents of the comment.
                  type: string
                line:
                  description: "**Deprecated**. Use **position** parameter instead. Line number in
                    the file to comment on."
                  type: integer
                path:
                  description: Relative path of the file to comment on.
                  type: string
                position:
                  description: Line index in the diff to comment on.
                  type: integer
              required:
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-comment"
              schema:
                $ref: "#/components/schemas/commit-comment"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/comments/1
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a commit comment
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: comments
        triggersNotification: true
  "/repos/{owner}/{repo}/commits/{commit_sha}/pulls":
    get:
      description: Lists the merged pull request that introduced the commit to the
        repository. If the commit is not present in the default branch,
        additionally returns open pull requests associated with the commit. The
        results may include open and closed pull requests. Additional preview
        headers may be required to see certain details for associated pull
        requests, such as whether a pull request is in a draft state. For more
        information about previews that might affect this endpoint, see the
        [List pull
        requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)
        endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-pull-requests-associated-with-a-commit
      operationId: repos/list-pull-requests-associated-with-commit
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/commit_sha"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/pull-request-simple"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List pull requests associated with a commit
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: groot
            note: >-
              Listing branches or pull requests for a commit in the Commits API is
              currently available for developers to preview. See the [blog
              post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/)
              for more details. To access the new endpoints during the preview
              period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.groot-preview+json

              ```
            required: true
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{ref}":
    get:
      description: >-
        Returns the contents of a single commit reference. You must have
        `read` access for the repository to use this endpoint.


        **Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.


        You can pass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.


        To return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.


        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user's account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-commit
      operationId: repos/get-commit
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit"
              schema:
                $ref: "#/components/schemas/commit"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
        "500":
          $ref: "#/components/responses/internal_error"
      summary: Get a commit
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{ref}/check-runs":
    get:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Lists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#list-check-runs-for-a-git-reference
      operationId: checks/list-for-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
        - $ref: "#/components/parameters/check_name"
        - $ref: "#/components/parameters/status"
        - description: Filters check runs by their `completed_at` timestamp. Can be one of
            `latest` (returning the most recent check runs) or `all`.
          in: query
          name: filter
          required: false
          schema:
            default: latest
            enum:
              - latest
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - in: query
          name: app_id
          required: false
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-run-paginated"
              schema:
                properties:
                  check_runs:
                    items:
                      $ref: "#/components/schemas/check-run"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - check_runs
                type: object
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List check runs for a Git reference
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: runs
  "/repos/{owner}/{repo}/commits/{ref}/check-suites":
    get:
      description: >-
        **Note:** The Checks API only looks for pushes in the repository
        where the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array and a `null` value for `head_branch`.


        Lists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/checks#list-check-suites-for-a-git-reference
      operationId: checks/list-suites-for-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
        - description: Filters check suites by GitHub App `id`.
          example: 1
          in: query
          name: app_id
          required: false
          schema:
            type: integer
        - $ref: "#/components/parameters/check_name"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/check-suite-paginated"
              schema:
                properties:
                  check_suites:
                    items:
                      $ref: "#/components/schemas/check-suite"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - check_suites
                type: object
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List check suites for a Git reference
      tags:
        - checks
      x-github:
        category: checks
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: antiope
            note: >-
              The Checks API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.antiope-preview+json

              ```
            required: true
        subcategory: suites
  "/repos/{owner}/{repo}/commits/{ref}/status":
    get:
      description: >-
        Users with pull access in a repository can access a combined view
        of commit statuses for a given ref. The ref can be a SHA, a branch name,
        or a tag name.


        The most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.


        Additionally, a combined `state` is returned. The `state` is one of:


        *   **failure** if any of the contexts report as `error` or `failure`

        *   **pending** if there are no statuses or a context is `pending`

        *   **success** if the latest status for all contexts is `success`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-the-combined-status-for-a-specific-reference
      operationId: repos/get-combined-status-for-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/combined-commit-status"
              schema:
                $ref: "#/components/schemas/combined-commit-status"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get the combined status for a specific reference
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statuses
  "/repos/{owner}/{repo}/commits/{ref}/statuses":
    get:
      description: >-
        Users with pull access in a repository can view commit statuses for
        a given ref. The ref can be a SHA, a branch name, or a tag name.
        Statuses are returned in reverse chronological order. The first status
        in the list will be the latest one.


        This resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commit-statuses-for-a-reference
      operationId: repos/list-commit-statuses-for-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/status-items"
              schema:
                items:
                  $ref: "#/components/schemas/status"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "301":
          $ref: "#/components/responses/moved_permanently"
      summary: List commit statuses for a reference
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statuses
  "/repos/{owner}/{repo}/compare/{basehead}":
    get:
      description: >-
        The `basehead` param is comprised of two parts: `base` and `head`.
        Both must be branch names in `repo`. To compare branches across other
        repositories in the same network as `repo`, use the format
        `<USERNAME>:branch`.


        The response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.


        The response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.


        **Working with large comparisons**


        The response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits) to enumerate all commits in the range.


        For comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long

        to generate. You can typically resolve this error by using a smaller commit range.


        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user's account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#compare-two-commits
      operationId: repos/compare-commits
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: The base branch and head branch to compare. This parameter expects
            the format `{base}...{head}`.
          in: path
          name: basehead
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-comparison"
              schema:
                $ref: "#/components/schemas/commit-comparison"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_error"
      summary: Compare two commits
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: commits
  "/repos/{owner}/{repo}/content_references/{content_reference_id}/attachments":
    post:
      description: >-
        Creates an attachment under a content reference URL in the body or
        comment of an issue or pull request. Use the `id` and `repository`
        `full_name` of the content reference from the [`content_reference`
        event](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#content_reference)
        to create an attachment.


        The app must create a content attachment within six hours of the content reference URL being posted. See "[Using content attachments](https://docs.github.com/enterprise-server@2.21/apps/using-content-attachments/)" for details about content attachments.


        You must use an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#create-a-content-attachment
      operationId: apps/create-content-attachment
      parameters:
        - description: The owner of the repository. Determined from the `repository`
            `full_name` of the `content_reference` event.
          in: path
          name: owner
          required: true
          schema:
            type: string
        - description: The name of the repository. Determined from the `repository`
            `full_name` of the `content_reference` event.
          in: path
          name: repo
          required: true
          schema:
            type: string
        - description: The `id` of the `content_reference` event.
          in: path
          name: content_reference_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The body of the attachment
                  example: Body of the attachment
                  maxLength: 262144
                  type: string
                title:
                  description: The title of the attachment
                  example: Title of the attachment
                  maxLength: 1024
                  type: string
              required:
                - title
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/content-reference-attachment"
              schema:
                $ref: "#/components/schemas/content-reference-attachment"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a content attachment
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: corsair
            note: >-
              To access the Content Attachments API during the preview period, you must
              provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.corsair-preview+json

              ```
            required: true
        subcategory: installations
  "/repos/{owner}/{repo}/contents/{path}":
    delete:
      description: >-
        Deletes a file in a repository.


        You can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.


        The `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.


        You must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-file
      operationId: repos/delete-file
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: path parameter
          in: path
          name: path
          required: true
          schema:
            type: string
          x-multi-segment: true
      requestBody:
        content:
          application/json:
            example:
              committer:
                email: octocat@github.com
                name: Monalisa Octocat
              message: my commit message
              sha: 329688480d39049927147c162b9d2deaf885005f
            schema:
              properties:
                author:
                  description: object containing information about the author.
                  properties:
                    email:
                      description: The email of the author (or committer) of the commit
                      type: string
                    name:
                      description: The name of the author (or committer) of the commit
                      type: string
                  type: object
                branch:
                  description: "The branch name. Default: the repository’s default branch (usually
                    `master`)"
                  type: string
                committer:
                  description: object containing information about the committer.
                  properties:
                    email:
                      description: The email of the author (or committer) of the commit
                      type: string
                    name:
                      description: The name of the author (or committer) of the commit
                      type: string
                  type: object
                message:
                  description: The commit message.
                  type: string
                sha:
                  description: The blob SHA of the file being replaced.
                  type: string
              required:
                - message
                - sha
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/file-commit"
              schema:
                $ref: "#/components/schemas/file-commit"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Delete a file
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: contents
    get:
      description: >-
        Gets the contents of a file or directory in a repository. Specify
        the file path or directory in `:path`. If you omit

        `:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. 


        Files and symlinks support [a custom media type](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for

        retrieving the raw content or rendered HTML (when supported). All content types support [a custom media

        type](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent

        object format.


        **Note**:

        *   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@2.21/rest/reference/git#trees).

        *   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees

        API](https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-tree).

        *   This API supports files up to 1 megabyte in size.


        #### If the content is a directory

        The response will be an array of objects, one object for each item in the directory.

        When listing the contents of a directory, submodules have their "type" specified as "file". Logically, the value

        _should_ be "submodule". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).

        In the next major version of the API, the type will be returned as "submodule".


        #### If the content is a symlink 

        If the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the

        API responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object 

        describing the symlink itself.


        #### If the content is a submodule

        The `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific

        commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out

        the submodule at that specific commit.


        If the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links["git"]`) and the

        github.com URLs (`html_url` and `_links["html"]`) will have null values.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-repository-content
      operationId: repos/get-content
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: path parameter
          in: path
          name: path
          required: true
          schema:
            type: string
          x-multi-segment: true
        - description: "The name of the commit/branch/tag. Default: the repository’s
            default branch (usually `master`)"
          in: query
          name: ref
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-content-is-a-directory:
                  $ref: "#/components/examples/content-file-response-if-content-is-a-directory"
                response-if-content-is-a-file:
                  $ref: "#/components/examples/content-file-response-if-content-is-a-file"
                response-if-content-is-a-submodule:
                  $ref: "#/components/examples/content-file-response-if-content-is-a-submodule"
                response-if-content-is-a-symlink:
                  $ref: "#/components/examples/content-file-response-if-content-is-a-symlink"
              schema:
                oneOf:
                  - $ref: "#/components/schemas/content-directory"
                  - $ref: "#/components/schemas/content-file"
                  - $ref: "#/components/schemas/content-symlink"
                  - $ref: "#/components/schemas/content-submodule"
            application/vnd.github.v3.object:
              schema:
                $ref: "#/components/schemas/content-tree"
          description: Response
        "302":
          $ref: "#/components/responses/found"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get repository content
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: contents
    put:
      description: Creates a new file or replaces an existing file in a repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-or-update-file-contents
      operationId: repos/create-or-update-file-contents
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: path parameter
          in: path
          name: path
          required: true
          schema:
            type: string
          x-multi-segment: true
      requestBody:
        content:
          application/json:
            examples:
              example-for-creating-a-file:
                summary: Example for creating a file
                value:
                  committer:
                    email: octocat@github.com
                    name: Monalisa Octocat
                  content: bXkgbmV3IGZpbGUgY29udGVudHM=
                  message: my commit message
              example-for-updating-a-file:
                summary: Example for updating a file
                value:
                  committer:
                    email: octocat@github.com
                    name: Monalisa Octocat
                  content: bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz
                  message: a new commit message
                  sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
            schema:
              properties:
                author:
                  description: "The author of the file. Default: The `committer` or the
                    authenticated user if you omit `committer`."
                  properties:
                    date:
                      example: '"2013-01-15T17:13:22+05:00"'
                      type: string
                    email:
                      description: The email of the author or committer of the commit. You'll receive
                        a `422` status code if `email` is omitted.
                      type: string
                    name:
                      description: The name of the author or committer of the commit. You'll receive a
                        `422` status code if `name` is omitted.
                      type: string
                  required:
                    - name
                    - email
                  type: object
                branch:
                  description: "The branch name. Default: the repository’s default branch (usually
                    `master`)"
                  type: string
                committer:
                  description: "The person that committed the file. Default: the authenticated
                    user."
                  properties:
                    date:
                      example: '"2013-01-05T13:13:22+05:00"'
                      type: string
                    email:
                      description: The email of the author or committer of the commit. You'll receive
                        a `422` status code if `email` is omitted.
                      type: string
                    name:
                      description: The name of the author or committer of the commit. You'll receive a
                        `422` status code if `name` is omitted.
                      type: string
                  required:
                    - name
                    - email
                  type: object
                content:
                  description: The new file content, using Base64 encoding.
                  type: string
                message:
                  description: The commit message.
                  type: string
                sha:
                  description: "**Required if you are updating a file**. The blob SHA of the file
                    being replaced."
                  type: string
              required:
                - message
                - content
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                example-for-updating-a-file:
                  $ref: "#/components/examples/file-commit-example-for-updating-a-file"
              schema:
                $ref: "#/components/schemas/file-commit"
          description: Response
        "201":
          content:
            application/json:
              examples:
                example-for-creating-a-file:
                  $ref: "#/components/examples/file-commit-example-for-creating-a-file"
              schema:
                $ref: "#/components/schemas/file-commit"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create or update file contents
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: contents
  "/repos/{owner}/{repo}/contributors":
    get:
      description: >-
        Lists contributors to the specified repository and sorts them by
        the number of commits per contributor in descending order. This endpoint
        may return information that is a few hours old because the GitHub REST
        API v3 caches contributor data to improve performance.


        GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-contributors
      operationId: repos/list-contributors
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: Set to `1` or `true` to include anonymous contributors in results.
          in: query
          name: anon
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-repository-contains-content:
                  $ref: "#/components/examples/contributor-items-response-if-repository-contains-\
                    content"
              schema:
                items:
                  $ref: "#/components/schemas/contributor"
                type: array
          description: if repository contains content
          headers:
            Link:
              $ref: "#/components/headers/link"
        "204":
          description: Response if repository is empty
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List repository contributors
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/deployments":
    get:
      description: "Simple filtering of deployments is available via query parameters:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-deployments
      operationId: repos/list-deployments
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: The SHA recorded at creation time.
          in: query
          name: sha
          required: false
          schema:
            default: none
            type: string
        - description: The name of the ref. This can be a branch, tag, or SHA.
          in: query
          name: ref
          required: false
          schema:
            default: none
            type: string
        - description: The name of the task for the deployment (e.g., `deploy` or
            `deploy:migrations`).
          in: query
          name: task
          required: false
          schema:
            default: none
            type: string
        - description: The name of the environment that was deployed to (e.g., `staging`
            or `production`).
          in: query
          name: environment
          required: false
          schema:
            default: none
            nullable: true
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deployment-items"
              schema:
                items:
                  $ref: "#/components/schemas/deployment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List deployments
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: ant-man
            note: >-
              The `inactive` state and the `log_url`, `environment_url`, and
              `auto_inactive` parameters are currently available for developers
              to preview. Please see the [blog
              post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements)
              for full details.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.ant-man-preview+json

              ```
            required: false
        subcategory: deployments
    post:
      description: >-
        Deployments offer a few configurable parameters with certain
        defaults.


        The `ref` parameter can be any named branch, tag, or SHA. At GitHub Enterprise Server we often deploy branches and verify them

        before we merge a pull request.


        The `environment` parameter allows deployments to be issued to different runtime environments. Teams often have

        multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter

        makes it easier to track which environments have requested deployments. The default environment is `production`.


        The `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If

        the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,

        the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will

        return a failure response.


        By default, [commit statuses](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#statuses) for every submitted context must be in a `success`

        state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to

        specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do

        not require any contexts or create any commit statuses, the deployment will always succeed.


        The `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text

        field that will be passed on when a deployment event is dispatched.


        The `task` parameter is used by the deployment system to allow different execution paths. In the web world this might

        be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an

        application with debugging enabled.


        Users with `repo` or `repo_deployment` scopes can create a deployment for a given ref.


        #### Merged branch response

        You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating

        a deployment. This auto-merge happens when:

        *   Auto-merge option is enabled in the repository

        *   Topic branch does not include the latest changes on the base branch, which is `master` in the response example

        *   There are no merge conflicts


        If there are no new commits in the base branch, a new request to create a deployment should give a successful

        response.


        #### Merge conflict response

        This error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't

        be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.


        #### Failed commit status checks

        This error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`

        status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-deployment
      operationId: repos/create-deployment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            examples:
              advanced-example:
                summary: Advanced example
                value:
                  auto_merge: false
                  description: Deploy request from hubot
                  payload: '{ "deploy": "migrate" }'
                  ref: topic-branch
                  required_contexts:
                    - ci/janky
                    - security/brakeman
              simple-example:
                summary: Simple example
                value:
                  description: Deploy request from hubot
                  payload: '{ "deploy": "migrate" }'
                  ref: topic-branch
            schema:
              properties:
                auto_merge:
                  default: true
                  description: Attempts to automatically merge the default branch into the
                    requested ref, if it's behind the default branch.
                  type: boolean
                description:
                  default: ""
                  description: Short description of the deployment.
                  nullable: true
                  type: string
                environment:
                  default: production
                  description: Name for the target deployment environment (e.g., `production`,
                    `staging`, `qa`).
                  type: string
                payload:
                  oneOf:
                    - additionalProperties: true
                      type: object
                    - default: ""
                      description: JSON payload with extra information about the deployment.
                      type: string
                production_environment:
                  description: >-
                    Specifies if the given environment is one that end-users directly
                    interact with. Default: `true` when `environment` is
                    `production` and `false` otherwise.  

                    **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#enhanced-deployments) custom media type.
                  type: boolean
                ref:
                  description: The ref to deploy. This can be a branch, tag, or SHA.
                  type: string
                required_contexts:
                  description: The
                    [status](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#statuses)
                    contexts to verify against commit status checks. If you omit
                    this parameter, GitHub verifies all unique contexts before
                    creating a deployment. To bypass checking entirely, pass an
                    empty array. Defaults to all unique contexts.
                  items:
                    type: string
                  type: array
                task:
                  default: deploy
                  description: Specifies a task to execute (e.g., `deploy` or
                    `deploy:migrations`).
                  type: string
                transient_environment:
                  default: false
                  description: >-
                    Specifies if the given environment is specific to the deployment
                    and will no longer exist at some point in the future.
                    Default: `false`  

                    **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#enhanced-deployments) custom media type.
                  type: boolean
              required:
                - ref
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                simple-example:
                  $ref: "#/components/examples/deployment-simple-example"
              schema:
                $ref: "#/components/schemas/deployment"
          description: Response
        "202":
          content:
            application/json:
              examples:
                merged-branch-response:
                  value:
                    message: Auto-merged master into topic-branch on deployment.
              schema:
                properties:
                  message:
                    type: string
                type: object
          description: Merged branch response
        "409":
          description: Conflict when there is a merge conflict or the commit's status
            checks failed
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a deployment
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: ant-man
            note: >-
              The `inactive` state and the `log_url`, `environment_url`, and
              `auto_inactive` parameters are currently available for developers
              to preview. Please see the [blog
              post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements)
              for full details.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.ant-man-preview+json

              ```
            required: false
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}":
    delete:
      description: >-
        To ensure there can always be an active deployment, you can only
        delete an _inactive_ deployment. Anyone with `repo` or `repo_deployment`
        scopes can delete an inactive deployment.


        To set a deployment as inactive, you must:


        *   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.

        *   Mark the active deployment as inactive by adding any non-successful deployment status.


        For more information, see "[Create a deployment](https://docs.github.com/enterprise-server@2.21/rest/reference/repos/#create-a-deployment)" and "[Create a deployment status](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-deployment-status)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-deployment
      operationId: repos/delete-deployment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/deployment_id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Delete a deployment
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: deployments
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-deployment
      operationId: repos/get-deployment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/deployment_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deployment"
              schema:
                $ref: "#/components/schemas/deployment"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a deployment
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
          - name: ant-man
            note: >-
              The `inactive` state and the `log_url`, `environment_url`, and
              `auto_inactive` parameters are currently available for developers
              to preview. Please see the [blog
              post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements)
              for full details.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.ant-man-preview+json

              ```
            required: false
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses":
    get:
      description: "Users with pull access can view deployment statuses for a deployment:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-deployment-statuses
      operationId: repos/list-deployment-statuses
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/deployment_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deployment-status-items"
              schema:
                items:
                  $ref: "#/components/schemas/deployment-status"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List deployment statuses
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: flash
            note: >-
              New features in the Deployments API on GitHub are currently available
              during a public beta. Please see the [blog
              post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/)
              for full details.


              To access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.flash-preview+json

              ```
            required: false
          - name: ant-man
            note: >-
              The `inactive` state and the `log_url`, `environment_url`, and
              `auto_inactive` parameters are currently available for developers
              to preview. Please see the [blog
              post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements)
              for full details.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.ant-man-preview+json

              ```
            required: false
        subcategory: deployments
    post:
      description: >-
        Users with `push` access can create deployment statuses for a given
        deployment.


        GitHub Apps require `read & write` access to "Deployments" and `read-only` access to "Repo contents" (for private repos). OAuth Apps require the `repo_deployment` scope.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-deployment-status
      operationId: repos/create-deployment-status
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/deployment_id"
      requestBody:
        content:
          application/json:
            example:
              description: Deployment finished successfully.
              environment: production
              log_url: https://example.com/deployment/42/output
              state: success
            schema:
              properties:
                auto_inactive:
                  description: >-
                    Adds a new `inactive` status to all prior non-transient,
                    non-production environment deployments with the same
                    repository and `environment` name as the created status's
                    deployment. An `inactive` status is only added to
                    deployments that had a `success` state. Default: `true`  

                    **Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#deployment-statuses) custom media type.  

                    **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#enhanced-deployments) custom media type.
                  type: boolean
                description:
                  default: ""
                  description: A short description of the status. The maximum description length
                    is 140 characters.
                  type: string
                environment:
                  description: Name for the target deployment environment, which can be changed
                    when setting a deploy status. For example, `production`,
                    `staging`, or `qa`. **Note:** This parameter requires you to
                    use the
                    [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#deployment-statuses)
                    custom media type.
                  enum:
                    - production
                    - staging
                    - qa
                  type: string
                environment_url:
                  default: ""
                  description: >-
                    Sets the URL for accessing your environment. Default: `""`  

                    **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#enhanced-deployments) custom media type.
                  type: string
                log_url:
                  default: ""
                  description: >-
                    The full URL of the deployment's output. This parameter replaces
                    `target_url`. We will continue to accept `target_url` to
                    support legacy uses, but we recommend replacing `target_url`
                    with `log_url`. Setting `log_url` will automatically set
                    `target_url` to the same value. Default: `""`  

                    **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#enhanced-deployments) custom media type.
                  type: string
                state:
                  description: The state of the status. Can be one of `error`, `failure`,
                    `inactive`, `in_progress`, `queued` `pending`, or `success`.
                    **Note:** To use the `inactive` state, you must provide the
                    [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#enhanced-deployments)
                    custom media type. To use the `in_progress` and `queued`
                    states, you must provide the
                    [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.21/rest/overview/api-previews#deployment-statuses)
                    custom media type. When you set a transient deployment to
                    `inactive`, the deployment will be shown as `destroyed` in
                    GitHub.
                  enum:
                    - error
                    - failure
                    - inactive
                    - in_progress
                    - queued
                    - pending
                    - success
                  type: string
                target_url:
                  default: ""
                  description: The target URL to associate with this status. This URL should
                    contain output to keep the user updated while the task is
                    running or serve as historical information for what happened
                    in the deployment. **Note:** It's recommended to use the
                    `log_url` parameter, which replaces `target_url`.
                  type: string
              required:
                - state
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deployment-status"
              schema:
                $ref: "#/components/schemas/deployment-status"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
              schema:
                type: string
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a deployment status
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: flash
            note: >-
              New features in the Deployments API on GitHub are currently available
              during a public beta. Please see the [blog
              post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/)
              for full details.


              To access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.flash-preview+json

              ```
            required: false
          - name: ant-man
            note: >-
              The `inactive` state and the `log_url`, `environment_url`, and
              `auto_inactive` parameters are currently available for developers
              to preview. Please see the [blog
              post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements)
              for full details.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.ant-man-preview+json

              ```
            required: false
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}":
    get:
      description: "Users with pull access can view a deployment status for a deployment:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-deployment-status
      operationId: repos/get-deployment-status
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/deployment_id"
        - in: path
          name: status_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deployment-status"
              schema:
                $ref: "#/components/schemas/deployment-status"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get a deployment status
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
          - name: flash
            note: >-
              New features in the Deployments API on GitHub are currently available
              during a public beta. Please see the [blog
              post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/)
              for full details.


              To access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.flash-preview+json

              ```
            required: false
          - name: ant-man
            note: >-
              The `inactive` state and the `log_url`, `environment_url`, and
              `auto_inactive` parameters are currently available for developers
              to preview. Please see the [blog
              post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements)
              for full details.


              To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.ant-man-preview+json

              ```
            required: false
        subcategory: deployments
  "/repos/{owner}/{repo}/dispatches":
    post:
      description: >-
        You can use this endpoint to trigger a webhook event called
        `repository_dispatch` when you want activity that happens outside of
        GitHub Enterprise Server to trigger a GitHub Actions workflow or GitHub
        App webhook. You must configure your GitHub Actions workflow or GitHub
        App to run when the `repository_dispatch` event occurs. For an example
        `repository_dispatch` webhook payload, see
        "[RepositoryDispatchEvent](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#repository_dispatch)."


        The `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.


        This endpoint requires write access to the repository by providing either:

          - Personal access tokens with `repo` scope. For more information, see "[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line)" in the GitHub Help documentation.
          - GitHub Apps with both `metadata:read` and `contents:read&write` permissions.

        This input example shows how you can use the `client_payload` as a test to debug your workflow.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-dispatch-event
      operationId: repos/create-dispatch-event
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              client_payload:
                integration: true
                unit: false
              event_type: on-demand-test
            schema:
              properties:
                client_payload:
                  additionalProperties: true
                  description: JSON payload with extra information about the webhook event that
                    your action or worklow may use.
                  maxProperties: 10
                  type: object
                event_type:
                  description: A custom webhook event name.
                  maxLength: 100
                  minLength: 1
                  type: string
              required:
                - event_type
              type: object
      responses:
        "204":
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a repository dispatch event
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/events":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-repository-events
      operationId: activity/list-repo-events
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
      summary: List repository events
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  "/repos/{owner}/{repo}/forks":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-forks
      operationId: repos/list-forks
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: The sort order. Can be either `newest`, `oldest`, or `stargazers`.
          in: query
          name: sort
          required: false
          schema:
            default: newest
            enum:
              - newest
              - oldest
              - stargazers
              - watchers
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "400":
          $ref: "#/components/responses/bad_request"
      summary: List forks
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: forks
    post:
      description: >-
        Create a fork for the authenticated user.


        **Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Enterprise Server Support](https://support.github.com/contact) or [GitHub Enterprise Server Premium Support](https://premium.githubsupport.com).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-fork
      operationId: repos/create-fork
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              properties:
                organization:
                  description: Optional parameter to specify the organization name if forking into
                    an organization.
                  type: string
              type: object
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/full-repository"
              schema:
                $ref: "#/components/schemas/full-repository"
          description: Response
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a fork
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: forks
  "/repos/{owner}/{repo}/git/blobs":
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-blob
      operationId: git/create-blob
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              content: Content of the blob
              encoding: utf-8
            schema:
              properties:
                content:
                  description: The new blob's content.
                  type: string
                encoding:
                  default: utf-8
                  description: The encoding used for `content`. Currently, `"utf-8"` and
                    `"base64"` are supported.
                  type: string
              required:
                - content
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/short-blob"
              schema:
                $ref: "#/components/schemas/short-blob"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a blob
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: blobs
  "/repos/{owner}/{repo}/git/blobs/{file_sha}":
    get:
      description: |-
        The `content` in the response will always be Base64 encoded.

        _Note_: This API supports blobs up to 100 megabytes in size.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-blob
      operationId: git/get-blob
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: file_sha
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/blob"
              schema:
                $ref: "#/components/schemas/blob"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get a blob
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: blobs
  "/repos/{owner}/{repo}/git/commits":
    post:
      description: >-
        Creates a new Git [commit
        object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).


        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user's account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-commit
      operationId: git/create-commit
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              author:
                date: 2008-07-09T16:13:30+12:00
                email: octocat@github.com
                name: Mona Octocat
              message: my commit message
              parents:
                - 7d1b31e74ee336d15cbd21741bc88a537ed063a0
              signature: |
                -----BEGIN PGP SIGNATURE-----

                iQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv
                7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI
                DkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n
                2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA
                OQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k
                nrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU
                +NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB
                jHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ
                3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+
                UpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr
                X11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp
                eSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=
                =5Io4
                -----END PGP SIGNATURE-----
              tree: 827efc6d56897b048c772eb4087f854f46256132
            schema:
              properties:
                author:
                  description: Information about the author of the commit. By default, the
                    `author` will be the authenticated user and the current
                    date. See the `author` and `committer` object below for
                    details.
                  properties:
                    date:
                      description: "Indicates when this commit was authored (or committed). This is a
                        timestamp in [ISO
                        8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                        `YYYY-MM-DDTHH:MM:SSZ`."
                      format: date-time
                      type: string
                    email:
                      description: The email of the author (or committer) of the commit
                      type: string
                    name:
                      description: The name of the author (or committer) of the commit
                      type: string
                  required:
                    - name
                    - email
                  type: object
                committer:
                  description: Information about the person who is making the commit. By default,
                    `committer` will use the information set in `author`. See
                    the `author` and `committer` object below for details.
                  properties:
                    date:
                      description: "Indicates when this commit was authored (or committed). This is a
                        timestamp in [ISO
                        8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                        `YYYY-MM-DDTHH:MM:SSZ`."
                      format: date-time
                      type: string
                    email:
                      description: The email of the author (or committer) of the commit
                      type: string
                    name:
                      description: The name of the author (or committer) of the commit
                      type: string
                  type: object
                message:
                  description: The commit message
                  type: string
                parents:
                  description: The SHAs of the commits that were the parents of this commit. If
                    omitted or empty, the commit will be written as a root
                    commit. For a single parent, an array of one SHA should be
                    provided; for a merge commit, an array of more than one
                    should be provided.
                  items:
                    type: string
                  type: array
                signature:
                  description: The [PGP
                    signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy)
                    of the commit. GitHub adds the signature to the `gpgsig`
                    header of the created commit. For a commit signature to be
                    verifiable by Git or GitHub, it must be an ASCII-armored
                    detached PGP signature over the string commit as it would be
                    written to the object database. To pass a `signature`
                    parameter, you need to first manually create a valid PGP
                    signature, which can be complicated. You may find it easier
                    to [use the command
                    line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work)
                    to create signed commits.
                  type: string
                tree:
                  description: The SHA of the tree object this commit points to
                  type: string
              required:
                - message
                - tree
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-commit"
              schema:
                $ref: "#/components/schemas/git-commit"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              schema:
                type: string
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a commit
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: commits
  "/repos/{owner}/{repo}/git/commits/{commit_sha}":
    get:
      description: >-
        Gets a Git [commit
        object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).


        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user's account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-commit
      operationId: git/get-commit
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/commit_sha"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-commit-2"
              schema:
                $ref: "#/components/schemas/git-commit"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a commit
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: commits
  "/repos/{owner}/{repo}/git/matching-refs/{ref}":
    get:
      description: >-
        Returns an array of references from your Git database that match
        the supplied name. The `:ref` in the URL must be formatted as
        `heads/<branch name>` for branches and `tags/<tag name>` for tags. If
        the `:ref` doesn't exist in the repository, but existing refs start with
        `:ref`, they will be returned as an array.


        When you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.


        **Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".


        If you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#list-matching-references
      operationId: git/list-matching-refs
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-ref-items"
              schema:
                items:
                  $ref: "#/components/schemas/git-ref"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List matching references
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: refs
  "/repos/{owner}/{repo}/git/ref/{ref}":
    get:
      description: >-
        Returns a single reference from your Git database. The `:ref` in
        the URL must be formatted as `heads/<branch name>` for branches and
        `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref,
        a `404` is returned.


        **Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-reference
      operationId: git/get-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-ref"
              schema:
                $ref: "#/components/schemas/git-ref"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a reference
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: refs
  "/repos/{owner}/{repo}/git/refs":
    post:
      description: Creates a reference for your repository. You are unable to create
        new references for empty repositories, even if the commit SHA-1 hash
        used exists. Empty repositories are repositories without branches.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-reference
      operationId: git/create-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              ref: refs/heads/featureA
              sha: aa218f56b14c9653891f9e74264a383fa43fefbd
            schema:
              properties:
                key:
                  example: '"refs/heads/newbranch"'
                  type: string
                ref:
                  description: "The name of the fully qualified reference (ie:
                    `refs/heads/master`). If it doesn't start with 'refs' and
                    have at least two slashes, it will be rejected."
                  type: string
                sha:
                  description: The SHA1 value for this reference.
                  type: string
              required:
                - ref
                - sha
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-ref"
              schema:
                $ref: "#/components/schemas/git-ref"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
              schema:
                type: string
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a reference
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: refs
  "/repos/{owner}/{repo}/git/refs/{ref}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#delete-a-reference
      operationId: git/delete-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
      responses:
        "204":
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Delete a reference
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: refs
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#update-a-reference
      operationId: git/update-ref
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: ref parameter
          in: path
          name: ref
          required: true
          schema:
            type: string
          x-multi-segment: true
      requestBody:
        content:
          application/json:
            example:
              force: true
              sha: aa218f56b14c9653891f9e74264a383fa43fefbd
            schema:
              properties:
                force:
                  default: false
                  description: Indicates whether to force the update or to make sure the update is
                    a fast-forward update. Leaving this out or setting it to
                    `false` will make sure you're not overwriting work.
                  type: boolean
                sha:
                  description: The SHA1 value to set this reference to
                  type: string
              required:
                - sha
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-ref"
              schema:
                $ref: "#/components/schemas/git-ref"
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update a reference
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: refs
  "/repos/{owner}/{repo}/git/tags":
    post:
      description: >-
        Note that creating a tag object does not create the reference that
        makes a tag in Git. If you want to create an annotated tag in Git, you
        have to do this call to create the tag object, and then
        [create](https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-reference)
        the `refs/tags/[tag]` reference. If you want to create a lightweight
        tag, you only have to
        [create](https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-reference)
        the tag reference - this call would be unnecessary.


        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user's account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-tag-object
      operationId: git/create-tag
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              message: initial version
              object: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
              tag: v0.0.1
              tagger:
                date: 2011-06-17T14:53:35-07:00
                email: octocat@github.com
                name: Monalisa Octocat
              type: commit
            schema:
              properties:
                message:
                  description: The tag message.
                  type: string
                object:
                  description: The SHA of the git object this is tagging.
                  type: string
                tag:
                  description: The tag's name. This is typically a version (e.g., "v0.0.1").
                  type: string
                tagger:
                  description: An object with information about the individual creating the tag.
                  properties:
                    date:
                      description: "When this object was tagged. This is a timestamp in [ISO
                        8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                        `YYYY-MM-DDTHH:MM:SSZ`."
                      format: date-time
                      type: string
                    email:
                      description: The email of the author of the tag
                      type: string
                    name:
                      description: The name of the author of the tag
                      type: string
                  required:
                    - name
                    - email
                  type: object
                type:
                  description: The type of the object we're tagging. Normally this is a `commit`
                    but it can also be a `tree` or a `blob`.
                  enum:
                    - commit
                    - tree
                    - blob
                  type: string
              required:
                - tag
                - message
                - object
                - type
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-tag"
              schema:
                $ref: "#/components/schemas/git-tag"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
              schema:
                type: string
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a tag object
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: tags
  "/repos/{owner}/{repo}/git/tags/{tag_sha}":
    get:
      description: >-
        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user's account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-tag
      operationId: git/get-tag
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: tag_sha
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-tag"
              schema:
                $ref: "#/components/schemas/git-tag"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a tag
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: tags
  "/repos/{owner}/{repo}/git/trees":
    post:
      description: >-
        The tree creation API accepts nested entries. If you specify both a
        tree and a nested path modifying that tree, this endpoint will overwrite
        the contents of the tree with the new path contents, and create a new
        tree structure.


        If you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see "[Create a commit](https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-commit)" and "[Update a reference](https://docs.github.com/enterprise-server@2.21/rest/reference/git#update-a-reference)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#create-a-tree
      operationId: git/create-tree
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              base_tree: 9fb037999f264ba9a7fc6274d15fa3ae2ab98312
              tree:
                - mode: "100644"
                  path: file.rb
                  sha: 44b4fc6d56897b048c772eb4087f854f46256132
                  type: blob
            schema:
              properties:
                base_tree:
                  description: >
                    The SHA1 of an existing Git tree object which will be used as the
                    base for the new tree. If provided, a new Git tree object
                    will be created from entries in the Git tree object pointed
                    to by `base_tree` and entries defined in the `tree`
                    parameter. Entries defined in the `tree` parameter will
                    overwrite items from `base_tree` with the same `path`. If
                    you're creating new changes on a branch, then normally you'd
                    set `base_tree` to the SHA1 of the Git tree object of the
                    current latest commit on the branch you're working on.

                    If not provided, GitHub will create a new Git tree object from only the entries defined in the `tree` parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the `tree` parameter will be listed as deleted by the new commit.
                  type: string
                tree:
                  description: Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree
                    structure.
                  items:
                    properties:
                      content:
                        description: >-
                          The content you want this file to have. GitHub will write this blob
                          out and use that SHA for this entry. Use either this,
                          or `tree.sha`.  
                            
                          **Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.
                        type: string
                      mode:
                        description: The file mode; one of `100644` for file (blob), `100755` for
                          executable (blob), `040000` for subdirectory (tree),
                          `160000` for submodule (commit), or `120000` for a
                          blob that specifies the path of a symlink.
                        enum:
                          - "100644"
                          - "100755"
                          - "040000"
                          - "160000"
                          - "120000"
                        type: string
                      path:
                        description: The file referenced in the tree.
                        type: string
                      sha:
                        description: >-
                          The SHA1 checksum ID of the object in the tree. Also called
                          `tree.sha`. If the value is `null` then the file will
                          be deleted.  
                            
                          **Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.
                        nullable: true
                        type: string
                      type:
                        description: Either `blob`, `tree`, or `commit`.
                        enum:
                          - blob
                          - tree
                          - commit
                        type: string
                    type: object
                  type: array
              required:
                - tree
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/git-tree"
              schema:
                $ref: "#/components/schemas/git-tree"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a tree
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: trees
  "/repos/{owner}/{repo}/git/trees/{tree_sha}":
    get:
      description: >-
        Returns a single tree using the SHA1 value for that tree.


        If `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-tree
      operationId: git/get-tree
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: tree_sha
          required: true
          schema:
            type: string
          x-multi-segment: true
        - description: 'Setting this parameter to any value returns the objects or
            subtrees referenced by the tree specified in `:tree_sha`. For
            example, setting `recursive` to any of the following will enable
            returning objects or subtrees: `0`, `1`, `"true"`, and `"false"`.
            Omit this parameter to prevent recursively returning objects or
            subtrees.'
          in: query
          name: recursive
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/git-tree-default-response"
                response-recursively-retrieving-a-tree:
                  $ref: "#/components/examples/git-tree-response-recursively-retrieving-a-tree"
              schema:
                $ref: "#/components/schemas/git-tree"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get a tree
      tags:
        - git
      x-github:
        category: git
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: trees
  "/repos/{owner}/{repo}/hooks":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-webhooks
      operationId: repos/list-webhooks
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/hook-items"
              schema:
                items:
                  $ref: "#/components/schemas/hook"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List repository webhooks
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
    post:
      description: >-
        Repositories can have multiple webhooks installed. Each webhook
        should have a unique `config`. Multiple webhooks can

        share the same `config` as long as those webhooks do not have any `events` that overlap.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-webhook
      operationId: repos/create-webhook
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              active: true
              config:
                content_type: json
                insecure_ssl: "0"
                url: https://example.com/webhook
              events:
                - push
                - pull_request
              name: web
            schema:
              additionalProperties: false
              nullable: true
              properties:
                active:
                  default: true
                  description: Determines if notifications are sent when the webhook is triggered.
                    Set to `true` to send notifications.
                  type: boolean
                config:
                  description: Key/value pairs to provide settings for this webhook. [These are
                    defined
                    below](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-hook-config-params).
                  properties:
                    content_type:
                      $ref: "#/components/schemas/webhook-config-content-type"
                    digest:
                      example: '"sha256"'
                      type: string
                    insecure_ssl:
                      $ref: "#/components/schemas/webhook-config-insecure-ssl"
                    secret:
                      $ref: "#/components/schemas/webhook-config-secret"
                    token:
                      example: '"abc"'
                      type: string
                    url:
                      $ref: "#/components/schemas/webhook-config-url"
                  type: object
                events:
                  default:
                    - push
                  description: Determines what
                    [events](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads)
                    the hook is triggered for.
                  items:
                    type: string
                  type: array
                name:
                  description: "Use `web` to create a webhook. Default: `web`. This parameter only
                    accepts the value `web`."
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/hook"
              schema:
                $ref: "#/components/schemas/hook"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a repository webhook
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
  "/repos/{owner}/{repo}/hooks/{hook_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-repository-webhook
      operationId: repos/delete-webhook
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/hook-id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a repository webhook
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
    get:
      description: Returns a webhook configured in a repository. To get only the
        webhook `config` properties, see "[Get a webhook configuration for a
        repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-repository-webhook
      operationId: repos/get-webhook
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/hook"
              schema:
                $ref: "#/components/schemas/hook"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a repository webhook
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
    patch:
      description: Updates a webhook configured in a repository. If you previously had
        a `secret` set, you must provide the same `secret` or set a new `secret`
        or the secret will be removed. If you are only updating individual
        webhook `config` properties, use "[Update a webhook configuration for a
        repository](/rest/reference/repos#update-a-webhook-configuration-for-a-repository)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-a-repository-webhook
      operationId: repos/update-webhook
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/hook-id"
      requestBody:
        content:
          application/json:
            example:
              active: true
              add_events:
                - pull_request
            schema:
              properties:
                active:
                  default: true
                  description: Determines if notifications are sent when the webhook is triggered.
                    Set to `true` to send notifications.
                  type: boolean
                add_events:
                  description: Determines a list of events to be added to the list of events that
                    the Hook triggers for.
                  items:
                    type: string
                  type: array
                config:
                  description: Key/value pairs to provide settings for this webhook. [These are
                    defined
                    below](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-hook-config-params).
                  properties:
                    address:
                      example: '"bar@example.com"'
                      type: string
                    content_type:
                      $ref: "#/components/schemas/webhook-config-content-type"
                    insecure_ssl:
                      $ref: "#/components/schemas/webhook-config-insecure-ssl"
                    room:
                      example: '"The Serious Room"'
                      type: string
                    secret:
                      $ref: "#/components/schemas/webhook-config-secret"
                    url:
                      $ref: "#/components/schemas/webhook-config-url"
                  required:
                    - url
                  type: object
                events:
                  default:
                    - push
                  description: Determines what
                    [events](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads)
                    the hook is triggered for. This replaces the entire array of
                    events.
                  items:
                    type: string
                  type: array
                remove_events:
                  description: Determines a list of events to be removed from the list of events
                    that the Hook triggers for.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/hook"
              schema:
                $ref: "#/components/schemas/hook"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update a repository webhook
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
  "/repos/{owner}/{repo}/hooks/{hook_id}/pings":
    post:
      description: This will trigger a [ping
        event](https://docs.github.com/enterprise-server@2.21/webhooks/#ping-event)
        to be sent to the hook.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#ping-a-repository-webhook
      operationId: repos/ping-webhook
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/hook-id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Ping a repository webhook
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
  "/repos/{owner}/{repo}/hooks/{hook_id}/tests":
    post:
      description: >-
        This will trigger the hook with the latest push to the current
        repository if the hook is subscribed to `push` events. If the hook is
        not subscribed to `push` events, the server will respond with 204 but no
        test POST will be generated.


        **Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#test-the-push-repository-webhook
      operationId: repos/test-push-webhook
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/hook-id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Test the push repository webhook
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: webhooks
  "/repos/{owner}/{repo}/installation":
    get:
      description: >-
        Enables an authenticated GitHub App to find the repository's
        installation information. The installation's account type will be either
        an organization or a user account, depending which account the
        repository belongs to.


        You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#get-a-repository-installation-for-the-authenticated-app
      operationId: apps/get-repo-installation
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/installation-ghes-2"
              schema:
                $ref: "#/components/schemas/installation-ghes-2"
          description: Response
        "301":
          $ref: "#/components/responses/moved_permanently"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a repository installation for the authenticated app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  "/repos/{owner}/{repo}/invitations":
    get:
      description: When authenticating as a user with admin rights to a repository,
        this endpoint will list all currently open repository invitations.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-invitations
      operationId: repos/list-invitations
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-invitation-items"
              schema:
                items:
                  $ref: "#/components/schemas/repository-invitation"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List repository invitations
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: invitations
  "/repos/{owner}/{repo}/invitations/{invitation_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-repository-invitation
      operationId: repos/delete-invitation
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/invitation_id"
      responses:
        "204":
          description: Response
      summary: Delete a repository invitation
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: invitations
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-a-repository-invitation
      operationId: repos/update-invitation
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/invitation_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permissions:
                  description: The permissions that the associated user will have on the
                    repository. Valid values are `read`, `write`, `maintain`,
                    `triage`, and `admin`.
                  enum:
                    - read
                    - write
                    - maintain
                    - triage
                    - admin
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-invitation"
              schema:
                $ref: "#/components/schemas/repository-invitation"
          description: Response
      summary: Update a repository invitation
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: invitations
  "/repos/{owner}/{repo}/issues":
    get:
      description: >-
        List issues in a repository.


        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull

        request id, use the "[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)" endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-repository-issues
      operationId: issues/list-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: If an `integer` is passed, it should refer to a milestone by its
            `number` field. If the string `*` is passed, issues with any
            milestone are accepted. If the string `none` is passed, issues
            without milestones are returned.
          in: query
          name: milestone
          required: false
          schema:
            type: string
        - description: Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - description: Can be the name of a user. Pass in `none` for issues with no
            assigned user, and `*` for issues assigned to any user.
          in: query
          name: assignee
          required: false
          schema:
            type: string
        - description: The user that created the issue.
          in: query
          name: creator
          required: false
          schema:
            type: string
        - description: A user that's mentioned in the issue.
          in: query
          name: mentioned
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/labels"
        - description: What to sort results by. Can be either `created`, `updated`,
            `comments`.
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - comments
            type: string
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue-simple"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "301":
          $ref: "#/components/responses/moved_permanently"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List repository issues
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
    post:
      description: >-
        Any user with pull access to a repository can create an issue. If
        [issues are disabled in the
        repository](https://help.github.com/articles/disabling-issues/), the API
        returns a `410 Gone` status.


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)" for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#create-an-issue
      operationId: issues/create
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              assignees:
                - octocat
              body: I'm having a problem with this.
              labels:
                - bug
              milestone: 1
              title: Found a bug
            schema:
              properties:
                assignee:
                  description: "Login for the user that this issue should be assigned to. _NOTE:
                    Only users with push access can set the assignee for new
                    issues. The assignee is silently dropped otherwise. **This
                    field is deprecated.**_"
                  nullable: true
                  type: string
                assignees:
                  description: "Logins for Users to assign to this issue. _NOTE: Only users with
                    push access can set assignees for new issues. Assignees are
                    silently dropped otherwise._"
                  items:
                    type: string
                  type: array
                body:
                  description: The contents of the issue.
                  type: string
                labels:
                  description: "Labels to associate with this issue. _NOTE: Only users with push
                    access can set labels for new issues. Labels are silently
                    dropped otherwise._"
                  items:
                    oneOf:
                      - type: string
                      - properties:
                          color:
                            nullable: true
                            type: string
                          description:
                            nullable: true
                            type: string
                          id:
                            type: integer
                          name:
                            type: string
                        type: object
                  type: array
                milestone:
                  nullable: true
                  oneOf:
                    - type: string
                    - description: "The `number` of the milestone to associate this issue with. _NOTE:
                        Only users with push access can set the milestone for
                        new issues. The milestone is silently dropped
                        otherwise._"
                      type: integer
                title:
                  description: The title of the issue.
                  oneOf:
                    - type: string
                    - type: integer
              required:
                - title
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue"
              schema:
                $ref: "#/components/schemas/issue"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/1347
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Create an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        triggersNotification: true
  "/repos/{owner}/{repo}/issues/comments":
    get:
      description: By default, Issue Comments are ordered by ascending ID.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-issue-comments-for-a-repository
      operationId: issues/list-comments-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/sort"
        - description: Either `asc` or `desc`. Ignored without the `sort` parameter.
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List issue comments for a repository
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
  "/repos/{owner}/{repo}/issues/comments/{comment_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#delete-an-issue-comment
      operationId: issues/delete-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "204":
          description: Response
      summary: Delete an issue comment
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: comments
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#get-an-issue-comment
      operationId: issues/get-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-comment"
              schema:
                $ref: "#/components/schemas/issue-comment"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get an issue comment
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
        subcategory: comments
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#update-an-issue-comment
      operationId: issues/update-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            example:
              body: Me too
            schema:
              properties:
                body:
                  description: The contents of the comment.
                  type: string
              required:
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-comment"
              schema:
                $ref: "#/components/schemas/issue-comment"
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update an issue comment
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: comments
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions":
    get:
      description: List the reactions to an [issue
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/issues#comments).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-an-issue-comment
      operationId: reactions/list-for-issue-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to an issue comment.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List reactions for an issue comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: Create a reaction to an [issue
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/issues#comments).
        A response with an HTTP `200` status means that you already added the
        reaction type to this issue comment.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-an-issue-comment
      operationId: reactions/create-for-issue-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the issue comment.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Reaction exists
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Reaction created
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create reaction for an issue comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      description: >-
        **Note:** You can also specify a repository by `repository_id`
        using the route `DELETE delete
        /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.


        Delete a reaction to an [issue comment](https://docs.github.com/enterprise-server@2.21/rest/reference/issues#comments).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-an-issue-comment-reaction
      operationId: reactions/delete-for-issue-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
        - $ref: "#/components/parameters/reaction-id"
      responses:
        "204":
          description: Response
      summary: Delete an issue comment reaction
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/issues/events":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-issue-events-for-a-repository
      operationId: issues/list-events-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-event-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue-event"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List issue events for a repository
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: starfox
            note: >-
              Project card details are now shown in REST API v3 responses for
              project-related issue and timeline events. This feature is now
              available for developers to preview. For details, see the [blog
              post](https://developer.github.com/changes/2018-09-05-project-card-events).


              To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.starfox-preview+json

              ```
            required: false
          - name: sailor-v
            note: >-
              You can now use the REST API to add a reason when you lock an issue, and
              you will see lock reasons in responses that include issues or pull
              requests. You will also see lock reasons in `locked` events. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview)
              for full details. To access this feature, you must provide a
              custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.sailor-v-preview+json

              ```
            required: false
        subcategory: events
  "/repos/{owner}/{repo}/issues/events/{event_id}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#get-an-issue-event
      operationId: issues/get-event
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: event_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-event"
              schema:
                $ref: "#/components/schemas/issue-event"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
      summary: Get an issue event
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: starfox
            note: >-
              Project card details are now shown in REST API v3 responses for
              project-related issue and timeline events. This feature is now
              available for developers to preview. For details, see the [blog
              post](https://developer.github.com/changes/2018-09-05-project-card-events).


              To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.starfox-preview+json

              ```
            required: false
          - name: sailor-v
            note: >-
              You can now use the REST API to add a reason when you lock an issue, and
              you will see lock reasons in responses that include issues or pull
              requests. You will also see lock reasons in `locked` events. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview)
              for full details. To access this feature, you must provide a
              custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.sailor-v-preview+json

              ```
            required: false
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
        subcategory: events
  "/repos/{owner}/{repo}/issues/{issue_number}":
    get:
      description: >-
        The API returns a [`301 Moved Permanently`
        status](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-redirects-redirects)
        if the issue was

        [transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If

        the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API

        returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read

        access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe

        to the [`issues`](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#issues) webhook.


        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull

        request id, use the "[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)" endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#get-an-issue
      operationId: issues/get
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue"
              schema:
                $ref: "#/components/schemas/issue"
          description: Response
        "301":
          $ref: "#/components/responses/moved_permanently"
        "304":
          $ref: "#/components/responses/not_modified"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
      summary: Get an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: Issue owners and users with push access can edit an issue.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues/#update-an-issue
      operationId: issues/update
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            example:
              assignees:
                - octocat
              body: I'm having a problem with this.
              labels:
                - bug
              milestone: 1
              state: open
              title: Found a bug
            schema:
              properties:
                assignee:
                  description: Login for the user that this issue should be assigned to. **This
                    field is deprecated.**
                  nullable: true
                  type: string
                assignees:
                  description: "Logins for Users to assign to this issue. Pass one or more user
                    logins to _replace_ the set of assignees on this Issue. Send
                    an empty array (`[]`) to clear all assignees from the Issue.
                    _NOTE: Only users with push access can set assignees for new
                    issues. Assignees are silently dropped otherwise._"
                  items:
                    type: string
                  type: array
                body:
                  description: The contents of the issue.
                  nullable: true
                  type: string
                labels:
                  description: "Labels to associate with this issue. Pass one or more Labels to
                    _replace_ the set of Labels on this Issue. Send an empty
                    array (`[]`) to clear all Labels from the Issue. _NOTE: Only
                    users with push access can set labels for issues. Labels are
                    silently dropped otherwise._"
                  items:
                    oneOf:
                      - type: string
                      - properties:
                          color:
                            nullable: true
                            type: string
                          description:
                            nullable: true
                            type: string
                          id:
                            type: integer
                          name:
                            type: string
                        type: object
                  type: array
                milestone:
                  nullable: true
                  oneOf:
                    - type: string
                    - description: "The `number` of the milestone to associate this issue with or
                        `null` to remove current. _NOTE: Only users with push
                        access can set the milestone for issues. The milestone
                        is silently dropped otherwise._"
                      type: integer
                state:
                  description: State of the issue. Either `open` or `closed`.
                  enum:
                    - open
                    - closed
                  type: string
                title:
                  description: The title of the issue.
                  nullable: true
                  oneOf:
                    - type: string
                    - type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue"
              schema:
                $ref: "#/components/schemas/issue"
          description: Response
        "301":
          $ref: "#/components/responses/moved_permanently"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Update an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/issues/{issue_number}/assignees":
    delete:
      description: Removes one or more assignees from an issue.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#remove-assignees-from-an-issue
      operationId: issues/remove-assignees
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            example:
              assignees:
                - hubot
                - other_user
            schema:
              properties:
                assignees:
                  description: "Usernames of assignees to remove from an issue. _NOTE: Only users
                    with push access can remove assignees from an issue.
                    Assignees are silently ignored otherwise._"
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-simple"
              schema:
                $ref: "#/components/schemas/issue-simple"
          description: Response
      summary: Remove assignees from an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: assignees
    post:
      description: Adds up to 10 assignees to an issue. Users already assigned to an
        issue are not replaced.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#add-assignees-to-an-issue
      operationId: issues/add-assignees
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            example:
              assignees:
                - hubot
                - other_user
            schema:
              properties:
                assignees:
                  description: "Usernames of people to assign this issue to. _NOTE: Only users
                    with push access can add assignees to an issue. Assignees
                    are silently ignored otherwise._"
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-simple"
              schema:
                $ref: "#/components/schemas/issue-simple"
          description: Response
      summary: Add assignees to an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: assignees
  "/repos/{owner}/{repo}/issues/{issue_number}/comments":
    get:
      description: Issue Comments are ordered by ascending ID.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-issue-comments
      operationId: issues/list-comments
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
      summary: List issue comments
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
    post:
      description: This endpoint triggers
        [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)"
        and "[Dealing with abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)"
        for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#create-an-issue-comment
      operationId: issues/create-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            example:
              body: Me too
            schema:
              properties:
                body:
                  description: The contents of the comment.
                  type: string
              required:
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-comment"
              schema:
                $ref: "#/components/schemas/issue-comment"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create an issue comment
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: comments
        triggersNotification: true
  "/repos/{owner}/{repo}/issues/{issue_number}/events":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-issue-events
      operationId: issues/list-events
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-event-for-issue-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue-event-for-issue"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "410":
          $ref: "#/components/responses/gone"
      summary: List issue events
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: starfox
            note: >-
              Project card details are now shown in REST API v3 responses for
              project-related issue and timeline events. This feature is now
              available for developers to preview. For details, see the [blog
              post](https://developer.github.com/changes/2018-09-05-project-card-events).


              To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.starfox-preview+json

              ```
            required: false
          - name: sailor-v
            note: >-
              You can now use the REST API to add a reason when you lock an issue, and
              you will see lock reasons in responses that include issues or pull
              requests. You will also see lock reasons in `locked` events. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview)
              for full details. To access this feature, you must provide a
              custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.sailor-v-preview+json

              ```
            required: false
        subcategory: events
  "/repos/{owner}/{repo}/issues/{issue_number}/labels":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#remove-all-labels-from-an-issue
      operationId: issues/remove-all-labels
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      responses:
        "204":
          description: Response
        "410":
          $ref: "#/components/responses/gone"
      summary: Remove all labels from an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-labels-for-an-issue
      operationId: issues/list-labels-on-issue
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-items"
              schema:
                items:
                  $ref: "#/components/schemas/label"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "410":
          $ref: "#/components/responses/gone"
      summary: List labels for an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#add-labels-to-an-issue
      operationId: issues/add-labels
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            example:
              labels:
                - bug
                - enhancement
            schema:
              oneOf:
                - properties:
                    labels:
                      description: The names of the labels to add to the issue. You can pass an empty
                        array to remove all labels. **Note:** Alternatively, you
                        can pass a single label as a `string` or an `array` of
                        labels directly, but GitHub recommends passing an object
                        with the `labels` key.
                      items:
                        type: string
                      minItems: 1
                      type: array
                  type: object
                - items:
                    type: string
                  minItems: 1
                  type: array
                - properties:
                    labels:
                      items:
                        properties:
                          name:
                            type: string
                        required:
                          - name
                        type: object
                      minItems: 1
                      type: array
                  type: object
                - items:
                    properties:
                      name:
                        type: string
                    required:
                      - name
                    type: object
                  minItems: 1
                  type: array
                - type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-items"
              schema:
                items:
                  $ref: "#/components/schemas/label"
                type: array
          description: Response
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add labels to an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
    put:
      description: Removes any previous labels and sets the new labels for an issue.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#set-labels-for-an-issue
      operationId: issues/set-labels
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            example:
              labels:
                - bug
                - enhancement
            schema:
              anyOf:
                - properties:
                    labels:
                      description: The names of the labels to add to the issue. You can pass an empty
                        array to remove all labels. **Note:** Alternatively, you
                        can pass a single label as a `string` or an `array` of
                        labels directly, but GitHub recommends passing an object
                        with the `labels` key.
                      items:
                        type: string
                      type: array
                  type: object
                - items:
                    type: string
                  type: array
                - properties:
                    labels:
                      items:
                        properties:
                          name:
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                - items:
                    properties:
                      name:
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                - type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-items"
              schema:
                items:
                  $ref: "#/components/schemas/label"
                type: array
          description: Response
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Set labels for an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
  "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}":
    delete:
      description: Removes the specified label from the issue, and returns the
        remaining labels on the issue. This endpoint returns a `404 Not Found`
        status if the label does not exist.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#remove-a-label-from-an-issue
      operationId: issues/remove-label
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/label"
                type: array
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
      summary: Remove a label from an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
  "/repos/{owner}/{repo}/issues/{issue_number}/lock":
    delete:
      description: Users with push access can unlock an issue's conversation.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#unlock-an-issue
      operationId: issues/unlock
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Unlock an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      description: >-
        Users with push access can lock an issue or pull request's
        conversation.


        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#lock-an-issue
      operationId: issues/lock
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              properties:
                lock_reason:
                  description: >-
                    The reason for locking the issue or pull request conversation. Lock
                    will fail if you don't use one of these reasons:  

                    \* `off-topic`  

                    \* `too heated`  

                    \* `resolved`  

                    \* `spam`
                  enum:
                    - off-topic
                    - too heated
                    - resolved
                    - spam
                  type: string
              type: object
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Lock an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: sailor-v
            note: >-
              You can now use the REST API to add a reason when you lock an issue, and
              you will see lock reasons in responses that include issues or pull
              requests. You will also see lock reasons in `locked` events. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview)
              for full details. To access this feature, you must provide a
              custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.sailor-v-preview+json

              ```
            required: false
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions":
    get:
      description: List the reactions to an
        [issue](https://docs.github.com/enterprise-server@2.21/rest/reference/issues).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-an-issue
      operationId: reactions/list-for-issue
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to an issue.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List reactions for an issue
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: Create a reaction to an
        [issue](https://docs.github.com/enterprise-server@2.21/rest/reference/issues/).
        A response with an HTTP `200` status means that you already added the
        reaction type to this issue.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-an-issue
      operationId: reactions/create-for-issue
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the issue.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create reaction for an issue
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}":
    delete:
      description: >-
        **Note:** You can also specify a repository by `repository_id`
        using the route `DELETE
        /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.


        Delete a reaction to an [issue](https://docs.github.com/enterprise-server@2.21/rest/reference/issues/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-an-issue-reaction
      operationId: reactions/delete-for-issue
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
        - $ref: "#/components/parameters/reaction-id"
      responses:
        "204":
          description: Response
      summary: Delete an issue reaction
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/issues/{issue_number}/timeline":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-timeline-events-for-an-issue
      operationId: issues/list-events-for-timeline
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/issue_number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-event-for-issue-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue-event-for-issue"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List timeline events for an issue
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: mockingbird
            note: >-
              The API to get issue timeline events is currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-23-timeline-preview-api/)
              for full details. To access the API you must provide a custom
              [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.mockingbird-preview

              ```
            required: true
          - name: starfox
            note: >-
              Project card details are now shown in REST API v3 responses for
              project-related issue and timeline events. This feature is now
              available for developers to preview. For details, see the [blog
              post](https://developer.github.com/changes/2018-09-05-project-card-events).


              To receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.starfox-preview+json

              ```
            required: false
        subcategory: timeline
  "/repos/{owner}/{repo}/keys":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-deploy-keys
      operationId: repos/list-deploy-keys
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deploy-key-items"
              schema:
                items:
                  $ref: "#/components/schemas/deploy-key"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List deploy keys
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: keys
    post:
      description: You can create a read-only deploy key.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-deploy-key
      operationId: repos/create-deploy-key
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              key: ssh-rsa AAA...
              read_only: true
              title: octocat@octomac
            schema:
              properties:
                key:
                  description: The contents of the key.
                  type: string
                read_only:
                  description: >-
                    If `true`, the key will only be able to read repository contents.
                    Otherwise, the key will be able to read and write.  
                      
                    Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see "[Repository permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)" and "[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/)."
                  type: boolean
                title:
                  description: A name for the key.
                  type: string
              required:
                - key
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deploy-key"
              schema:
                $ref: "#/components/schemas/deploy-key"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/keys/1
              schema:
                type: string
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a deploy key
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: keys
  "/repos/{owner}/{repo}/keys/{key_id}":
    delete:
      description: Deploy keys are immutable. If you need to update a key, remove the
        key and create a new one instead.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-deploy-key
      operationId: repos/delete-deploy-key
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/key_id"
      responses:
        "204":
          description: Response
      summary: Delete a deploy key
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: keys
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-deploy-key
      operationId: repos/get-deploy-key
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/key_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/deploy-key"
              schema:
                $ref: "#/components/schemas/deploy-key"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a deploy key
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: keys
  "/repos/{owner}/{repo}/labels":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-labels-for-a-repository
      operationId: issues/list-labels-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-items"
              schema:
                items:
                  $ref: "#/components/schemas/label"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List labels for a repository
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#create-a-label
      operationId: issues/create-label
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              color: f29513
              description: Something isn't working
              name: bug
            schema:
              properties:
                color:
                  description: The [hexadecimal color code](http://www.color-hex.com/) for the
                    label, without the leading `#`.
                  type: string
                description:
                  description: A short description of the label.
                  type: string
                name:
                  description: The name of the label. Emoji can be added to label names, using
                    either native emoji or colon-style markup. For example,
                    typing `:strawberry:` will render the emoji
                    ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png
                    ":strawberry:"). For a full list of available emoji and
                    codes, see "[Emoji cheat
                    sheet](https://github.com/ikatyang/emoji-cheat-sheet)."
                  type: string
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label"
              schema:
                $ref: "#/components/schemas/label"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/labels/bug
              schema:
                type: string
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a label
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
  "/repos/{owner}/{repo}/labels/{name}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#delete-a-label
      operationId: issues/delete-label
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Response
      summary: Delete a label
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#get-a-label
      operationId: issues/get-label
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label"
              schema:
                $ref: "#/components/schemas/label"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a label
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#update-a-label
      operationId: issues/update-label
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              color: b01f26
              description: Small bug fix required
              new_name: "bug :bug:"
            schema:
              properties:
                color:
                  description: The [hexadecimal color code](http://www.color-hex.com/) for the
                    label, without the leading `#`.
                  type: string
                description:
                  description: A short description of the label.
                  type: string
                new_name:
                  description: The new name of the label. Emoji can be added to label names, using
                    either native emoji or colon-style markup. For example,
                    typing `:strawberry:` will render the emoji
                    ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png
                    ":strawberry:"). For a full list of available emoji and
                    codes, see "[Emoji cheat
                    sheet](https://github.com/ikatyang/emoji-cheat-sheet)."
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-2"
              schema:
                $ref: "#/components/schemas/label"
          description: Response
      summary: Update a label
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
  "/repos/{owner}/{repo}/languages":
    get:
      description: Lists languages for the specified repository. The value shown for
        each language is the number of bytes of code written in that language.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-languages
      operationId: repos/list-languages
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/language"
              schema:
                $ref: "#/components/schemas/language"
          description: Response
      summary: List repository languages
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/license":
    get:
      description: >-
        This method returns the contents of the repository's license file,
        if one is detected.


        Similar to [Get repository content](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/licenses/#get-the-license-for-a-repository
      operationId: licenses/get-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/license-content"
              schema:
                $ref: "#/components/schemas/license-content"
          description: Response
      summary: Get the license for a repository
      tags:
        - licenses
      x-github:
        category: licenses
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/merges":
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#merge-a-branch
      operationId: repos/merge
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              base: master
              commit_message: Shipped cool_feature!
              head: cool_feature
            schema:
              properties:
                base:
                  description: The name of the base branch that the head will be merged into.
                  type: string
                commit_message:
                  description: Commit message to use for the merge commit. If omitted, a default
                    message will be used.
                  type: string
                head:
                  description: The head to merge. This can be a branch name or a commit SHA1.
                  type: string
              required:
                - base
                - head
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit"
              schema:
                $ref: "#/components/schemas/commit"
          description: Successful Response (The resulting merge commit)
        "204":
          description: Response when already merged
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          description: Not Found when the base or head does not exist
        "409":
          description: Conflict when there is a merge conflict
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Merge a branch
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: merging
  "/repos/{owner}/{repo}/milestones":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-milestones
      operationId: issues/list-milestones
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: The state of the milestone. Either `open`, `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - description: What to sort results by. Either `due_on` or `completeness`.
          in: query
          name: sort
          required: false
          schema:
            default: due_on
            enum:
              - due_on
              - completeness
            type: string
        - description: The direction of the sort. Either `asc` or `desc`.
          in: query
          name: direction
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/milestone-items"
              schema:
                items:
                  $ref: "#/components/schemas/milestone"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List milestones
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: milestones
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#create-a-milestone
      operationId: issues/create-milestone
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              description: Tracking milestone for version 1.0
              due_on: 2012-10-09T23:39:01Z
              state: open
              title: v1.0
            schema:
              properties:
                description:
                  description: A description of the milestone.
                  type: string
                due_on:
                  description: "The milestone due date. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`."
                  format: date-time
                  type: string
                state:
                  default: open
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                    - open
                    - closed
                  type: string
                title:
                  description: The title of the milestone.
                  type: string
              required:
                - title
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/milestone"
              schema:
                $ref: "#/components/schemas/milestone"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/milestones/1
              schema:
                type: string
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a milestone
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: milestones
  "/repos/{owner}/{repo}/milestones/{milestone_number}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#delete-a-milestone
      operationId: issues/delete-milestone
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/milestone_number"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a milestone
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: milestones
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#get-a-milestone
      operationId: issues/get-milestone
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/milestone_number"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/milestone"
              schema:
                $ref: "#/components/schemas/milestone"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a milestone
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: milestones
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#update-a-milestone
      operationId: issues/update-milestone
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/milestone_number"
      requestBody:
        content:
          application/json:
            example:
              description: Tracking milestone for version 1.0
              due_on: 2012-10-09T23:39:01Z
              state: open
              title: v1.0
            schema:
              properties:
                description:
                  description: A description of the milestone.
                  type: string
                due_on:
                  description: "The milestone due date. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`."
                  format: date-time
                  type: string
                state:
                  default: open
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                    - open
                    - closed
                  type: string
                title:
                  description: The title of the milestone.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/milestone"
              schema:
                $ref: "#/components/schemas/milestone"
          description: Response
      summary: Update a milestone
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: milestones
  "/repos/{owner}/{repo}/milestones/{milestone_number}/labels":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-labels-for-issues-in-a-milestone
      operationId: issues/list-labels-for-milestone
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/milestone_number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-items"
              schema:
                items:
                  $ref: "#/components/schemas/label"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List labels for issues in a milestone
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: labels
  "/repos/{owner}/{repo}/notifications":
    get:
      description: List all notifications for the current user.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-repository-notifications-for-the-authenticated-user
      operationId: activity/list-repo-notifications-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/all"
        - $ref: "#/components/parameters/participating"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/before"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/thread-items"
              schema:
                items:
                  $ref: "#/components/schemas/thread"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List repository notifications for the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
    put:
      description: Marks all notifications in a repository as "read" removes them from
        the [default view on GitHub Enterprise
        Server](https://github.com/notifications). If the number of
        notifications is too large to complete in one request, you will receive
        a `202 Accepted` status and GitHub Enterprise Server will run an
        asynchronous process to mark notifications as "read." To check whether
        any "unread" notifications remain, you can use the [List repository
        notifications for the authenticated
        user](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-repository-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#mark-repository-notifications-as-read
      operationId: activity/mark-repo-notifications-as-read
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                last_read_at:
                  description: "Describes the last point that notifications were checked. Anything
                    updated since this time will not be marked as read. If you
                    omit this parameter, all notifications are marked as read.
                    This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp."
                  format: date-time
                  type: string
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  url:
                    type: string
                type: object
          description: Response
        "205":
          description: Reset Content
      summary: Mark repository notifications as read
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: notifications
  "/repos/{owner}/{repo}/pages":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-github-pages-site
      operationId: repos/delete-pages-site
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Delete a GitHub Enterprise Server Pages site
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: switcheroo
            note: >-
              Enabling and disabling Pages in the Pages API is currently available for
              developers to preview. See the [blog
              post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/)
              preview for more details. To access the new endpoints during the
              preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.switcheroo-preview+json

              ```
            required: true
        subcategory: pages
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-github-pages-site
      operationId: repos/get-pages
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/page"
              schema:
                $ref: "#/components/schemas/page"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a GitHub Enterprise Server Pages site
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: pages
    post:
      description: Configures a GitHub Enterprise Server Pages site. For more
        information, see "[About GitHub
        Pages](/github/working-with-github-pages/about-github-pages)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-github-pages-site
      operationId: repos/create-pages-site
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              source:
                branch: master
                path: /docs
            schema:
              description: The source branch and directory used to publish your Pages site.
              nullable: true
              properties:
                source:
                  description: The source branch and directory used to publish your Pages site.
                  properties:
                    branch:
                      description: The repository branch used to publish your site's source files. Can
                        be either `master` or `gh-pages`.
                      enum:
                        - master
                        - gh-pages
                      type: string
                    path:
                      default: /
                      description: The repository directory that includes the source files for the
                        Pages site. When `branch` is `master`, you can change
                        `path` to `/docs`. When `branch` is `gh-pages`, you are
                        unable to specify a `path` other than `/`.
                      enum:
                        - /
                        - /docs
                      type: string
                  required:
                    - branch
                  type: object
              required:
                - source
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/page"
              schema:
                $ref: "#/components/schemas/page"
          description: Response
        "409":
          $ref: "#/components/responses/conflict"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a GitHub Pages site
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: switcheroo
            note: >-
              Enabling and disabling Pages in the Pages API is currently available for
              developers to preview. See the [blog
              post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/)
              preview for more details. To access the new endpoints during the
              preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.switcheroo-preview+json

              ```
            required: true
        subcategory: pages
    put:
      description: Updates information for a GitHub Enterprise Server Pages site. For
        more information, see "[About GitHub
        Pages](/github/working-with-github-pages/about-github-pages).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-information-about-a-github-pages-site
      operationId: repos/update-information-about-pages-site
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              source: master /docs
            schema:
              anyOf:
                - required:
                    - source
                - required:
                    - cname
                - required:
                    - public
                - required:
                    - https_enforced
              properties:
                https_enforced:
                  description: Specify whether HTTPS should be enforced for the repository.
                  type: boolean
                public:
                  description: Configures access controls for the GitHub Pages site. If public is
                    set to `true`, the site is accessible to anyone on the
                    internet. If set to `false`, the site will only be
                    accessible to users who have at least `read` access to the
                    repository that published the site. This includes anyone in
                    your Enterprise if the repository is set to `internal`
                    visibility. This feature is only available to repositories
                    in an organization on an Enterprise plan.
                  type: boolean
                source:
                  anyOf:
                    - description: Update the source for the repository. Must include the branch name,
                        and may optionally specify the subdirectory `/docs`.
                        Possible values are `"gh-pages"`, `"master"`, and
                        `"master /docs"`.
                      enum:
                        - gh-pages
                        - master
                        - master /docs
                      type: string
                    - description: Update the source for the repository. Must include the branch name
                        and path.
                      properties:
                        branch:
                          description: The repository branch used to publish your site's source files.
                          type: string
                        path:
                          description: The repository directory that includes the source files for the
                            Pages site. Allowed paths are `/` or `/docs`.
                          enum:
                            - /
                            - /docs
                          type: string
                      required:
                        - branch
                        - path
                      type: object
                  description: Update the source for the repository. Must include the branch name,
                    and may optionally specify the subdirectory `/docs`.
                    Possible values are `"gh-pages"`, `"master"`, and `"master
                    /docs"`.
                  enum:
                    - gh-pages
                    - master
                    - master /docs
                  type: string
              type: object
      responses:
        "204":
          description: Response
        "400":
          $ref: "#/components/responses/bad_request"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update information about a GitHub Pages site
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-github-pages-builds
      operationId: repos/list-pages-builds
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/page-build-items"
              schema:
                items:
                  $ref: "#/components/schemas/page-build"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List GitHub Enterprise Server Pages builds
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: pages
    post:
      description: >-
        You can request that your site be built from the latest revision on
        the default branch. This has the same effect as pushing a commit to your
        default branch, but does not require an additional commit. Manually
        triggering page builds can be helpful when diagnosing build warnings and
        failures.


        Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#request-a-github-pages-build
      operationId: repos/request-pages-build
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/page-build-status"
              schema:
                $ref: "#/components/schemas/page-build-status"
          description: Response
      summary: Request a GitHub Enterprise Server Pages build
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds/latest":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-latest-pages-build
      operationId: repos/get-latest-pages-build
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/page-build"
              schema:
                $ref: "#/components/schemas/page-build"
          description: Response
      summary: Get latest Pages build
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds/{build_id}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-github-pages-build
      operationId: repos/get-pages-build
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: build_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/page-build"
              schema:
                $ref: "#/components/schemas/page-build"
          description: Response
      summary: Get GitHub Enterprise Server Pages build
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: pages
  "/repos/{owner}/{repo}/pre-receive-hooks":
    get:
      description: List all pre-receive hooks that are enabled or testing for this
        repository as well as any disabled hooks that are allowed to be enabled
        at the repository level. Pre-receive hooks that are disabled at a higher
        level and are not configurable will not be listed.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#list-pre-receive-hooks-for-a-repository
      operationId: enterprise-admin/list-pre-receive-hooks-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/direction"
        - in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - name
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-pre-receive-hook-items"
              schema:
                items:
                  $ref: "#/components/schemas/repository-pre-receive-hook"
                type: array
          description: Response
      summary: List pre-receive hooks for a repository
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: repo-pre-receive-hooks
  "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}":
    delete:
      description: >-
        Deletes any overridden enforcement on this repository for the
        specified hook.


        Responds with effective values inherited from owner and/or global level.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-a-repository
      operationId: enterprise-admin/remove-pre-receive-hook-enforcement-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pre-receive-hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-pre-receive-hook"
              schema:
                $ref: "#/components/schemas/repository-pre-receive-hook"
          description: Responds with effective values inherited from owner and/or global
            level.
      summary: Remove pre-receive hook enforcement for a repository
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: repo-pre-receive-hooks
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-a-repository
      operationId: enterprise-admin/get-pre-receive-hook-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pre-receive-hook-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-pre-receive-hook"
              schema:
                $ref: "#/components/schemas/repository-pre-receive-hook"
          description: Response
      summary: Get a pre-receive hook for a repository
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: repo-pre-receive-hooks
    patch:
      description: For pre-receive hooks which are allowed to be configured at the
        repo level, you can set `enforcement`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-a-repository
      operationId: enterprise-admin/update-pre-receive-hook-enforcement-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pre-receive-hook-id"
      requestBody:
        content:
          application/json:
            example:
              enforcement: enabled
            schema:
              properties:
                enforcement:
                  description: The state of enforcement for the hook on this repository.
                  enum:
                    - enabled
                    - disabled
                    - testing
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-pre-receive-hook-2"
              schema:
                $ref: "#/components/schemas/repository-pre-receive-hook"
          description: Response
      summary: Update pre-receive hook enforcement for a repository
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: eye-scream
            note: >-
              APIs for managing pre-receive hooks are currently available for developers
              to preview. During the preview period, the APIs may change without
              advance notice.


              To access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:


              ```shell

              application/vnd.github.eye-scream-preview

              ```
            required: true
        subcategory: repo-pre-receive-hooks
  "/repos/{owner}/{repo}/projects":
    get:
      description: Lists the projects in a repository. Returns a `404 Not Found`
        status if projects are disabled in the repository. If you do not have
        sufficient privileges to perform this action, a `401 Unauthorized` or
        `410 Gone` status is returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#list-repository-projects
      operationId: projects/list-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: Indicates the state of the projects to return. Can be either
            `open`, `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/project"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: List repository projects
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: Creates a repository project board. Returns a `404 Not Found`
        status if projects are disabled in the repository. If you do not have
        sufficient privileges to perform this action, a `401 Unauthorized` or
        `410 Gone` status is returned.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#create-a-repository-project
      operationId: projects/create-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              body: Developer documentation project for the developer site.
              name: Projects Documentation
            schema:
              properties:
                body:
                  description: The description of the project.
                  type: string
                name:
                  description: The name of the project.
                  type: string
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-3"
              schema:
                $ref: "#/components/schemas/project"
          description: Response
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "410":
          $ref: "#/components/responses/gone"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Create a repository project
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/pulls":
    get:
      description: Draft pull requests are available in public repositories with
        GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise
        Cloud.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests
      operationId: pulls/list
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: Either `open`, `closed`, or `all` to filter by state.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - description: "Filter pulls by head user or head organization and branch name in
            the format of `user:ref-name` or `organization:ref-name`. For
            example: `github:new-script-format` or `octocat:test-branch`."
          in: query
          name: head
          required: false
          schema:
            type: string
        - description: "Filter pulls by base branch name. Example: `gh-pages`."
          in: query
          name: base
          required: false
          schema:
            type: string
        - description: What to sort results by. Can be either `created`, `updated`,
            `popularity` (comment count) or `long-running` (age, filtering by
            pulls updated in the last month).
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - popularity
              - long-running
            type: string
        - description: "The direction of the sort. Can be either `asc` or `desc`. Default:
            `desc` when sort is `created` or sort is not specified, otherwise
            `asc`."
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/pull-request-simple"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List pull requests
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: sailor-v
            note: >-
              You can now use the REST API to add a reason when you lock an issue, and
              you will see lock reasons in responses that include issues or pull
              requests. You will also see lock reasons in `locked` events. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview)
              for full details. To access this feature, you must provide a
              custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.sailor-v-preview+json

              ```
            required: false
    post:
      description: Draft pull requests are available in public repositories with
        GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise
        Cloud. You can create a new pull request. This endpoint triggers
        [notifications](https://docs.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)"
        for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#create-a-pull-request
      operationId: pulls/create
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              base: master
              body: Please pull these awesome changes in!
              head: octocat:new-feature
              title: Amazing new feature
            schema:
              properties:
                base:
                  description: The name of the branch you want the changes pulled into. This
                    should be an existing branch on the current repository. You
                    cannot submit a pull request to one repository that requests
                    a merge to a base of another repository.
                  type: string
                body:
                  description: The contents of the pull request.
                  type: string
                draft:
                  description: Indicates whether the pull request is a draft. See "[Draft Pull
                    Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)"
                    in the GitHub Help documentation to learn more.
                  type: boolean
                head:
                  description: "The name of the branch where your changes are implemented. For
                    cross-repository pull requests in the same network,
                    namespace `head` with a user like this: `username:branch`."
                  type: string
                issue:
                  example: 1
                  type: integer
                maintainer_can_modify:
                  description: Indicates whether [maintainers can
                    modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/)
                    the pull request.
                  type: boolean
                title:
                  description: The title of the new pull request.
                  type: string
              required:
                - head
                - base
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request"
              schema:
                $ref: "#/components/schemas/pull-request"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: sailor-v
            note: >-
              You can now use the REST API to add a reason when you lock an issue, and
              you will see lock reasons in responses that include issues or pull
              requests. You will also see lock reasons in `locked` events. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview)
              for full details. To access this feature, you must provide a
              custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.sailor-v-preview+json

              ```
            required: false
        triggersNotification: true
  "/repos/{owner}/{repo}/pulls/comments":
    get:
      description: Lists review comments for all pull requests in a repository. By
        default, review comments are in ascending order by ID.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-review-comments-in-a-repository
      operationId: pulls/list-review-comments-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: query
          name: sort
          required: false
          schema:
            enum:
              - created
              - updated
              - created_at
            type: string
        - description: Can be either `asc` or `desc`. Ignored without `sort` parameter.
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/pull-request-review-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List review comments in a repository
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: comfort-fade
            note: >-
              Multi-line comments in a pull request diff is currently available for
              developers to preview. During the preview period, these response
              fields may change without advance notice. See the [blog
              post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
              for more information.


              To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.comfort-fade-preview+json

              ```


              To show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.


              If you use the `comfort-fade` preview header, your response will show:


              *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.

              *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.


              If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:


              *   For multi-line comments, the last line of the comment range for the `position` attribute.

              *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.
            required: false
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}":
    delete:
      description: Deletes a review comment.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#delete-a-review-comment-for-a-pull-request
      operationId: pulls/delete-review-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a review comment for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: comments
    get:
      description: Provides details for a review comment.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-review-comment-for-a-pull-request
      operationId: pulls/get-review-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-comment-2"
              schema:
                $ref: "#/components/schemas/pull-request-review-comment"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a review comment for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: comfort-fade
            note: >-
              Multi-line comments in a pull request diff is currently available for
              developers to preview. During the preview period, these response
              fields may change without advance notice. See the [blog
              post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
              for more information.


              To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.comfort-fade-preview+json

              ```


              To show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.


              If you use the `comfort-fade` preview header, your response will show:


              *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.

              *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.


              If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:


              *   For multi-line comments, the last line of the comment range for the `position` attribute.

              *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.
            required: false
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
    patch:
      description: Enables you to edit a review comment.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#update-a-review-comment-for-a-pull-request
      operationId: pulls/update-review-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            example:
              body: I like this too!
            schema:
              properties:
                body:
                  description: The text of the reply to the review comment.
                  type: string
              required:
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-comment-2"
              schema:
                $ref: "#/components/schemas/pull-request-review-comment"
          description: Response
      summary: Update a review comment for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: comfort-fade
            note: >-
              Multi-line comments in a pull request diff is currently available for
              developers to preview. During the preview period, these response
              fields may change without advance notice. See the [blog
              post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
              for more information.


              To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.comfort-fade-preview+json

              ```


              To show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.


              If you use the `comfort-fade` preview header, your response will show:


              *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.

              *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.


              If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:


              *   For multi-line comments, the last line of the comment range for the `position` attribute.

              *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.
            required: false
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions":
    get:
      description: List the reactions to a [pull request review
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#review-comments).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-pull-request-review-comment
      operationId: reactions/list-for-pull-request-review-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to a pull request review
            comment.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List reactions for a pull request review comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: Create a reaction to a [pull request review
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#comments).
        A response with an HTTP `200` status means that you already added the
        reaction type to this pull request review comment.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-pull-request-review-comment
      operationId: reactions/create-for-pull-request-review-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the pull request review comment.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Reaction exists
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Reaction created
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create reaction for a pull request review comment
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      description: >-
        **Note:** You can also specify a repository by `repository_id`
        using the route `DELETE
        /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`


        Delete a reaction to a [pull request review comment](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#review-comments).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-a-pull-request-comment-reaction
      operationId: reactions/delete-for-pull-request-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/comment_id"
        - $ref: "#/components/parameters/reaction-id"
      responses:
        "204":
          description: Response
      summary: Delete a pull request comment reaction
      tags:
        - reactions
      x-github:
        category: reactions
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/pulls/{pull_number}":
    get:
      description: >-
        Draft pull requests are available in public repositories with
        GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team and GitHub Enterprise Cloud. For more information, see
        [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists details of a pull request by providing its number.


        When you get, [create](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".


        The value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.


        The value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:


        *   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.

        *   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.

        *   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.


        Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request
      operationId: pulls/get
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request"
              schema:
                $ref: "#/components/schemas/pull-request"
          description: Pass the appropriate [media
            type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests)
            to fetch diff and patch formats.
        "304":
          $ref: "#/components/responses/not_modified"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_error"
      summary: Get a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: Draft pull requests are available in public repositories with
        GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise
        Cloud.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls/#update-a-pull-request
      operationId: pulls/update
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            example:
              base: master
              body: updated body
              state: open
              title: new title
            schema:
              properties:
                base:
                  description: The name of the branch you want your changes pulled into. This
                    should be an existing branch on the current repository. You
                    cannot update the base branch on a pull request to point to
                    another repository.
                  type: string
                body:
                  description: The contents of the pull request.
                  type: string
                maintainer_can_modify:
                  description: Indicates whether [maintainers can
                    modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/)
                    the pull request.
                  type: boolean
                state:
                  description: State of this Pull Request. Either `open` or `closed`.
                  enum:
                    - open
                    - closed
                  type: string
                title:
                  description: The title of the pull request.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request"
              schema:
                $ref: "#/components/schemas/pull-request"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: sailor-v
            note: >-
              You can now use the REST API to add a reason when you lock an issue, and
              you will see lock reasons in responses that include issues or pull
              requests. You will also see lock reasons in `locked` events. This
              feature is currently available for developers to preview. See the
              [blog
              post](https://developer.github.com/changes/2018-01-10-lock-reason-api-preview)
              for full details. To access this feature, you must provide a
              custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.sailor-v-preview+json

              ```
            required: false
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments":
    get:
      description: Lists all review comments for a pull request. By default, review
        comments are in ascending order by ID.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-review-comments-on-a-pull-request
      operationId: pulls/list-review-comments
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/sort"
        - description: Can be either `asc` or `desc`. Ignored without `sort` parameter.
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/pull-request-review-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List review comments on a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: comfort-fade
            note: >-
              Multi-line comments in a pull request diff is currently available for
              developers to preview. During the preview period, these response
              fields may change without advance notice. See the [blog
              post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
              for more information.


              To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.comfort-fade-preview+json

              ```


              To show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.


              If you use the `comfort-fade` preview header, your response will show:


              *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.

              *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.


              If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:


              *   For multi-line comments, the last line of the comment range for the `position` attribute.

              *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.
            required: false
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        subcategory: comments
    post:
      description: >-
        
        Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see "[Create an issue comment](https://docs.github.com/enterprise-server@2.21/rest/reference/issues#create-an-issue-comment)." We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.


        You can still create a review comment using the `position` parameter. When you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required. For more information, see the [`comfort-fade` preview notice](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#create-a-review-comment-for-a-pull-request-preview-notices).


        **Note:** The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#create-a-review-comment-for-a-pull-request
      operationId: pulls/create-review-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            examples:
              example-for-a-multi-line-comment:
                summary: Example for a multi-line comment
                value:
                  body: Great stuff!
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  line: 2
                  path: file1.txt
                  side: RIGHT
                  start_line: 1
                  start_side: RIGHT
              example-for-a-single-line-comment:
                summary: Example for a single-line comment
                value:
                  body: Let's add this deleted line back.
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  line: 5
                  path: file1.txt
                  side: LEFT
            schema:
              properties:
                body:
                  description: The text of the review comment.
                  type: string
                commit_id:
                  description: The SHA of the commit needing a comment. Not using the latest
                    commit SHA may render your comment outdated if a subsequent
                    commit modifies the line you specify as the `position`.
                  type: string
                in_reply_to:
                  example: 2
                  type: integer
                line:
                  description: "**Required with `comfort-fade` preview**. The line of the blob in
                    the pull request diff that the comment applies to. For a
                    multi-line comment, the last line of the range that your
                    comment applies to."
                  type: integer
                path:
                  description: The relative path to the file that necessitates a comment.
                  type: string
                position:
                  description: "**Required without `comfort-fade` preview**. The position in the
                    diff where you want to add a review comment. Note this value
                    is not the same as the line number in the file. For help
                    finding the position value, read the note above."
                  type: integer
                side:
                  description: "**Required with `comfort-fade` preview**. In a split diff view,
                    the side of the diff that the pull request's changes appear
                    on. Can be `LEFT` or `RIGHT`. Use `LEFT` for deletions that
                    appear in red. Use `RIGHT` for additions that appear in
                    green or unchanged lines that appear in white and are shown
                    for context. For a multi-line comment, side represents
                    whether the last line of the comment range is a deletion or
                    addition. For more information, see \"[Diff view
                    options](https://help.github.com/en/articles/about-comparin\
                    g-branches-in-pull-requests#diff-view-options)\" in the
                    GitHub Help documentation."
                  enum:
                    - LEFT
                    - RIGHT
                  type: string
                start_line:
                  description: '**Required when using multi-line comments**. To create multi-line
                    comments, you must use the `comfort-fade` preview header.
                    The `start_line` is the first line in the pull request diff
                    that your multi-line comment applies to. To learn more about
                    multi-line comments, see "[Commenting on a pull
                    request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)"
                    in the GitHub Help documentation.'
                  type: integer
                start_side:
                  description: '**Required when using multi-line comments**. To create multi-line
                    comments, you must use the `comfort-fade` preview header.
                    The `start_side` is the starting side of the diff that the
                    comment applies to. Can be `LEFT` or `RIGHT`. To learn more
                    about multi-line comments, see "[Commenting on a pull
                    request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)"
                    in the GitHub Help documentation. See `side` in this table
                    for additional context.'
                  enum:
                    - LEFT
                    - RIGHT
                    - side
                  type: string
              required:
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                example-for-a-multi-line-comment:
                  $ref: "#/components/examples/pull-request-review-comment-example-for-a-multi-li\
                    ne-comment"
              schema:
                $ref: "#/components/schemas/pull-request-review-comment"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a review comment for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: comfort-fade
            note: >-
              Multi-line comments in a pull request diff is currently available for
              developers to preview. During the preview period, these response
              fields may change without advance notice. See the [blog
              post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
              for more information.


              To create multi-line comments or see multi-line comments with the new supported fields during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.comfort-fade-preview+json

              ```


              To show multi-line comment-supported fields in the response, use the `comfort-fade` preview header and the `line` parameter.


              If you use the `comfort-fade` preview header, your response will show:


              *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.

              *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.


              If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:


              *   For multi-line comments, the last line of the comment range for the `position` attribute.

              *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute.
            required: false
        subcategory: comments
        triggersNotification: true
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies":
    post:
      description: >-
        Creates a reply to a review comment for a pull request. For the
        `comment_id`, provide the ID of the review comment you are replying to.
        This must be the ID of a _top-level review comment_, not a reply to that
        comment. Replies to replies are not supported.


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#create-a-reply-for-a-review-comment
      operationId: pulls/create-reply-for-review-comment
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/comment_id"
      requestBody:
        content:
          application/json:
            example:
              body: Great stuff!
            schema:
              properties:
                body:
                  description: The text of the review comment.
                  type: string
              required:
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-comment"
              schema:
                $ref: "#/components/schemas/pull-request-review-comment"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        "404":
          $ref: "#/components/responses/not_found"
      summary: Create a reply for a review comment
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: comments
        triggersNotification: true
  "/repos/{owner}/{repo}/pulls/{pull_number}/commits":
    get:
      description: Lists a maximum of 250 commits for a pull request. To receive a
        complete commit list for pull requests with more than 250 commits, use
        the [List
        commits](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits)
        endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-commits-on-a-pull-request
      operationId: pulls/list-commits
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-items"
              schema:
                items:
                  $ref: "#/components/schemas/commit"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List commits on a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/pulls/{pull_number}/files":
    get:
      description: "**Note:** Responses include a maximum of 3000 files. The paginated
        response returns 30 files per page by default."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests-files
      operationId: pulls/list-files
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/diff-entry-items"
              schema:
                items:
                  $ref: "#/components/schemas/diff-entry"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "422":
          $ref: "#/components/responses/validation_failed"
        "500":
          $ref: "#/components/responses/internal_error"
      summary: List pull requests files
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/pulls/{pull_number}/merge":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#check-if-a-pull-request-has-been-merged
      operationId: pulls/check-if-merged
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      responses:
        "204":
          description: Response if pull request has been merged
        "404":
          description: Not Found if pull request has not been merged
      summary: Check if a pull request has been merged
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      description: This endpoint triggers
        [notifications](https://docs.github.com/enterprise-server@2.21/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)"
        and "[Dealing with abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)"
        for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#merge-a-pull-request
      operationId: pulls/merge
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              properties:
                commit_message:
                  description: Extra detail to append to automatic commit message.
                  type: string
                commit_title:
                  description: Title for the automatic commit message.
                  type: string
                merge_method:
                  description: Merge method to use. Possible values are `merge`, `squash` or
                    `rebase`. Default is `merge`.
                  enum:
                    - merge
                    - squash
                    - rebase
                  type: string
                sha:
                  description: SHA that pull request head must match to allow merge.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-merge-was-successful:
                  $ref: "#/components/examples/pull-request-merge-result-response-if-merge-was-su\
                    ccessful"
              schema:
                $ref: "#/components/schemas/pull-request-merge-result"
          description: if merge was successful
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "405":
          content:
            application/json:
              examples:
                response-if-merge-cannot-be-performed:
                  value:
                    message: Pull Request is not mergeable
              schema:
                properties:
                  documentation_url:
                    type: string
                  message:
                    type: string
                type: object
          description: Method Not Allowed if merge cannot be performed
        "409":
          content:
            application/json:
              examples:
                response-if-sha-was-provided-and-pull-request-head-did-not-match:
                  value:
                    message: Head branch was modified. Review and try the merge again.
              schema:
                properties:
                  documentation_url:
                    type: string
                  message:
                    type: string
                type: object
          description: Conflict if sha was provided and pull request head did not match
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Merge a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        triggersNotification: true
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#remove-requested-reviewers-from-a-pull-request
      operationId: pulls/remove-requested-reviewers
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            example:
              reviewers:
                - octocat
                - hubot
                - other_user
              team_reviewers:
                - justice-league
            schema:
              properties:
                reviewers:
                  description: An array of user `login`s that will be removed.
                  items:
                    type: string
                  type: array
                team_reviewers:
                  description: An array of team `slug`s that will be removed.
                  items:
                    type: string
                  type: array
              required:
                - reviewers
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pull-request-simple"
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Remove requested reviewers from a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: review-requests
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-requested-reviewers-for-a-pull-request
      operationId: pulls/list-requested-reviewers
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-pull-request-review-request"
              schema:
                $ref: "#/components/schemas/pull-request-review-request"
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List requested reviewers for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: review-requests
    post:
      description: This endpoint triggers
        [notifications](https://docs.github.com/enterprise-server@2.21/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)"
        and "[Dealing with abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)"
        for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#request-reviewers-for-a-pull-request
      operationId: pulls/request-reviewers
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            example:
              reviewers:
                - octocat
                - hubot
                - other_user
              team_reviewers:
                - justice-league
            schema:
              anyOf:
                - required:
                    - reviewers
                - required:
                    - team_reviewers
              properties:
                reviewers:
                  description: An array of user `login`s that will be requested.
                  items:
                    type: string
                  type: array
                team_reviewers:
                  description: An array of team `slug`s that will be requested.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-request"
              schema:
                $ref: "#/components/schemas/pull-request-simple"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          description: Unprocessable Entity if user is not a collaborator
      summary: Request reviewers for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: review-requests
        triggersNotification: true
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews":
    get:
      description: The list of reviews returns in chronological order.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-reviews-for-a-pull-request
      operationId: pulls/list-reviews
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-items"
              schema:
                items:
                  $ref: "#/components/schemas/pull-request-review"
                type: array
          description: The list of reviews returns in chronological order.
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List reviews for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
    post:
      description: >-
        This endpoint triggers
        [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)"
        and "[Dealing with abuse rate
        limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)"
        for details.


        Pull request reviews created in the `PENDING` state do not include the `submitted_at` property in the response.


        **Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request) endpoint.


        The `position` value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#create-a-review-for-a-pull-request
      operationId: pulls/create-review
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            example:
              body: This is close to perfect! Please address the suggested inline change.
              comments:
                - body: Please add more information here, and fix this typo.
                  path: file.md
                  position: 6
              commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
              event: REQUEST_CHANGES
            schema:
              properties:
                body:
                  description: "**Required** when using `REQUEST_CHANGES` or `COMMENT` for the
                    `event` parameter. The body text of the pull request
                    review."
                  type: string
                comments:
                  description: Use the following table to specify the location, destination, and
                    contents of the draft review comment.
                  items:
                    properties:
                      body:
                        description: Text of the review comment.
                        type: string
                      line:
                        example: 28
                        type: integer
                      path:
                        description: The relative path to the file that necessitates a review comment.
                        type: string
                      position:
                        description: The position in the diff where you want to add a review comment.
                          Note this value is not the same as the line number in
                          the file. For help finding the position value, read
                          the note below.
                        type: integer
                      side:
                        example: RIGHT
                        type: string
                      start_line:
                        example: 26
                        type: integer
                      start_side:
                        example: LEFT
                        type: string
                    required:
                      - path
                      - body
                    type: object
                  type: array
                commit_id:
                  description: The SHA of the commit that needs a review. Not using the latest
                    commit SHA may render your review comment outdated if a
                    subsequent commit modifies the line you specify as the
                    `position`. Defaults to the most recent commit in the pull
                    request when you do not specify a value.
                  type: string
                event:
                  description: "The review action you want to perform. The review actions include:
                    `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this
                    blank, you set the review action state to `PENDING`, which
                    means you will need to [submit the pull request
                    review](https://docs.github.com/enterprise-server@2.21/rest\
                    /reference/pulls#submit-a-review-for-a-pull-request) when
                    you are ready."
                  enum:
                    - APPROVE
                    - REQUEST_CHANGES
                    - COMMENT
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review"
              schema:
                $ref: "#/components/schemas/pull-request-review"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Create a review for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
        triggersNotification: true
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#delete-a-pending-review-for-a-pull-request
      operationId: pulls/delete-pending-review
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/review_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review"
              schema:
                $ref: "#/components/schemas/pull-request-review"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Delete a pending review for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-review-for-a-pull-request
      operationId: pulls/get-review
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/review_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-4"
              schema:
                $ref: "#/components/schemas/pull-request-review"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a review for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
    put:
      description: Update the review summary comment with new text.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#update-a-review-for-a-pull-request
      operationId: pulls/update-review
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/review_id"
      requestBody:
        content:
          application/json:
            example:
              body: This is close to perfect! Please address the suggested inline change. And
                add more about this.
            schema:
              properties:
                body:
                  description: The body text of the pull request review.
                  type: string
              required:
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-5"
              schema:
                $ref: "#/components/schemas/pull-request-review"
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Update a review for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments":
    get:
      description: List comments for a specific pull request review.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-comments-for-a-pull-request-review
      operationId: pulls/list-comments-for-review
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/review_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/review-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/review-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List comments for a pull request review
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals":
    put:
      description: "**Note:** To dismiss a pull request review on a [protected
        branch](https://docs.github.com/enterprise-server@2.21/rest/reference/r\
        epos#branches), you must be a repository administrator or be included in
        the list of people or teams who can dismiss pull request reviews."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#dismiss-a-review-for-a-pull-request
      operationId: pulls/dismiss-review
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/review_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                event:
                  example: '"APPROVE"'
                  type: string
                message:
                  description: The message for the pull request review dismissal
                  type: string
              required:
                - message
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-3"
              schema:
                $ref: "#/components/schemas/pull-request-review"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Dismiss a review for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events":
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#submit-a-review-for-a-pull-request
      operationId: pulls/submit-review
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
        - $ref: "#/components/parameters/review_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The body text of the pull request review
                  type: string
                event:
                  description: "The review action you want to perform. The review actions include:
                    `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave
                    this blank, the API returns _HTTP 422 (Unrecognizable
                    entity)_ and sets the review action state to `PENDING`,
                    which means you will need to re-submit the pull request
                    review using a review action."
                  enum:
                    - APPROVE
                    - REQUEST_CHANGES
                    - COMMENT
                  type: string
              required:
                - event
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/pull-request-review-4"
              schema:
                $ref: "#/components/schemas/pull-request-review"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Submit a review for a pull request
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch":
    put:
      description: Updates the pull request branch with the latest upstream changes by
        merging HEAD from the base branch into the pull request branch.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#update-a-pull-request-branch
      operationId: pulls/update-branch
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/pull-number"
      requestBody:
        content:
          application/json:
            example:
              expected_head_sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            schema:
              nullable: true
              properties:
                expected_head_sha:
                  description: "The expected SHA of the pull request's HEAD ref. This is the most
                    recent commit on the pull request's branch. If the expected
                    SHA does not match the pull request's HEAD, you will receive
                    a `422 Unprocessable Entity` status. You can use the \"[List
                    commits](https://docs.github.com/enterprise-server@2.21/res\
                    t/reference/repos#list-commits)\" endpoint to find the most
                    recent commit SHA. Default: SHA of the pull request's
                    current HEAD ref."
                  type: string
              type: object
      responses:
        "202":
          content:
            application/json:
              example:
                message: Updating pull request branch.
                url: https://github.com/repos/octocat/Hello-World/pulls/53
              schema:
                properties:
                  message:
                    type: string
                  url:
                    type: string
                type: object
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update a pull request branch
      tags:
        - pulls
      x-github:
        category: pulls
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: lydian
            note: >-
              Updating the pull request branch with latest upstream changes is currently
              available for developers to preview. To access this new endpoint
              during the preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.lydian-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/readme":
    get:
      description: >-
        Gets the preferred README for a repository.


        READMEs support [custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-repository-readme
      operationId: repos/get-readme
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: "The name of the commit/branch/tag. Default: the repository’s
            default branch (usually `master`)"
          in: query
          name: ref
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/content-file"
              schema:
                $ref: "#/components/schemas/content-file"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get a repository README
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: contents
  "/repos/{owner}/{repo}/readme/{dir}":
    get:
      description: >-
        Gets the README from a repository directory.


        READMEs support [custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-repository-directory-readme
      operationId: repos/get-readme-in-directory
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: The alternate path to look for a README file
          in: path
          name: dir
          required: true
          schema:
            type: string
          x-multi-segment: true
        - description: "The name of the commit/branch/tag. Default: the repository’s
            default branch (usually `master`)"
          in: query
          name: ref
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/content-file"
              schema:
                $ref: "#/components/schemas/content-file"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get a repository README for a directory
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: contents
  "/repos/{owner}/{repo}/releases":
    get:
      description: >-
        This returns a list of releases, which does not include regular Git
        tags that have not been associated with a release. To get a list of Git
        tags, use the [Repository Tags
        API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-tags).


        Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-releases
      operationId: repos/list-releases
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release-items"
              schema:
                items:
                  $ref: "#/components/schemas/release"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List releases
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
    post:
      description: >-
        Users with push access to the repository can create a release.


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-release
      operationId: repos/create-release
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              body: Description of the release
              draft: false
              name: v1.0.0
              prerelease: false
              tag_name: v1.0.0
              target_commitish: master
            schema:
              properties:
                body:
                  description: Text describing the contents of the tag.
                  type: string
                draft:
                  default: false
                  description: "`true` to create a draft (unpublished) release, `false` to create
                    a published one."
                  type: boolean
                name:
                  description: The name of the release.
                  type: string
                prerelease:
                  default: false
                  description: "`true` to identify the release as a prerelease. `false` to
                    identify the release as a full release."
                  type: boolean
                tag_name:
                  description: The name of the tag.
                  type: string
                target_commitish:
                  description: "Specifies the commitish value that determines where the Git tag is
                    created from. Can be any branch or commit SHA. Unused if the
                    Git tag already exists. Default: the repository's default
                    branch (usually `master`)."
                  type: string
              required:
                - tag_name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release"
              schema:
                $ref: "#/components/schemas/release"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/releases/1
              schema:
                type: string
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a release
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
        triggersNotification: true
  "/repos/{owner}/{repo}/releases/assets/{asset_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-release-asset
      operationId: repos/delete-release-asset
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/asset_id"
      responses:
        "204":
          description: Response
      summary: Delete a release asset
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
    get:
      description: To download the asset's binary content, set the `Accept` header of
        the request to
        [`application/octet-stream`](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types).
        The API will either redirect the client to the location, or stream it
        directly if possible. API clients should handle both a `200` or `302`
        response.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-release-asset
      operationId: repos/get-release-asset
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/asset_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release-asset"
              schema:
                $ref: "#/components/schemas/release-asset"
          description: To download the asset's binary content, set the `Accept` header of
            the request to
            [`application/octet-stream`](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types).
            The API will either redirect the client to the location, or stream
            it directly if possible. API clients should handle both a `200` or
            `302` response.
        "302":
          $ref: "#/components/responses/found"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get a release asset
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
    patch:
      description: Users with push access to the repository can edit a release asset.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-a-release-asset
      operationId: repos/update-release-asset
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/asset_id"
      requestBody:
        content:
          application/json:
            example:
              label: Mac binary
              name: foo-1.0.0-osx.zip
            schema:
              properties:
                label:
                  description: An alternate short description of the asset. Used in place of the
                    filename.
                  type: string
                name:
                  description: The file name of the asset.
                  type: string
                state:
                  example: '"uploaded"'
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release-asset"
              schema:
                $ref: "#/components/schemas/release-asset"
          description: Response
      summary: Update a release asset
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
  "/repos/{owner}/{repo}/releases/latest":
    get:
      description: >-
        View the latest published full release for the repository.


        The latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-the-latest-release
      operationId: repos/get-latest-release
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release"
              schema:
                $ref: "#/components/schemas/release"
          description: Response
      summary: Get the latest release
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
  "/repos/{owner}/{repo}/releases/tags/{tag}":
    get:
      description: Get a published release with the specified tag.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-release-by-tag-name
      operationId: repos/get-release-by-tag
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - description: tag parameter
          in: path
          name: tag
          required: true
          schema:
            type: string
          x-multi-segment: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release"
              schema:
                $ref: "#/components/schemas/release"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a release by tag name
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
  "/repos/{owner}/{repo}/releases/{release_id}":
    delete:
      description: Users with push access to the repository can delete a release.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#delete-a-release
      operationId: repos/delete-release
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/release_id"
      responses:
        "204":
          description: Response
      summary: Delete a release
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
    get:
      description: "**Note:** This returns an `upload_url` key corresponding to the
        endpoint for uploading release assets. This key is a [hypermedia
        resource](https://docs.github.com/enterprise-server@2.21/rest/overview/\
        resources-in-the-rest-api#hypermedia)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-release
      operationId: repos/get-release
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/release_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release"
              schema:
                $ref: "#/components/schemas/release"
          description: "**Note:** This returns an `upload_url` key corresponding to the
            endpoint for uploading release assets. This key is a [hypermedia
            resource](https://docs.github.com/enterprise-server@2.21/rest/overv\
            iew/resources-in-the-rest-api#hypermedia)."
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a release
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
    patch:
      description: Users with push access to the repository can edit a release.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#update-a-release
      operationId: repos/update-release
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/release_id"
      requestBody:
        content:
          application/json:
            example:
              body: Description of the release
              draft: false
              name: v1.0.0
              prerelease: false
              tag_name: v1.0.0
              target_commitish: master
            schema:
              properties:
                body:
                  description: Text describing the contents of the tag.
                  type: string
                draft:
                  description: "`true` makes the release a draft, and `false` publishes the
                    release."
                  type: boolean
                name:
                  description: The name of the release.
                  type: string
                prerelease:
                  description: "`true` to identify the release as a prerelease, `false` to
                    identify the release as a full release."
                  type: boolean
                tag_name:
                  description: The name of the tag.
                  type: string
                target_commitish:
                  description: "Specifies the commitish value that determines where the Git tag is
                    created from. Can be any branch or commit SHA. Unused if the
                    Git tag already exists. Default: the repository's default
                    branch (usually `master`)."
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release"
              schema:
                $ref: "#/components/schemas/release"
          description: Response
      summary: Update a release
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
  "/repos/{owner}/{repo}/releases/{release_id}/assets":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-release-assets
      operationId: repos/list-release-assets
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/release_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/release-asset-items"
              schema:
                items:
                  $ref: "#/components/schemas/release-asset"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List release assets
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
    post:
      description: >-
        This endpoint makes use of [a Hypermedia
        relation](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#hypermedia)
        to determine which URL to access. The endpoint you call to upload
        release assets is specific to your release. Use the `upload_url`
        returned in

        the response of the [Create a release endpoint](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-release) to upload a release asset.


        You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.


        Most libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: 


        `application/zip`


        GitHub Enterprise Server expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,

        you'll still need to pass your authentication to be able to upload an asset.


        When an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.


        **Notes:**

        *   GitHub Enterprise Server renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The "[List assets for a release](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-assets-for-a-release)"

        endpoint lists the renamed filenames. For more information and help, contact [GitHub Enterprise Server Support](https://support.github.com/contact).

        *   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#upload-a-release-asset
      operationId: repos/upload-release-asset
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/release_id"
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: label
          schema:
            type: string
      requestBody:
        content:
          "*/*":
            schema:
              description: The raw file data
              type: string
      responses:
        "201":
          content:
            application/json:
              examples:
                response-for-successful-upload:
                  $ref: "#/components/examples/release-asset-response-for-successful-upload"
              schema:
                $ref: "#/components/schemas/release-asset"
          description: Response for successful upload
      servers:
        - url: "{origin}"
          variables:
            origin:
              default: https://uploads.github.com
              description: The URL origin (protocol + host name + port) is included in
                `upload_url` returned in the response of the "Create a release"
                endpoint
      summary: Upload a release asset
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: releases
  "/repos/{owner}/{repo}/stargazers":
    get:
      description: >-
        Lists the people that have starred the repository.


        You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-stargazers
      operationId: activity/list-stargazers-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                alternative-response-with-star-creation-timestamps:
                  $ref: "#/components/examples/stargazer-items-alternative-response-with-star-cre\
                    ation-timestamps"
                default-response:
                  $ref: "#/components/examples/simple-user-items-default-response"
              schema:
                anyOf:
                  - items:
                      $ref: "#/components/schemas/simple-user"
                    type: array
                  - items:
                      $ref: "#/components/schemas/stargazer"
                    type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List stargazers
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: starring
  "/repos/{owner}/{repo}/stats/code_frequency":
    get:
      description: Returns a weekly aggregate of the number of additions and deletions
        pushed to a repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-the-weekly-commit-activity
      operationId: repos/get-code-frequency-stats
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/code-frequency-stat-items"
              schema:
                items:
                  $ref: "#/components/schemas/code-frequency-stat"
                type: array
          description: Returns a weekly aggregate of the number of additions and deletions
            pushed to a repository.
        "202":
          $ref: "#/components/responses/accepted"
        "204":
          $ref: "#/components/responses/no_content"
      summary: Get the weekly commit activity
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/commit_activity":
    get:
      description: Returns the last year of commit activity grouped by week. The
        `days` array is a group of commits per day, starting on `Sunday`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-the-last-year-of-commit-activity
      operationId: repos/get-commit-activity-stats
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-activity-items"
              schema:
                items:
                  $ref: "#/components/schemas/commit-activity"
                type: array
          description: Response
        "202":
          $ref: "#/components/responses/accepted"
        "204":
          $ref: "#/components/responses/no_content"
      summary: Get the last year of commit activity
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/contributors":
    get:
      description: >-
        
        Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:


        *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).

        *   `a` - Number of additions

        *   `d` - Number of deletions

        *   `c` - Number of commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-all-contributor-commit-activity
      operationId: repos/get-contributors-stats
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/contributor-activity-items"
              schema:
                items:
                  $ref: "#/components/schemas/contributor-activity"
                type: array
          description: >-
            *   `w` - Start of the week, given as a [Unix
            timestamp](http://en.wikipedia.org/wiki/Unix_time).

            *   `a` - Number of additions

            *   `d` - Number of deletions

            *   `c` - Number of commits
        "202":
          $ref: "#/components/responses/accepted"
        "204":
          $ref: "#/components/responses/no_content"
      summary: Get all contributor commit activity
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/participation":
    get:
      description: >-
        Returns the total commit counts for the `owner` and total commit
        counts in `all`. `all` is everyone combined, including the `owner` in
        the last 52 weeks. If you'd like to get the commit counts for
        non-owners, you can subtract `owner` from `all`.


        The array order is oldest week (index 0) to most recent week.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-the-weekly-commit-count
      operationId: repos/get-participation-stats
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/participation-stats"
              schema:
                $ref: "#/components/schemas/participation-stats"
          description: The array order is oldest week (index 0) to most recent week.
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get the weekly commit count
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/punch_card":
    get:
      description: >-
        Each array contains the day number, hour number, and number of
        commits:


        *   `0-6`: Sunday - Saturday

        *   `0-23`: Hour of day

        *   Number of commits


        For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-the-hourly-commit-count-for-each-day
      operationId: repos/get-punch-card-stats
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/code-frequency-stat-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/code-frequency-stat"
                type: array
          description: For example, `[2, 14, 25]` indicates that there were 25 total
            commits, during the 2:00pm hour on Tuesdays. All times are based on
            the time zone of individual commits.
        "204":
          $ref: "#/components/responses/no_content"
      summary: Get the hourly commit count for each day
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statistics
  "/repos/{owner}/{repo}/statuses/{sha}":
    post:
      description: >-
        Users with push access in a repository can create commit statuses
        for a given SHA.


        Note: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-commit-status
      operationId: repos/create-commit-status
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: sha
          required: true
          schema:
            type: string
          x-multi-segment: true
      requestBody:
        content:
          application/json:
            example:
              context: continuous-integration/jenkins
              description: The build succeeded!
              state: success
              target_url: https://example.com/build/status
            schema:
              properties:
                context:
                  default: default
                  description: A string label to differentiate this status from the status of
                    other systems. This field is case-insensitive.
                  type: string
                description:
                  description: A short description of the status.
                  type: string
                state:
                  description: The state of the status. Can be one of `error`, `failure`,
                    `pending`, or `success`.
                  enum:
                    - error
                    - failure
                    - pending
                    - success
                  type: string
                target_url:
                  description: >-
                    The target URL to associate with this status. This URL will be
                    linked from the GitHub UI to allow users to easily see the
                    source of the status.  

                    For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  

                    `http://ci.example.com/user/repo/build/sha`
                  type: string
              required:
                - state
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/status"
              schema:
                $ref: "#/components/schemas/status"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
              schema:
                type: string
      summary: Create a commit status
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: statuses
  "/repos/{owner}/{repo}/subscribers":
    get:
      description: Lists the people watching the specified repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-watchers
      operationId: activity/list-watchers-for-repo
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List watchers
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: watching
  "/repos/{owner}/{repo}/subscription":
    delete:
      description: This endpoint should only be used to stop watching a repository. To
        control whether or not you wish to receive notifications from a
        repository, [set the repository's subscription
        manually](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#set-a-repository-subscription).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#delete-a-repository-subscription
      operationId: activity/delete-repo-subscription
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
      summary: Delete a repository subscription
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: watching
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#get-a-repository-subscription
      operationId: activity/get-repo-subscription
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-you-subscribe-to-the-repository:
                  $ref: "#/components/examples/repository-subscription-response-if-you-subscribe-\
                    to-the-repository"
              schema:
                $ref: "#/components/schemas/repository-subscription"
          description: if you subscribe to the repository
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          description: Not Found if you don't subscribe to the repository
      summary: Get a repository subscription
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: watching
    put:
      description: If you would like to watch a repository, set `subscribed` to
        `true`. If you would like to ignore notifications made within a
        repository, set `ignored` to `true`. If you would like to stop watching
        a repository, [delete the repository's
        subscription](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#delete-a-repository-subscription)
        completely.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#set-a-repository-subscription
      operationId: activity/set-repo-subscription
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ignored:
                  description: Determines if all notifications should be blocked from this
                    repository.
                  type: boolean
                subscribed:
                  description: Determines if notifications should be received from this
                    repository.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-subscription"
              schema:
                $ref: "#/components/schemas/repository-subscription"
          description: Response
      summary: Set a repository subscription
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: watching
  "/repos/{owner}/{repo}/tags":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-tags
      operationId: repos/list-tags
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/tag-items"
              schema:
                items:
                  $ref: "#/components/schemas/tag"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List repository tags
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/tarball/{ref}":
    get:
      description: >-
        Gets a redirect URL to download a tar archive for a repository. If
        you omit `:ref`, the repository’s default branch (usually

        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use

        the `Location` header to make a second `GET` request.

        **Note**: For private repositories, these links are temporary and expire after five minutes.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#download-a-repository-archive
      operationId: repos/download-tarball-archive
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: ref
          required: true
          schema:
            type: string
      responses:
        "302":
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      summary: Download a repository archive (tar)
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: contents
  "/repos/{owner}/{repo}/teams":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-teams
      operationId: repos/list-teams
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-items"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List repository teams
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/topics":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-all-repository-topics
      operationId: repos/get-all-topics
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/topic"
              schema:
                $ref: "#/components/schemas/topic"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Get all repository topics
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#replace-all-repository-topics
      operationId: repos/replace-all-topics
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              names:
                - octocat
                - atom
                - electron
                - api
            schema:
              properties:
                names:
                  description: An array of topics to add to the repository. Pass one or more
                    topics to _replace_ the set of existing topics. Send an
                    empty array (`[]`) to clear all topics from the repository.
                    **Note:** Topic `names` cannot contain uppercase letters.
                  items:
                    type: string
                  type: array
              required:
                - names
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/topic"
              schema:
                $ref: "#/components/schemas/topic"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Replace all repository topics
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/transfer":
    post:
      description: A transfer request will need to be accepted by the new owner when
        transferring a personal repository to another user. The response will
        contain the original `owner`, and the transfer will continue
        asynchronously. For more details on the requirements to transfer
        personal and organization-owned repositories, see [about repository
        transfers](https://help.github.com/articles/about-repository-transfers/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#transfer-a-repository
      operationId: repos/transfer
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            example:
              new_owner: github
              team_ids:
                - 12
                - 345
            schema:
              properties:
                new_owner:
                  description: The username or organization name the repository will be
                    transferred to.
                  type: string
                team_ids:
                  description: ID of the team or teams to add to the repository. Teams can only be
                    added to organization-owned repositories.
                  items:
                    type: integer
                  type: array
              required:
                - new_owner
              type: object
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository"
              schema:
                $ref: "#/components/schemas/minimal-repository"
          description: Response
      summary: Transfer a repository
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/repos/{owner}/{repo}/zipball/{ref}":
    get:
      description: >-
        Gets a redirect URL to download a zip archive for a repository. If
        you omit `:ref`, the repository’s default branch (usually

        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use

        the `Location` header to make a second `GET` request.

        **Note**: For private repositories, these links are temporary and expire after five minutes.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#download-a-repository-archive
      operationId: repos/download-zipball-archive
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - in: path
          name: ref
          required: true
          schema:
            type: string
      responses:
        "302":
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      summary: Download a repository archive (zip)
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: contents
  "/repos/{template_owner}/{template_repo}/generate":
    post:
      description: >-
        Creates a new repository using a repository template. Use the
        `template_owner` and `template_repo` route parameters to specify the
        repository to use as the template. The authenticated user must own or be
        a member of an organization that owns the repository. To check if a
        repository is available to use as a template, get the repository's
        information using the [Get a
        repository](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-a-repository)
        endpoint and check that the `is_template` key is `true`.


        **OAuth scope requirements**


        When using [OAuth](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:


        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.

        *   `repo` scope to create a private repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-using-a-template
      operationId: repos/create-using-template
      parameters:
        - in: path
          name: template_owner
          required: true
          schema:
            type: string
        - in: path
          name: template_repo
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              description: This is your first repository
              include_all_branches: false
              name: Hello-World
              owner: octocat
              private: false
            schema:
              properties:
                description:
                  description: A short description of the new repository.
                  type: string
                include_all_branches:
                  default: false
                  description: "Set to `true` to include the directory structure and files from
                    all branches in the template repository, and not just the
                    default branch. Default: `false`."
                  type: boolean
                name:
                  description: The name of the new repository.
                  type: string
                owner:
                  description: The organization or person who will own the new repository. To
                    create a new repository in an organization, the
                    authenticated user must be a member of the specified
                    organization.
                  type: string
                private:
                  default: false
                  description: Either `true` to create a new private repository or `false` to
                    create a new public one.
                  type: boolean
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-3"
              schema:
                $ref: "#/components/schemas/repository"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
      summary: Create a repository using a template
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: baptiste
            note: >-
              Creating and using repository templates is currently available for
              developers to preview. To access this new endpoint during the
              preview period, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:


              ```shell

              application/vnd.github.baptiste-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /repositories:
    get:
      description: >-
        Lists all public repositories in the order that they were created.


        Note:

        - For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.

        - Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-public-repositories
      operationId: repos/list-public
      parameters:
        - $ref: "#/components/parameters/since-repo"
        - description: "Specifies the types of repositories to return. Can be one of `all`
            or `public`. Default: `public`. Note: For GitHub Enterprise Server
            and GitHub AE, this endpoint will only list repositories available
            to all users on the enterprise."
          in: query
          name: visibility
          required: false
          schema:
            default: public
            enum:
              - all
              - public
            example: all
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/public-repository-items"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              example: <https://api.github.com/repositories?since=364>; rel="next"
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List public repositories
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /search/code:
    get:
      description: >-
        Searches for query terms inside of a file. This method returns up
        to 100 results [per
        page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).


        When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).


        For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:


        `q=addClass+in:file+language:js+repo:jquery/jquery`


        This query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.


        #### Considerations for code search


        Due to the complexity of searching code, there are a few restrictions on how searches are performed:


        *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.

        *   Only files smaller than 384 KB are searchable.

        *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing

        language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/search#search-code
      operationId: search/code
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/enterprise-server@2.21/rest/reference/search#constructing-a-search-query).
            See "[Searching
            code](https://help.github.com/articles/searching-code/)" for a
            detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query. Can only be `indexed`, which
            indicates how recently a file has been indexed by the GitHub
            Enterprise Server search infrastructure. Default: [best
            match](https://docs.github.com/enterprise-server@2.21/rest/referenc\
            e/search#ranking-search-results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - indexed
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/code-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/code-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search code
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /search/commits:
    get:
      description: >-
        Find commits via various criteria on the default branch (usually
        `master`). This method returns up to 100 results [per
        page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).


        When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match

        metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).


        For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:


        `q=repo:octocat/Spoon-Knife+css`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/search#search-commits
      operationId: search/commits
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/enterprise-server@2.21/rest/reference/search#constructing-a-search-query).
            See "[Searching
            commits](https://help.github.com/articles/searching-commits/)" for a
            detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by `author-date` or
            `committer-date`. Default: [best
            match](https://docs.github.com/enterprise-server@2.21/rest/referenc\
            e/search#ranking-search-results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - author-date
              - committer-date
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/commit-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Search commits
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: cloak
            note: >-
              The Commit Search API is currently available for developers to preview.
              During the preview period, the APIs may change without advance
              notice. Please see the [blog
              post](https://developer.github.com/changes/2017-01-05-commit-search-api/)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.cloak-preview

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /search/issues:
    get:
      description: >-
        Find issues by state and keyword. This method returns up to 100
        results [per
        page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).


        When searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted

        search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).


        For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.


        `q=windows+label:bug+language:python+state:open&sort=created&order=asc`


        This query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.


        **Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see "[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/search#search-issues-and-pull-requests
      operationId: search/issues-and-pull-requests
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/enterprise-server@2.21/rest/reference/search#constructing-a-search-query).
            See "[Searching issues and pull
            requests](https://help.github.com/articles/searching-issues-and-pull-requests/)"
            for a detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by the number of `comments`,
            `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`,
            `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or
            `interactions`. You can also sort results by how recently the items
            were `created` or `updated`, Default: [best
            match](https://docs.github.com/enterprise-server@2.21/rest/referenc\
            e/search#ranking-search-results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - comments
              - reactions
              - reactions-+1
              - reactions--1
              - reactions-smile
              - reactions-thinking_face
              - reactions-heart
              - reactions-tada
              - interactions
              - created
              - updated
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/issue-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search issues and pull requests
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /search/labels:
    get:
      description: >-
        Find labels in a repository with names or descriptions that match
        search keywords. Returns up to 100 results [per
        page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).


        When searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).


        For example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:


        `q=bug+defect+enhancement&repository_id=64778136`


        The labels that best match the query appear first in the search results.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/search#search-labels
      operationId: search/labels
      parameters:
        - description: The id of the repository.
          in: query
          name: repository_id
          required: true
          schema:
            type: integer
        - description: The search keywords. This endpoint does not accept qualifiers in
            the query. To learn more about the format of the query, see
            [Constructing a search
            query](https://docs.github.com/enterprise-server@2.21/rest/reference/search#constructing-a-search-query).
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by when the label was `created` or
            `updated`. Default: [best
            match](https://docs.github.com/enterprise-server@2.21/rest/referenc\
            e/search#ranking-search-results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - created
              - updated
            type: string
        - $ref: "#/components/parameters/order"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/label-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Search labels
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /search/repositories:
    get:
      description: >-
        Find repositories via various criteria. This method returns up to
        100 results [per
        page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).


        When searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).


        For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:


        `q=tetris+language:assembly&sort=stars&order=desc`


        This query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.


        When you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:


        `q=topic:ruby+topic:rails`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/search#search-repositories
      operationId: search/repos
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/enterprise-server@2.21/rest/reference/search#constructing-a-search-query).
            See "[Searching for
            repositories](https://help.github.com/articles/searching-for-repositories/)"
            for a detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by number of `stars`, `forks`, or
            `help-wanted-issues` or how recently the items were `updated`.
            Default: [best
            match](https://docs.github.com/enterprise-server@2.21/rest/referenc\
            e/search#ranking-search-results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - stars
              - forks
              - help-wanted-issues
              - updated
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repo-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/repo-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search repositories
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /search/topics:
    get:
      description: >-
        Find topics via various criteria. Results are sorted by best match.
        This method returns up to 100 results [per
        page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).
        See "[Searching
        topics](https://help.github.com/articles/searching-topics/)" for a
        detailed list of qualifiers.


        When searching for topics, you can get text match metadata for the topic's **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).


        For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:


        `q=ruby+is:featured`


        This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/search#search-topics
      operationId: search/topics
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/enterprise-server@2.21/rest/reference/search#constructing-a-search-query).
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/topic-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/topic-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Search topics
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /search/users:
    get:
      description: >-
        Find users via various criteria. This method returns up to 100
        results [per
        page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).


        When searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).


        For example, if you're looking for a list of popular users, you might try this query:


        `q=tom+repos:%3E42+followers:%3E1000`


        This query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/search#search-users
      operationId: search/users
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/enterprise-server@2.21/rest/reference/search#constructing-a-search-query).
            See "[Searching
            users](https://help.github.com/articles/searching-users/)" for a
            detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by number of `followers` or
            `repositories`, or when the person `joined` GitHub Enterprise
            Server. Default: [best
            match](https://docs.github.com/enterprise-server@2.21/rest/referenc\
            e/search#ranking-search-results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - followers
              - repositories
              - joined
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/user-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/user-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search users
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /setup/api/configcheck:
    get:
      description: >-
        This endpoint allows you to check the status of the most recent
        configuration process:


        Note that you may need to wait several seconds after you start a process before you can check its status.


        The different statuses are:


        | Status        | Description                       |

        | ------------- | --------------------------------- |

        | `PENDING`     | The job has not started yet       |

        | `CONFIGURING` | The job is running                |

        | `DONE`        | The job has finished correctly    |

        | `FAILED`      | The job has finished unexpectedly |
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-the-configuration-status
      operationId: enterprise-admin/get-configuration-status
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/configuration-status"
              schema:
                $ref: "#/components/schemas/configuration-status"
          description: Response
      summary: Get the configuration status
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
  /setup/api/configure:
    post:
      description: "This endpoint allows you to start a configuration process at any
        time for your updated settings to take effect:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#start-a-configuration-process
      operationId: enterprise-admin/start-configuration-process
      responses:
        "202":
          description: Response
      summary: Start a configuration process
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
  /setup/api/maintenance:
    get:
      description: "Check your installation's maintenance status:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-the-maintenance-status
      operationId: enterprise-admin/get-maintenance-status
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/maintenance-status"
              schema:
                $ref: "#/components/schemas/maintenance-status"
          description: Response
      summary: Get the maintenance status
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
    post:
      description: >-
        The possible values for `enabled` are `true` and `false`. When it's
        `false`, the attribute `when` is ignored and the maintenance mode is
        turned off. `when` defines the time period when the maintenance was
        enabled.


        The possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#enable-or-disable-maintenance-mode
      operationId: enterprise-admin/enable-or-disable-maintenance-mode
      requestBody:
        content:
          application/json:
            schema:
              properties:
                maintenance:
                  description: A JSON string with the attributes `enabled` and `when`.
                  type: string
              required:
                - maintenance
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/maintenance-status"
              schema:
                $ref: "#/components/schemas/maintenance-status"
          description: Response
      summary: Enable or disable maintenance mode
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
  /setup/api/settings:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-settings
      operationId: enterprise-admin/get-settings
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/enterprise-settings"
              schema:
                $ref: "#/components/schemas/enterprise-settings"
          description: Response
      summary: Get settings
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
    put:
      description: For a list of the available settings, see the [Get settings
        endpoint](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-settings).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#set-settings
      operationId: enterprise-admin/set-settings
      requestBody:
        content:
          application/json:
            schema:
              properties:
                settings:
                  description: A JSON string with the new settings. Note that you only need to
                    pass the specific settings you want to modify.
                  type: string
              required:
                - settings
              type: object
      responses:
        "204":
          description: Response
      summary: Set settings
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
  /setup/api/settings/authorized-keys:
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#remove-an-authorized-ssh-key
      operationId: enterprise-admin/remove-authorized-ssh-key
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authorized_key:
                  description: The path to the public SSH key.
                  type: string
              required:
                - authorized_key
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/ssh-key-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/ssh-key"
                type: array
          description: Response
      summary: Remove an authorized SSH key
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-all-authorized-ssh-keys
      operationId: enterprise-admin/get-all-authorized-ssh-keys
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/ssh-key-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/ssh-key"
                type: array
          description: Response
      summary: Get all authorized SSH keys
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#add-an-authorized-ssh-key
      operationId: enterprise-admin/add-authorized-ssh-key
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authorized_key:
                  description: The path to the public SSH key.
                  type: string
              required:
                - authorized_key
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/ssh-key-items"
              schema:
                items:
                  $ref: "#/components/schemas/ssh-key"
                type: array
          description: Response
      summary: Add an authorized SSH key
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
  /setup/api/start:
    post:
      description: >-
        When you boot a GitHub instance for the first time, you can use the
        following endpoint to upload a license:


        Note that you need to POST to [`/setup/api/configure`](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#start-a-configuration-process) to start the actual configuration process.


        When using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:


        1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.

        2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.


        For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#get-settings).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#create-a-github-enterprise-server-license
      operationId: enterprise-admin/create-enterprise-server-license
      requestBody:
        content:
          application/json:
            schema:
              properties:
                license:
                  description: The content of your _.ghl_ license file.
                  type: string
                password:
                  description: You **must** provide a password _only if_ you are uploading your
                    license for the first time. If you previously set a password
                    through the web interface, you don't need this parameter.
                  type: string
                settings:
                  description: An optional JSON string containing the installation settings.
                  type: string
              required:
                - license
              type: object
      responses:
        "202":
          description: Response
      summary: Create a GitHub license
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
  /setup/api/upgrade:
    post:
      description: "This API upgrades your license and also triggers the configuration
        process:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#upgrade-a-license
      operationId: enterprise-admin/upgrade-license
      requestBody:
        content:
          application/json:
            schema:
              properties:
                license:
                  description: The content of your new _.ghl_ license file.
                  type: string
              type: object
      responses:
        "202":
          description: Response
      summary: Upgrade a license
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: management-console
  "/teams/{team_id}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Delete a
        team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-team)
        endpoint.


        To delete a team, the authenticated user must be an organization owner or team maintainer.


        If you are an organization owner, deleting a parent team will delete all of its child teams as well.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#delete-a-team-legacy
      operationId: teams/delete-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Delete a team (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      deprecated: true
      description: "**Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the [Get a team by
        name](https://docs.github.com/enterprise-server@2.21/rest/reference/tea\
        ms#get-a-team-by-name) endpoint."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#get-a-team-legacy
      operationId: teams/get-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-full"
              schema:
                $ref: "#/components/schemas/team-full"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a team (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Update a
        team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-team)
        endpoint.


        To edit a team, the authenticated user must either be an organization owner or a team maintainer.


        **Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#update-a-team-legacy
      operationId: teams/update-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
      requestBody:
        content:
          application/json:
            example:
              description: new team description
              name: new team name
              privacy: closed
            schema:
              properties:
                description:
                  description: The description of the team.
                  type: string
                name:
                  description: The name of the team.
                  type: string
                parent_team_id:
                  description: The ID of a team to set as the parent team.
                  nullable: true
                  type: integer
                permission:
                  default: pull
                  description: >-
                    **Deprecated**. The permission that new repositories will be added
                    to the team with when none is specified. Can be one of:  

                    \* `pull` - team members can pull, but not push to or administer newly-added repositories.  

                    \* `push` - team members can pull and push, but not administer newly-added repositories.  

                    \* `admin` - team members can pull, push and administer newly-added repositories.
                  enum:
                    - pull
                    - push
                    - admin
                  type: string
                privacy:
                  description: >-
                    The level of privacy this team should have. Editing teams without
                    specifying this parameter leaves `privacy` intact. The
                    options are:  

                    **For a non-nested team:**  

                    \* `secret` - only visible to organization owners and members of this team.  

                    \* `closed` - visible to all members of this organization.  

                    **For a parent or child team:**  

                    \* `closed` - visible to all members of this organization.
                  enum:
                    - secret
                    - closed
                  type: string
              required:
                - name
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-full"
              schema:
                $ref: "#/components/schemas/team-full"
          description: Response
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-full"
              schema:
                $ref: "#/components/schemas/team-full"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update a team (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/teams/{team_id}/discussions":
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List
        discussions`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussions)
        endpoint.


        List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussions-legacy
      operationId: teams/list-discussions-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-items"
              schema:
                items:
                  $ref: "#/components/schemas/team-discussion"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List discussions (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussions
    post:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`Create a
        discussion`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion)
        endpoint.


        Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion-legacy
      operationId: teams/create-discussion-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
      requestBody:
        content:
          application/json:
            example:
              body: Hi! This is an area for us to collaborate as a team.
              title: Our first team post
            schema:
              properties:
                body:
                  description: The discussion post's body text.
                  type: string
                private:
                  default: false
                  description: Private posts are only visible to team members, organization
                    owners, and team maintainers. Public posts are visible to
                    all members of the organization. Set to `true` to create a
                    private post.
                  type: boolean
                title:
                  description: The discussion post's title.
                  type: string
              required:
                - title
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion"
              schema:
                $ref: "#/components/schemas/team-discussion"
          description: Response
      summary: Create a discussion (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussions
        triggersNotification: true
  "/teams/{team_id}/discussions/{discussion_number}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`Delete a
        discussion`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion)
        endpoint.


        Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion-legacy
      operationId: teams/delete-discussion-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
      responses:
        "204":
          description: Response
      summary: Delete a discussion (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: discussions
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Get a
        discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion)
        endpoint.


        Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion-legacy
      operationId: teams/get-discussion-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion"
              schema:
                $ref: "#/components/schemas/team-discussion"
          description: Response
      summary: Get a discussion (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussions
    patch:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Update a
        discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion)
        endpoint.


        Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion-legacy
      operationId: teams/update-discussion-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            example:
              title: Welcome to our first team post
            schema:
              properties:
                body:
                  description: The discussion post's body text.
                  type: string
                title:
                  description: The discussion post's title.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-2"
              schema:
                $ref: "#/components/schemas/team-discussion"
          description: Response
      summary: Update a discussion (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussions
  "/teams/{team_id}/discussions/{discussion_number}/comments":
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [List discussion
        comments](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussion-comments)
        endpoint.


        List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussion-comments-legacy
      operationId: teams/list-discussion-comments-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment-items"
              schema:
                items:
                  $ref: "#/components/schemas/team-discussion-comment"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List discussion comments (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussion-comments
    post:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Create a discussion
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion-comment)
        endpoint.


        Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion-comment-legacy
      operationId: teams/create-discussion-comment-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            example:
              body: Do you like apples?
            schema:
              properties:
                body:
                  description: The discussion comment's body text.
                  type: string
              required:
                - body
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment"
              schema:
                $ref: "#/components/schemas/team-discussion-comment"
          description: Response
      summary: Create a discussion comment (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussion-comments
        triggersNotification: true
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Delete a discussion
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion-comment)
        endpoint.


        Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion-comment-legacy
      operationId: teams/delete-discussion-comment-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      responses:
        "204":
          description: Response
      summary: Delete a discussion comment (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: discussion-comments
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Get a discussion
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion-comment)
        endpoint.


        Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion-comment-legacy
      operationId: teams/get-discussion-comment-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment"
              schema:
                $ref: "#/components/schemas/team-discussion-comment"
          description: Response
      summary: Get a discussion comment (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussion-comments
    patch:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Update a discussion
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion-comment)
        endpoint.


        Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion-comment-legacy
      operationId: teams/update-discussion-comment-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            example:
              body: Do you like pineapples?
            schema:
              properties:
                body:
                  description: The discussion comment's body text.
                  type: string
              required:
                - body
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-discussion-comment-2"
              schema:
                $ref: "#/components/schemas/team-discussion-comment"
          description: Response
      summary: Update a discussion comment (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: false
        removalDate: 2021-02-01
        subcategory: discussion-comments
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions":
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List reactions for a team discussion
        comment`](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion-comment)
        endpoint.


        List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions/#list-reactions-for-a-team-discussion-comment-legacy
      operationId: reactions/list-for-team-discussion-comment-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to a team discussion
            comment.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List reactions for a team discussion comment (Legacy)
      tags:
        - reactions
      x-github:
        category: reactions
        deprecationDate: 2020-02-26
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        removalDate: 2021-02-21
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new "[Create reaction for a team discussion
        comment](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-team-discussion-comment)"
        endpoint.


        Create a reaction to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions/#create-reaction-for-a-team-discussion-comment-legacy
      operationId: reactions/create-for-team-discussion-comment-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
        - $ref: "#/components/parameters/comment-number"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the team discussion comment.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
      summary: Create reaction for a team discussion comment (Legacy)
      tags:
        - reactions
      x-github:
        category: reactions
        deprecationDate: 2020-02-26
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        removalDate: 2021-02-21
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/teams/{team_id}/discussions/{discussion_number}/reactions":
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List reactions for a team
        discussion`](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion)
        endpoint.


        List the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions/#list-reactions-for-a-team-discussion-legacy
      operationId: reactions/list-for-team-discussion-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
        - description: Returns a single [reaction
            type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types).
            Omit this parameter to list all reactions to a team discussion.
          in: query
          name: content
          required: false
          schema:
            enum:
              - "+1"
              - "-1"
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction-items"
              schema:
                items:
                  $ref: "#/components/schemas/reaction"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List reactions for a team discussion (Legacy)
      tags:
        - reactions
      x-github:
        category: reactions
        deprecationDate: 2020-02-26
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        removalDate: 2021-02-21
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`Create reaction for a team
        discussion`](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-team-discussion)
        endpoint.


        Create a reaction to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/reactions/#create-reaction-for-a-team-discussion-legacy
      operationId: reactions/create-for-team-discussion-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/discussion-number"
      requestBody:
        content:
          application/json:
            example:
              content: heart
            schema:
              properties:
                content:
                  description: The [reaction
                    type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types)
                    to add to the team discussion.
                  enum:
                    - "+1"
                    - "-1"
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
                  type: string
              required:
                - content
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/reaction"
              schema:
                $ref: "#/components/schemas/reaction"
          description: Response
      summary: Create reaction for a team discussion (Legacy)
      tags:
        - reactions
      x-github:
        category: reactions
        deprecationDate: 2020-02-26
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: squirrel-girl
            note: >-
              An additional `reactions` object in the issue comment payload is currently
              available for developers to preview. During the preview period,
              the APIs may change without advance notice. Please see the [blog
              post](https://developer.github.com/changes/2016-05-12-reactions-api-preview)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.squirrel-girl-preview

              ```

              The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.
            required: true
        removalDate: 2021-02-21
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/teams/{team_id}/members":
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List team
        members`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-members)
        endpoint.


        Team members will include the members of child teams.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-members-legacy
      operationId: teams/list-members-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - description: |-
            Filters members returned by their role in the team. Can be one of:  
            \* `member` - normal members of the team.  
            \* `maintainer` - team maintainers.  
            \* `all` - all members of the team.
          in: query
          name: role
          required: false
          schema:
            default: all
            enum:
              - member
              - maintainer
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List team members (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: members
  "/teams/{team_id}/members/{username}":
    delete:
      deprecated: true
      description: >-
        The "Remove team member" endpoint (described below) is deprecated.


        We recommend using the [Remove team membership for a user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.


        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-team-member-legacy
      operationId: teams/remove-member-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "404":
          description: Not Found if team synchronization is setup
      summary: Remove team member (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: members
    get:
      deprecated: true
      description: >-
        The "Get team member" endpoint (described below) is deprecated.


        We recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.


        To list members in a team, the team must be visible to the authenticated user.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-member-legacy
      operationId: teams/get-member-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: if user is a member
        "404":
          description: if user is not a member
      summary: Get team member (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: members
    put:
      deprecated: true
      description: >-
        The "Add team member" endpoint (described below) is deprecated.


        We recommend using the [Add or update team membership for a user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.


        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-team-member-legacy
      operationId: teams/add-member-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          description: Not Found if team synchronization is set up
        "422":
          description: Unprocessable Entity if you attempt to add an organization to a
            team or you attempt to add a user to a team when they are not a
            member of at least one other team in the same organization
      summary: Add team member (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: members
  "/teams/{team_id}/memberships/{username}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Remove team membership for a
        user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-team-membership-for-a-user)
        endpoint.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.


        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-team-membership-for-a-user-legacy
      operationId: teams/remove-membership-for-user-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "403":
          description: if team synchronization is set up
      summary: Remove team membership for a user (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: members
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Get team membership for a
        user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user)
        endpoint.


        Team members will include the members of child teams.


        To get a user's membership with a team, the team must be visible to the authenticated user.


        **Note:**

        The response contains the `state` of the membership and the member's `role`.


        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-team).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user-legacy
      operationId: teams/get-membership-for-user-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-user-is-a-team-maintainer:
                  $ref: "#/components/examples/team-membership-response-if-user-is-a-team-maintai\
                    ner"
              schema:
                $ref: "#/components/schemas/team-membership"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get team membership for a user (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: members
    put:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Add or update team membership for a
        user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-membership-for-a-user)
        endpoint.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.


        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        If the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the "pending" state until the user accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.


        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-membership-for-a-user-legacy
      operationId: teams/add-or-update-membership-for-user-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                role:
                  default: member
                  description: >-
                    The role that this user should have in the team. Can be one of:  

                    \* `member` - a normal member of the team.  

                    \* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.
                  enum:
                    - member
                    - maintainer
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-users-membership-with-team-is-now-pending:
                  $ref: "#/components/examples/team-membership-response-if-users-membership-with-\
                    team-is-now-pending"
              schema:
                $ref: "#/components/schemas/team-membership"
          description: Response
        "403":
          description: Forbidden if team synchronization is set up
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          description: Unprocessable Entity if you attempt to add an organization to a team
      summary: Add or update team membership for a user (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory: members
  "/teams/{team_id}/projects":
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List team
        projects`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-projects)
        endpoint.


        Lists the organization projects for a team.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#list-team-projects-legacy
      operationId: teams/list-projects-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-project-items"
              schema:
                items:
                  $ref: "#/components/schemas/team-project"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List team projects (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/teams/{team_id}/projects/{project_id}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Remove a project from a
        team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-a-project-from-a-team)
        endpoint.


        Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#remove-a-project-from-a-team-legacy
      operationId: teams/remove-project-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/project-id"
      responses:
        "204":
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Remove a project from a team (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Check team permissions for a
        project](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-project)
        endpoint.


        Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#check-team-permissions-for-a-project-legacy
      operationId: teams/check-permissions-for-project-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/project-id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-project"
              schema:
                $ref: "#/components/schemas/team-project"
          description: Response
        "404":
          description: Not Found if project is not managed by this team
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Check team permissions for a project (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Add or update team project
        permissions](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-project-permissions)
        endpoint.


        Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#add-or-update-team-project-permissions-legacy
      operationId: teams/add-or-update-project-permissions-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/project-id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permission:
                  description: >-
                    The permission to grant to the team for this project. Can be one
                    of:  

                    \* `read` - team members can read, but not write to or administer this project.  

                    \* `write` - team members can read and write, but not administer this project.  

                    \* `admin` - team members can read, write and administer this project.  

                    Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
                  enum:
                    - read
                    - write
                    - admin
                  type: string
              type: object
      responses:
        "204":
          description: Response
        "403":
          content:
            application/json:
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    documentation_url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-project-permissions
                    message: Must have admin rights to Repository.
              schema:
                properties:
                  documentation_url:
                    type: string
                  message:
                    type: string
                type: object
          description: Forbidden if the project is not owned by the organization
        "404":
          $ref: "#/components/responses/not_found"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add or update team project permissions (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/teams/{team_id}/repos":
    get:
      deprecated: true
      description: "**Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [List team
        repositories](https://docs.github.com/enterprise-server@2.21/rest/refer\
        ence/teams#list-team-repositories) endpoint."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#list-team-repositories-legacy
      operationId: teams/list-repos-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List team repositories (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/teams/{team_id}/repos/{owner}/{repo}":
    delete:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [Remove a repository from a
        team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-a-repository-from-a-team)
        endpoint.


        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#remove-a-repository-from-a-team-legacy
      operationId: teams/remove-repo-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
      summary: Remove a repository from a team (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    get:
      deprecated: true
      description: >-
        **Note**: Repositories inherited through a parent team will also be
        checked.


        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.


        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#check-team-permissions-for-a-repository-legacy
      operationId: teams/check-permissions-for-repo-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          content:
            application/json:
              examples:
                alternative-response-with-extra-repository-information:
                  $ref: "#/components/examples/team-repository-alternative-response-with-extra-re\
                    pository-information"
              schema:
                $ref: "#/components/schemas/team-repository"
          description: Alternative response with extra repository information
        "204":
          description: Response if repository is managed by this team
        "404":
          description: Not Found if repository is not managed by this team
      summary: Check team permissions for a repository (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    put:
      deprecated: true
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new "[Add or update team repository
        permissions](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-repository-permissions)"
        endpoint.


        To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.


        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#add-or-update-team-repository-permissions-legacy
      operationId: teams/add-or-update-repo-permissions-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permission:
                  description: >-
                    The permission to grant the team on this repository. Can be one
                    of:  

                    \* `pull` - team members can pull, but not push to or administer this repository.  

                    \* `push` - team members can pull and push, but not administer this repository.  

                    \* `admin` - team members can pull, push and administer this repository.  
                      
                    If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.
                  enum:
                    - pull
                    - push
                    - admin
                  type: string
              type: object
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add or update team repository permissions (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/teams/{team_id}/teams":
    get:
      deprecated: true
      description: "**Deprecation Notice:** This endpoint route is deprecated and will
        be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List child
        teams`](https://docs.github.com/enterprise-server@2.21/rest/reference/t\
        eams#list-child-teams) endpoint."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#list-child-teams-legacy
      operationId: teams/list-child-legacy
      parameters:
        - $ref: "#/components/parameters/team-id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                response-if-child-teams-exist:
                  $ref: "#/components/examples/team-items-response-if-child-teams-exist"
              schema:
                items:
                  $ref: "#/components/schemas/team"
                type: array
          description: if child teams exist
          headers:
            Link:
              $ref: "#/components/headers/link"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List child teams (Legacy)
      tags:
        - teams
      x-github:
        category: teams
        deprecationDate: 2020-01-21
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        removalDate: 2021-02-01
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /user:
    get:
      description: >-
        If the authenticated user is authenticated through basic
        authentication or OAuth with the `user` scope, then the response lists
        public and private profile information.


        If the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#get-the-authenticated-user
      operationId: users/get-authenticated
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                response-with-public-and-private-profile-information:
                  $ref: "#/components/examples/private-user-response-with-public-and-private-prof\
                    ile-information"
                response-with-public-profile-information:
                  $ref: "#/components/examples/private-user-response-with-public-profile-informat\
                    ion"
              schema:
                oneOf:
                  - $ref: "#/components/schemas/private-user"
                  - $ref: "#/components/schemas/public-user"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: Get the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    patch:
      description: "**Note:** If your email is set to private and you send an `email`
        parameter as part of this request to update your profile, your privacy
        settings are still enforced: the email address will not be displayed on
        your public profile or via the API."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users/#update-the-authenticated-user
      operationId: users/update-authenticated
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bio:
                  description: The new short biography of the user.
                  type: string
                blog:
                  description: The new blog URL of the user.
                  example: blog.example.com
                  type: string
                company:
                  description: The new company of the user.
                  example: Acme corporation
                  type: string
                email:
                  description: The publicly visible email address of the user.
                  example: omar@example.com
                  type: string
                hireable:
                  description: The new hiring availability of the user.
                  type: boolean
                location:
                  description: The new location of the user.
                  example: Berlin, Germany
                  type: string
                name:
                  description: The new name of the user.
                  example: Omar Jahandar
                  type: string
                twitter_username:
                  description: The new Twitter username of the user.
                  example: therealomarj
                  nullable: true
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/private-user"
              schema:
                $ref: "#/components/schemas/private-user"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /user/emails:
    delete:
      description: This endpoint is accessible with the `user` scope.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#delete-an-email-address-for-the-authenticated-user
      operationId: users/delete-email-for-authenticated
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - description: Deletes one or more email addresses from your GitHub account. Must
                    contain at least one email address. **Note:** Alternatively,
                    you can pass a single email address or an `array` of emails
                    addresses directly, but we recommend that you pass an object
                    using the `emails` key.
                  example:
                    emails:
                      - octocat@github.com
                      - mona@github.com
                  properties:
                    emails:
                      description: Email addresses associated with the GitHub user account.
                      items:
                        example: username@example.com
                        minItems: 1
                        type: string
                      type: array
                  required:
                    - emails
                  type: object
                - items:
                    example: username@example.com
                    minItems: 1
                    type: string
                  type: array
                - type: string
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Delete an email address for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: emails
    get:
      description: Lists all of your email addresses, and specifies which one is
        visible to the public. This endpoint is accessible with the `user:email`
        scope.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-email-addresses-for-the-authenticated-user
      operationId: users/list-emails-for-authenticated
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/email-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/email"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List email addresses for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: emails
    post:
      description: This endpoint is accessible with the `user` scope.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#add-an-email-address-for-the-authenticated-user
      operationId: users/add-email-for-authenticated
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - example:
                    emails:
                      - octocat@github.com
                      - mona@github.com
                  properties:
                    emails:
                      description: Adds one or more email addresses to your GitHub account. Must
                        contain at least one email address. **Note:**
                        Alternatively, you can pass a single email address or an
                        `array` of emails addresses directly, but we recommend
                        that you pass an object using the `emails` key.
                      example: []
                      items:
                        example: username@example.com
                        minItems: 1
                        type: string
                      type: array
                  required:
                    - emails
                  type: object
                - items:
                    example: username@example.com
                    minItems: 1
                    type: string
                  type: array
                - type: string
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/email-items"
              schema:
                items:
                  $ref: "#/components/schemas/email"
                type: array
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Add an email address for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: emails
  /user/followers:
    get:
      description: Lists the people following the authenticated user.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-followers-of-the-authenticated-user
      operationId: users/list-followers-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List followers of the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: followers
  /user/following:
    get:
      description: Lists the people who the authenticated user follows.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-the-people-the-authenticated-user-follows
      operationId: users/list-followed-by-authenticated
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List the people the authenticated user follows
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: followers
  "/user/following/{username}":
    delete:
      description: Unfollowing a user requires the user to be logged in and
        authenticated with basic auth or OAuth with the `user:follow` scope.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#unfollow-a-user
      operationId: users/unfollow
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Unfollow a user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: followers
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user
      operationId: users/check-person-is-followed-by-authenticated
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: if the person is followed by the authenticated user
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/basic-error"
          description: if the person is not followed by the authenticated user
      summary: Check if a person is followed by the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: followers
    put:
      description: >-
        Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP
        verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."


        Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#follow-a-user
      operationId: users/follow
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Follow a user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: followers
  /user/gpg_keys:
    get:
      description: Lists the current user's GPG keys. Requires that you are
        authenticated via Basic Auth or via OAuth with at least `read:gpg_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-gpg-keys-for-the-authenticated-user
      operationId: users/list-gpg-keys-for-authenticated
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gpg-key-items"
              schema:
                items:
                  $ref: "#/components/schemas/gpg-key"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List GPG keys for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: gpg-keys
    post:
      description: Adds a GPG key to the authenticated user's GitHub account. Requires
        that you are authenticated via Basic Auth, or OAuth with at least
        `write:gpg_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#create-a-gpg-key-for-the-authenticated-user
      operationId: users/create-gpg-key-for-authenticated
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                armored_public_key:
                  description: A GPG key in ASCII-armored format.
                  type: string
              required:
                - armored_public_key
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gpg-key"
              schema:
                $ref: "#/components/schemas/gpg-key"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a GPG key for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: gpg-keys
  "/user/gpg_keys/{gpg_key_id}":
    delete:
      description: Removes a GPG key from the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at
        least `admin:gpg_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user
      operationId: users/delete-gpg-key-for-authenticated
      parameters:
        - $ref: "#/components/parameters/gpg_key_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Delete a GPG key for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: gpg-keys
    get:
      description: View extended details for a single GPG key. Requires that you are
        authenticated via Basic Auth or via OAuth with at least `read:gpg_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#get-a-gpg-key-for-the-authenticated-user
      operationId: users/get-gpg-key-for-authenticated
      parameters:
        - $ref: "#/components/parameters/gpg_key_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gpg-key"
              schema:
                $ref: "#/components/schemas/gpg-key"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a GPG key for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: gpg-keys
  /user/installations:
    get:
      description: >-
        Lists installations of your GitHub App that the authenticated user
        has explicit permission (`:read`, `:write`, or `:admin`) to access.


        You must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.


        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.


        You can find the permissions for the installation under the `permissions` key.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token
      operationId: apps/list-installations-for-authenticated-user
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-installation-for-auth-user-paginated-ghes-2"
              schema:
                properties:
                  installations:
                    items:
                      $ref: "#/components/schemas/installation-ghes-2"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - installations
                type: object
          description: You can find the permissions for the installation under the
            `permissions` key.
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: List app installations accessible to the user access token
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
        subcategory: installations
  "/user/installations/{installation_id}/repositories":
    get:
      description: >-
        List repositories that the authenticated user has explicit
        permission (`:read`, `:write`, or `:admin`) to access for an
        installation.


        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.


        You must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.


        The access the user has to each repository is included in the hash under the `permissions` key.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#list-repositories-accessible-to-the-user-access-token
      operationId: apps/list-installation-repos-for-authenticated-user
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/installation_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-paginated"
              schema:
                properties:
                  repositories:
                    items:
                      $ref: "#/components/schemas/repository"
                    type: array
                  repository_selection:
                    type: string
                  total_count:
                    type: integer
                required:
                  - total_count
                  - repositories
                type: object
          description: The access the user has to each repository is included in the hash
            under the `permissions` key.
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List repositories accessible to the user access token
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: false
        subcategory: installations
  "/user/installations/{installation_id}/repositories/{repository_id}":
    delete:
      description: >-
        Remove a single repository from an installation. The authenticated
        user must have admin access to the repository.


        You must use a personal access token (which you can create via the [command line](https://docs.github.com/enterprise-server@2.21/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#remove-a-repository-from-an-app-installation
      operationId: apps/remove-repo-from-installation
      parameters:
        - $ref: "#/components/parameters/installation_id"
        - $ref: "#/components/parameters/repository_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Remove a repository from an app installation
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
        subcategory: installations
    put:
      description: >-
        Add a single repository to an installation. The authenticated user
        must have admin access to the repository.


        You must use a personal access token (which you can create via the [command line](https://docs.github.com/enterprise-server@2.21/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#add-a-repository-to-an-app-installation
      operationId: apps/add-repo-to-installation
      parameters:
        - $ref: "#/components/parameters/installation_id"
        - $ref: "#/components/parameters/repository_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Add a repository to an app installation
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
        subcategory: installations
  /user/issues:
    get:
      description: >-
        List issues across owned and member repositories assigned to the
        authenticated user.


        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull

        request id, use the "[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)" endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/issues#list-user-account-issues-assigned-to-the-authenticated-user
      operationId: issues/list-for-authenticated-user
      parameters:
        - description: >-
            Indicates which sorts of issues to return. Can be one of:  

            \* `assigned`: Issues assigned to you  

            \* `created`: Issues created by you  

            \* `mentioned`: Issues mentioning you  

            \* `subscribed`: Issues you're subscribed to updates for  

            \* `all`: All issues the authenticated user can see, regardless of participation or creation
          in: query
          name: filter
          required: false
          schema:
            default: assigned
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            type: string
        - description: Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - $ref: "#/components/parameters/labels"
        - description: What to sort results by. Can be either `created`, `updated`,
            `comments`.
          in: query
          name: sort
          required: false
          schema:
            default: created
            enum:
              - created
              - updated
              - comments
            type: string
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-with-repo-items"
              schema:
                items:
                  $ref: "#/components/schemas/issue"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List user account issues assigned to the authenticated user
      tags:
        - issues
      x-github:
        category: issues
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: >-
              If an issue event is created via a GitHub App, the response will include
              the `performed_via_github_app` object with	information about the
              GitHub App. For more information, see the [related
              blog	post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).

              To receive the `performed_via_github_app` object in the response, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.machine-man-preview

              ```
            required: false
  /user/keys:
    get:
      description: Lists the public SSH keys for the authenticated user's GitHub
        account. Requires that you are authenticated via Basic Auth or via OAuth
        with at least `read:public_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user
      operationId: users/list-public-ssh-keys-for-authenticated
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/key-items"
              schema:
                items:
                  $ref: "#/components/schemas/key"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List public SSH keys for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: keys
    post:
      description: Adds a public SSH key to the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth, or OAuth with at
        least `write:public_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user
      operationId: users/create-public-ssh-key-for-authenticated
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: The public SSH key to add to your GitHub account.
                  pattern: "^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) "
                  type: string
                title:
                  description: A descriptive name for the new key.
                  example: Personal MacBook Air
                  type: string
              required:
                - key
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/key"
              schema:
                $ref: "#/components/schemas/key"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a public SSH key for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: keys
  "/user/keys/{key_id}":
    delete:
      description: Removes a public SSH key from the authenticated user's GitHub
        account. Requires that you are authenticated via Basic Auth or via OAuth
        with at least `admin:public_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user
      operationId: users/delete-public-ssh-key-for-authenticated
      parameters:
        - $ref: "#/components/parameters/key_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Delete a public SSH key for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: keys
    get:
      description: View extended details for a single public SSH key. Requires that
        you are authenticated via Basic Auth or via OAuth with at least
        `read:public_key`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user
      operationId: users/get-public-ssh-key-for-authenticated
      parameters:
        - $ref: "#/components/parameters/key_id"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/key"
              schema:
                $ref: "#/components/schemas/key"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a public SSH key for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: keys
  /user/memberships/orgs:
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organization-memberships-for-the-authenticated-user
      operationId: orgs/list-memberships-for-authenticated-user
      parameters:
        - description: Indicates the state of the memberships to return. Can be either
            `active` or `pending`. If not specified, the API returns both active
            and pending memberships.
          in: query
          name: state
          required: false
          schema:
            enum:
              - active
              - pending
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-membership-items"
              schema:
                items:
                  $ref: "#/components/schemas/org-membership"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List organization memberships for the authenticated user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: members
  "/user/memberships/orgs/{org}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#get-an-organization-membership-for-the-authenticated-user
      operationId: orgs/get-membership-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-membership"
              schema:
                $ref: "#/components/schemas/org-membership"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get an organization membership for the authenticated user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: members
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#update-an-organization-membership-for-the-authenticated-user
      operationId: orgs/update-membership-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            example:
              state: active
            schema:
              properties:
                state:
                  description: The state that the membership should be in. Only `"active"` will be
                    accepted.
                  enum:
                    - active
                  type: string
              required:
                - state
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/org-membership-2"
              schema:
                $ref: "#/components/schemas/org-membership"
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Update an organization membership for the authenticated user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: members
  /user/orgs:
    get:
      description: >-
        List organizations for the authenticated user.


        **OAuth scope requirements**


        This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organizations-for-the-authenticated-user
      operationId: orgs/list-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/organization-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/organization-simple"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List organizations for the authenticated user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /user/projects:
    post:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#create-a-user-project
      operationId: projects/create-for-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in January
                  nullable: true
                  type: string
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project"
              schema:
                $ref: "#/components/schemas/project"
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      summary: Create a user project
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /user/public_emails:
    get:
      description: Lists your publicly visible email address, which you can set with
        the [Set primary email visibility for the authenticated
        user](https://docs.github.com/enterprise-server@2.21/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user)
        endpoint. This endpoint is accessible with the `user:email` scope.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-public-email-addresses-for-the-authenticated-user
      operationId: users/list-public-emails-for-authenticated
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/email-items-2"
              schema:
                items:
                  $ref: "#/components/schemas/email"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List public email addresses for the authenticated user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: emails
  /user/repos:
    get:
      description: >-
        Lists repositories that the authenticated user has explicit
        permission (`:read`, `:write`, or `:admin`) to access.


        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repositories-for-the-authenticated-user
      operationId: repos/list-for-authenticated-user
      parameters:
        - description: "Can be one of `all`, `public`, or `private`. Note: For GitHub AE,
            can be one of `all`, `internal`, or `private`."
          in: query
          name: visibility
          required: false
          schema:
            default: all
            enum:
              - all
              - public
              - private
            type: string
        - description: >-
            Comma-separated list of values. Can include:  

            \* `owner`: Repositories that are owned by the authenticated user.  

            \* `collaborator`: Repositories that the user has been added to as a collaborator.  

            \* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.
          in: query
          name: affiliation
          required: false
          schema:
            default: owner,collaborator,organization_member
            type: string
        - description: >-
            Can be one of `all`, `owner`, `public`, `private`, `member`. Note:
            For GitHub AE, can be one of `all`, `owner`, `internal`, `private`,
            `member`. Default: `all`  
              
            Will cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.
          in: query
          name: type
          required: false
          schema:
            default: all
            enum:
              - all
              - owner
              - public
              - private
              - member
            type: string
        - description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          in: query
          name: sort
          required: false
          schema:
            default: full_name
            enum:
              - created
              - updated
              - pushed
              - full_name
            type: string
        - description: "Can be one of `asc` or `desc`. Default: `asc` when using
            `full_name`, otherwise `desc`"
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/before"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-items-default-response"
              schema:
                items:
                  $ref: "#/components/schemas/repository"
                type: array
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List repositories for the authenticated user
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    post:
      description: >-
        Creates a new repository for the authenticated user.


        **OAuth scope requirements**


        When using [OAuth](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:


        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.

        *   `repo` scope to create a private repository.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-for-the-authenticated-user
      operationId: repos/create-for-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_merge_commit:
                  default: true
                  description: Whether to allow merge commits for pull requests.
                  example: true
                  type: boolean
                allow_rebase_merge:
                  default: true
                  description: Whether to allow rebase merges for pull requests.
                  example: true
                  type: boolean
                allow_squash_merge:
                  default: true
                  description: Whether to allow squash merges for pull requests.
                  example: true
                  type: boolean
                auto_init:
                  default: false
                  description: Whether the repository is initialized with a minimal README.
                  type: boolean
                delete_branch_on_merge:
                  default: false
                  description: Whether to delete head branches when pull requests are merged
                  example: false
                  type: boolean
                description:
                  description: A short description of the repository.
                  type: string
                gitignore_template:
                  description: The desired language or platform to apply to the .gitignore.
                  example: Haskell
                  type: string
                has_downloads:
                  default: true
                  description: Whether downloads are enabled.
                  example: true
                  type: boolean
                has_issues:
                  default: true
                  description: Whether issues are enabled.
                  example: true
                  type: boolean
                has_projects:
                  default: true
                  description: Whether projects are enabled.
                  example: true
                  type: boolean
                has_wiki:
                  default: true
                  description: Whether the wiki is enabled.
                  example: true
                  type: boolean
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                is_template:
                  default: false
                  description: Whether this repository acts as a template that can be used to
                    generate new repositories.
                  example: true
                  type: boolean
                license_template:
                  description: The license keyword of the open source license for this repository.
                  example: mit
                  type: string
                name:
                  description: The name of the repository.
                  example: Team Environment
                  type: string
                private:
                  default: false
                  description: Whether the repository is private.
                  type: boolean
                team_id:
                  description: The id of the team that will be granted access to this repository.
                    This is only valid when creating a repository in an
                    organization.
                  type: integer
              required:
                - name
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository"
              schema:
                $ref: "#/components/schemas/repository"
          description: Response
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Create a repository for the authenticated user
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: nebula
            note: >-
              You can set the visibility of a repository using the new `visibility`
              parameter in the [Repositories
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos/),
              and get a repository's visibility with a new response key. For
              more information, see the [blog
              post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).


              To access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.nebula-preview+json

              ```
            required: false
          - name: baptiste
            note: >-
              The `is_template` and `template_repository` keys are currently available
              for developer to preview. See [Create a repository using a
              template](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-using-a-template)
              to learn how to create template repositories. To access these new
              response keys during the preview period, you must provide a custom
              [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:


              ```shell

              application/vnd.github.baptiste-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /user/repository_invitations:
    get:
      description: When authenticating as a user, this endpoint will list all
        currently open repository invitations for that user.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-invitations-for-the-authenticated-user
      operationId: repos/list-invitations-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repository-invitation-items"
              schema:
                items:
                  $ref: "#/components/schemas/repository-invitation"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List repository invitations for the authenticated user
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: invitations
  "/user/repository_invitations/{invitation_id}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#decline-a-repository-invitation
      operationId: repos/decline-invitation
      parameters:
        - $ref: "#/components/parameters/invitation_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
      summary: Decline a repository invitation
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: invitations
    patch:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#accept-a-repository-invitation
      operationId: repos/accept-invitation
      parameters:
        - $ref: "#/components/parameters/invitation_id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
      summary: Accept a repository invitation
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: invitations
  /user/starred:
    get:
      description: >-
        Lists repositories the authenticated user has starred.


        You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-repositories-starred-by-the-authenticated-user
      operationId: activity/list-repos-starred-by-authenticated-user
      parameters:
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/repository-items-default-response"
              schema:
                items:
                  $ref: "#/components/schemas/repository"
                type: array
            application/vnd.github.v3.star+json:
              examples:
                alternative-response-with-star-creation-timestamps:
                  $ref: "#/components/examples/starred-repository-items-alternative-response-with\
                    -star-creation-timestamps"
              schema:
                items:
                  $ref: "#/components/schemas/starred-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List repositories starred by the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: starring
  "/user/starred/{owner}/{repo}":
    delete:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#unstar-a-repository-for-the-authenticated-user
      operationId: activity/unstar-repo-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Unstar a repository for the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: starring
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#check-if-a-repository-is-starred-by-the-authenticated-user
      operationId: activity/check-repo-is-starred-by-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response if this repository is starred by you
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/basic-error"
          description: Not Found if this repository is not starred by you
      summary: Check if a repository is starred by the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: starring
    put:
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP
        verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#star-a-repository-for-the-authenticated-user
      operationId: activity/star-repo-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Star a repository for the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: starring
  /user/subscriptions:
    get:
      description: Lists repositories the authenticated user is watching.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-repositories-watched-by-the-authenticated-user
      operationId: activity/list-watched-repos-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      summary: List repositories watched by the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: watching
  /user/teams:
    get:
      description: List all of the teams across all of the organizations to which the
        authenticated user belongs. This method requires `user`, `repo`, or
        `read:org`
        [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)
        when authenticating via
        [OAuth](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/).
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-teams-for-the-authenticated-user
      operationId: teams/list-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/team-full-items"
              schema:
                items:
                  $ref: "#/components/schemas/team-full"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      summary: List teams for the authenticated user
      tags:
        - teams
      x-github:
        category: teams
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  /users:
    get:
      description: >-
        Lists all users, in the order that they signed up on GitHub
        Enterprise Server. This list includes personal user accounts and
        organization accounts.


        Note: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-users
      operationId: users/list
      parameters:
        - $ref: "#/components/parameters/since-user"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              example: <https://api.github.com/users?since=135>; rel="next"
              schema:
                type: string
        "304":
          $ref: "#/components/responses/not_modified"
      summary: List users
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/users/{username}":
    get:
      description: >-
        Provides publicly available information about someone with a GitHub
        account.


        GitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See "[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below"


        The `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#authentication).


        The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see "[Emails API](https://docs.github.com/enterprise-server@2.21/rest/reference/users#emails)".
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#get-a-user
      operationId: users/get-by-username
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/public-user-default-response"
                response-with-git-hub-plan-information:
                  $ref: "#/components/examples/public-user-response-with-git-hub-plan-information"
              schema:
                oneOf:
                  - $ref: "#/components/schemas/private-user"
                  - $ref: "#/components/schemas/public-user"
          description: Response
        "202":
          $ref: "#/components/responses/accepted"
        "404":
          $ref: "#/components/responses/not_found"
      summary: Get a user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/users/{username}/events":
    get:
      description: If you are authenticated as the given user, you will see your
        private events. Otherwise, you'll only see public events.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-events-for-the-authenticated-user
      operationId: activity/list-events-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
      summary: List events for the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  "/users/{username}/events/orgs/{org}":
    get:
      description: This is the user's organization dashboard. You must be
        authenticated as the user to view this.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-organization-events-for-the-authenticated-user
      operationId: activity/list-org-events-for-authenticated-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
      summary: List organization events for the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: events
  "/users/{username}/events/public":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-public-events-for-a-user
      operationId: activity/list-public-events-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
      summary: List public events for a user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  "/users/{username}/followers":
    get:
      description: Lists the people following the specified user.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-followers-of-a-user
      operationId: users/list-followers-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List followers of a user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: followers
  "/users/{username}/following":
    get:
      description: Lists the people who the specified user follows.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-the-people-a-user-follows
      operationId: users/list-following-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
              schema:
                items:
                  $ref: "#/components/schemas/simple-user"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List the people a user follows
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: followers
  "/users/{username}/following/{target_user}":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#check-if-a-user-follows-another-user
      operationId: users/check-following-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - in: path
          name: target_user
          required: true
          schema:
            type: string
      responses:
        "204":
          description: if the user follows the target user
        "404":
          description: if the user does not follow the target user
      summary: Check if a user follows another user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: followers
  "/users/{username}/gists":
    get:
      description: "Lists public gists for the specified user:"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/gists#list-gists-for-a-user
      operationId: gists/list-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/base-gist-items"
              schema:
                items:
                  $ref: "#/components/schemas/base-gist"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List gists for a user
      tags:
        - gists
      x-github:
        category: gists
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/users/{username}/gpg_keys":
    get:
      description: Lists the GPG keys for a user. This information is accessible by anyone.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-gpg-keys-for-a-user
      operationId: users/list-gpg-keys-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/gpg-key-items"
              schema:
                items:
                  $ref: "#/components/schemas/gpg-key"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List GPG keys for a user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: gpg-keys
  "/users/{username}/hovercard":
    get:
      description: >-
        Provides hovercard information when authenticated through basic
        auth or OAuth with the `repo` scope. You can find out more about someone
        in relation to their pull requests, issues, repositories, and
        organizations.


        The `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:


        ```shell
         curl -u username:token
          https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
        ```
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#get-contextual-information-for-a-user
      operationId: users/get-context-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - description: Identifies which additional information you'd like to receive about
            the person's hovercard. Can be `organization`, `repository`,
            `issue`, `pull_request`. **Required** when using `subject_id`.
          in: query
          name: subject_type
          required: false
          schema:
            enum:
              - organization
              - repository
              - issue
              - pull_request
            type: string
        - description: Uses the ID for the `subject_type` you specified. **Required** when
            using `subject_type`.
          in: query
          name: subject_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/hovercard"
              schema:
                $ref: "#/components/schemas/hovercard"
          description: Response
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Get contextual information for a user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/users/{username}/installation":
    get:
      description: >-
        Enables an authenticated GitHub App to find the user’s installation
        information.


        You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/apps#get-a-user-installation-for-the-authenticated-app
      operationId: apps/get-user-installation
      parameters:
        - description: This API is under preview and subject to change.
          in: header
          name: accept
          required: true
          schema:
            default: application/vnd.github.machine-man-preview+json
            type: string
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/installation-ghes-2"
              schema:
                $ref: "#/components/schemas/installation-ghes-2"
          description: Response
      summary: Get a user installation for the authenticated app
      tags:
        - apps
      x-github:
        category: apps
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: machine-man
            note: To access the API with your GitHub App, you must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` Header for your requests. ```shell
              application/vnd.github.machine-man-preview+json ```
            required: true
  "/users/{username}/keys":
    get:
      description: Lists the _verified_ public SSH keys for a user. This is accessible
        by anyone.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/users#list-public-keys-for-a-user
      operationId: users/list-public-keys-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/key-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/key-simple"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List public keys for a user
      tags:
        - users
      x-github:
        category: users
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: keys
  "/users/{username}/orgs":
    get:
      description: >-
        List [public organization
        memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership)
        for the specified user.


        This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organizations-for-a-user
      operationId: orgs/list-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/organization-simple-items"
              schema:
                items:
                  $ref: "#/components/schemas/organization-simple"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List organizations for a user
      tags:
        - orgs
      x-github:
        category: orgs
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/users/{username}/projects":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/projects#list-user-projects
      operationId: projects/list-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - description: Indicates the state of the projects to return. Can be either
            `open`, `closed`, or `all`.
          in: query
          name: state
          required: false
          schema:
            default: open
            enum:
              - open
              - closed
              - all
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/project-items-3"
              schema:
                items:
                  $ref: "#/components/schemas/project"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
        "415":
          $ref: "#/components/responses/preview_header_missing"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: List user projects
      tags:
        - projects
      x-github:
        category: projects
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews:
          - name: inertia
            note: >-
              The Projects API is currently available for developers to preview. During
              the preview period, the API may change without advance notice.
              Please see the [blog
              post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api)
              for full details. To access the API during the preview period, you
              must provide a custom [media
              type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types)
              in the `Accept` header:

              ```shell

              application/vnd.github.inertia-preview+json

              ```
            required: true
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/users/{username}/received_events":
    get:
      description: These are events that you've received by watching repos and
        following users. If you are authenticated as the given user, you will
        see private events. Otherwise, you'll only see public events.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-events-received-by-the-authenticated-user
      operationId: activity/list-received-events-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
      summary: List events received by the authenticated user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  "/users/{username}/received_events/public":
    get:
      description: ""
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-public-events-received-by-a-user
      operationId: activity/list-received-public-events-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/event"
                type: array
          description: Response
      summary: List public events received by a user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: events
  "/users/{username}/repos":
    get:
      description: "Lists public repositories for the specified user. Note: For GitHub
        AE, this endpoint will list internal repositories for the specified
        user."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repositories-for-a-user
      operationId: repos/list-for-user
      parameters:
        - $ref: "#/components/parameters/username"
        - description: Can be one of `all`, `owner`, `member`.
          in: query
          name: type
          required: false
          schema:
            default: owner
            enum:
              - all
              - owner
              - member
            type: string
        - description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          in: query
          name: sort
          required: false
          schema:
            default: full_name
            enum:
              - created
              - updated
              - pushed
              - full_name
            type: string
        - description: "Can be one of `asc` or `desc`. Default: `asc` when using
            `full_name`, otherwise `desc`"
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List repositories for a user
      tags:
        - repos
      x-github:
        category: repos
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: nebula
            note: >-
              You can set the visibility of a repository using the new `visibility`
              parameter in the [Repositories
              API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos/),
              and get a repository's visibility with a new response key. For
              more information, see the [blog
              post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).


              To access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.nebula-preview+json

              ```
            required: false
        subcategory:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
  "/users/{username}/site_admin":
    delete:
      description: You can demote any user account except your own.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#demote-a-site-administrator
      operationId: enterprise-admin/demote-site-administrator
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
      summary: Demote a site administrator
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
    put:
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP
        verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#promote-a-user-to-be-a-site-administrator
      operationId: enterprise-admin/promote-user-to-be-site-administrator
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          description: Response
      summary: Promote a user to be a site administrator
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  "/users/{username}/starred":
    get:
      description: >-
        Lists repositories a user has starred.


        You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-repositories-starred-by-a-user
      operationId: activity/list-repos-starred-by-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default-response:
                  $ref: "#/components/examples/repository-items-default-response"
              schema:
                anyOf:
                  - items:
                      $ref: "#/components/schemas/starred-repository"
                    type: array
                  - items:
                      $ref: "#/components/schemas/repository"
                    type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List repositories starred by a user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: starring
  "/users/{username}/subscriptions":
    get:
      description: Lists repositories a user is watching.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/activity#list-repositories-watched-by-a-user
      operationId: activity/list-repos-watched-by-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
              schema:
                items:
                  $ref: "#/components/schemas/minimal-repository"
                type: array
          description: Response
          headers:
            Link:
              $ref: "#/components/headers/link"
      summary: List repositories watched by a user
      tags:
        - activity
      x-github:
        category: activity
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: watching
  "/users/{username}/suspended":
    delete:
      description: If your GitHub instance uses [LDAP Sync with Active Directory LDAP
        servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap),
        this API is disabled and will return a `403` response. Active Directory
        LDAP-authenticated users cannot be unsuspended using the API.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#unsuspend-a-user
      operationId: enterprise-admin/unsuspend-user
      parameters:
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              properties:
                reason:
                  description: The reason the user is being unsuspended. This message will be
                    logged in the [audit
                    log](https://help.github.com/enterprise/admin/articles/audit-logging/).
                    If you don't provide a `reason`, it will default to
                    "Unsuspended via API by _SITE\_ADMINISTRATOR_", where
                    _SITE\_ADMINISTRATOR_ is the person who performed the
                    action.
                  type: string
              type: object
      responses:
        "204":
          description: Response
      summary: Unsuspend a user
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
    put:
      description: >-
        If your GitHub instance uses [LDAP Sync with Active Directory LDAP
        servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap),
        Active Directory LDAP-authenticated users cannot be suspended through
        this API. If you attempt to suspend an Active Directory
        LDAP-authenticated user through this API, it will return a `403`
        response.


        You can suspend any user account except your own.


        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/enterprise-server@2.21/rest/reference/enterprise-admin#suspend-a-user
      operationId: enterprise-admin/suspend-user
      parameters:
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              properties:
                reason:
                  description: The reason the user is being suspended. This message will be logged
                    in the [audit
                    log](https://help.github.com/enterprise/admin/articles/audit-logging/).
                    If you don't provide a `reason`, it will default to
                    "Suspended via API by _SITE\_ADMINISTRATOR_", where
                    _SITE\_ADMINISTRATOR_ is the person who performed the
                    action.
                  type: string
              type: object
      responses:
        "204":
          description: Response
      summary: Suspend a user
      tags:
        - enterprise-admin
      x-github:
        category: enterprise-admin
        enabledForGitHubApps: false
        githubCloudOnly: false
        previews: []
        subcategory: users
  /zen:
    get:
      description: Get a random sentence from the Zen of GitHub
      operationId: meta/get-zen
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Response
      summary: Get the Zen of GitHub
      tags:
        - meta
      x-github:
        category: meta
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
components:
  examples:
    api-overview:
      value:
        dependabot:
          - 54.158.161.132
        installed_version: 2.21.0
        packages:
          - 192.30.252.0/22
        verifiable_password_authentication: true
    application-grant:
      value:
        app:
          client_id: abcde12345fghij67890
          name: my github app
          url: http://my-github-app.com
        created_at: 2011-09-06T17:26:27Z
        id: 1
        scopes:
          - public_repo
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/applications/grants/1
    application-grant-items:
      value:
        - app:
            client_id: abcde12345fghij67890
            name: my github app
            url: http://my-github-app.com
          created_at: 2011-09-06T17:26:27Z
          id: 1
          scopes:
            - public_repo
          updated_at: 2011-09-06T20:39:23Z
          url: https://api.github.com/applications/grants/1
    authorization:
      value:
        app:
          client_id: abcde12345fghij67890
          name: my github app
          url: http://my-github-app.com
        created_at: 2011-09-06T17:26:27Z
        fingerprint: jklmnop12345678
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        id: 1
        note: optional note
        note_url: http://optional/note/url
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/authorizations/1
    authorization-2:
      value:
        app:
          client_id: abcde12345fghij67890
          name: my github app
          url: http://my-github-app.com
        created_at: 2011-09-06T17:26:27Z
        fingerprint: jklmnop12345678
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        id: 1
        note: optional note
        note_url: http://optional/note/url
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/authorizations/1
    authorization-3:
      value:
        app:
          client_id: abcde12345fghij67890
          name: my github app
          url: http://my-github-app.com
        created_at: 2011-09-06T17:26:27Z
        fingerprint: jklmnop12345678
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        id: 1
        note: optional note
        note_url: http://optional/note/url
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/authorizations/1
    authorization-items:
      value:
        - app:
            client_id: "00000000000000000000"
            name: My personal access token
            url: https://docs.github.com/enterprise/rest/reference/enterprise-admin#list-personal-access-tokens
          created_at: 2019-04-24T21:49:02Z
          fingerprint:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          hashed_token: 23cffb2fab1b0a62747863eba88cb9327e561f2f7a0c8661c0d9b83146cb8d45
          id: 2
          note: My personal access token
          note_url:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          scopes:
            - admin:business
            - admin:gpg_key
            - admin:org
            - admin:org_hook
            - admin:pre_receive_hook
            - admin:public_key
            - admin:repo_hook
            - delete_repo
            - gist
            - notifications
            - repo
            - user
            - write:discussion
          token: ghp_16C7e42F292c6912E7710c838347Ae178B4a
          token_last_eight: Ae178B4a
          updated_at: 2019-04-24T21:49:02Z
          url: https://enterprise.octocat.com/api/v3/authorizations/2
    authorization-response-if-returning-an-existing-token:
      value:
        app:
          client_id: abcde12345fghij67890
          name: my github app
          url: http://my-github-app.com
        created_at: 2011-09-06T17:26:27Z
        fingerprint: jklmnop12345678
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        id: 1
        note: optional note
        note_url: http://optional/note/url
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/authorizations/1
    authorization-response-if-returning-an-existing-token-2:
      value:
        app:
          client_id: abcde12345fghij67890
          name: my github app
          url: http://my-github-app.com
        created_at: 2011-09-06T17:26:27Z
        fingerprint: ""
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        id: 1
        note: optional note
        note_url: http://optional/note/url
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/authorizations/1
    authorization-with-user:
      value:
        app:
          client_id: abcde12345fghij67890
          name: my github app
          url: http://my-github-app.com
        created_at: 2011-09-06T17:26:27Z
        fingerprint: jklmnop12345678
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        id: 1
        note: optional note
        note_url: http://optional/note/url
        scopes:
          - public_repo
          - user
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/authorizations/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    base-gist:
      value:
        comments: 0
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        created_at: 2010-04-14T02:15:15Z
        description: Hello World Examples
        files:
          hello_world.rb:
            filename: hello_world.rb
            language: Ruby
            raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
            size: 167
            type: application/x-ruby
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        public: true
        truncated: false
        updated_at: 2011-06-20T11:34:15Z
        url: https://api.github.com/gists/aa5a315d61ae9438b18d
        user:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    base-gist-items:
      value:
        - comments: 0
          comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
          commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
          created_at: 2010-04-14T02:15:15Z
          description: Hello World Examples
          files:
            hello_world.rb:
              filename: hello_world.rb
              language: Ruby
              raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
              size: 167
              type: application/x-ruby
          forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
          git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
          git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
          html_url: https://gist.github.com/aa5a315d61ae9438b18d
          id: aa5a315d61ae9438b18d
          node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          public: true
          truncated: false
          updated_at: 2011-06-20T11:34:15Z
          url: https://api.github.com/gists/aa5a315d61ae9438b18d
          user:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    base-installation-for-auth-user-paginated-ghes-2:
      value:
        installations:
          - access_tokens_url: https://api.github.com/installations/1/access_tokens
            account:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            app_id: 1
            app_slug: github-actions
            created_at: 2017-07-08T16:18:44-04:00
            events:
              - push
              - pull_request
            html_url: https://github.com/organizations/github/settings/installations/1
            id: 1
            permissions:
              checks: write
              contents: read
              metadata: read
            repositories_url: https://api.github.com/installation/repositories
            repository_selection: all
            single_file_name: config.yaml
            target_id: 1
            target_type: Organization
            updated_at: 2017-07-08T16:18:44-04:00
          - access_tokens_url: https://api.github.com/installations/1/access_tokens
            account:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 2
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            app_id: 1
            app_slug: github-actions
            created_at: 2017-07-08T16:18:44-04:00
            events:
              - push
              - pull_request
            html_url: https://github.com/organizations/github/settings/installations/1
            id: 3
            permissions:
              checks: write
              contents: read
              metadata: read
            repositories_url: https://api.github.com/installation/repositories
            repository_selection: all
            single_file_name: config.yaml
            target_id: 1
            target_type: Organization
            updated_at: 2017-07-08T16:18:44-04:00
        total_count: 2
    base-installation-ghes-2:
      value:
        access_tokens_url: https://api.github.com/installations/1/access_tokens
        account:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        app_id: 1
        app_slug: github-actions
        created_at: 2017-07-08T16:18:44-04:00
        events:
          - push
          - pull_request
        html_url: https://github.com/organizations/github/settings/installations/1
        id: 1
        permissions:
          checks: write
          contents: read
          metadata: read
        repositories_url: https://api.github.com/installation/repositories
        repository_selection: selected
        single_file_name: config.yaml
        target_id: 1
        target_type: Organization
        updated_at: 2017-07-08T16:18:44-04:00
    base-installation-items-ghes-2:
      value:
        - access_tokens_url: https://api.github.com/installations/1/access_tokens
          account:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          app_id: 1
          app_slug: github-actions
          created_at: 2017-07-08T16:18:44-04:00
          events:
            - push
            - pull_request
          html_url: https://github.com/organizations/github/settings/installations/1
          id: 1
          permissions:
            checks: write
            contents: read
            metadata: read
          repositories_url: https://api.github.com/installation/repositories
          repository_selection: selected
          single_file_name: config.yaml
          target_id: 1
          target_type: Organization
          updated_at: 2017-07-08T16:18:44-04:00
    blob:
      value:
        content: Q29udGVudCBvZiB0aGUgYmxvYg==
        encoding: base64
        node_id: Q29udGVudCBvZiB0aGUgYmxvYg==
        sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        size: 19
        url: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
    branch-protection:
      value:
        allow_deletions:
          enabled: true
        allow_force_pushes:
          enabled: true
        enforce_admins:
          enabled: true
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        required_conversation_resolution:
          enabled: true
        required_linear_history:
          enabled: true
        required_pull_request_reviews:
          dismiss_stale_reviews: true
          dismissal_restrictions:
            teams:
              - description: A great team.
                html_url: https://github.com/orgs/github/teams/justice-league
                id: 1
                members_url: https://api.github.com/teams/1/members{/member}
                name: Justice League
                node_id: MDQ6VGVhbTE=
                parent:
                  $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
                permission: admin
                privacy: closed
                repositories_url: https://api.github.com/teams/1/repos
                slug: justice-league
                url: https://api.github.com/teams/1
            teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
            url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
            users:
              - avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
            users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
          require_code_owner_reviews: true
          required_approving_review_count: 2
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
        required_status_checks:
          contexts:
            - continuous-integration/travis-ci
          contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
          enforcement_level: non_admins
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        restrictions:
          apps:
            - created_at: 2017-07-08T16:18:44-04:00
              description: ""
              events:
                - push
                - pull_request
              external_url: https://example.com
              html_url: https://github.com/apps/octoapp
              id: 1
              name: Octocat App
              node_id: MDExOkludGVncmF0aW9uMQ==
              owner:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                description: A great organization
                events_url: https://api.github.com/orgs/github/events
                hooks_url: https://api.github.com/orgs/github/hooks
                id: 1
                issues_url: https://api.github.com/orgs/github/issues
                login: github
                members_url: https://api.github.com/orgs/github/members{/member}
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                public_members_url: https://api.github.com/orgs/github/public_members{/member}
                repos_url: https://api.github.com/orgs/github/repos
                url: https://api.github.com/orgs/github
              permissions:
                contents: read
                issues: write
                metadata: read
                single_file: write
              slug: octoapp
              updated_at: 2017-07-08T16:18:44-04:00
          apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          teams:
            - description: A great team.
              html_url: https://github.com/orgs/github/teams/justice-league
              id: 1
              members_url: https://api.github.com/teams/1/members{/member}
              name: Justice League
              node_id: MDQ6VGVhbTE=
              parent:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              permission: admin
              privacy: closed
              repositories_url: https://api.github.com/teams/1/repos
              slug: justice-league
              url: https://api.github.com/teams/1
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
          users:
            - avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection
    branch-restriction-policy:
      value:
        apps:
          - created_at: 2017-07-08T16:18:44-04:00
            description: ""
            events:
              - push
              - pull_request
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            id: 1
            name: Octocat App
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              id: 1
              issues_url: https://api.github.com/orgs/github/issues
              login: github
              members_url: https://api.github.com/orgs/github/members{/member}
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              repos_url: https://api.github.com/orgs/github/repos
              url: https://api.github.com/orgs/github
            permissions:
              contents: read
              issues: write
              metadata: read
              single_file: write
            slug: octoapp
            updated_at: 2017-07-08T16:18:44-04:00
        apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        teams:
          - description: A great team.
            html_url: https://github.com/orgs/github/teams/justice-league
            id: 1
            members_url: https://api.github.com/teams/1/members{/member}
            name: Justice League
            node_id: MDQ6VGVhbTE=
            parent:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            permission: admin
            privacy: closed
            repositories_url: https://api.github.com/teams/1/repos
            slug: justice-league
            url: https://api.github.com/teams/1
        teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
        users:
          - avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
    branch-short-items:
      value:
        - commit:
            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          name: branch_5
          protected: false
    check-annotation-items:
      value:
        - annotation_level: warning
          blob_href: https://api.github.com/repos/github/rest-api-description/git/blobs/abc
          end_column: 10
          end_line: 2
          message: Check your spelling for 'banaas'.
          path: README.md
          raw_details: Do you mean 'bananas' or 'banana'?
          start_column: 5
          start_line: 2
          title: Spell Checker
    check-run:
      value:
        app:
          created_at: 2017-07-08T16:18:44-04:00
          description: ""
          events:
            - push
            - pull_request
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          id: 1
          name: Octocat App
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/orgs/github/events
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: github
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/orgs/github/repos
            site_admin: true
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/orgs/github
          permissions:
            contents: read
            issues: write
            metadata: read
            single_file: write
          slug: octoapp
          updated_at: 2017-07-08T16:18:44-04:00
        check_suite:
          id: 5
        completed_at: 2018-05-04T01:14:52Z
        conclusion: neutral
        details_url: https://example.com
        external_id: ""
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        html_url: https://github.com/github/hello-world/runs/4
        id: 4
        name: mighty_readme
        node_id: MDg6Q2hlY2tSdW40
        output:
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may want to
            add a section in your README about how to install your app.
          title: Mighty Readme report
        pull_requests:
          - base:
              ref: master
              repo:
                id: 526
                name: hello-world
                url: https://api.github.com/repos/github/hello-world
              sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            head:
              ref: say-hello
              repo:
                id: 526
                name: hello-world
                url: https://api.github.com/repos/github/hello-world
              sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            id: 1934
            number: 3956
            url: https://api.github.com/repos/github/hello-world/pulls/1
        started_at: 2018-05-04T01:14:52Z
        status: completed
        url: https://api.github.com/repos/github/hello-world/check-runs/4
    check-run-example-of-completed-conclusion:
      summary: Response for completed conclusion
      value:
        app:
          created_at: 2017-07-08T16:18:44-04:00
          description: ""
          events:
            - push
            - pull_request
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          id: 1
          name: Octocat App
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/orgs/github/events
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: github
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/orgs/github/repos
            site_admin: true
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/orgs/github
          permissions:
            contents: read
            issues: write
            metadata: read
            single_file: write
          slug: octoapp
          updated_at: 2017-07-08T16:18:44-04:00
        check_suite:
          id: 5
        completed_at: 2018-05-04T01:14:52Z
        conclusion: neutral
        details_url: https://example.com
        external_id: ""
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        html_url: https://github.com/github/hello-world/runs/4
        id: 4
        name: mighty_readme
        node_id: MDg6Q2hlY2tSdW40
        output:
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may want to
            add a section in your README about how to install your app.
          title: Mighty Readme report
        pull_requests:
          - base:
              ref: master
              repo:
                id: 526
                name: hello-world
                url: https://api.github.com/repos/github/hello-world
              sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            head:
              ref: say-hello
              repo:
                id: 526
                name: hello-world
                url: https://api.github.com/repos/github/hello-world
              sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            id: 1934
            number: 3956
            url: https://api.github.com/repos/github/hello-world/pulls/1
        started_at: 2018-05-04T01:14:52Z
        status: completed
        url: https://api.github.com/repos/github/hello-world/check-runs/4
    check-run-paginated:
      value:
        check_runs:
          - app:
              created_at: 2017-07-08T16:18:44-04:00
              description: ""
              events:
                - push
                - pull_request
              external_url: https://example.com
              html_url: https://github.com/apps/octoapp
              id: 1
              name: Octocat App
              node_id: MDExOkludGVncmF0aW9uMQ==
              owner:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/orgs/github/events
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: github
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/orgs/github/repos
                site_admin: true
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/orgs/github
              permissions:
                contents: read
                issues: write
                metadata: read
                single_file: write
              slug: octoapp
              updated_at: 2017-07-08T16:18:44-04:00
            check_suite:
              id: 5
            completed_at: 2018-05-04T01:14:52Z
            conclusion: neutral
            details_url: https://example.com
            external_id: ""
            head_sha: ce587453ced02b1526dfb4cb910479d431683101
            html_url: https://github.com/github/hello-world/runs/4
            id: 4
            name: mighty_readme
            node_id: MDg6Q2hlY2tSdW40
            output:
              annotations_count: 2
              annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
              summary: There are 0 failures, 2 warnings, and 1 notice.
              text: You may have some misspelled words on lines 2 and 4. You also may want to
                add a section in your README about how to install your app.
              title: Mighty Readme report
            pull_requests:
              - base:
                  ref: master
                  repo:
                    id: 526
                    name: hello-world
                    url: https://api.github.com/repos/github/hello-world
                  sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
                head:
                  ref: say-hello
                  repo:
                    id: 526
                    name: hello-world
                    url: https://api.github.com/repos/github/hello-world
                  sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
                id: 1934
                number: 3956
                url: https://api.github.com/repos/github/hello-world/pulls/1
            started_at: 2018-05-04T01:14:52Z
            status: completed
            url: https://api.github.com/repos/github/hello-world/check-runs/4
        total_count: 1
    check-suite:
      value:
        after: d6fde92930d4715a2b49857d24b940956b26d2d3
        app:
          created_at: 2017-07-08T16:18:44-04:00
          description: ""
          events:
            - push
            - pull_request
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          id: 1
          name: Octocat App
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/orgs/github/events
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: github
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/orgs/github/repos
            site_admin: true
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/orgs/github
          permissions:
            contents: read
            issues: write
            metadata: read
            single_file: write
          slug: octoapp
          updated_at: 2017-07-08T16:18:44-04:00
        before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
        check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
        conclusion: neutral
        created_at: 2017-07-08T16:18:44-04:00
        head_branch: master
        head_commit:
          author:
            email: octocat@nowhere.com
            name: The Octocat
          committer:
            email: octocat@nowhere.com
            name: The Octocat
          id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          message: |-
            Merge pull request #6 from Spaceghost/patch-1

            New line at end of file.
          timestamp: 2016-10-10T00:00:00Z
          tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
        head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
        id: 5
        latest_check_runs_count: 1
        node_id: MDEwOkNoZWNrU3VpdGU1
        pull_requests: []
        repository:
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: false
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          template_repository:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World-Template.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
            fork: false
            forks: 9
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
            full_name: octocat/Hello-World-Template
            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World-Template.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
            html_url: https://github.com/octocat/Hello-World-Template
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
            language:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
            license:
              html_url: https://api.github.com/licenses/mit
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World-Template
            name: Hello-World-Template
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
            open_issues: 0
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World-Template.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
            svn_url: https://svn.github.com/octocat/Hello-World-Template
            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World-Template
            visibility: public
            watchers: 80
            watchers_count: 80
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers_count: 80
        status: completed
        updated_at: 2017-07-08T16:18:44-04:00
        url: https://api.github.com/repos/github/hello-world/check-suites/5
    check-suite-paginated:
      value:
        check_suites:
          - after: d6fde92930d4715a2b49857d24b940956b26d2d3
            app:
              created_at: 2017-07-08T16:18:44-04:00
              description: ""
              events:
                - push
                - pull_request
              external_url: https://example.com
              html_url: https://github.com/apps/octoapp
              id: 1
              name: Octocat App
              node_id: MDExOkludGVncmF0aW9uMQ==
              owner:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                description: A great organization
                events_url: https://api.github.com/orgs/github/events
                hooks_url: https://api.github.com/orgs/github/hooks
                id: 1
                issues_url: https://api.github.com/orgs/github/issues
                login: github
                members_url: https://api.github.com/orgs/github/members{/member}
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                public_members_url: https://api.github.com/orgs/github/public_members{/member}
                repos_url: https://api.github.com/orgs/github/repos
                url: https://api.github.com/orgs/github
              permissions:
                contents: read
                issues: write
                metadata: read
                single_file: write
              slug: octoapp
              updated_at: 2017-07-08T16:18:44-04:00
            before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
            conclusion: neutral
            head_branch: master
            head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
            id: 5
            node_id: MDEwOkNoZWNrU3VpdGU1
            pull_requests: []
            repository:
              allow_merge_commit: true
              allow_rebase_merge: true
              allow_squash_merge: true
              anonymous_access_enabled: false
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              archived: false
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              clone_url: https://github.com/octocat/Hello-World.git
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              created_at: 2011-01-26T19:01:12Z
              default_branch: master
              delete_branch_on_merge: true
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              description: This your first repo!
              disabled: false
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              fork: false
              forks_count: 9
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              full_name: octocat/Hello-World
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              has_downloads: true
              has_issues: true
              has_pages: false
              has_projects: true
              has_wiki: true
              homepage: https://github.com
              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
              html_url: https://github.com/octocat/Hello-World
              id: 1296269
              is_template: true
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              language:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              mirror_url: git:git.example.com/octocat/Hello-World
              name: Hello-World
              network_count: 0
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              open_issues_count: 0
              owner:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              permissions:
                admin: false
                pull: true
                push: false
              private: false
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              pushed_at: 2011-01-26T19:06:43Z
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              size: 108
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_count: 80
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_count: 42
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              svn_url: https://svn.github.com/octocat/Hello-World
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              template_repository:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              topics:
                - octocat
                - atom
                - electron
                - api
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              updated_at: 2011-01-26T19:14:43Z
              url: https://api.github.com/repos/octocat/Hello-World
              visibility: public
              watchers_count: 80
            status: completed
            url: https://api.github.com/repos/github/hello-world/check-suites/5
        total_count: 1
    check-suite-preference:
      value:
        preferences:
          auto_trigger_checks:
            - app_id: 2
              setting: true
            - app_id: 4
              setting: false
        repository:
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: false
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          template_repository:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World-Template.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
            fork: false
            forks: 9
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
            full_name: octocat/Hello-World-Template
            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World-Template.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
            html_url: https://github.com/octocat/Hello-World-Template
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
            language:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
            license:
              html_url: https://api.github.com/licenses/mit
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World-Template
            name: Hello-World-Template
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
            open_issues: 0
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World-Template.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
            svn_url: https://svn.github.com/octocat/Hello-World-Template
            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World-Template
            visibility: public
            watchers: 80
            watchers_count: 80
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers_count: 80
    code-frequency-stat-items:
      value:
        - - 1302998400
          - 1124
          - -435
    code-frequency-stat-items-2:
      value:
        - - 0
          - 0
          - 5
        - - 0
          - 1
          - 43
        - - 0
          - 2
          - 21
    code-of-conduct:
      value:
        body: >
          # Contributor Covenant Code of Conduct


          ## Our Pledge


          In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.


          ## Our Standards


          Examples of behavior that contributes to creating a positive environment include:


          * Using welcoming and inclusive language

          * Being respectful of differing viewpoints and experiences

          * Gracefully accepting constructive criticism

          * Focusing on what is best for the community

          * Showing empathy towards other community members


          Examples of unacceptable behavior by participants include:


          * The use of sexualized language or imagery and unwelcome sexual attention or advances

          * Trolling, insulting/derogatory comments, and personal or political attacks

          * Public or private harassment

          * Publishing others' private information, such as a physical or electronic address, without explicit permission

          * Other conduct which could reasonably be considered inappropriate in a professional setting


          ## Our Responsibilities


          Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                            to any instances of unacceptable behavior.

          Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.


          ## Scope


          This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                            posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

          ## Enforcement


          Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.


          Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.


          ## Attribution


          This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]


          [homepage]: http://contributor-covenant.org

          [version]: http://contributor-covenant.org/version/1/4/
        html_url: http://contributor-covenant.org/version/1/4/
        key: contributor_covenant
        name: Contributor Covenant
        url: https://api.github.com/codes_of_conduct/contributor_covenant
    code-of-conduct-simple-items:
      value:
        - html_url: http://citizencodeofconduct.org/
          key: citizen_code_of_conduct
          name: Citizen Code of Conduct
          url: https://api.github.com/codes_of_conduct/citizen_code_of_conduct
        - html_url: https://www.contributor-covenant.org/version/2/0/code_of_conduct/
          key: contributor_covenant
          name: Contributor Covenant
          url: https://api.github.com/codes_of_conduct/contributor_covenant
    code-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - git_url: https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a
            html_url: https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js
            name: classes.js
            path: src/attributes/classes.js
            repository:
              archive_url: https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/jquery/jquery/assignees{/user}
              blobs_url: https://api.github.com/repos/jquery/jquery/git/blobs{/sha}
              branches_url: https://api.github.com/repos/jquery/jquery/branches{/branch}
              collaborators_url: https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/jquery/jquery/comments{/number}
              commits_url: https://api.github.com/repos/jquery/jquery/commits{/sha}
              compare_url: https://api.github.com/repos/jquery/jquery/compare/{base}...{head}
              contents_url: https://api.github.com/repos/jquery/jquery/contents/{+path}
              contributors_url: https://api.github.com/repos/jquery/jquery/contributors
              deployments_url: http://api.github.com/repos/octocat/Hello-World/deployments
              description: jQuery JavaScript Library
              downloads_url: https://api.github.com/repos/jquery/jquery/downloads
              events_url: https://api.github.com/repos/jquery/jquery/events
              fork: false
              forks_url: https://api.github.com/repos/jquery/jquery/forks
              full_name: jquery/jquery
              git_commits_url: https://api.github.com/repos/jquery/jquery/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/jquery/jquery/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/jquery/jquery/git/tags{/sha}
              hooks_url: https://api.github.com/repos/jquery/jquery/hooks
              html_url: https://github.com/jquery/jquery
              id: 167174
              issue_comment_url: https://api.github.com/repos/jquery/jquery/issues/comments/{number}
              issue_events_url: https://api.github.com/repos/jquery/jquery/issues/events{/number}
              issues_url: https://api.github.com/repos/jquery/jquery/issues{/number}
              keys_url: https://api.github.com/repos/jquery/jquery/keys{/key_id}
              labels_url: https://api.github.com/repos/jquery/jquery/labels{/name}
              languages_url: https://api.github.com/repos/jquery/jquery/languages
              merges_url: https://api.github.com/repos/jquery/jquery/merges
              milestones_url: https://api.github.com/repos/jquery/jquery/milestones{/number}
              name: jquery
              node_id: MDEwOlJlcG9zaXRvcnkxNjcxNzQ=
              notifications_url: https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}
              owner:
                avatar_url: https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png
                events_url: https://api.github.com/users/jquery/events{/privacy}
                followers_url: https://api.github.com/users/jquery/followers
                following_url: https://api.github.com/users/jquery/following{/other_user}
                gists_url: https://api.github.com/users/jquery/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/jquery
                id: 70142
                login: jquery
                node_id: MDQ6VXNlcjcwMTQy
                organizations_url: https://api.github.com/users/jquery/orgs
                received_events_url: https://api.github.com/users/jquery/received_events
                repos_url: https://api.github.com/users/jquery/repos
                site_admin: false
                starred_url: https://api.github.com/users/jquery/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/jquery/subscriptions
                type: Organization
                url: https://api.github.com/users/jquery
              private: false
              pulls_url: https://api.github.com/repos/jquery/jquery/pulls{/number}
              releases_url: http://api.github.com/repos/octocat/Hello-World/releases{/id}
              stargazers_url: https://api.github.com/repos/jquery/jquery/stargazers
              statuses_url: https://api.github.com/repos/jquery/jquery/statuses/{sha}
              subscribers_url: https://api.github.com/repos/jquery/jquery/subscribers
              subscription_url: https://api.github.com/repos/jquery/jquery/subscription
              tags_url: https://api.github.com/repos/jquery/jquery/tags
              teams_url: https://api.github.com/repos/jquery/jquery/teams
              trees_url: https://api.github.com/repos/jquery/jquery/git/trees{/sha}
              url: https://api.github.com/repos/jquery/jquery
            score: 1
            sha: d7212f9dee2dcc18f084d7df8f417b80846ded5a
            url: https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4
        total_count: 7
    collaborator-items:
      value:
        - avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          permissions:
            admin: false
            pull: true
            push: true
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    combined-commit-status:
      value:
        commit_url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e
        repository:
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          name: Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          url: https://api.github.com/repos/octocat/Hello-World
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        state: success
        statuses:
          - avatar_url: https://github.com/images/error/hubot_happy.gif
            context: continuous-integration/jenkins
            created_at: 2012-07-20T01:19:13Z
            description: Build has completed successfully
            id: 1
            node_id: MDY6U3RhdHVzMQ==
            state: success
            target_url: https://ci.example.com/1000/output
            updated_at: 2012-07-20T01:19:13Z
            url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          - avatar_url: https://github.com/images/error/other_user_happy.gif
            context: security/brakeman
            created_at: 2012-08-20T01:19:13Z
            description: Testing has completed successfully
            id: 2
            node_id: MDY6U3RhdHVzMg==
            state: success
            target_url: https://ci.example.com/2000/output
            updated_at: 2012-08-20T01:19:13Z
            url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        total_count: 2
        url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status
    commit:
      value:
        author:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          author:
            date: 2011-04-14T16:00:49Z
            email: mona@github.com
            name: Monalisa Octocat
          comment_count: 0
          committer:
            date: 2011-04-14T16:00:49Z
            email: mona@github.com
            name: Monalisa Octocat
          message: Fix all the bugs
          tree:
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          verification:
            payload:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            reason: unsigned
            signature:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            verified: false
        committer:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        files:
          - additions: 10
            blob_url: https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
            changes: 12
            deletions: 2
            filename: file1.txt
            patch: |-
              @@ -29,7 +29,7 @@
              .....
            raw_url: https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
            status: modified
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        parents:
          - sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        stats:
          additions: 104
          deletions: 4
          total: 108
        url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
    commit-activity-items:
      value:
        - days:
            - 0
            - 3
            - 26
            - 20
            - 39
            - 1
            - 0
          total: 89
          week: 1336280400
    commit-comment:
      value:
        author_association: COLLABORATOR
        body: Great stuff
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: 2011-04-14T16:00:49Z
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        id: 1
        line: 14
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        path: file1.txt
        position: 4
        updated_at: 2011-04-14T16:00:49Z
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    commit-comment-2:
      value:
        author_association: COLLABORATOR
        body: Nice change
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: 2011-04-14T16:00:49Z
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        id: 1
        line: 14
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        path: file1.txt
        position: 4
        updated_at: 2011-04-14T16:00:49Z
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    commit-comment-items:
      value:
        - author_association: COLLABORATOR
          body: Great stuff
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          created_at: 2011-04-14T16:00:49Z
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
          id: 1
          line: 14
          node_id: MDEzOkNvbW1pdENvbW1lbnQx
          path: file1.txt
          position: 4
          updated_at: 2011-04-14T16:00:49Z
          url: https://api.github.com/repos/octocat/Hello-World/comments/1
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    commit-comparison:
      value:
        ahead_by: 1
        base_commit:
          author:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            author:
              date: 2011-04-14T16:00:49Z
              email: mona@github.com
              name: Monalisa Octocat
            comment_count: 0
            committer:
              date: 2011-04-14T16:00:49Z
              email: mona@github.com
              name: Monalisa Octocat
            message: Fix all the bugs
            tree:
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            verification:
              payload:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              reason: unsigned
              signature:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              verified: false
          committer:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          parents:
            - sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
              url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        behind_by: 2
        commits:
          - author:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
            commit:
              author:
                date: 2011-04-14T16:00:49Z
                email: mona@github.com
                name: Monalisa Octocat
              comment_count: 0
              committer:
                date: 2011-04-14T16:00:49Z
                email: mona@github.com
                name: Monalisa Octocat
              message: Fix all the bugs
              tree:
                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
              verification:
                payload:
                  $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
                reason: unsigned
                signature:
                  $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
                verified: false
            committer:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
            node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
            parents:
              - sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        diff_url: https://github.com/octocat/Hello-World/compare/master...topic.diff
        files:
          - additions: 103
            blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
            changes: 124
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
            deletions: 21
            filename: file1.txt
            patch: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
            raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
            sha: bbcd538c8e72b8c175046e27cc8f907076331401
            status: added
        html_url: https://github.com/octocat/Hello-World/compare/master...topic
        merge_base_commit:
          author:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            author:
              date: 2011-04-14T16:00:49Z
              email: mona@github.com
              name: Monalisa Octocat
            comment_count: 0
            committer:
              date: 2011-04-14T16:00:49Z
              email: mona@github.com
              name: Monalisa Octocat
            message: Fix all the bugs
            tree:
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            verification:
              payload:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              reason: unsigned
              signature:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              verified: false
          committer:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          parents:
            - sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
              url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch_url: https://github.com/octocat/Hello-World/compare/master...topic.patch
        permalink_url: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        status: behind
        total_commits: 1
        url: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
    commit-items:
      value:
        - author:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            author:
              date: 2011-04-14T16:00:49Z
              email: support@github.com
              name: Monalisa Octocat
            comment_count: 0
            committer:
              date: 2011-04-14T16:00:49Z
              email: support@github.com
              name: Monalisa Octocat
            message: Fix all the bugs
            tree:
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            verification:
              payload:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              reason: unsigned
              signature:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              verified: false
          committer:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          parents:
            - sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
              url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
    commit-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - author:
              avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 583231
              login: octocat
              node_id: MDQ6VXNlcjU4MzIzMQ==
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            comments_url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments
            commit:
              author:
                date: 2014-02-04T14:38:36-08:00
                email: octocat@nowhere.com
                name: The Octocat
              comment_count: 8
              committer:
                date: 2014-02-12T15:18:55-08:00
                email: octocat@nowhere.com
                name: The Octocat
              message: Create styles.css and updated README
              tree:
                sha: a639e96f9038797fba6e0469f94a4b0cc459fa68
                url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68
              url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            committer: {}
            html_url: https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            node_id: MDQ6VXNlcjU4MzIzMQ==
            parents:
              - html_url: https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
                sha: a30c19e3f13765a3b48829788bc1cb8b4e95cee4
                url: https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            repository:
              archive_url: https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Spoon-Knife/contributors
              deployments_url: https://api.github.com/repos/octocat/Spoon-Knife/deployments
              description: This repo is for demonstration purposes only.
              downloads_url: https://api.github.com/repos/octocat/Spoon-Knife/downloads
              events_url: https://api.github.com/repos/octocat/Spoon-Knife/events
              fork: false
              forks_url: https://api.github.com/repos/octocat/Spoon-Knife/forks
              full_name: octocat/Spoon-Knife
              git_commits_url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}
              hooks_url: https://api.github.com/repos/octocat/Spoon-Knife/hooks
              html_url: https://github.com/octocat/Spoon-Knife
              id: 1300192
              issue_comment_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Spoon-Knife/languages
              merges_url: https://api.github.com/repos/octocat/Spoon-Knife/merges
              milestones_url: https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}
              name: Spoon-Knife
              node_id: MDEwOlJlcG9zaXRvcnkxMzAwMTky
              notifications_url: https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}
              owner:
                avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 583231
                login: octocat
                node_id: MDQ6VXNlcjU4MzIzMQ==
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              private: false
              pulls_url: https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}
              stargazers_url: https://api.github.com/repos/octocat/Spoon-Knife/stargazers
              statuses_url: https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Spoon-Knife/subscribers
              subscription_url: https://api.github.com/repos/octocat/Spoon-Knife/subscription
              tags_url: https://api.github.com/repos/octocat/Spoon-Knife/tags
              teams_url: https://api.github.com/repos/octocat/Spoon-Knife/teams
              trees_url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}
              url: https://api.github.com/repos/octocat/Spoon-Knife
            score: 1
            sha: bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
        total_count: 1
    configuration-status:
      value:
        progress:
          - key: Appliance core components
            status: DONE
          - key: GitHub utilities
            status: DONE
          - key: GitHub applications
            status: DONE
          - key: GitHub services
            status: CONFIGURING
          - key: Reloading appliance services
            status: PENDING
        status: running
    content-file:
      value:
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        content: encoded content ...
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        encoding: base64
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        name: README.md
        path: README.md
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        size: 5362
        type: file
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
    content-file-response-if-content-is-a-directory:
      summary: Response if content is a directory
      value:
        - _links:
            git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
            html: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
            self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
          download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb
          git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html_url: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
          name: octokit.rb
          path: lib/octokit.rb
          sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          size: 625
          type: file
          url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
        - _links:
            git: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
            html: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
            self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
          download_url:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          git_url: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          html_url: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
          name: octokit
          path: lib/octokit
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          size: 0
          type: dir
          url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
    content-file-response-if-content-is-a-file:
      summary: Response if content is a file
      value:
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        content: encoded content ...
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        encoding: base64
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        name: README.md
        path: README.md
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        size: 5362
        type: file
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
    content-file-response-if-content-is-a-submodule:
      summary: Response if content is a submodule
      value:
        _links:
          git: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
          html: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
          self: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
        download_url:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        git_url: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
        html_url: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
        name: qunit
        path: test/qunit
        sha: 6ca3721222109997540bd6d9ccd396902e0ad2f9
        size: 0
        submodule_git_url: git://github.com/jquery/qunit.git
        type: submodule
        url: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
    content-file-response-if-content-is-a-symlink:
      summary: Response if content is a symlink
      value:
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
          html: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
          self: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
        html_url: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
        name: some-symlink
        path: bin/some-symlink
        sha: 452a98979c88e093d682cab404a3ec82babebb48
        size: 23
        target: /path/to/symlink/target
        type: symlink
        url: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
    content-reference-attachment:
      value:
        body: >-
          You have used an email that already exists for the user_email_uniq field.
           ## DETAILS:

          The (email)=(Octocat@github.com) already exists.

           The error was found in core/models.py in get_or_create_user at line 62.

           self.save()
        id: 101
        title: "[A-1234] Error found in core/models.py file'"
    contributor-activity-items:
      value:
        - author:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          total: 135
          weeks:
            - a: 6898
              c: 10
              d: 77
              w: 1367712000
    contributor-items-response-if-repository-contains-content:
      value:
        - avatar_url: https://github.com/images/error/octocat_happy.gif
          contributions: 32
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    deploy-key:
      value:
        created_at: 2014-12-10T15:53:42Z
        id: 1
        key: ssh-rsa AAA...
        read_only: true
        title: octocat@octomac
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        verified: true
    deploy-key-items:
      value:
        - created_at: 2014-12-10T15:53:42Z
          id: 1
          key: ssh-rsa AAA...
          read_only: true
          title: octocat@octomac
          url: https://api.github.com/repos/octocat/Hello-World/keys/1
          verified: true
    deployment:
      value:
        created_at: 2012-07-20T01:19:13Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        description: Deploy request from hubot
        environment: production
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        original_environment: staging
        payload: {}
        production_environment: true
        ref: topic-branch
        repository_url: https://api.github.com/repos/octocat/example
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        task: deploy
        transient_environment: false
        updated_at: 2012-07-20T01:19:13Z
        url: https://api.github.com/repos/octocat/example/deployments/1
    deployment-items:
      value:
        - created_at: 2012-07-20T01:19:13Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          description: Deploy request from hubot
          environment: production
          id: 1
          node_id: MDEwOkRlcGxveW1lbnQx
          original_environment: staging
          payload: {}
          production_environment: true
          ref: topic-branch
          repository_url: https://api.github.com/repos/octocat/example
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
          task: deploy
          transient_environment: false
          updated_at: 2012-07-20T01:19:13Z
          url: https://api.github.com/repos/octocat/example/deployments/1
    deployment-simple-example:
      summary: Simple example
      value:
        created_at: 2012-07-20T01:19:13Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        description: Deploy request from hubot
        environment: production
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        original_environment: staging
        payload: {}
        production_environment: true
        ref: topic-branch
        repository_url: https://api.github.com/repos/octocat/example
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        task: deploy
        transient_environment: false
        updated_at: 2012-07-20T01:19:13Z
        url: https://api.github.com/repos/octocat/example/deployments/1
    deployment-status:
      value:
        created_at: 2012-07-20T01:19:13Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        description: Deployment finished successfully.
        environment: production
        environment_url: https://test-branch.lab.acme.com
        id: 1
        log_url: https://example.com/deployment/42/output
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        repository_url: https://api.github.com/repos/octocat/example
        state: success
        target_url: https://example.com/deployment/42/output
        updated_at: 2012-07-20T01:19:13Z
        url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
    deployment-status-items:
      value:
        - created_at: 2012-07-20T01:19:13Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          deployment_url: https://api.github.com/repos/octocat/example/deployments/42
          description: Deployment finished successfully.
          environment: production
          environment_url: https://test-branch.lab.acme.com
          id: 1
          log_url: https://example.com/deployment/42/output
          node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
          repository_url: https://api.github.com/repos/octocat/example
          state: success
          target_url: https://example.com/deployment/42/output
          updated_at: 2012-07-20T01:19:13Z
          url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
    diff-entry-items:
      value:
        - additions: 103
          blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          changes: 124
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
          deletions: 21
          filename: file1.txt
          patch: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
          raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          sha: bbcd538c8e72b8c175046e27cc8f907076331401
          status: added
    email-items:
      value:
        - email: octocat@octocat.org
          primary: false
          verified: false
          visibility: public
        - email: octocat@github.com
          primary: false
          verified: false
          visibility:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        - email: mona@github.com
          primary: false
          verified: false
          visibility:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    email-items-2:
      value:
        - email: octocat@github.com
          primary: true
          verified: true
          visibility: public
    enterprise-overview:
      value:
        comments:
          total_commit_comments: 6
          total_gist_comments: 28
          total_issue_comments: 366
          total_pull_request_comments: 30
        gists:
          private_gists: 151
          public_gists: 25
          total_gists: 178
        hooks:
          active_hooks: 23
          inactive_hooks: 4
          total_hooks: 27
        issues:
          closed_issues: 96
          open_issues: 83
          total_issues: 179
        milestones:
          closed_milestones: 1
          open_milestones: 6
          total_milestones: 7
        orgs:
          disabled_orgs: 0
          total_orgs: 33
          total_team_members: 314
          total_teams: 60
        pages:
          total_pages: 36
        pulls:
          mergeable_pulls: 21
          merged_pulls: 60
          total_pulls: 86
          unmergeable_pulls: 3
        repos:
          fork_repos: 18
          org_repos: 51
          root_repos: 194
          total_pushes: 3082
          total_repos: 212
          total_wikis: 15
        users:
          admin_users: 45
          suspended_users: 21
          total_users: 254
    enterprise-public-key-items:
      value:
        - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
          key_id: "012345678912345678"
          repository_id:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          user_id: 232
        - id: 2
          key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
          key_id: "012345678912345678"
          repository_id: 2333
          url: https://api.github.com/repos/octocat/Hello-World/keys/2
          user_id:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    enterprise-settings:
      value:
        enterprise:
          admin_password:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          assets:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          auth_mode: default
          avatar:
            enabled: false
            uri: ""
          cas:
            url:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          collectd:
            enabled: false
            encryption:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            password:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            port: 0
            server:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            username:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          configuration_id: 1401777404
          configuration_run_count: 4
          customer:
            email: stannis@themannis.biz
            name: GitHub
            public_key_data: |
              -----BEGIN PGP PUBLIC KEY BLOCK-----
              Version: GnuPG v1.4.10 (GNU/Linux)

              mI0ETqzZYgEEALSe6snowdenXyqvLfSQ34HWD6C7....
              -----END PGP PUBLIC KEY BLOCK-----
            secret_key_data: |
              -----BEGIN PGP PRIVATE KEY BLOCK-----
              Version: GnuPG v1.4.10 (GNU/Linux)

              lQcYBE5TCgsBEACk4yHpUcapplebaumBMXYMiLF+nCQ0lxpx...
              -----END PGP PRIVATE KEY BLOCK-----
            uuid: af6cac80-e4e1-012e-d822-1231380e52e9
          expire_sessions: false
          github_hostname: ghe.local
          github_oauth:
            client_id: "12313412"
            client_secret: kj123131132
            organization_name: Homestar Runners
            organization_team: homestarrunners/characters
          github_ssl:
            cert:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            enabled: false
            key:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          http_proxy:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          identicons_host: dotcom
          ldap:
            admin_group:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            base: []
            bind_dn:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            host:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            method: Plain
            password:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            port: 0
            posix_support: true
            profile:
              key:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              mail:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              name:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              uid: uid
            reconciliation:
              org:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              user:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            recursive_group_search: false
            search_strategy: detect
            sync_enabled: false
            team_sync_interval: 4
            uid:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            user_groups: []
            user_sync_emails: false
            user_sync_interval: 4
            user_sync_keys: false
            virtual_attribute_enabled: false
          license:
            cluster_support: false
            evaluation: false
            expire_at: 2016-04-27T00:00:00-07:00
            perpetual: false
            seats: 0
            ssh_allowed: true
            support_key: ssh-rsa AAAAB3N....
            unlimited_seating: true
          load_balancer:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          mapping:
            basemap: company.map-qsz2zrvs
            enabled: true
            tileserver:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            token:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          ntp:
            primary_server: 0.pool.ntp.org
            secondary_server: 1.pool.ntp.org
          pages:
            enabled: true
          private_mode: false
          public_pages: false
          saml:
            certificate:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            certificate_path:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            disable_admin_demote: false
            idp_initiated_sso: false
            issuer:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            sso_url:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          signup_enabled: false
          smtp:
            address: smtp.example.com
            authentication: plain
            discard-to-noreply-address: true
            domain: blah
            enable_starttls_auto: true
            enabled: true
            noreply_address: noreply@github.com
            password: bar
            port: "1234"
            support_address: enterprise@github.com
            support_address_type: email
            user_name: mr_foo
            username: foo
          snmp:
            community: ""
            enabled: false
          subdomain_isolation: true
          syslog:
            enabled: false
            protocol_name: udp
            server:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          timezone:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        run_list:
          - recipe[enterprise-configure]
    feed:
      value:
        _links:
          current_user:
            href: https://github.com/octocat.private?token=abc123
            type: application/atom+xml
          current_user_actor:
            href: https://github.com/octocat.private.actor?token=abc123
            type: application/atom+xml
          current_user_organization:
            href: ""
            type: ""
          current_user_organizations:
            - href: https://github.com/organizations/github/octocat.private.atom?token=abc123
              type: application/atom+xml
          current_user_public:
            href: https://github.com/octocat
            type: application/atom+xml
          timeline:
            href: https://github.com/timeline
            type: application/atom+xml
          user:
            href: https://github.com/{user}
            type: application/atom+xml
        current_user_actor_url: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url: ""
        current_user_organization_urls:
          - https://github.com/organizations/github/octocat.private.atom?token=abc123
        current_user_public_url: https://github.com/octocat
        current_user_url: https://github.com/octocat.private?token=abc123
        timeline_url: https://github.com/timeline
        user_url: https://github.com/{user}
    file-commit:
      value:
        commit:
          author:
            date: 2014-11-07T22:01:45Z
            email: octocat@github.com
            name: Monalisa Octocat
          committer:
            date: 2014-11-07T22:01:45Z
            email: octocat@github.com
            name: Monalisa Octocat
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          message: my commit message
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          parents:
            - html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
              sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
              url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          tree:
            sha: 691272480426f78a0138979dd3ce63b77f706feb
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          verification:
            payload:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            reason: unsigned
            signature:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            verified: false
        content:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    file-commit-example-for-creating-a-file:
      value:
        commit:
          author:
            date: 2014-11-07T22:01:45Z
            email: octocat@github.com
            name: Monalisa Octocat
          committer:
            date: 2014-11-07T22:01:45Z
            email: octocat@github.com
            name: Monalisa Octocat
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          message: my commit message
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          parents:
            - html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
              sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
              url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          tree:
            sha: 691272480426f78a0138979dd3ce63b77f706feb
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          verification:
            payload:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            reason: unsigned
            signature:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            verified: false
        content:
          _links:
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          name: hello.txt
          path: notes/hello.txt
          sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          size: 9
          type: file
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
    file-commit-example-for-updating-a-file:
      value:
        commit:
          author:
            date: 2014-11-07T22:01:45Z
            email: octocat@github.com
            name: Monalisa Octocat
          committer:
            date: 2014-11-07T22:01:45Z
            email: octocat@github.com
            name: Monalisa Octocat
          html_url: https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          message: my commit message
          node_id: MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==
          parents:
            - html_url: https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6
              sha: da5a433788da5c255edad7979b328b67d79f53f6
              url: https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6
          sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          tree:
            sha: 9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          verification:
            payload:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            reason: unsigned
            signature:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            verified: false
        content:
          _links:
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          name: hello.txt
          path: notes/hello.txt
          sha: a56507ed892d05a37c6d6128c260937ea4d287bd
          size: 9
          type: file
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
    full-repository:
      value:
        allow_merge_commit: true
        allow_rebase_merge: true
        allow_squash_merge: true
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        delete_branch_on_merge: true
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks: 9
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: false
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          html_url: https://github.com/licenses/mit
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        network_count: 0
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues: 0
        open_issues_count: 0
        organization:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: Organization
          url: https://api.github.com/users/octocat
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        parent:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks: 1
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues: 1
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers: 1
          watchers_count: 80
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        source:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks: 1
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues: 1
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers: 1
          watchers_count: 80
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_count: 42
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        template_repository:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          fork: false
          forks: 9
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          full_name: octocat/Hello-World-Template
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          html_url: https://github.com/octocat/Hello-World-Template
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          name: Hello-World-Template
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          open_issues: 0
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World-Template
          visibility: public
          watchers: 80
          watchers_count: 80
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers: 80
        watchers_count: 80
    full-repository-default-response:
      summary: Default response
      value:
        allow_merge_commit: true
        allow_rebase_merge: true
        allow_squash_merge: true
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        delete_branch_on_merge: true
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks: 9
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: false
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        network_count: 0
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues: 0
        open_issues_count: 0
        organization:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: Organization
          url: https://api.github.com/users/octocat
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        parent:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks: 1
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues: 1
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers: 1
          watchers_count: 80
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        source:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks: 1
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues: 1
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers: 1
          watchers_count: 80
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_count: 42
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        template_repository:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          fork: false
          forks: 9
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          full_name: octocat/Hello-World-Template
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          html_url: https://github.com/octocat/Hello-World-Template
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          name: Hello-World-Template
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          open_issues: 0
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World-Template
          visibility: public
          watchers: 80
          watchers_count: 80
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers: 80
        watchers_count: 80
    full-repository-response-with-scarlet-witch-preview-media-type:
      summary: Response with scarlet-witch-preview media type
      value:
        allow_merge_commit: true
        allow_rebase_merge: true
        allow_squash_merge: true
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        code_of_conduct:
          html_url: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
          key: other
          name: Other
          url: https://api.github.com/repos/github/docs/community/code_of_conduct
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        delete_branch_on_merge: true
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks: 9
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: false
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        network_count: 0
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues: 0
        open_issues_count: 0
        organization:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: Organization
          url: https://api.github.com/users/octocat
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        parent:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks: 1
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues: 1
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers: 1
          watchers_count: 80
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        source:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks: 1
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues: 1
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers: 1
          watchers_count: 80
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_count: 42
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        template_repository:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          fork: false
          forks: 9
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          full_name: octocat/Hello-World-Template
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          html_url: https://github.com/octocat/Hello-World-Template
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          name: Hello-World-Template
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          open_issues: 0
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World-Template
          visibility: public
          watchers: 80
          watchers_count: 80
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers: 80
        watchers_count: 80
    gist:
      value:
        comments: 0
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        created_at: 2010-04-14T02:15:15Z
        description: Hello World Examples
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        updated_at: 2011-06-20T11:34:15Z
        url: https://api.github.com/gists/aa5a315d61ae9438b18d
    gist-comment:
      value:
        author_association: COLLABORATOR
        body: Just commenting for the sake of commenting
        created_at: 2011-04-18T23:23:56Z
        id: 1
        node_id: MDExOkdpc3RDb21tZW50MQ==
        updated_at: 2011-04-18T23:23:56Z
        url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    gist-comment-items:
      value:
        - author_association: COLLABORATOR
          body: Just commenting for the sake of commenting
          created_at: 2011-04-18T23:23:56Z
          id: 1
          node_id: MDExOkdpc3RDb21tZW50MQ==
          updated_at: 2011-04-18T23:23:56Z
          url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    gist-commit-items:
      value:
        - change_status:
            additions: 180
            deletions: 0
            total: 180
          committed_at: 2010-04-14T02:15:15Z
          url: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          version: 57a7f021a713b1c5a6a199b54cc514735d2d462f
    gist-fork-items:
      value:
        - comments: 1
          comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
          commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
          created_at: 2010-04-14T02:15:15Z
          description: Hello World Examples
          files:
            hello_world.rb:
              filename: hello_world.rb
              language: Ruby
              raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
              size: 167
              type: application/x-ruby
          forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
          git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
          git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
          html_url: https://gist.github.com/aa5a315d61ae9438b18d
          id: aa5a315d61ae9438b18d
          node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          public: true
          updated_at: 2011-06-20T11:34:15Z
          url: https://api.github.com/gists/aa5a315d61ae9438b18d
          user:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
    git-commit:
      value:
        author:
          date: 2014-11-07T22:01:45Z
          email: octocat@github.com
          name: Monalisa Octocat
        committer:
          date: 2014-11-07T22:01:45Z
          email: octocat@github.com
          name: Monalisa Octocat
        html_url: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
        message: my commit message
        node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
        parents:
          - html_url: https://github.com/octocat/Hello-World/commit/7d1b31e74ee336d15cbd21741bc88a537ed063a0
            sha: 7d1b31e74ee336d15cbd21741bc88a537ed063a0
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0
        sha: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree:
          sha: 827efc6d56897b048c772eb4087f854f46256132
          url: https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132
        url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
        verification:
          payload:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          reason: unsigned
          signature:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          verified: false
    git-commit-2:
      value:
        author:
          date: 2014-11-07T22:01:45Z
          email: octocat@github.com
          name: Monalisa Octocat
        committer:
          date: 2014-11-07T22:01:45Z
          email: octocat@github.com
          name: Monalisa Octocat
        html_url: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
        message: added readme, because im a good github citizen
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        parents:
          - html_url: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
            sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
        sha: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree:
          sha: 691272480426f78a0138979dd3ce63b77f706feb
          url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
        url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
        verification:
          payload:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          reason: unsigned
          signature:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          verified: false
    git-ref:
      value:
        node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==
        object:
          sha: aa218f56b14c9653891f9e74264a383fa43fefbd
          type: commit
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
        ref: refs/heads/featureA
        url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
    git-ref-items:
      value:
        - node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWE=
          object:
            sha: aa218f56b14c9653891f9e74264a383fa43fefbd
            type: commit
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
          ref: refs/heads/feature-a
          url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-a
        - node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWI=
          object:
            sha: 612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
            type: commit
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
          ref: refs/heads/feature-b
          url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-b
    git-tag:
      value:
        message: initial version
        node_id: MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
        object:
          sha: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
          type: commit
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
        sha: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
        tag: v0.0.1
        tagger:
          date: 2014-11-07T22:01:45Z
          email: octocat@github.com
          name: Monalisa Octocat
        url: https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
        verification:
          payload:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          reason: unsigned
          signature:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          verified: false
    git-tree:
      value:
        sha: cd8274d15fa3ae2ab983129fb037999f264ba9a7
        tree:
          - mode: "100644"
            path: file.rb
            sha: 7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
            size: 132
            type: blob
            url: https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
        truncated: true
        url: https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7
    git-tree-default-response:
      summary: Default response
      value:
        sha: 9fb037999f264ba9a7fc6274d15fa3ae2ab98312
        tree:
          - mode: "100644"
            path: file.rb
            sha: 44b4fc6d56897b048c772eb4087f854f46256132
            size: 30
            type: blob
            url: https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
          - mode: "040000"
            path: subdir
            sha: f484d249c660418515fb01c2b9662073663c242e
            type: tree
            url: https://api.github.com/repos/octocat/Hello-World/git/blobs/f484d249c660418515fb01c2b9662073663c242e
          - mode: "100755"
            path: exec_file
            sha: 45b983be36b73c0788dc9cbcb76cbb80fc7bb057
            size: 75
            type: blob
            url: https://api.github.com/repos/octocat/Hello-World/git/blobs/45b983be36b73c0788dc9cbcb76cbb80fc7bb057
        truncated: false
        url: https://api.github.com/repos/octocat/Hello-World/trees/9fb037999f264ba9a7fc6274d15fa3ae2ab98312
    git-tree-response-recursively-retrieving-a-tree:
      summary: Response recursively retrieving a tree
      value:
        sha: fc6274d15fa3ae2ab983129fb037999f264ba9a7
        tree:
          - mode: "100644"
            path: subdir/file.txt
            sha: 7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
            size: 132
            type: blob
            url: https://api.github.com/repos/octocat/Hello-World/git/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
        truncated: false
        url: https://api.github.com/repos/octocat/Hello-World/trees/fc6274d15fa3ae2ab983129fb037999f264ba9a7
    gitignore-template:
      value:
        name: C
        source: |
          # Object files
          *.o

          # Libraries
          *.lib
          *.a

          # Shared objects (inc. Windows DLLs)
          *.dll
          *.so
          *.so.*
          *.dylib

          # Executables
          *.exe
          *.out
          *.app
    global-hook:
      value:
        active: true
        config:
          content_type: json
          insecure_ssl: "0"
          secret: "********"
          url: https://example.com
        created_at: 2017-12-07T00:14:59Z
        events:
          - organization
          - user
        id: 1
        name: web
        ping_url: https://api.github.com/admin/hooks/1/pings
        type: Global
        updated_at: 2017-12-07T00:14:59Z
        url: https://api.github.com/admin/hooks/1
    global-hook-2:
      value:
        active: true
        config:
          content_type: form
          insecure_ssl: "0"
          url: https://example.com
        created_at: 2017-12-07T00:14:59Z
        events:
          - organization
        id: 1
        name: web
        ping_url: https://api.github.com/admin/hooks/1/pings
        type: Global
        updated_at: 2017-12-07T00:14:59Z
        url: https://api.github.com/admin/hooks/1
    global-hook-items:
      value:
        - active: true
          config:
            content_type: json
            insecure_ssl: "0"
            secret: "********"
            url: https://example.com
          created_at: 2017-12-07T00:14:59Z
          events:
            - organization
            - user
          id: 1
          name: web
          ping_url: https://api.github.com/admin/hooks/1/pings
          type: Global
          updated_at: 2017-12-07T00:14:59Z
          url: https://api.github.com/admin/hooks/1
    gpg-key:
      value:
        can_certify: true
        can_encrypt_comms: false
        can_encrypt_storage: false
        can_sign: true
        created_at: 2016-03-24T11:31:04-06:00
        emails:
          - email: mastahyeti@users.noreply.github.com
            verified: true
        expires_at: 2016-03-24T11:31:04-07:00
        id: 3
        key_id: 3262EFF25BA0D270
        primary_key_id: 2
        public_key: xsBNBFayYZ...
        raw_key: '"-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG
          v2\n\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\nIts/HFYRLiFgDLmTlxo=\n=+OzK\n-----END
          PGP PUBLIC KEY BLOCK-----"'
        subkeys:
          - can_certify: false
            can_encrypt_comms: true
            can_encrypt_storage: true
            can_sign: false
            created_at: 2016-03-24T11:31:04-06:00
            emails: []
            expires_at: 2016-03-24T11:31:04-07:00
            id: 4
            key_id: 4A595D4C72EE49C7
            primary_key_id: 3
            public_key: zsBNBFayYZ...
            subkeys: []
    gpg-key-items:
      value:
        - can_certify: true
          can_encrypt_comms: false
          can_encrypt_storage: false
          can_sign: true
          created_at: 2016-03-24T11:31:04-06:00
          emails:
            - email: mastahyeti@users.noreply.github.com
              verified: true
          expires_at: 2016-03-24T11:31:04-07:00
          id: 3
          key_id: 3262EFF25BA0D270
          primary_key_id: 2
          public_key: xsBNBFayYZ...
          raw_key: string
          subkeys:
            - can_certify: false
              can_encrypt_comms: true
              can_encrypt_storage: true
              can_sign: false
              created_at: 2016-03-24T11:31:04-06:00
              emails: []
              expires_at: 2016-03-24T11:31:04-07:00
              id: 4
              key_id: 4A595D4C72EE49C7
              primary_key_id: 3
              public_key: zsBNBFayYZ...
              subkeys: []
    hook:
      value:
        active: true
        config:
          content_type: json
          insecure_ssl: "0"
          url: https://example.com/webhook
        created_at: 2019-06-03T00:57:16Z
        events:
          - push
          - pull_request
        id: 12345678
        last_response:
          code:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          message:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          status: unused
        name: web
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        type: Repository
        updated_at: 2019-06-03T00:57:16Z
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
    hook-items:
      value:
        - active: true
          config:
            content_type: json
            insecure_ssl: "0"
            url: https://example.com/webhook
          created_at: 2019-06-03T00:57:16Z
          events:
            - push
            - pull_request
          id: 12345678
          last_response:
            code:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            message:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            status: unused
          name: web
          ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
          test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
          type: Repository
          updated_at: 2019-06-03T00:57:16Z
          url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
    hovercard:
      value:
        contexts:
          - message: Owns this repository
            octicon: repo
    installation-ghes-2:
      value:
        access_tokens_url: https://api.github.com/installations/1/access_tokens
        account:
          avatar_url: https://github.com/images/error/hubot_happy.gif
          events_url: https://api.github.com/orgs/github/events
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/github
          id: 1
          login: github
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          organizations_url: https://api.github.com/users/github/orgs
          received_events_url: https://api.github.com/users/github/received_events
          repos_url: https://api.github.com/orgs/github/repos
          site_admin: false
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          type: Organization
          url: https://api.github.com/orgs/github
        app_id: 1
        app_slug: github-actions
        created_at: 2018-02-09T20:51:14Z
        events:
          - push
          - pull_request
        html_url: https://github.com/organizations/github/settings/installations/1
        id: 1
        permissions:
          checks: write
          contents: read
          metadata: read
        repositories_url: https://api.github.com/installation/repositories
        repository_selection: all
        single_file_name: config.yml
        target_id: 1
        target_type: Organization
        updated_at: 2018-02-09T20:51:14Z
    installation-paginated-ghes-2:
      value:
        installations:
          - access_tokens_url: https://api.github.com/app/installations/25381/access_tokens
            account:
              avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
              events_url: https://api.github.com/users/octo-org/events{/privacy}
              followers_url: https://api.github.com/users/octo-org/followers
              following_url: https://api.github.com/users/octo-org/following{/other_user}
              gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octo-org
              id: 6811672
              login: octo-org
              node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
              organizations_url: https://api.github.com/users/octo-org/orgs
              received_events_url: https://api.github.com/users/octo-org/received_events
              repos_url: https://api.github.com/users/octo-org/repos
              site_admin: false
              starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octo-org/subscriptions
              type: Organization
              url: https://api.github.com/users/octo-org
            app_id: 2218
            app_slug: github-actions
            created_at: 2017-05-16T08:47:09.000-07:00
            events:
              - deployment
              - deployment_status
            html_url: https://github.com/organizations/octo-org/settings/installations/25381
            id: 25381
            permissions:
              deployments: write
              metadata: read
              pull_requests: read
              statuses: read
            repositories_url: https://api.github.com/installation/repositories
            repository_selection: selected
            single_file_name: config.yml
            target_id: 6811672
            target_type: Organization
            updated_at: 2017-06-06T11:23:23.000-07:00
        total_count: 1
    installation-token:
      value:
        expires_at: 2016-07-11T22:14:10Z
        permissions:
          contents: read
          issues: write
        repositories:
          - allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            language:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            template_repository:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            visibility: public
            watchers_count: 80
        repository_selection: selected
        token: ghs_16C7e42F292c6912E7710c838347Ae178B4a
    integration:
      value:
        created_at: 2017-07-08T16:18:44-04:00
        description: ""
        events:
          - push
          - pull_request
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        id: 1
        name: Octocat App
        node_id: MDExOkludGVncmF0aW9uMQ==
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/orgs/github/events
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: github
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/orgs/github/repos
          site_admin: true
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/orgs/github
        permissions:
          contents: read
          issues: write
          metadata: read
          single_file: write
        slug: octoapp
        updated_at: 2017-07-08T16:18:44-04:00
    integration-from-manifest:
      value:
        client_id: Iv1.8a61f9b3a7aba766
        client_secret: 1726be1638095a19edd134c77bde3aa2ece1e5d8
        created_at: 2017-07-08T16:18:44-04:00
        description: ""
        events:
          - push
          - pull_request
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        id: 1
        name: Octocat App
        node_id: MDxOkludGVncmF0aW9uMQ==
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/orgs/github/events
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: github
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/orgs/github/repos
          site_admin: true
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/orgs/github
        pem: |
          -----BEGIN RSA PRIVATE KEY-----
          MIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM
          9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP
          X0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/
          6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm
          oNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma
          szdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ
          dBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva
          KOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo
          gDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP
          kYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX
          NuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd
          NBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE
          ZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG
          J4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv
          eDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3
          FI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk
          77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH
          Pza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB
          1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c
          57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8
          M5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic
          I9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN
          6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK
          fgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG
          ZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu
          -----END RSA PRIVATE KEY-----
        permissions:
          contents: read
          issues: write
          metadata: read
          single_file: write
        slug: octoapp
        updated_at: 2017-07-08T16:18:44-04:00
        webhook_secret: e340154128314309424b7c8e90325147d99fdafa
    integration-items:
      value:
        - created_at: 2017-07-08T16:18:44-04:00
          description: ""
          events:
            - push
            - pull_request
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          id: 1
          name: Octocat App
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/orgs/github/events
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: github
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/orgs/github/repos
            site_admin: true
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/orgs/github
          permissions:
            contents: read
            issues: write
            metadata: read
            single_file: write
          slug: octoapp
          updated_at: 2017-07-08T16:18:44-04:00
    issue:
      value:
        active_lock_reason: too heated
        assignee:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        assignees:
          - avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        author_association: COLLABORATOR
        body: I'm having a problem with this.
        closed_at:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        closed_by:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        comments: 0
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        created_at: 2011-04-22T13:33:48Z
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        id: 1
        labels:
          - color: f29513
            default: true
            description: Something isn't working
            id: 208045946
            name: bug
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        locked: true
        milestone:
          closed_at: 2013-02-12T13:22:01Z
          closed_issues: 8
          created_at: 2011-04-10T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          description: Tracking milestone for version 1.0
          due_on: 2012-10-09T23:39:01Z
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          id: 1002604
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          open_issues: 4
          state: open
          title: v1.0
          updated_at: 2014-03-03T18:58:10Z
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        node_id: MDU6SXNzdWUx
        number: 1347
        pull_request:
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          html_url: https://github.com/octocat/Hello-World/pull/1347
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        state: open
        title: Found a bug
        updated_at: 2011-04-22T13:33:48Z
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    issue-comment:
      value:
        author_association: COLLABORATOR
        body: Me too
        created_at: 2011-04-14T16:00:49Z
        html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
        id: 1
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        node_id: MDEyOklzc3VlQ29tbWVudDE=
        updated_at: 2011-04-14T16:00:49Z
        url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    issue-comment-items:
      value:
        - author_association: COLLABORATOR
          body: Me too
          created_at: 2011-04-14T16:00:49Z
          html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
          id: 1
          issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          node_id: MDEyOklzc3VlQ29tbWVudDE=
          updated_at: 2011-04-14T16:00:49Z
          url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    issue-event:
      value:
        actor:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: 2011-04-14T16:00:49Z
        event: closed
        id: 1
        issue:
          assignee:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          assignees:
            - avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          author_association: COLLABORATOR
          body: I'm having a problem with this.
          closed_at:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          comments: 0
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          created_at: 2011-04-22T13:33:48Z
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          id: 1
          labels:
            - color: f29513
              default: true
              description: Something isn't working
              id: 208045946
              name: bug
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          locked: true
          milestone:
            closed_at: 2013-02-12T13:22:01Z
            closed_issues: 8
            created_at: 2011-04-10T20:09:31Z
            creator:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            description: Tracking milestone for version 1.0
            due_on: 2012-10-09T23:39:01Z
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            id: 1002604
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            open_issues: 4
            state: open
            title: v1.0
            updated_at: 2014-03-03T18:58:10Z
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          node_id: MDU6SXNzdWUx
          number: 1347
          performed_via_github_app:
            created_at: 2017-07-08T16:18:44-04:00
            description: ""
            events:
              - push
              - pull_request
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            id: 1
            name: Octocat App
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/orgs/github/events
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: github
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/orgs/github/repos
              site_admin: true
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/orgs/github
            permissions:
              contents: read
              issues: write
              metadata: read
              single_file: write
            slug: octoapp
            updated_at: 2017-07-08T16:18:44-04:00
          pull_request:
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            html_url: https://github.com/octocat/Hello-World/pull/1347
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          state: open
          title: Found a bug
          updated_at: 2011-04-22T13:33:48Z
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
    issue-event-for-issue-items:
      value:
        - actor:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          created_at: 2011-04-14T16:00:49Z
          event: closed
          id: 1
          node_id: MDEwOklzc3VlRXZlbnQx
          url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
    issue-event-items:
      value:
        - actor:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          created_at: 2011-04-14T16:00:49Z
          event: closed
          id: 1
          issue:
            active_lock_reason: too heated
            assignee:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            assignees:
              - avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
            author_association: COLLABORATOR
            body: I'm having a problem with this.
            closed_at:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            comments: 0
            comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
            created_at: 2011-04-22T13:33:48Z
            events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
            html_url: https://github.com/octocat/Hello-World/issues/1347
            id: 1
            labels:
              - color: f29513
                default: true
                description: Something isn't working
                id: 208045946
                name: bug
                node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                url: https://api.github.com/repos/octocat/Hello-World/labels/bug
            labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
            locked: true
            milestone:
              closed_at: 2013-02-12T13:22:01Z
              closed_issues: 8
              created_at: 2011-04-10T20:09:31Z
              creator:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              description: Tracking milestone for version 1.0
              due_on: 2012-10-09T23:39:01Z
              html_url: https://github.com/octocat/Hello-World/milestones/v1.0
              id: 1002604
              labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
              node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
              number: 1
              open_issues: 4
              state: open
              title: v1.0
              updated_at: 2014-03-03T18:58:10Z
              url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            node_id: MDU6SXNzdWUx
            number: 1347
            pull_request:
              diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
              html_url: https://github.com/octocat/Hello-World/pull/1347
              patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
              url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            repository_url: https://api.github.com/repos/octocat/Hello-World
            state: open
            title: Found a bug
            updated_at: 2011-04-22T13:33:48Z
            url: https://api.github.com/repos/octocat/Hello-World/issues/1347
            user:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          node_id: MDEwOklzc3VlRXZlbnQx
          url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
    issue-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - assignee:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            author_association: COLLABORATOR
            body: ...
            closed_at:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            comments: 15
            comments_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments
            created_at: 2009-07-12T20:10:41Z
            events_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events
            html_url: https://github.com/batterseapower/pinyin-toolkit/issues/132
            id: 35802
            labels:
              - color: ff0000
                id: 4
                name: bug
                node_id: MDU6TGFiZWw0
                url: https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug
            labels_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}
            locked: true
            milestone:
              closed_at: 2013-02-12T13:22:01Z
              closed_issues: 8
              created_at: 2011-04-10T20:09:31Z
              creator:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              description: Tracking milestone for version 1.0
              due_on: 2012-10-09T23:39:01Z
              html_url: https://github.com/octocat/Hello-World/milestones/v1.0
              id: 1002604
              labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
              node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
              number: 1
              open_issues: 4
              state: open
              title: v1.0
              updated_at: 2014-03-03T18:58:10Z
              url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            node_id: MDU6SXNzdWUzNTgwMg==
            number: 132
            pull_request:
              diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
              html_url: https://github.com/octocat/Hello-World/pull/1347
              patch_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
              url: https://api/github.com/repos/octocat/Hello-World/pull/1347
            repository_url: https://api.github.com/repos/batterseapower/pinyin-toolkit
            score: 1
            state: open
            title: Line Number Indexes Beyond 20 Not Displayed
            updated_at: 2009-07-19T09:23:43Z
            url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132
            user:
              avatar_url: https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
              events_url: https://api.github.com/users/Nick3C/events{/privacy}
              followers_url: https://api.github.com/users/Nick3C/followers
              following_url: https://api.github.com/users/Nick3C/following{/other_user}
              gists_url: https://api.github.com/users/Nick3C/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/Nick3C
              id: 90254
              login: Nick3C
              node_id: MDQ6VXNlcjkwMjU0
              organizations_url: https://api.github.com/users/Nick3C/orgs
              received_events_url: https://api.github.com/users/Nick3C/received_events
              repos_url: https://api.github.com/users/Nick3C/repos
              site_admin: true
              starred_url: https://api.github.com/users/Nick3C/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/Nick3C/subscriptions
              type: User
              url: https://api.github.com/users/Nick3C
        total_count: 280
    issue-simple:
      value:
        active_lock_reason: too heated
        assignee:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        assignees:
          - avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          - avatar_url: https://github.com/images/error/hubot_happy.gif
            events_url: https://api.github.com/users/hubot/events{/privacy}
            followers_url: https://api.github.com/users/hubot/followers
            following_url: https://api.github.com/users/hubot/following{/other_user}
            gists_url: https://api.github.com/users/hubot/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/hubot
            id: 1
            login: hubot
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/hubot/orgs
            received_events_url: https://api.github.com/users/hubot/received_events
            repos_url: https://api.github.com/users/hubot/repos
            site_admin: true
            starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/hubot/subscriptions
            type: User
            url: https://api.github.com/users/hubot
          - avatar_url: https://github.com/images/error/other_user_happy.gif
            events_url: https://api.github.com/users/other_user/events{/privacy}
            followers_url: https://api.github.com/users/other_user/followers
            following_url: https://api.github.com/users/other_user/following{/other_user}
            gists_url: https://api.github.com/users/other_user/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/other_user
            id: 1
            login: other_user
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/other_user/orgs
            received_events_url: https://api.github.com/users/other_user/received_events
            repos_url: https://api.github.com/users/other_user/repos
            site_admin: false
            starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/other_user/subscriptions
            type: User
            url: https://api.github.com/users/other_user
        author_association: COLLABORATOR
        body: I'm having a problem with this.
        closed_at:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        comments: 0
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        created_at: 2011-04-22T13:33:48Z
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        id: 1
        labels:
          - color: f29513
            default: true
            description: Something isn't working
            id: 208045946
            name: bug
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        locked: true
        milestone:
          closed_at: 2013-02-12T13:22:01Z
          closed_issues: 8
          created_at: 2011-04-10T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          description: Tracking milestone for version 1.0
          due_on: 2012-10-09T23:39:01Z
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          id: 1002604
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          open_issues: 4
          state: open
          title: v1.0
          updated_at: 2014-03-03T18:58:10Z
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        node_id: MDU6SXNzdWUx
        number: 1347
        pull_request:
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          html_url: https://github.com/octocat/Hello-World/pull/1347
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        state: open
        title: Found a bug
        updated_at: 2011-04-22T13:33:48Z
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    issue-simple-items:
      value:
        - active_lock_reason: too heated
          assignee:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          assignees:
            - avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          author_association: COLLABORATOR
          body: I'm having a problem with this.
          closed_at:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          comments: 0
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          created_at: 2011-04-22T13:33:48Z
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          id: 1
          labels:
            - color: f29513
              default: true
              description: Something isn't working
              id: 208045946
              name: bug
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          locked: true
          milestone:
            closed_at: 2013-02-12T13:22:01Z
            closed_issues: 8
            created_at: 2011-04-10T20:09:31Z
            creator:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            description: Tracking milestone for version 1.0
            due_on: 2012-10-09T23:39:01Z
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            id: 1002604
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            open_issues: 4
            state: open
            title: v1.0
            updated_at: 2014-03-03T18:58:10Z
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          node_id: MDU6SXNzdWUx
          number: 1347
          pull_request:
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            html_url: https://github.com/octocat/Hello-World/pull/1347
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          state: open
          title: Found a bug
          updated_at: 2011-04-22T13:33:48Z
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    issue-with-repo-items:
      value:
        - active_lock_reason: too heated
          assignee:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          assignees:
            - avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          body: I'm having a problem with this.
          closed_at:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          comments: 0
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          created_at: 2011-04-22T13:33:48Z
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          id: 1
          labels:
            - color: f29513
              default: true
              description: Something isn't working
              id: 208045946
              name: bug
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          locked: true
          milestone:
            closed_at: 2013-02-12T13:22:01Z
            closed_issues: 8
            created_at: 2011-04-10T20:09:31Z
            creator:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            description: Tracking milestone for version 1.0
            due_on: 2012-10-09T23:39:01Z
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            id: 1002604
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            open_issues: 4
            state: open
            title: v1.0
            updated_at: 2014-03-03T18:58:10Z
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          node_id: MDU6SXNzdWUx
          number: 1347
          pull_request:
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            html_url: https://github.com/octocat/Hello-World/pull/1347
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          repository:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            language:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            template_repository:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            visibility: public
            watchers_count: 80
          repository_url: https://api.github.com/repos/octocat/Hello-World
          state: open
          title: Found a bug
          updated_at: 2011-04-22T13:33:48Z
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    key:
      value:
        created_at: 2020-06-11T21:31:57Z
        id: 2
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        read_only: false
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        url: https://api.github.com/user/keys/2
        verified: false
    key-items:
      value:
        - created_at: 2020-06-11T21:31:57Z
          id: 2
          key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
          read_only: false
          title: ssh-rsa AAAAB3NzaC1yc2EAAA
          url: https://api.github.com/user/keys/2
          verified: false
        - created_at: 2020-07-11T21:31:57Z
          id: 3
          key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234
          read_only: false
          title: ssh-rsa AAAAB3NzaC1yc2EAAB
          url: https://api.github.com/user/keys/3
          verified: false
    key-simple-items:
      value:
        - id: 1
          key: ssh-rsa AAA...
    label:
      value:
        color: f29513
        default: true
        description: Something isn't working
        id: 208045946
        name: bug
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
    label-2:
      value:
        color: b01f26
        default: true
        description: Small bug fix required
        id: 208045946
        name: "bug :bug:"
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:"
    label-items:
      value:
        - color: f29513
          default: true
          description: Something isn't working
          id: 208045946
          name: bug
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        - color: a2eeef
          default: false
          description: New feature or request
          id: 208045947
          name: enhancement
          node_id: MDU6TGFiZWwyMDgwNDU5NDc=
          url: https://api.github.com/repos/octocat/Hello-World/labels/enhancement
    label-items-2:
      value:
        - color: f29513
          default: true
          description: Something isn't working
          id: 208045946
          name: bug
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
    label-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - color: 84b6eb
            default: true
            description: New feature or request.
            id: 418327088
            name: enhancement
            node_id: MDU6TGFiZWw0MTgzMjcwODg=
            score: 1
            url: https://api.github.com/repos/octocat/linguist/labels/enhancement
          - color: ee0701
            default: true
            description: Something isn't working.
            id: 418327086
            name: bug
            node_id: MDU6TGFiZWw0MTgzMjcwODY=
            score: 1
            url: https://api.github.com/repos/octocat/linguist/labels/bug
        total_count: 2
    language:
      value:
        C: 78769
        Python: 7769
    ldap-mapping-team:
      value:
        description: A great team.
        html_url: https://github.com/orgs/github/teams/justice-league
        id: 1
        ldap_dn: cn=Enterprise Ops,ou=teams,dc=github,dc=com
        members_url: https://api.github.com/teams/1/members{/member}
        name: Justice League
        node_id: MDQ6VGVhbTE=
        parent:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        permission: admin
        privacy: closed
        repositories_url: https://api.github.com/teams/1/repos
        slug: justice-league
        url: https://api.github.com/teams/1
    ldap-mapping-user:
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        bio: There once was...
        blog: https://github.com/blog
        collaborators: 8
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        disk_usage: 10000
        email: octocat@github.com
        events_url: https://api.github.com/users/octocat/events{/privacy}
        followers: 20
        followers_url: https://api.github.com/users/octocat/followers
        following: 0
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        gravatar_id: ""
        hireable: false
        html_url: https://github.com/octocat
        id: 1
        ldap_dn: uid=asdf,ou=users,dc=github,dc=com
        location: San Francisco
        login: octocat
        name: monalisa octocat
        node_id: MDQ6VXNlcjE=
        organizations_url: https://api.github.com/users/octocat/orgs
        owned_private_repos: 100
        plan:
          collaborators: 0
          name: Medium
          private_repos: 20
          space: 400
        private_gists: 81
        public_gists: 1
        public_repos: 2
        received_events_url: https://api.github.com/users/octocat/received_events
        repos_url: https://api.github.com/users/octocat/repos
        site_admin: false
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        total_private_repos: 100
        twitter_username: monatheoctocat
        two_factor_authentication: true
        type: User
        updated_at: 2008-01-14T04:33:35Z
        url: https://api.github.com/users/octocat
    license:
      value:
        body: >
          

          The MIT License (MIT)


          Copyright (c) [year] [fullname]


          Permission is hereby granted, free of charge, to any person obtaining a copy

          of this software and associated documentation files (the "Software"), to deal

          in the Software without restriction, including without limitation the rights

          to use, copy, modify, merge, publish, distribute, sublicense, and/or sell

          copies of the Software, and to permit persons to whom the Software is

          furnished to do so, subject to the following conditions:


          The above copyright notice and this permission notice shall be included in all

          copies or substantial portions of the Software.


          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

          IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE

          AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER

          LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

          OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE

          SOFTWARE.
        conditions:
          - include-copyright
        description: A permissive license that is short and to the point. It lets people
          do anything with your code with proper attribution and without
          warranty.
        featured: true
        html_url: http://choosealicense.com/licenses/mit/
        implementation: Create a text file (typically named LICENSE or LICENSE.txt) in
          the root of your source code and copy the text of the license into the
          file. Replace [year] with the current year and [fullname] with the
          name (or names) of the copyright holders.
        key: mit
        limitations:
          - no-liability
        name: MIT License
        node_id: MDc6TGljZW5zZW1pdA==
        permissions:
          - commercial-use
          - modifications
          - distribution
          - sublicense
          - private-use
        spdx_id: MIT
        url: https://api.github.com/licenses/mit
    license-content:
      value:
        _links:
          git: https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
          html: https://github.com/benbalter/gman/blob/master/LICENSE
          self: https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
        content: |
          VGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTMgQmVu
          IEJhbHRlcgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv
          ZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZgp0
          aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmls
          ZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbgp0aGUgU29mdHdhcmUg
          d2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
          dGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg
          cHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwg
          Y29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25z
          IHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywK
          c3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJv
          dmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGlj
          ZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50
          aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJ
          UyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL
          SU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJ
          TUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBG
          SVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklO
          R0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUgpDT1BZ
          UklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF
          UyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNUSU9OIE9G
          IENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBP
          VVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBU
          SEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K
        download_url: https://raw.githubusercontent.com/benbalter/gman/master/LICENSE?lab=true
        encoding: base64
        git_url: https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
        html_url: https://github.com/benbalter/gman/blob/master/LICENSE
        license:
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        name: LICENSE
        path: LICENSE
        sha: 401c59dcc4570b954dd6d345e76199e1f4e76266
        size: 1077
        type: file
        url: https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
    license-info:
      value:
        days_until_expiration: 365
        expire_at: 2016/02/06 12:41:52 -0600
        kind: standard
        seats: 1400
        seats_available: 84
        seats_used: 1316
    license-simple-items:
      value:
        - key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        - key: lgpl-3.0
          name: GNU Lesser General Public License v3.0
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: LGPL-3.0
          url: https://api.github.com/licenses/lgpl-3.0
        - key: mpl-2.0
          name: Mozilla Public License 2.0
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MPL-2.0
          url: https://api.github.com/licenses/mpl-2.0
        - key: agpl-3.0
          name: GNU Affero General Public License v3.0
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: AGPL-3.0
          url: https://api.github.com/licenses/agpl-3.0
        - key: unlicense
          name: The Unlicense
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: Unlicense
          url: https://api.github.com/licenses/unlicense
        - key: apache-2.0
          name: Apache License 2.0
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: Apache-2.0
          url: https://api.github.com/licenses/apache-2.0
        - key: gpl-3.0
          name: GNU General Public License v3.0
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: GPL-3.0
          url: https://api.github.com/licenses/gpl-3.0
    maintenance-status:
      value:
        connection_services:
          - name: git operations
            number: 0
          - name: mysql queries
            number: 233
          - name: resque jobs
            number: 54
        scheduled_time: Tuesday, January 22 at 15:34 -0800
        status: scheduled
    milestone:
      value:
        closed_at: 2013-02-12T13:22:01Z
        closed_issues: 8
        created_at: 2011-04-10T20:09:31Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        description: Tracking milestone for version 1.0
        due_on: 2012-10-09T23:39:01Z
        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
        id: 1002604
        labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number: 1
        open_issues: 4
        state: open
        title: v1.0
        updated_at: 2014-03-03T18:58:10Z
        url: https://api.github.com/repos/octocat/Hello-World/milestones/1
    milestone-items:
      value:
        - closed_at: 2013-02-12T13:22:01Z
          closed_issues: 8
          created_at: 2011-04-10T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          description: Tracking milestone for version 1.0
          due_on: 2012-10-09T23:39:01Z
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          id: 1002604
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          open_issues: 4
          state: open
          title: v1.0
          updated_at: 2014-03-03T18:58:10Z
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
    minimal-repository:
      value:
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        delete_branch_on_merge: true
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: true
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        network_count: 0
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues_count: 0
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_count: 42
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers_count: 80
    minimal-repository-items:
      value:
        - anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          template_repository:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers_count: 80
    minimal-repository-items-2:
      value:
        - anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: true
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          license:
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          template_repository:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers_count: 80
    org-hook:
      value:
        active: true
        config:
          content_type: json
          url: http://example.com
        created_at: 2011-09-06T17:26:27Z
        events:
          - push
          - pull_request
        id: 1
        name: web
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        type: Organization
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/orgs/octocat/hooks/1
    org-hook-2:
      value:
        active: true
        config:
          content_type: json
          url: http://example.com
        created_at: 2011-09-06T17:26:27Z
        events:
          - pull_request
        id: 1
        name: web
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        type: Organization
        updated_at: 2011-09-06T20:39:23Z
        url: https://api.github.com/orgs/octocat/hooks/1
    org-hook-items:
      value:
        - active: true
          config:
            content_type: json
            url: http://example.com
          created_at: 2011-09-06T17:26:27Z
          events:
            - push
            - pull_request
          id: 1
          name: web
          ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
          type: Organization
          updated_at: 2011-09-06T20:39:23Z
          url: https://api.github.com/orgs/octocat/hooks/1
    org-membership:
      value:
        organization:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          id: 1
          issues_url: https://api.github.com/orgs/github/issues
          login: github
          members_url: https://api.github.com/orgs/github/members{/member}
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          repos_url: https://api.github.com/orgs/github/repos
          url: https://api.github.com/orgs/github
        organization_url: https://api.github.com/orgs/invitocat
        role: admin
        state: pending
        url: https://api.github.com/orgs/invitocat/memberships/defunkt
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    org-membership-2:
      value:
        organization:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          id: 1
          issues_url: https://api.github.com/orgs/github/issues
          login: github
          members_url: https://api.github.com/orgs/github/members{/member}
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          repos_url: https://api.github.com/orgs/github/repos
          url: https://api.github.com/orgs/github
        organization_url: https://api.github.com/orgs/octocat
        role: admin
        state: active
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    org-membership-items:
      value:
        - organization:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            description: A great organization
            events_url: https://api.github.com/orgs/github/events
            hooks_url: https://api.github.com/orgs/github/hooks
            id: 1
            issues_url: https://api.github.com/orgs/github/issues
            login: github
            members_url: https://api.github.com/orgs/github/members{/member}
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            public_members_url: https://api.github.com/orgs/github/public_members{/member}
            repos_url: https://api.github.com/orgs/github/repos
            url: https://api.github.com/orgs/github
          organization_url: https://api.github.com/orgs/octocat
          role: admin
          state: active
          url: https://api.github.com/orgs/octocat/memberships/defunkt
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        - organization:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            description: A great organization
            events_url: https://api.github.com/orgs/github/events
            hooks_url: https://api.github.com/orgs/github/hooks
            id: 1
            issues_url: https://api.github.com/orgs/github/issues
            login: github
            members_url: https://api.github.com/orgs/github/members{/member}
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            public_members_url: https://api.github.com/orgs/github/public_members{/member}
            repos_url: https://api.github.com/orgs/github/repos
            url: https://api.github.com/orgs/github
          organization_url: https://api.github.com/orgs/invitocat
          role: admin
          state: pending
          url: https://api.github.com/orgs/invitocat/memberships/defunkt
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    org-membership-response-if-user-has-an-active-admin-membership-with-organization:
      summary: Response if user has an active admin membership with organization
      value:
        organization:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          id: 1
          issues_url: https://api.github.com/orgs/github/issues
          login: github
          members_url: https://api.github.com/orgs/github/members{/member}
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          repos_url: https://api.github.com/orgs/github/repos
          url: https://api.github.com/orgs/github
        organization_url: https://api.github.com/orgs/octocat
        role: admin
        state: active
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    org-pre-receive-hook:
      value:
        allow_downstream_configuration: true
        configuration_url: https://github.example.com/api/v3/admin/pre-receive-hooks/42
        enforcement: disabled
        id: 42
        name: Check Commits
    org-pre-receive-hook-2:
      value:
        allow_downstream_configuration: false
        configuration_url: https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42
        enforcement: enabled
        id: 42
        name: Check Commits
    org-pre-receive-hook-items:
      value:
        - allow_downstream_configuration: true
          configuration_url: https://github.example.com/api/v3/admin/pre-receive-hooks/42
          enforcement: disabled
          id: 42
          name: Check Commits
    organization-full:
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        billing_email: mona@github.com
        blog: https://github.com/blog
        collaborators: 8
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        default_repository_permission: read
        description: A great organization
        disk_usage: 10000
        email: octocat@github.com
        events_url: https://api.github.com/orgs/github/events
        followers: 20
        following: 0
        has_organization_projects: true
        has_repository_projects: true
        hooks_url: https://api.github.com/orgs/github/hooks
        html_url: https://github.com/octocat
        id: 1
        issues_url: https://api.github.com/orgs/github/issues
        location: San Francisco
        login: github
        members_allowed_repository_creation_type: all
        members_can_create_internal_repositories: false
        members_can_create_pages: true
        members_can_create_private_pages: true
        members_can_create_private_repositories: false
        members_can_create_public_pages: true
        members_can_create_public_repositories: false
        members_can_create_repositories: true
        members_url: https://api.github.com/orgs/github/members{/member}
        name: github
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        owned_private_repos: 100
        plan:
          name: Medium
          private_repos: 20
          space: 400
        private_gists: 81
        public_gists: 1
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        public_repos: 2
        repos_url: https://api.github.com/orgs/github/repos
        total_private_repos: 100
        two_factor_requirement_enabled: true
        type: Organization
        updated_at: 2014-03-03T18:58:10Z
        url: https://api.github.com/orgs/github
    organization-full-default-response:
      summary: Default response
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        billing_email: mona@github.com
        blog: https://github.com/blog
        collaborators: 8
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        default_repository_permission: read
        description: A great organization
        disk_usage: 10000
        email: octocat@github.com
        events_url: https://api.github.com/orgs/github/events
        followers: 20
        following: 0
        has_organization_projects: true
        has_repository_projects: true
        hooks_url: https://api.github.com/orgs/github/hooks
        html_url: https://github.com/octocat
        id: 1
        is_verified: true
        issues_url: https://api.github.com/orgs/github/issues
        location: San Francisco
        login: github
        members_allowed_repository_creation_type: all
        members_can_create_internal_repositories: false
        members_can_create_pages: true
        members_can_create_private_repositories: false
        members_can_create_public_repositories: false
        members_can_create_repositories: true
        members_url: https://api.github.com/orgs/github/members{/member}
        name: github
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        owned_private_repos: 100
        plan:
          filled_seats: 4
          name: Medium
          private_repos: 20
          seats: 5
          space: 400
        private_gists: 81
        public_gists: 1
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        public_repos: 2
        repos_url: https://api.github.com/orgs/github/repos
        total_private_repos: 100
        twitter_username: github
        two_factor_requirement_enabled: true
        type: Organization
        updated_at: 2014-03-03T18:58:10Z
        url: https://api.github.com/orgs/github
    organization-simple:
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        id: 1
        issues_url: https://api.github.com/orgs/github/issues
        login: github
        members_url: https://api.github.com/orgs/github/members{/member}
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        repos_url: https://api.github.com/orgs/github/repos
        url: https://api.github.com/orgs/github
    organization-simple-items:
      value:
        - avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          id: 1
          issues_url: https://api.github.com/orgs/github/issues
          login: github
          members_url: https://api.github.com/orgs/github/members{/member}
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          repos_url: https://api.github.com/orgs/github/repos
          url: https://api.github.com/orgs/github
    page:
      value:
        cname: developer.github.com
        custom_404: false
        html_url: https://developer.github.com
        https_certificate:
          description: Certificate is approved
          domains:
            - developer.github.com
          expires_at: 2021-05-22
          state: approved
        https_enforced: true
        public: true
        source:
          branch: master
          path: /
        status: built
        url: https://api.github.com/repos/github/developer.github.com/pages
    page-build:
      value:
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        created_at: 2014-02-10T19:00:49Z
        duration: 2104
        error:
          message:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        pusher:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        status: built
        updated_at: 2014-02-10T19:00:51Z
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
    page-build-items:
      value:
        - commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
          created_at: 2014-02-10T19:00:49Z
          duration: 2104
          error:
            message:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          pusher:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          status: built
          updated_at: 2014-02-10T19:00:51Z
          url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
    page-build-status:
      value:
        status: queued
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/latest
    participation-stats:
      value:
        all:
          - 11
          - 21
          - 15
          - 2
          - 8
          - 1
          - 8
          - 23
          - 17
          - 21
          - 11
          - 10
          - 33
          - 91
          - 38
          - 34
          - 22
          - 23
          - 32
          - 3
          - 43
          - 87
          - 71
          - 18
          - 13
          - 5
          - 13
          - 16
          - 66
          - 27
          - 12
          - 45
          - 110
          - 117
          - 13
          - 8
          - 18
          - 9
          - 19
          - 26
          - 39
          - 12
          - 20
          - 31
          - 46
          - 91
          - 45
          - 10
          - 24
          - 9
          - 29
          - 7
        owner:
          - 3
          - 2
          - 3
          - 0
          - 2
          - 0
          - 5
          - 14
          - 7
          - 9
          - 1
          - 5
          - 0
          - 48
          - 19
          - 2
          - 0
          - 1
          - 10
          - 2
          - 23
          - 40
          - 35
          - 8
          - 8
          - 2
          - 10
          - 6
          - 30
          - 0
          - 2
          - 9
          - 53
          - 104
          - 3
          - 3
          - 10
          - 4
          - 7
          - 11
          - 21
          - 4
          - 4
          - 22
          - 26
          - 63
          - 11
          - 2
          - 14
          - 1
          - 10
          - 3
    pre-receive-environment:
      value:
        created_at: 2016-05-20T11:35:45-05:00
        default_environment: false
        download:
          downloaded_at:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          message:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          state: not_started
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
        hooks_count: 1
        html_url: https://github.example.com/admin/pre-receive-environments/2
        id: 2
        image_url: https://my_file_server/path/to/devtools_env.tar.gz
        name: DevTools Hook Env
        url: https://github.example.com/api/v3/admin/pre-receive-environments/2
    pre-receive-environment-2:
      value:
        created_at: 2016-05-20T11:35:45-05:00
        default_environment: false
        download:
          downloaded_at: 2016-05-26T07:42:53-05:00
          message:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          state: success
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
        hooks_count: 1
        html_url: https://github.example.com/admin/pre-receive-environments/2
        id: 2
        image_url: https://my_file_server/path/to/devtools_env.tar.gz
        name: DevTools Hook Env
        url: https://github.example.com/api/v3/admin/pre-receive-environments/2
    pre-receive-environment-default-response:
      value:
        created_at: 2016-05-20T11:35:45-05:00
        default_environment: false
        download:
          downloaded_at: 2016-05-26T07:42:53-05:00
          message:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          state: success
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
        hooks_count: 1
        html_url: https://github.example.com/admin/pre-receive-environments/2
        id: 2
        image_url: https://my_file_server/path/to/devtools_env.tar.gz
        name: DevTools Hook Env
        url: https://github.example.com/api/v3/admin/pre-receive-environments/2
    pre-receive-environment-download-status:
      value:
        downloaded_at: 2016-05-26T07:42:53-05:00
        message:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        state: success
        url: https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest
    pre-receive-environment-download-status-default-response:
      value:
        downloaded_at:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        message:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        state: not_started
        url: https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest
    pre-receive-environment-items:
      value:
        - created_at: 2016-05-20T11:35:45-05:00
          default_environment: true
          download:
            downloaded_at: 2016-05-26T07:42:53-05:00
            message:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            state: not_started
            url: https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest
          hooks_count: 14
          html_url: https://github.example.com/admin/pre-receive-environments/1
          id: 1
          image_url: githubenterprise://internal
          name: Default
          url: https://github.example.com/api/v3/admin/pre-receive-environments/1
        - created_at: 2016-05-20T11:35:45-05:00
          default_environment: false
          download:
            downloaded_at: 2016-05-26T07:42:53-05:00
            message:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            state: success
            url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
          hooks_count: 1
          html_url: https://github.example.com/admin/pre-receive-environments/2
          id: 2
          image_url: https://my_file_server/path/to/devtools_env.tar.gz
          name: DevTools Hook Env
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2
    pre-receive-hook:
      value:
        allow_downstream_configuration: false
        enforcement: disabled
        environment:
          created_at: 2016-05-20T11:35:45-05:00
          default_environment: false
          download:
            downloaded_at: 2016-05-26T07:42:53-05:00
            message:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            state: success
            url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
          hooks_count: 1
          html_url: https://github.example.com/admin/pre-receive-environments/2
          id: 2
          image_url: https://my_file_server/path/to/devtools_env.tar.gz
          name: DevTools Hook Env
          url: https://github.example.com/api/v3/admin/pre-receive-environments/2
        id: 1
        name: Check Commits
        script: scripts/commmit_check.sh
        script_repository:
          full_name: DevIT/hooks
          html_url: https://github.example.com/DevIT/hooks
          id: 595
          url: https://github.example.com/api/v3/repos/DevIT/hooks
    pre-receive-hook-2:
      value:
        allow_downstream_configuration: true
        enforcement: disabled
        environment:
          created_at: 2016-05-20T11:35:45-05:00
          default_environment: true
          download:
            downloaded_at: 2016-05-26T07:42:53-05:00
            message:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            state: success
            url: https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest
          hooks_count: 1
          html_url: https://github.example.com/admin/pre-receive-environments/1
          id: 1
          image_url: githubenterprise://internal
          name: Default
          url: https://github.example.com/api/v3/admin/pre-receive-environments/1
        id: 1
        name: Check Commits
        script: scripts/commmit_check.sh
        script_repository:
          full_name: DevIT/hooks
          html_url: https://github.example.com/DevIT/hooks
          id: 595
          url: https://github.example.com/api/v3/repos/DevIT/hooks
    pre-receive-hook-items:
      value:
        - allow_downstream_configuration: false
          enforcement: disabled
          environment:
            created_at: 2016-05-20T11:35:45-05:00
            default_environment: false
            download:
              downloaded_at: 2016-05-26T07:42:53-05:00
              message:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              state: success
              url: https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest
            hooks_count: 1
            html_url: https://github.example.com/admin/pre-receive-environments/2
            id: 2
            image_url: https://my_file_server/path/to/devtools_env.tar.gz
            name: DevTools Hook Env
            url: https://github.example.com/api/v3/admin/pre-receive-environments/2
          id: 1
          name: Check Commits
          script: scripts/commmit_check.sh
          script_repository:
            full_name: DevIT/hooks
            html_url: https://github.example.com/DevIT/hooks
            id: 595
            url: https://github.example.com/api/v3/repos/DevIT/hooks
    private-user:
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        bio: There once was...
        blog: https://github.com/blog
        collaborators: 8
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        disk_usage: 10000
        email: octocat@github.com
        events_url: https://api.github.com/users/octocat/events{/privacy}
        followers: 20
        followers_url: https://api.github.com/users/octocat/followers
        following: 0
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        gravatar_id: ""
        hireable: false
        html_url: https://github.com/octocat
        id: 1
        location: San Francisco
        login: octocat
        name: monalisa octocat
        node_id: MDQ6VXNlcjE=
        organizations_url: https://api.github.com/users/octocat/orgs
        owned_private_repos: 100
        plan:
          collaborators: 0
          name: Medium
          private_repos: 20
          space: 400
        private_gists: 81
        public_gists: 1
        public_repos: 2
        received_events_url: https://api.github.com/users/octocat/received_events
        repos_url: https://api.github.com/users/octocat/repos
        site_admin: false
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        total_private_repos: 100
        two_factor_authentication: true
        type: User
        updated_at: 2008-01-14T04:33:35Z
        url: https://api.github.com/users/octocat
    private-user-response-with-public-and-private-profile-information:
      summary: Response with public and private profile information
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        bio: There once was...
        blog: https://github.com/blog
        collaborators: 8
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        disk_usage: 10000
        email: octocat@github.com
        events_url: https://api.github.com/users/octocat/events{/privacy}
        followers: 20
        followers_url: https://api.github.com/users/octocat/followers
        following: 0
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        gravatar_id: ""
        hireable: false
        html_url: https://github.com/octocat
        id: 1
        location: San Francisco
        login: octocat
        name: monalisa octocat
        node_id: MDQ6VXNlcjE=
        organizations_url: https://api.github.com/users/octocat/orgs
        owned_private_repos: 100
        plan:
          collaborators: 0
          name: Medium
          private_repos: 20
          space: 400
        private_gists: 81
        public_gists: 1
        public_repos: 2
        received_events_url: https://api.github.com/users/octocat/received_events
        repos_url: https://api.github.com/users/octocat/repos
        site_admin: false
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        total_private_repos: 100
        two_factor_authentication: true
        type: User
        updated_at: 2008-01-14T04:33:35Z
        url: https://api.github.com/users/octocat
    private-user-response-with-public-profile-information:
      summary: Response with public profile information
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        bio: There once was...
        blog: https://github.com/blog
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        email: octocat@github.com
        events_url: https://api.github.com/users/octocat/events{/privacy}
        followers: 20
        followers_url: https://api.github.com/users/octocat/followers
        following: 0
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        gravatar_id: ""
        hireable: false
        html_url: https://github.com/octocat
        id: 1
        location: San Francisco
        login: octocat
        name: monalisa octocat
        node_id: MDQ6VXNlcjE=
        organizations_url: https://api.github.com/users/octocat/orgs
        public_gists: 1
        public_repos: 2
        received_events_url: https://api.github.com/users/octocat/received_events
        repos_url: https://api.github.com/users/octocat/repos
        site_admin: false
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        type: User
        updated_at: 2008-01-14T04:33:35Z
        url: https://api.github.com/users/octocat
    project:
      value:
        body: A board to manage my personal projects.
        columns_url: https://api.github.com/projects/1002603/columns
        created_at: 2011-04-10T20:09:31Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        html_url: https://github.com/users/octocat/projects/1
        id: 1002603
        name: My Projects
        node_id: MDc6UHJvamVjdDEwMDI2MDM=
        number: 1
        owner_url: https://api.github.com/users/octocat
        state: open
        updated_at: 2014-03-03T18:58:10Z
        url: https://api.github.com/projects/1002603
    project-2:
      value:
        body: High-level roadmap for the upcoming year.
        columns_url: https://api.github.com/projects/1002605/columns
        created_at: 2011-04-11T20:09:31Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        html_url: https://github.com/orgs/api-playground/projects/1
        id: 1002605
        name: Organization Roadmap
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        number: 1
        owner_url: https://api.github.com/orgs/octocat
        state: open
        updated_at: 2014-03-04T18:58:10Z
        url: https://api.github.com/projects/1002605
    project-3:
      value:
        body: Developer documentation project for the developer site.
        columns_url: https://api.github.com/projects/1002604/columns
        created_at: 2011-04-10T20:09:31Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        html_url: https://github.com/api-playground/projects-test/projects/1
        id: 1002604
        name: Projects Documentation
        node_id: MDc6UHJvamVjdDEwMDI2MDQ=
        number: 1
        owner_url: https://api.github.com/repos/api-playground/projects-test
        state: open
        updated_at: 2014-03-03T18:58:10Z
        url: https://api.github.com/projects/1002604
    project-card:
      value:
        archived: false
        column_url: https://api.github.com/projects/columns/367
        content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
        created_at: 2016-09-05T14:21:06Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        id: 1478
        node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
        note: Add payload for delete Project column
        project_url: https://api.github.com/projects/120
        updated_at: 2016-09-05T14:20:22Z
        url: https://api.github.com/projects/columns/cards/1478
    project-card-items:
      value:
        - archived: false
          column_url: https://api.github.com/projects/columns/367
          content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
          created_at: 2016-09-05T14:21:06Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          id: 1478
          node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
          note: Add payload for delete Project column
          project_url: https://api.github.com/projects/120
          updated_at: 2016-09-05T14:20:22Z
          url: https://api.github.com/projects/columns/cards/1478
    project-column:
      value:
        cards_url: https://api.github.com/projects/columns/367/cards
        created_at: 2016-09-05T14:18:44Z
        id: 367
        name: To Do
        node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
        project_url: https://api.github.com/projects/120
        updated_at: 2016-09-05T14:22:28Z
        url: https://api.github.com/projects/columns/367
    project-column-items:
      value:
        - cards_url: https://api.github.com/projects/columns/367/cards
          created_at: 2016-09-05T14:18:44Z
          id: 367
          name: To Do
          node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
          project_url: https://api.github.com/projects/120
          updated_at: 2016-09-05T14:22:28Z
          url: https://api.github.com/projects/columns/367
    project-items:
      value:
        - body: High-level roadmap for the upcoming year.
          columns_url: https://api.github.com/projects/1002605/columns
          created_at: 2011-04-11T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          html_url: https://github.com/orgs/api-playground/projects/1
          id: 1002605
          name: Organization Roadmap
          node_id: MDc6UHJvamVjdDEwMDI2MDU=
          number: 1
          owner_url: https://api.github.com/orgs/octocat
          state: open
          updated_at: 2014-03-04T18:58:10Z
          url: https://api.github.com/projects/1002605
    project-items-2:
      value:
        - body: Developer documentation project for the developer site.
          columns_url: https://api.github.com/projects/1002604/columns
          created_at: 2011-04-10T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          html_url: https://github.com/api-playground/projects-test/projects/1
          id: 1002604
          name: Projects Documentation
          node_id: MDc6UHJvamVjdDEwMDI2MDQ=
          number: 1
          owner_url: https://api.github.com/repos/api-playground/projects-test
          state: open
          updated_at: 2014-03-03T18:58:10Z
          url: https://api.github.com/projects/1002604
    project-items-3:
      value:
        - body: A board to manage my personal projects.
          columns_url: https://api.github.com/projects/1002603/columns
          created_at: 2011-04-10T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          html_url: https://github.com/users/octocat/projects/1
          id: 1002603
          name: My Projects
          node_id: MDc6UHJvamVjdDEwMDI2MDM=
          number: 1
          owner_url: https://api.github.com/users/octocat
          state: open
          updated_at: 2014-03-03T18:58:10Z
          url: https://api.github.com/projects/1002603
    protected-branch-admin-enforced:
      value:
        enabled: true
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
    protected-branch-admin-enforced-2:
      value:
        enabled: true
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
    protected-branch-pull-request-review:
      value:
        dismiss_stale_reviews: true
        dismissal_restrictions:
          teams:
            - description: A great team.
              html_url: https://github.com/orgs/github/teams/justice-league
              id: 1
              members_url: https://api.github.com/teams/1/members{/member}
              name: Justice League
              node_id: MDQ6VGVhbTE=
              parent:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              permission: admin
              privacy: closed
              repositories_url: https://api.github.com/teams/1/repos
              slug: justice-league
              url: https://api.github.com/teams/1
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
          users:
            - avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
        require_code_owner_reviews: true
        required_approving_review_count: 2
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
    public-repository-items:
      value:
        - archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          name: Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          url: https://api.github.com/repos/octocat/Hello-World
    public-user-default-response:
      summary: Default response
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        bio: There once was...
        blog: https://github.com/blog
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        email: octocat@github.com
        events_url: https://api.github.com/users/octocat/events{/privacy}
        followers: 20
        followers_url: https://api.github.com/users/octocat/followers
        following: 0
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        gravatar_id: ""
        hireable: false
        html_url: https://github.com/octocat
        id: 1
        location: San Francisco
        login: octocat
        name: monalisa octocat
        node_id: MDQ6VXNlcjE=
        organizations_url: https://api.github.com/users/octocat/orgs
        public_gists: 1
        public_repos: 2
        received_events_url: https://api.github.com/users/octocat/received_events
        repos_url: https://api.github.com/users/octocat/repos
        site_admin: false
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        twitter_username: monatheoctocat
        type: User
        updated_at: 2008-01-14T04:33:35Z
        url: https://api.github.com/users/octocat
    public-user-response-with-git-hub-plan-information:
      summary: Response with GitHub plan information
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        bio: There once was...
        blog: https://github.com/blog
        company: GitHub
        created_at: 2008-01-14T04:33:35Z
        email: octocat@github.com
        events_url: https://api.github.com/users/octocat/events{/privacy}
        followers: 20
        followers_url: https://api.github.com/users/octocat/followers
        following: 0
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        gravatar_id: ""
        hireable: false
        html_url: https://github.com/octocat
        id: 1
        location: San Francisco
        login: octocat
        name: monalisa octocat
        node_id: MDQ6VXNlcjE=
        organizations_url: https://api.github.com/users/octocat/orgs
        plan:
          collaborators: 0
          name: pro
          private_repos: 9999
          space: 976562499
        public_gists: 1
        public_repos: 2
        received_events_url: https://api.github.com/users/octocat/received_events
        repos_url: https://api.github.com/users/octocat/repos
        site_admin: false
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        twitter_username: monatheoctocat
        type: User
        updated_at: 2008-01-14T04:33:35Z
        url: https://api.github.com/users/octocat
    pull-request:
      value:
        _links:
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        active_lock_reason: too heated
        additions: 100
        assignee:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        assignees:
          - avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          - avatar_url: https://github.com/images/error/hubot_happy.gif
            events_url: https://api.github.com/users/hubot/events{/privacy}
            followers_url: https://api.github.com/users/hubot/followers
            following_url: https://api.github.com/users/hubot/following{/other_user}
            gists_url: https://api.github.com/users/hubot/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/hubot
            id: 1
            login: hubot
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/hubot/orgs
            received_events_url: https://api.github.com/users/hubot/received_events
            repos_url: https://api.github.com/users/hubot/repos
            site_admin: true
            starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/hubot/subscriptions
            type: User
            url: https://api.github.com/users/hubot
        author_association: OWNER
        base:
          label: octocat:master
          ref: master
          repo:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks: 123
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            license:
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues: 123
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            watchers: 123
            watchers_count: 80
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        body: Please pull these awesome changes in!
        changed_files: 5
        closed_at: 2011-01-26T19:01:12Z
        comments: 10
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        commits: 3
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        created_at: 2011-01-26T19:01:12Z
        deletions: 3
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        draft: false
        head:
          label: octocat:new-topic
          ref: new-topic
          repo:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks: 123
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            license:
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues: 123
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            watchers: 123
            watchers_count: 80
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat/Hello-World/pull/1347
        id: 1
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        labels:
          - color: f29513
            default: true
            description: Something isn't working
            id: 208045946
            name: bug
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        locked: true
        maintainer_can_modify: true
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        mergeable: true
        mergeable_state: clean
        merged: false
        merged_at: 2011-01-26T19:01:12Z
        merged_by:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        milestone:
          closed_at: 2013-02-12T13:22:01Z
          closed_issues: 8
          created_at: 2011-04-10T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          description: Tracking milestone for version 1.0
          due_on: 2012-10-09T23:39:01Z
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          id: 1002604
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          open_issues: 4
          state: open
          title: v1.0
          updated_at: 2014-03-03T18:58:10Z
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        number: 1347
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        rebaseable: true
        requested_reviewers:
          - avatar_url: https://github.com/images/error/other_user_happy.gif
            events_url: https://api.github.com/users/other_user/events{/privacy}
            followers_url: https://api.github.com/users/other_user/followers
            following_url: https://api.github.com/users/other_user/following{/other_user}
            gists_url: https://api.github.com/users/other_user/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/other_user
            id: 1
            login: other_user
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/other_user/orgs
            received_events_url: https://api.github.com/users/other_user/received_events
            repos_url: https://api.github.com/users/other_user/repos
            site_admin: false
            starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/other_user/subscriptions
            type: User
            url: https://api.github.com/users/other_user
        requested_teams:
          - description: A great team.
            html_url: https://github.com/orgs/github/teams/justice-league
            id: 1
            members_url: https://api.github.com/teams/1/members{/member}
            name: Justice League
            node_id: MDQ6VGVhbTE=
            permission: admin
            privacy: closed
            repositories_url: https://api.github.com/teams/1/repos
            slug: justice-league
            url: https://api.github.com/teams/1
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        review_comments: 0
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        state: open
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        title: Amazing new feature
        updated_at: 2011-01-26T19:01:12Z
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-merge-result-response-if-merge-was-successful:
      value:
        merged: true
        message: Pull Request successfully merged
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
    pull-request-review:
      value:
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        author_association: COLLABORATOR
        body: This is close to perfect! Please address the suggested inline change.
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        state: CHANGES_REQUESTED
        submitted_at: 2019-11-17T17:43:43Z
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-review-3:
      value:
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        author_association: COLLABORATOR
        body: Here is the body for the review.
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        state: DISMISSED
        submitted_at: 2019-11-17T17:43:43Z
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-review-4:
      value:
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        author_association: COLLABORATOR
        body: Here is the body for the review.
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        state: APPROVED
        submitted_at: 2019-11-17T17:43:43Z
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-review-5:
      value:
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        author_association: COLLABORATOR
        body: This is close to perfect! Please address the suggested inline change. And
          add more about this.
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        state: CHANGES_REQUESTED
        submitted_at: 2019-11-17T17:43:43Z
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-review-comment:
      value:
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        author_association: NONE
        body: Great stuff!
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: 2011-04-14T16:00:49Z
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        id: 10
        in_reply_to_id: 426899381
        line: 2
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        original_line: 2
        original_position: 4
        original_start_line: 1
        path: file1.txt
        position: 1
        pull_request_review_id: 42
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        side: RIGHT
        start_line: 1
        start_side: RIGHT
        updated_at: 2011-04-14T16:00:49Z
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-review-comment-2:
      value:
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        author_association: NONE
        body: Great stuff!
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: 2011-04-14T16:00:49Z
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        id: 10
        in_reply_to_id: 8
        line: 2
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        original_line: 2
        original_position: 4
        original_start_line: 1
        path: file1.txt
        position: 1
        pull_request_review_id: 42
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        side: RIGHT
        start_line: 1
        start_side: RIGHT
        updated_at: 2011-04-14T16:00:49Z
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-review-comment-example-for-a-multi-line-comment:
      value:
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        author_association: NONE
        body: Great stuff!
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: 2011-04-14T16:00:49Z
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        id: 10
        in_reply_to_id: 8
        line: 2
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        original_line: 2
        original_position: 4
        original_start_line: 1
        path: file1.txt
        position: 1
        pull_request_review_id: 42
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        side: RIGHT
        start_line: 1
        start_side: RIGHT
        updated_at: 2011-04-14T16:00:49Z
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-review-comment-items:
      value:
        - _links:
            html:
              href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
            pull_request:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1
            self:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          author_association: NONE
          body: Great stuff!
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          created_at: 2011-04-14T16:00:49Z
          diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
          html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          id: 10
          in_reply_to_id: 8
          line: 2
          node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
          original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          original_line: 2
          original_position: 4
          original_start_line: 1
          path: file1.txt
          position: 1
          pull_request_review_id: 42
          pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
          side: RIGHT
          start_line: 1
          start_side: RIGHT
          updated_at: 2011-04-14T16:00:49Z
          url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    pull-request-review-items:
      value:
        - _links:
            html:
              href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
            pull_request:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/12
          author_association: COLLABORATOR
          body: Here is the body for the review.
          commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
          html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          id: 80
          node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
          pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
          state: APPROVED
          submitted_at: 2019-11-17T17:43:43Z
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    pull-request-review-request:
      value:
        _links:
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        active_lock_reason: too heated
        assignee:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        assignees:
          - avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          - avatar_url: https://github.com/images/error/hubot_happy.gif
            events_url: https://api.github.com/users/hubot/events{/privacy}
            followers_url: https://api.github.com/users/hubot/followers
            following_url: https://api.github.com/users/hubot/following{/other_user}
            gists_url: https://api.github.com/users/hubot/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/hubot
            id: 1
            login: hubot
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/hubot/orgs
            received_events_url: https://api.github.com/users/hubot/received_events
            repos_url: https://api.github.com/users/hubot/repos
            site_admin: true
            starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/hubot/subscriptions
            type: User
            url: https://api.github.com/users/hubot
        author_association: OWNER
        base:
          label: octocat:master
          ref: master
          repo:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks: 1
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            license:
              html_url: https://api.github.com/licenses/mit
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues: 1
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            visibility: public
            watchers: 1
            watchers_count: 80
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        body: Please pull these awesome changes in!
        closed_at: 2011-01-26T19:01:12Z
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        created_at: 2011-01-26T19:01:12Z
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        draft: false
        head:
          label: octocat:new-topic
          ref: new-topic
          repo:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks: 1
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            license:
              html_url: https://github.com/licenses/mit
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues: 1
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            visibility: public
            watchers: 1
            watchers_count: 80
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat/Hello-World/pull/1347
        id: 1
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        labels:
          - color: f29513
            default: true
            description: Something isn't working
            id: 208045946
            name: bug
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        locked: true
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        merged_at: 2011-01-26T19:01:12Z
        milestone:
          closed_at: 2013-02-12T13:22:01Z
          closed_issues: 8
          created_at: 2011-04-10T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          description: Tracking milestone for version 1.0
          due_on: 2012-10-09T23:39:01Z
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          id: 1002604
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          open_issues: 4
          state: open
          title: v1.0
          updated_at: 2014-03-03T18:58:10Z
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        number: 1347
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        requested_reviewers:
          - avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          - avatar_url: https://github.com/images/error/hubot_happy.gif
            events_url: https://api.github.com/users/hubot/events{/privacy}
            followers_url: https://api.github.com/users/hubot/followers
            following_url: https://api.github.com/users/hubot/following{/other_user}
            gists_url: https://api.github.com/users/hubot/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/hubot
            id: 1
            login: hubot
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/hubot/orgs
            received_events_url: https://api.github.com/users/hubot/received_events
            repos_url: https://api.github.com/users/hubot/repos
            site_admin: true
            starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/hubot/subscriptions
            type: User
            url: https://api.github.com/users/hubot
          - avatar_url: https://github.com/images/error/other_user_happy.gif
            events_url: https://api.github.com/users/other_user/events{/privacy}
            followers_url: https://api.github.com/users/other_user/followers
            following_url: https://api.github.com/users/other_user/following{/other_user}
            gists_url: https://api.github.com/users/other_user/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/other_user
            id: 1
            login: other_user
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/other_user/orgs
            received_events_url: https://api.github.com/users/other_user/received_events
            repos_url: https://api.github.com/users/other_user/repos
            site_admin: false
            starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/other_user/subscriptions
            type: User
            url: https://api.github.com/users/other_user
        requested_teams:
          - description: A great team.
            html_url: https://github.com/orgs/github/teams/justice-league
            id: 1
            members_url: https://api.github.com/teams/1/members{/member}
            name: Justice League
            node_id: MDQ6VGVhbTE=
            permission: admin
            privacy: closed
            repositories_url: https://api.github.com/teams/1/repos
            slug: justice-league
            url: https://api.github.com/teams/1
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        state: open
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        title: Amazing new feature
        updated_at: 2011-01-26T19:01:12Z
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    pull-request-simple-items:
      value:
        - _links:
            comments:
              href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
            commits:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
            html:
              href: https://github.com/octocat/Hello-World/pull/1347
            issue:
              href: https://api.github.com/repos/octocat/Hello-World/issues/1347
            review_comment:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
            review_comments:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
            self:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            statuses:
              href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          active_lock_reason: too heated
          assignee:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          assignees:
            - avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            - avatar_url: https://github.com/images/error/hubot_happy.gif
              events_url: https://api.github.com/users/hubot/events{/privacy}
              followers_url: https://api.github.com/users/hubot/followers
              following_url: https://api.github.com/users/hubot/following{/other_user}
              gists_url: https://api.github.com/users/hubot/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/hubot
              id: 1
              login: hubot
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/hubot/orgs
              received_events_url: https://api.github.com/users/hubot/received_events
              repos_url: https://api.github.com/users/hubot/repos
              site_admin: true
              starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/hubot/subscriptions
              type: User
              url: https://api.github.com/users/hubot
          author_association: OWNER
          base:
            label: octocat:master
            ref: master
            repo:
              allow_merge_commit: true
              allow_rebase_merge: true
              allow_squash_merge: true
              anonymous_access_enabled: false
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              archived: false
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              clone_url: https://github.com/octocat/Hello-World.git
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              created_at: 2011-01-26T19:01:12Z
              default_branch: master
              delete_branch_on_merge: true
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              description: This your first repo!
              disabled: false
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              fork: false
              forks_count: 9
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              full_name: octocat/Hello-World
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              has_downloads: true
              has_issues: true
              has_pages: false
              has_projects: true
              has_wiki: true
              homepage: https://github.com
              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
              html_url: https://github.com/octocat/Hello-World
              id: 1296269
              is_template: true
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              language:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              mirror_url: git:git.example.com/octocat/Hello-World
              name: Hello-World
              network_count: 0
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              open_issues_count: 0
              owner:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              permissions:
                admin: false
                pull: true
                push: false
              private: false
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              pushed_at: 2011-01-26T19:06:43Z
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              size: 108
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_count: 80
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_count: 42
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              svn_url: https://svn.github.com/octocat/Hello-World
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              template_repository:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              topics:
                - octocat
                - atom
                - electron
                - api
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              updated_at: 2011-01-26T19:14:43Z
              url: https://api.github.com/repos/octocat/Hello-World
              visibility: public
              watchers_count: 80
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            user:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          body: Please pull these awesome changes in!
          closed_at: 2011-01-26T19:01:12Z
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          created_at: 2011-01-26T19:01:12Z
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          draft: false
          head:
            label: octocat:new-topic
            ref: new-topic
            repo:
              allow_merge_commit: true
              allow_rebase_merge: true
              allow_squash_merge: true
              anonymous_access_enabled: false
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              archived: false
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              clone_url: https://github.com/octocat/Hello-World.git
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              created_at: 2011-01-26T19:01:12Z
              default_branch: master
              delete_branch_on_merge: true
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              description: This your first repo!
              disabled: false
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              fork: false
              forks_count: 9
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              full_name: octocat/Hello-World
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              has_downloads: true
              has_issues: true
              has_pages: false
              has_projects: true
              has_wiki: true
              homepage: https://github.com
              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
              html_url: https://github.com/octocat/Hello-World
              id: 1296269
              is_template: true
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              language:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              mirror_url: git:git.example.com/octocat/Hello-World
              name: Hello-World
              network_count: 0
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              open_issues_count: 0
              owner:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              permissions:
                admin: false
                pull: true
                push: false
              private: false
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              pushed_at: 2011-01-26T19:06:43Z
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              size: 108
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_count: 80
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_count: 42
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              svn_url: https://svn.github.com/octocat/Hello-World
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              template_repository:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              topics:
                - octocat
                - atom
                - electron
                - api
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              updated_at: 2011-01-26T19:14:43Z
              url: https://api.github.com/repos/octocat/Hello-World
              visibility: public
              watchers_count: 80
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            user:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat/Hello-World/pull/1347
          id: 1
          issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          labels:
            - color: f29513
              default: true
              description: Something isn't working
              id: 208045946
              name: bug
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          locked: true
          merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
          merged_at: 2011-01-26T19:01:12Z
          milestone:
            closed_at: 2013-02-12T13:22:01Z
            closed_issues: 8
            created_at: 2011-04-10T20:09:31Z
            creator:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            description: Tracking milestone for version 1.0
            due_on: 2012-10-09T23:39:01Z
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            id: 1002604
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            open_issues: 4
            state: open
            title: v1.0
            updated_at: 2014-03-03T18:58:10Z
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          node_id: MDExOlB1bGxSZXF1ZXN0MQ==
          number: 1347
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          requested_reviewers:
            - avatar_url: https://github.com/images/error/other_user_happy.gif
              events_url: https://api.github.com/users/other_user/events{/privacy}
              followers_url: https://api.github.com/users/other_user/followers
              following_url: https://api.github.com/users/other_user/following{/other_user}
              gists_url: https://api.github.com/users/other_user/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/other_user
              id: 1
              login: other_user
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/other_user/orgs
              received_events_url: https://api.github.com/users/other_user/received_events
              repos_url: https://api.github.com/users/other_user/repos
              site_admin: false
              starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/other_user/subscriptions
              type: User
              url: https://api.github.com/users/other_user
          requested_teams:
            - description: A great team.
              html_url: https://github.com/orgs/github/teams/justice-league
              id: 1
              members_url: https://api.github.com/teams/1/members{/member}
              name: Justice League
              node_id: MDQ6VGVhbTE=
              parent:
                $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
              permission: admin
              privacy: closed
              repositories_url: https://api.github.com/teams/1/repos
              slug: justice-league
              url: https://api.github.com/teams/1
          review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          state: open
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          title: Amazing new feature
          updated_at: 2011-01-26T19:01:12Z
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    rate-limit-overview:
      value:
        rate:
          limit: 5000
          remaining: 4999
          reset: 1372700873
        resources:
          code_scanning_upload:
            limit: 500
            remaining: 499
            reset: 1551806725
          core:
            limit: 5000
            remaining: 4999
            reset: 1372700873
          graphql:
            limit: 5000
            remaining: 4993
            reset: 1372700389
          integration_manifest:
            limit: 5000
            remaining: 4999
            reset: 1551806725
          search:
            limit: 30
            remaining: 18
            reset: 1372697452
    reaction:
      value:
        content: heart
        created_at: 2016-05-20T20:09:31Z
        id: 1
        node_id: MDg6UmVhY3Rpb24x
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    reaction-items:
      value:
        - content: heart
          created_at: 2016-05-20T20:09:31Z
          id: 1
          node_id: MDg6UmVhY3Rpb24x
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    release:
      value:
        assets:
          - browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
            content_type: application/zip
            created_at: 2013-02-27T19:35:32Z
            download_count: 42
            id: 1
            label: short description
            name: example.zip
            node_id: MDEyOlJlbGVhc2VBc3NldDE=
            size: 1024
            state: uploaded
            updated_at: 2013-02-27T19:35:32Z
            uploader:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        author:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        body: Description of the release
        created_at: 2013-02-27T19:35:32Z
        discussion_url: https://github.com/octocat/Hello-World/discussions/90
        draft: false
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        id: 1
        name: v1.0.0
        node_id: MDc6UmVsZWFzZTE=
        prerelease: false
        published_at: 2013-02-27T19:35:32Z
        tag_name: v1.0.0
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        target_commitish: master
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        url: https://api.github.com/repos/octocat/Hello-World/releases/1
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
    release-asset:
      value:
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        content_type: application/zip
        created_at: 2013-02-27T19:35:32Z
        download_count: 42
        id: 1
        label: short description
        name: example.zip
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        size: 1024
        state: uploaded
        updated_at: 2013-02-27T19:35:32Z
        uploader:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
    release-asset-items:
      value:
        - browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          content_type: application/zip
          created_at: 2013-02-27T19:35:32Z
          download_count: 42
          id: 1
          label: short description
          name: example.zip
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          size: 1024
          state: uploaded
          updated_at: 2013-02-27T19:35:32Z
          uploader:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
    release-asset-response-for-successful-upload:
      value:
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        content_type: application/zip
        created_at: 2013-02-27T19:35:32Z
        download_count: 42
        id: 1
        label: short description
        name: example.zip
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        size: 1024
        state: uploaded
        updated_at: 2013-02-27T19:35:32Z
        uploader:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
    release-items:
      value:
        - assets:
            - browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
              content_type: application/zip
              created_at: 2013-02-27T19:35:32Z
              download_count: 42
              id: 1
              label: short description
              name: example.zip
              node_id: MDEyOlJlbGVhc2VBc3NldDE=
              size: 1024
              state: uploaded
              updated_at: 2013-02-27T19:35:32Z
              uploader:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
          author:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          body: Description of the release
          created_at: 2013-02-27T19:35:32Z
          draft: false
          html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
          id: 1
          name: v1.0.0
          node_id: MDc6UmVsZWFzZTE=
          prerelease: false
          published_at: 2013-02-27T19:35:32Z
          tag_name: v1.0.0
          tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
          target_commitish: master
          upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
          url: https://api.github.com/repos/octocat/Hello-World/releases/1
          zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
    repo-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - archive_url: https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}
            archived: true
            assignees_url: https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}
            blobs_url: https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}
            branches_url: https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}
            clone_url: https://github.com/dtrupenn/Tetris.git
            collaborators_url: https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/dtrupenn/Tetris/comments{/number}
            commits_url: https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}
            compare_url: https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}
            contents_url: https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}
            contributors_url: https://api.github.com/repos/dtrupenn/Tetris/contributors
            created_at: 2012-01-01T00:31:50Z
            default_branch: master
            deployments_url: https://api.github.com/repos/dtrupenn/Tetris/deployments
            description: A C implementation of Tetris using Pennsim through LC4
            disabled: true
            downloads_url: https://api.github.com/repos/dtrupenn/Tetris/downloads
            events_url: https://api.github.com/repos/dtrupenn/Tetris/events
            fork: false
            forks: 1
            forks_count: 0
            forks_url: https://api.github.com/repos/dtrupenn/Tetris/forks
            full_name: dtrupenn/Tetris
            git_commits_url: https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}
            git_url: git:github.com/dtrupenn/Tetris.git
            has_downloads: true
            has_issues: true
            has_pages: true
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/dtrupenn/Tetris/hooks
            html_url: https://github.com/dtrupenn/Tetris
            id: 3081286
            issue_comment_url: https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}
            issues_url: https://api.github.com/repos/dtrupenn/Tetris/issues{/number}
            keys_url: https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}
            labels_url: https://api.github.com/repos/dtrupenn/Tetris/labels{/name}
            language: Assembly
            languages_url: https://api.github.com/repos/dtrupenn/Tetris/languages
            license:
              html_url: https://api.github.com/licenses/mit
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            master_branch: master
            merges_url: https://api.github.com/repos/dtrupenn/Tetris/merges
            milestones_url: https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}
            mirror_url: git:git.example.com/dtrupenn/Tetris
            name: Tetris
            node_id: MDEwOlJlcG9zaXRvcnkzMDgxMjg2
            notifications_url: https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}
            open_issues: 1
            open_issues_count: 0
            owner:
              avatar_url: https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 872147
              login: dtrupenn
              node_id: MDQ6VXNlcjg3MjE0Nw==
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/dtrupenn/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: true
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/dtrupenn
            private: false
            pulls_url: https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}
            pushed_at: 2012-01-01T00:37:02Z
            releases_url: https://api.github.com/repos/dtrupenn/Tetris/releases{/id}
            score: 1
            size: 524
            ssh_url: git@github.com:dtrupenn/Tetris.git
            stargazers_count: 1
            stargazers_url: https://api.github.com/repos/dtrupenn/Tetris/stargazers
            statuses_url: https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}
            subscribers_url: https://api.github.com/repos/dtrupenn/Tetris/subscribers
            subscription_url: https://api.github.com/repos/dtrupenn/Tetris/subscription
            svn_url: https://svn.github.com/dtrupenn/Tetris
            tags_url: https://api.github.com/repos/dtrupenn/Tetris/tags
            teams_url: https://api.github.com/repos/dtrupenn/Tetris/teams
            trees_url: https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}
            updated_at: 2013-01-05T17:58:47Z
            url: https://api.github.com/repos/dtrupenn/Tetris
            watchers: 1
            watchers_count: 1
        total_count: 40
    repository:
      value:
        allow_merge_commit: true
        allow_rebase_merge: true
        allow_squash_merge: true
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        delete_branch_on_merge: true
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks: 9
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: true
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          html_url: https://api.github.com/licenses/mit
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        network_count: 0
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues: 0
        open_issues_count: 0
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_count: 42
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers: 80
        watchers_count: 80
    repository-3:
      value:
        allow_rebase_merge: true
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks: 9
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: false
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          html_url: https://github.com/licenses/mit
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues: 0
        open_issues_count: 0
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        template_repository:
          anonymous_access_enabled: false
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers: 80
        watchers_count: 80
    repository-collaborator-permission:
      value:
        permission: admin
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    repository-collaborator-permission-response-if-user-has-admin-permissions:
      value:
        permission: admin
        user:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    repository-invitation:
      value:
        created_at: 2016-06-13T14:52:50-05:00
        expired: false
        html_url: https://github.com/octocat/Hello-World/invitations
        id: 1
        invitee:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        inviter:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        permissions: write
        repository:
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          name: Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          url: https://api.github.com/repos/octocat/Hello-World
        url: https://api.github.com/user/repository_invitations/1296269
    repository-invitation-items:
      value:
        - created_at: 2016-06-13T14:52:50-05:00
          html_url: https://github.com/octocat/Hello-World/invitations
          id: 1
          invitee:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          inviter:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          node_id: MDQ6VXNlcjE=
          permissions: write
          repository:
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            name: Hello-World
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            url: https://api.github.com/repos/octocat/Hello-World
          url: https://api.github.com/user/repository_invitations/1296269
    repository-invitation-response-when-a-new-invitation-is-created:
      value:
        created_at: 2016-06-13T14:52:50-05:00
        html_url: https://github.com/octocat/Hello-World/invitations
        id: 1
        invitee:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        inviter:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        permissions: write
        repository:
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          name: Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          url: https://api.github.com/repos/octocat/Hello-World
        url: https://api.github.com/user/repository_invitations/1296269
    repository-items-default-response:
      summary: Default response
      value:
        - allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          anonymous_access_enabled: false
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World
          name: Hello-World
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          svn_url: https://svn.github.com/octocat/Hello-World
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          template_repository:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World
          visibility: public
          watchers_count: 80
    repository-paginated:
      value:
        repositories:
          - allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            language:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            template_repository:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            visibility: public
            watchers_count: 80
        total_count: 1
    repository-paginated-2:
      value:
        repositories:
          - allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            language:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            template_repository:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            visibility: public
            watchers_count: 80
        total_count: 1
    repository-pre-receive-hook:
      value:
        configuration_url: https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42
        enforcement: disabled
        id: 42
        name: Check Commits
    repository-pre-receive-hook-2:
      value:
        configuration_url: https://github.example.com/api/v3/repos/octocat/hello-world/pre-receive-hooks/42
        enforcement: enabled
        id: 42
        name: Check Commits
    repository-pre-receive-hook-items:
      value:
        - configuration_url: https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42
          enforcement: disabled
          id: 42
          name: Check Commits
    repository-subscription:
      value:
        created_at: 2012-10-06T21:34:12Z
        ignored: false
        reason:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        repository_url: https://api.github.com/repos/octocat/example
        subscribed: true
        url: https://api.github.com/repos/octocat/example/subscription
    repository-subscription-response-if-you-subscribe-to-the-repository:
      value:
        created_at: 2012-10-06T21:34:12Z
        ignored: false
        reason:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        repository_url: https://api.github.com/repos/octocat/example
        subscribed: true
        url: https://api.github.com/repos/octocat/example/subscription
    review-comment-items:
      value:
        - _links:
            html:
              href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
            pull_request:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1
            self:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          author_association: NONE
          body: Great stuff!
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          created_at: 2011-04-14T16:00:49Z
          diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
          html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          id: 10
          in_reply_to_id: 8
          node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
          original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          original_position: 4
          path: file1.txt
          position: 1
          pull_request_review_id: 42
          pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
          updated_at: 2011-04-14T16:00:49Z
          url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    short-blob:
      value:
        sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        url: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
    short-branch-with-protection-items:
      value:
        - commit:
            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          name: master
          protected: true
          protection:
            required_status_checks:
              contexts:
                - ci-test
                - linter
              enforcement_level: non_admins
          protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    simple-pull-request-review-request:
      value:
        teams:
          - description: A great team.
            html_url: https://github.com/orgs/github/teams/justice-league
            id: 1
            members_url: https://api.github.com/teams/1/members{/member}
            name: Justice League
            node_id: MDQ6VGVhbTE=
            permission: admin
            privacy: closed
            repositories_url: https://api.github.com/teams/1/repos
            slug: justice-league
            url: https://api.github.com/teams/1
        users:
          - avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    simple-user:
      value:
        avatar_url: https://github.com/images/error/octocat_happy.gif
        events_url: https://api.github.com/users/octocat/events{/privacy}
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        gravatar_id: ""
        html_url: https://github.com/octocat
        id: 1
        login: octocat
        node_id: MDQ6VXNlcjE=
        organizations_url: https://api.github.com/users/octocat/orgs
        received_events_url: https://api.github.com/users/octocat/received_events
        repos_url: https://api.github.com/users/octocat/repos
        site_admin: false
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        type: User
        url: https://api.github.com/users/octocat
    simple-user-items:
      value:
        - avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    simple-user-items-default-response:
      summary: Default response
      value:
        - avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
    ssh-key-items:
      value:
        - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
          pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
        - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
          pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
        - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
          pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
    ssh-key-items-2:
      value:
        - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
          pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
        - key: ssh-rsa AAAAB3NzaC1yc2EAAAAB...
          pretty-print: ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64
    stargazer-items-alternative-response-with-star-creation-timestamps:
      summary: Alternative response with star creation timestamps
      value:
        - starred_at: 2011-01-16T19:06:43Z
          user:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
    starred-repository-items-alternative-response-with-star-creation-timestamps:
      summary: Alternative response with star creation timestamps
      value:
        - repo:
            allow_merge_commit: true
            allow_rebase_merge: true
            allow_squash_merge: true
            anonymous_access_enabled: false
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            archived: false
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            clone_url: https://github.com/octocat/Hello-World.git
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            created_at: 2011-01-26T19:01:12Z
            default_branch: master
            delete_branch_on_merge: true
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            disabled: false
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks_count: 9
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            has_downloads: true
            has_issues: true
            has_pages: false
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            is_template: true
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            language:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            mirror_url: git:git.example.com/octocat/Hello-World
            name: Hello-World
            network_count: 0
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            open_issues_count: 0
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            permissions:
              admin: false
              pull: true
              push: false
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            pushed_at: 2011-01-26T19:06:43Z
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            size: 108
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_count: 80
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_count: 42
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            svn_url: https://svn.github.com/octocat/Hello-World
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            template_repository:
              $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
            topics:
              - octocat
              - atom
              - electron
              - api
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            updated_at: 2011-01-26T19:14:43Z
            url: https://api.github.com/repos/octocat/Hello-World
            visibility: public
            watchers_count: 80
          starred_at: 2011-01-16T19:06:43Z
    status:
      value:
        avatar_url: https://github.com/images/error/hubot_happy.gif
        context: continuous-integration/jenkins
        created_at: 2012-07-20T01:19:13Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        description: Build has completed successfully
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        target_url: https://ci.example.com/1000/output
        updated_at: 2012-07-20T01:19:13Z
        url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
    status-check-policy:
      value:
        contexts:
          - continuous-integration/travis-ci
        contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
        strict: true
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
    status-items:
      value:
        - avatar_url: https://github.com/images/error/hubot_happy.gif
          context: continuous-integration/jenkins
          created_at: 2012-07-20T01:19:13Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          description: Build has completed successfully
          id: 1
          node_id: MDY6U3RhdHVzMQ==
          state: success
          target_url: https://ci.example.com/1000/output
          updated_at: 2012-07-20T01:19:13Z
          url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
    tag-items:
      value:
        - commit:
            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          name: v0.1
          node_id: MDQ6VXNlcjE=
          tarball_url: https://github.com/octocat/Hello-World/tarball/v0.1
          zipball_url: https://github.com/octocat/Hello-World/zipball/v0.1
    team-discussion:
      value:
        author:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        body: Hi! This is an area for us to collaborate as a team.
        body_html: <p>Hi! This is an area for us to collaborate as a team</p>
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 0
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: 2018-01-25T18:56:31Z
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        last_edited_at:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        reactions:
          "+1": 3
          "-1": 1
          confused: 0
          eyes: 1
          heart: 1
          hooray: 0
          laugh: 0
          rocket: 1
          total_count: 5
          url: https://api.github.com/teams/2343027/discussions/1/reactions
        team_url: https://api.github.com/teams/2343027
        title: Our first team post
        updated_at: 2018-01-25T18:56:31Z
        url: https://api.github.com/teams/2343027/discussions/1
    team-discussion-2:
      value:
        author:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        body: Hi! This is an area for us to collaborate as a team.
        body_html: <p>Hi! This is an area for us to collaborate as a team</p>
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 1
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: 2018-01-25T18:56:31Z
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        last_edited_at: 2018-01-26T18:22:20Z
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        reactions:
          "+1": 3
          "-1": 1
          confused: 0
          eyes: 1
          heart: 1
          hooray: 0
          laugh: 0
          rocket: 1
          total_count: 5
          url: https://api.github.com/teams/2343027/discussions/1/reactions
        team_url: https://api.github.com/teams/2343027
        title: Welcome to our first team post
        updated_at: 2018-01-26T18:22:20Z
        url: https://api.github.com/teams/2343027/discussions/1
    team-discussion-comment:
      value:
        author:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        body: Do you like apples?
        body_html: <p>Do you like apples?</p>
        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
        created_at: 2018-01-15T23:53:58Z
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        last_edited_at:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        reactions:
          "+1": 3
          "-1": 1
          confused: 0
          eyes: 1
          heart: 1
          hooray: 0
          laugh: 0
          rocket: 1
          total_count: 5
          url: https://api.github.com/teams/2403582/discussions/1/reactions
        updated_at: 2018-01-15T23:53:58Z
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
    team-discussion-comment-2:
      value:
        author:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        body: Do you like pineapples?
        body_html: <p>Do you like pineapples?</p>
        body_version: e6907b24d9c93cc0c5024a7af5888116
        created_at: 2018-01-15T23:53:58Z
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        last_edited_at: 2018-01-26T18:22:20Z
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        reactions:
          "+1": 3
          "-1": 1
          confused: 0
          eyes: 1
          heart: 1
          hooray: 0
          laugh: 0
          rocket: 1
          total_count: 5
          url: https://api.github.com/teams/2403582/discussions/1/reactions
        updated_at: 2018-01-26T18:22:20Z
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
    team-discussion-comment-items:
      value:
        - author:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          body: Do you like apples?
          body_html: <p>Do you like apples?</p>
          body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
          created_at: 2018-01-15T23:53:58Z
          discussion_url: https://api.github.com/teams/2403582/discussions/1
          html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
          last_edited_at:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
          number: 1
          reactions:
            "+1": 3
            "-1": 1
            confused: 0
            eyes: 1
            heart: 1
            hooray: 0
            laugh: 0
            rocket: 1
            total_count: 5
            url: https://api.github.com/teams/2403582/discussions/1/reactions
          updated_at: 2018-01-15T23:53:58Z
          url: https://api.github.com/teams/2403582/discussions/1/comments/1
    team-discussion-items:
      value:
        - author:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          body: Hi! This is an area for us to collaborate as a team.
          body_html: <p>Hi! This is an area for us to collaborate as a team</p>
          body_version: 0d495416a700fb06133c612575d92bfb
          comments_count: 0
          comments_url: https://api.github.com/teams/2343027/discussions/1/comments
          created_at: 2018-01-25T18:56:31Z
          html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
          last_edited_at:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
          number: 1
          pinned: false
          private: false
          reactions:
            "+1": 3
            "-1": 1
            confused: 0
            eyes: 1
            heart: 1
            hooray: 0
            laugh: 0
            rocket: 1
            total_count: 5
            url: https://api.github.com/teams/2343027/discussions/1/reactions
          team_url: https://api.github.com/teams/2343027
          title: Our first team post
          updated_at: 2018-01-25T18:56:31Z
          url: https://api.github.com/teams/2343027/discussions/1
    team-full:
      value:
        created_at: 2017-07-14T16:53:42Z
        description: A great team.
        html_url: https://github.com/orgs/github/teams/justice-league
        id: 1
        ldap_dn: uid=asdf,ou=users,dc=github,dc=com
        members_count: 3
        members_url: https://api.github.com/teams/1/members{/member}
        name: Justice League
        node_id: MDQ6VGVhbTE=
        organization:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          blog: https://github.com/blog
          company: GitHub
          created_at: 2008-01-14T04:33:35Z
          description: A great organization
          email: octocat@github.com
          events_url: https://api.github.com/orgs/github/events
          followers: 20
          following: 0
          has_organization_projects: true
          has_repository_projects: true
          hooks_url: https://api.github.com/orgs/github/hooks
          html_url: https://github.com/octocat
          id: 1
          issues_url: https://api.github.com/orgs/github/issues
          location: San Francisco
          login: github
          members_url: https://api.github.com/orgs/github/members{/member}
          name: github
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          public_gists: 1
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          public_repos: 2
          repos_url: https://api.github.com/orgs/github/repos
          type: Organization
          updated_at: 2017-08-17T12:37:15Z
          url: https://api.github.com/orgs/github
        permission: admin
        privacy: closed
        repos_count: 10
        repositories_url: https://api.github.com/teams/1/repos
        slug: justice-league
        updated_at: 2017-08-17T12:37:15Z
        url: https://api.github.com/teams/1
    team-full-items:
      value:
        - created_at: 2017-07-14T16:53:42Z
          description: A great team.
          html_url: https://github.com/orgs/github/teams/justice-league
          id: 1
          ldap_dn: uid=asdf,ou=users,dc=github,dc=com
          members_count: 3
          members_url: https://api.github.com/teams/1/members{/member}
          name: Justice League
          node_id: MDQ6VGVhbTE=
          organization:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            blog: https://github.com/blog
            company: GitHub
            created_at: 2008-01-14T04:33:35Z
            description: A great organization
            email: octocat@github.com
            events_url: https://api.github.com/orgs/github/events
            followers: 20
            following: 0
            has_organization_projects: true
            has_repository_projects: true
            hooks_url: https://api.github.com/orgs/github/hooks
            html_url: https://github.com/octocat
            id: 1
            issues_url: https://api.github.com/orgs/github/issues
            location: San Francisco
            login: github
            members_url: https://api.github.com/orgs/github/members{/member}
            name: github
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            public_gists: 1
            public_members_url: https://api.github.com/orgs/github/public_members{/member}
            public_repos: 2
            repos_url: https://api.github.com/orgs/github/repos
            type: Organization
            url: https://api.github.com/orgs/github
          parent:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          permission: admin
          privacy: closed
          repos_count: 10
          repositories_url: https://api.github.com/teams/1/repos
          slug: justice-league
          updated_at: 2017-08-17T12:37:15Z
          url: https://api.github.com/teams/1
    team-items:
      value:
        - description: A great team.
          html_url: https://github.com/orgs/github/teams/justice-league
          id: 1
          members_url: https://api.github.com/teams/1/members{/member}
          name: Justice League
          node_id: MDQ6VGVhbTE=
          parent:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          permission: admin
          privacy: closed
          repositories_url: https://api.github.com/teams/1/repos
          slug: justice-league
          url: https://api.github.com/teams/1
    team-items-response-if-child-teams-exist:
      value:
        - description: Started it all.
          html_url: https://github.com/orgs/rails/teams/core
          id: 2
          members_url: https://api.github.com/teams/2/members{/member}
          name: Original Roster
          node_id: MDQ6VGVhbTI=
          parent:
            description: A great team.
            html_url: https://github.com/orgs/github/teams/justice-league
            id: 1
            members_url: https://api.github.com/teams/1/members{/member}
            name: Justice League
            node_id: MDQ6VGVhbTE=
            permission: admin
            privacy: closed
            repositories_url: https://api.github.com/teams/1/repos
            slug: justice-league
            url: https://api.github.com/teams/1
          permission: admin
          privacy: closed
          repositories_url: https://api.github.com/teams/2/repos
          slug: original-roster
          url: https://api.github.com/teams/2
    team-membership-response-if-user-is-a-team-maintainer:
      summary: Response if user is a team maintainer
      value:
        role: maintainer
        state: active
        url: https://api.github.com/teams/1/memberships/octocat
    team-membership-response-if-users-membership-with-team-is-now-pending:
      summary: Response if user's membership with team is now pending
      value:
        role: member
        state: pending
        url: https://api.github.com/teams/1/memberships/octocat
    team-project:
      value:
        body: High-level roadmap for the upcoming year.
        columns_url: https://api.github.com/projects/1002605/columns
        created_at: 2011-04-11T20:09:31Z
        creator:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        html_url: https://github.com/orgs/api-playground/projects/1
        id: 1002605
        name: Organization Roadmap
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        number: 1
        organization_permission: write
        owner_url: https://api.github.com/orgs/octocat
        permissions:
          admin: false
          read: true
          write: true
        private: false
        state: open
        updated_at: 2014-03-04T18:58:10Z
        url: https://api.github.com/projects/1002605
    team-project-items:
      value:
        - body: High-level roadmap for the upcoming year.
          columns_url: https://api.github.com/projects/1002605/columns
          created_at: 2011-04-11T20:09:31Z
          creator:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          html_url: https://github.com/orgs/api-playground/projects/1
          id: 1002605
          name: Organization Roadmap
          node_id: MDc6UHJvamVjdDEwMDI2MDU=
          number: 1
          organization_permission: write
          owner_url: https://api.github.com/orgs/octocat
          permissions:
            admin: false
            read: true
            write: true
          private: false
          state: open
          updated_at: 2014-03-04T18:58:10Z
          url: https://api.github.com/projects/1002605
    team-repository-alternative-response-with-extra-repository-information:
      value:
        allow_merge_commit: true
        allow_rebase_merge: true
        allow_squash_merge: true
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        delete_branch_on_merge: true
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks: 1
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: false
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          html_url: https://api.github.com/licenses/mit
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        network_count: 0
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues: 1
        open_issues_count: 0
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_count: 42
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        template_repository:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          fork: false
          forks: 9
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          full_name: octocat/Hello-World-Template
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          html_url: https://github.com/octocat/Hello-World-Template
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          name: Hello-World-Template
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          open_issues: 0
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World-Template
          visibility: public
          watchers: 80
          watchers_count: 80
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers: 1
        watchers_count: 80
    team-repository-alternative-response-with-repository-permissions:
      value:
        allow_merge_commit: true
        allow_rebase_merge: true
        allow_squash_merge: true
        anonymous_access_enabled: false
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        archived: false
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        clone_url: https://github.com/octocat/Hello-World.git
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        created_at: 2011-01-26T19:01:12Z
        default_branch: master
        delete_branch_on_merge: true
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        description: This your first repo!
        disabled: false
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        fork: false
        forks: 1
        forks_count: 9
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        full_name: octocat/Hello-World
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        has_downloads: true
        has_issues: true
        has_pages: false
        has_projects: true
        has_wiki: true
        homepage: https://github.com
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        html_url: https://github.com/octocat/Hello-World
        id: 1296269
        is_template: false
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        license:
          html_url: https://api.github.com/licenses/mit
          key: mit
          name: MIT License
          node_id: MDc6TGljZW5zZW1pdA==
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        mirror_url: git:git.example.com/octocat/Hello-World
        name: Hello-World
        network_count: 0
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        open_issues: 1
        open_issues_count: 0
        owner:
          avatar_url: https://github.com/images/error/octocat_happy.gif
          events_url: https://api.github.com/users/octocat/events{/privacy}
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          gravatar_id: ""
          html_url: https://github.com/octocat
          id: 1
          login: octocat
          node_id: MDQ6VXNlcjE=
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          repos_url: https://api.github.com/users/octocat/repos
          site_admin: false
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          type: User
          url: https://api.github.com/users/octocat
        permissions:
          admin: false
          pull: true
          push: false
        private: false
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        pushed_at: 2011-01-26T19:06:43Z
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        size: 108
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_count: 80
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_count: 42
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        svn_url: https://svn.github.com/octocat/Hello-World
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        template_repository:
          allow_merge_commit: true
          allow_rebase_merge: true
          allow_squash_merge: true
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          archived: false
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          created_at: 2011-01-26T19:01:12Z
          default_branch: master
          delete_branch_on_merge: true
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          description: This your first repo!
          disabled: false
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          fork: false
          forks: 9
          forks_count: 9
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          full_name: octocat/Hello-World-Template
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          has_downloads: true
          has_issues: true
          has_pages: false
          has_projects: true
          has_wiki: true
          homepage: https://github.com
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          html_url: https://github.com/octocat/Hello-World-Template
          id: 1296269
          is_template: true
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          language:
            $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          license:
            html_url: https://api.github.com/licenses/mit
            key: mit
            name: MIT License
            node_id: MDc6TGljZW5zZW1pdA==
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          name: Hello-World-Template
          network_count: 0
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          open_issues: 0
          open_issues_count: 0
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          permissions:
            admin: false
            pull: true
            push: false
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          pushed_at: 2011-01-26T19:06:43Z
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          size: 108
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_count: 80
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_count: 42
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          topics:
            - octocat
            - atom
            - electron
            - api
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          updated_at: 2011-01-26T19:14:43Z
          url: https://api.github.com/repos/octocat/Hello-World-Template
          visibility: public
          watchers: 80
          watchers_count: 80
        topics:
          - octocat
          - atom
          - electron
          - api
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        updated_at: 2011-01-26T19:14:43Z
        url: https://api.github.com/repos/octocat/Hello-World
        visibility: public
        watchers: 1
        watchers_count: 80
    thread:
      value:
        id: "1"
        last_read_at: 2014-11-07T22:01:45Z
        reason: subscribed
        repository:
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          description: This your first repo!
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          fork: false
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          full_name: octocat/Hello-World
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          html_url: https://github.com/octocat/Hello-World
          id: 1296269
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          name: Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          owner:
            avatar_url: https://github.com/images/error/octocat_happy.gif
            events_url: https://api.github.com/users/octocat/events{/privacy}
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/octocat
            id: 1
            login: octocat
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            repos_url: https://api.github.com/users/octocat/repos
            site_admin: false
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            type: User
            url: https://api.github.com/users/octocat
          private: false
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          url: https://api.github.com/repos/octocat/Hello-World
        subject:
          latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
          title: Greetings
          type: Issue
          url: https://api.github.com/repos/octokit/octokit.rb/issues/123
        subscription_url: https://api.github.com/notifications/threads/1/subscription
        unread: true
        updated_at: 2014-11-07T22:01:45Z
        url: https://api.github.com/notifications/threads/1
    thread-items:
      value:
        - id: "1"
          last_read_at: 2014-11-07T22:01:45Z
          reason: subscribed
          repository:
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            description: This your first repo!
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            fork: false
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            full_name: octocat/Hello-World
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
            html_url: https://github.com/octocat/Hello-World
            id: 1296269
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            name: Hello-World
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            owner:
              avatar_url: https://github.com/images/error/octocat_happy.gif
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 1
              login: octocat
              node_id: MDQ6VXNlcjE=
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            private: false
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            url: https://api.github.com/repos/octocat/Hello-World
          subject:
            latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
            title: Greetings
            type: Issue
            url: https://api.github.com/repos/octokit/octokit.rb/issues/123
          subscription_url: https://api.github.com/notifications/threads/1/subscription
          unread: true
          updated_at: 2014-11-07T22:01:45Z
          url: https://api.github.com/notifications/threads/1
    thread-subscription:
      value:
        created_at: 2012-10-06T21:34:12Z
        ignored: false
        reason:
          $ref: "#/components/schemas/gpg-key/properties/subkeys/example/0/expires_at"
        subscribed: true
        thread_url: https://api.github.com/notifications/threads/1
        url: https://api.github.com/notifications/threads/1/subscription
    topic:
      value:
        names:
          - octocat
          - atom
          - electron
          - api
    topic-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - created_at: 2016-11-28T22:03:59Z
            created_by: Yukihiro Matsumoto
            curated: true
            description: Ruby was developed by Yukihiro "Matz" Matsumoto in 1995 with the
              intent of having an easily readable programming language. It is
              integrated with the Rails framework to create dynamic
              web-applications. Ruby's syntax is similar to that of Perl and
              Python.
            display_name: Ruby
            featured: true
            name: ruby
            released: December 21, 1995
            score: 1
            short_description: Ruby is a scripting language designed for simplified
              object-oriented programming.
            updated_at: 2017-10-30T18:16:32Z
          - created_at: 2016-12-09T17:03:50Z
            created_by: David Heinemeier Hansson
            curated: true
            description: Ruby on Rails (Rails) is a web application framework written in
              Ruby. It is meant to help simplify the building of complex
              websites.
            display_name: Rails
            featured: true
            name: rails
            released: December 13 2005
            score: 1
            short_description: Ruby on Rails (Rails) is a web application framework written
              in Ruby.
            updated_at: 2017-10-30T16:20:19Z
          - created_at: 2016-12-07T00:07:02Z
            created_by: Guido van Rossum
            curated: true
            description: Python is a dynamically typed programming language designed by
              Guido Van Rossum. Much like the programming language Ruby, Python
              was designed to be easily read by programmers. Because of its
              large following and many libraries, Python can be implemented and
              used to do anything from webpages to scientific research.
            display_name: Python
            featured: true
            name: python
            released: February 20, 1991
            score: 1
            short_description: Python is a dynamically typed programming language.
            updated_at: 2017-10-27T22:45:43Z
          - created_at: 2016-12-16T21:53:08Z
            created_by: Tom Preston-Werner
            curated: true
            description: Jekyll is a blog-aware, site generator written in Ruby. It takes
              raw text files, runs it through a renderer and produces a
              publishable static website.
            display_name: Jekyll
            featured: true
            name: jekyll
            released: "2008"
            score: 1
            short_description: Jekyll is a simple, blog-aware static site generator.
            updated_at: 2017-10-27T19:00:24Z
          - created_at: 2016-12-16T21:53:45Z
            created_by: Hampton Catlin, Natalie Weizenbaum, Chris Eppstein
            curated: true
            description: Sass is a stylesheet language with a main implementation in Ruby.
              It is an extension of CSS that makes improvements to the old
              stylesheet format, such as being able to declare variables and
              using a cleaner nesting syntax.
            display_name: Sass
            featured: true
            name: sass
            released: November 28, 2006
            score: 1
            short_description: Sass is a stable extension to classic CSS.
            updated_at: 2018-01-16T16:30:40Z
          - created_at: 2016-12-17T20:30:44Z
            created_by: Max Howell
            curated: true
            description: Homebrew is a package manager for Apple's macOS operating system.
              It simplifies the installation of software and is popular in the
              Ruby on Rails community.
            display_name: Homebrew
            featured: true
            name: homebrew
            released: "2009"
            score: 1
            short_description: Homebrew is a package manager for macOS.
            updated_at: 2018-02-06T16:14:56Z
        total_count: 6
    user-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - avatar_url: https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            events_url: https://api.github.com/users/mojombo/events{/privacy}
            followers_url: https://api.github.com/users/mojombo/followers
            following_url: https://api.github.com/users/mojombo/following{/other_user}
            gists_url: https://api.github.com/users/mojombo/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/mojombo
            id: 1
            login: mojombo
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/mojombo/orgs
            received_events_url: https://api.github.com/users/mojombo/received_events
            repos_url: https://api.github.com/users/mojombo/repos
            score: 1
            site_admin: true
            starred_url: https://api.github.com/users/mojombo/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/mojombo/subscriptions
            type: User
            url: https://api.github.com/users/mojombo
        total_count: 12
  headers:
    content-type:
      example: text/html
      schema:
        type: string
    link:
      example: <https://api.github.com/resource?page=2>; rel="next",
        <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
    x-common-marker-version:
      example: 0.17.4
      schema:
        type: string
    x-rate-limit-limit:
      example: 5000
      schema:
        type: integer
    x-rate-limit-remaining:
      example: 4999
      schema:
        type: integer
    x-rate-limit-reset:
      example: 1590701888
      schema:
        format: timestamp
        type: integer
  parameters:
    access-token:
      in: path
      name: access_token
      required: true
      schema:
        type: string
    all:
      description: If `true`, show notifications marked as read.
      in: query
      name: all
      required: false
      schema:
        default: false
        type: boolean
    app_slug:
      in: path
      name: app_slug
      required: true
      schema:
        type: string
    asset_id:
      description: asset_id parameter
      in: path
      name: asset_id
      required: true
      schema:
        type: integer
    authorization_id:
      description: authorization_id parameter
      in: path
      name: authorization_id
      required: true
      schema:
        type: integer
    before:
      description: "Only show notifications updated before the given time. This is a
        timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`."
      in: query
      name: before
      required: false
      schema:
        format: date-time
        type: string
    branch:
      description: The name of the branch.
      in: path
      name: branch
      required: true
      schema:
        type: string
      x-multi-segment: true
    card_id:
      description: card_id parameter
      in: path
      name: card_id
      required: true
      schema:
        type: integer
    check_name:
      description: Returns check runs with the specified `name`.
      in: query
      name: check_name
      required: false
      schema:
        type: string
    check_run_id:
      description: check_run_id parameter
      in: path
      name: check_run_id
      required: true
      schema:
        type: integer
    check_suite_id:
      description: check_suite_id parameter
      in: path
      name: check_suite_id
      required: true
      schema:
        type: integer
    client-id:
      description: The client ID of your GitHub app.
      in: path
      name: client_id
      required: true
      schema:
        type: string
    column_id:
      description: column_id parameter
      in: path
      name: column_id
      required: true
      schema:
        type: integer
    comment-number:
      in: path
      name: comment_number
      required: true
      schema:
        type: integer
    comment_id:
      description: comment_id parameter
      in: path
      name: comment_id
      required: true
      schema:
        type: integer
    commit_sha:
      description: commit_sha parameter
      in: path
      name: commit_sha
      required: true
      schema:
        type: string
      x-multi-segment: true
    deployment_id:
      description: deployment_id parameter
      in: path
      name: deployment_id
      required: true
      schema:
        type: integer
    direction:
      description: One of `asc` (ascending) or `desc` (descending).
      in: query
      name: direction
      required: false
      schema:
        default: desc
        enum:
          - asc
          - desc
        type: string
    discussion-number:
      in: path
      name: discussion_number
      required: true
      schema:
        type: integer
    gist_id:
      description: gist_id parameter
      in: path
      name: gist_id
      required: true
      schema:
        type: string
    gpg_key_id:
      description: gpg_key_id parameter
      in: path
      name: gpg_key_id
      required: true
      schema:
        type: integer
    grant_id:
      description: grant_id parameter
      in: path
      name: grant_id
      required: true
      schema:
        type: integer
    hook-id:
      in: path
      name: hook_id
      required: true
      schema:
        type: integer
    installation_id:
      description: installation_id parameter
      in: path
      name: installation_id
      required: true
      schema:
        type: integer
    invitation_id:
      description: invitation_id parameter
      in: path
      name: invitation_id
      required: true
      schema:
        type: integer
    issue_number:
      description: issue_number parameter
      in: path
      name: issue_number
      required: true
      schema:
        type: integer
    key-ids:
      in: path
      name: key_ids
      required: true
      schema:
        type: string
    key_id:
      description: key_id parameter
      in: path
      name: key_id
      required: true
      schema:
        type: integer
    labels:
      description: "A list of comma separated label names. Example: `bug,ui,@high`"
      in: query
      name: labels
      required: false
      schema:
        type: string
    milestone_number:
      description: milestone_number parameter
      in: path
      name: milestone_number
      required: true
      schema:
        type: integer
    order:
      description: Determines whether the first search result returned is the highest
        number of matches (`desc`) or lowest number of matches (`asc`). This
        parameter is ignored unless you provide `sort`.
      in: query
      name: order
      required: false
      schema:
        default: desc
        enum:
          - desc
          - asc
        type: string
    org:
      in: path
      name: org
      required: true
      schema:
        type: string
    owner:
      in: path
      name: owner
      required: true
      schema:
        type: string
    page:
      description: Page number of the results to fetch.
      in: query
      name: page
      schema:
        default: 1
        type: integer
    participating:
      description: If `true`, only shows notifications in which the user is directly
        participating or mentioned.
      in: query
      name: participating
      required: false
      schema:
        default: false
        type: boolean
    per-page:
      description: Results per page (max 100)
      in: query
      name: per_page
      schema:
        default: 30
        type: integer
    per_page:
      description: Results per page (max 100).
      in: query
      name: per_page
      schema:
        default: 30
        type: integer
    pre-receive-environment-id:
      in: path
      name: pre_receive_environment_id
      required: true
      schema:
        type: integer
    pre-receive-hook-id:
      in: path
      name: pre_receive_hook_id
      required: true
      schema:
        type: integer
    project-id:
      in: path
      name: project_id
      required: true
      schema:
        type: integer
    pull-number:
      in: path
      name: pull_number
      required: true
      schema:
        type: integer
    reaction-id:
      in: path
      name: reaction_id
      required: true
      schema:
        type: integer
    release_id:
      description: release_id parameter
      in: path
      name: release_id
      required: true
      schema:
        type: integer
    repo:
      in: path
      name: repo
      required: true
      schema:
        type: string
    repository_id:
      in: path
      name: repository_id
      required: true
      schema:
        type: integer
    review_id:
      description: review_id parameter
      in: path
      name: review_id
      required: true
      schema:
        type: integer
    since:
      description: "Only show notifications updated after the given time. This is a
        timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`."
      in: query
      name: since
      required: false
      schema:
        format: date-time
        type: string
    since-org:
      description: An organization ID. Only return organizations with an ID greater
        than this ID.
      in: query
      name: since
      required: false
      schema:
        type: integer
    since-repo:
      description: A repository ID. Only return repositories with an ID greater than
        this ID.
      in: query
      name: since
      required: false
      schema:
        type: integer
    since-user:
      description: A user ID. Only return users with an ID greater than this ID.
      in: query
      name: since
      required: false
      schema:
        type: integer
    sort:
      description: One of `created` (when the repository was starred) or `updated`
        (when it was last pushed to).
      in: query
      name: sort
      required: false
      schema:
        default: created
        enum:
          - created
          - updated
        type: string
    status:
      description: Returns check runs with the specified `status`. Can be one of
        `queued`, `in_progress`, or `completed`.
      in: query
      name: status
      required: false
      schema:
        enum:
          - queued
          - in_progress
          - completed
        type: string
    team-id:
      in: path
      name: team_id
      required: true
      schema:
        type: integer
    team_slug:
      description: team_slug parameter
      in: path
      name: team_slug
      required: true
      schema:
        type: string
    thread_id:
      description: thread_id parameter
      in: path
      name: thread_id
      required: true
      schema:
        type: integer
    token-id:
      in: path
      name: token_id
      required: true
      schema:
        type: integer
    username:
      in: path
      name: username
      required: true
      schema:
        type: string
  responses:
    accepted:
      content:
        application/json:
          schema:
            type: object
      description: Accepted
    bad_request:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
        application/scim+json:
          schema:
            $ref: "#/components/schemas/scim-error"
      description: Bad Request
    conflict:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Conflict
    forbidden:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Forbidden
    forbidden_gist:
      content:
        application/json:
          schema:
            properties:
              block:
                properties:
                  created_at:
                    type: string
                  html_url:
                    nullable: true
                    type: string
                  reason:
                    type: string
                type: object
              documentation_url:
                type: string
              message:
                type: string
            type: object
      description: Forbidden Gist
    found:
      description: Found
    gone:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Gone
    internal_error:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Internal Error
    moved_permanently:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Moved permanently
    no_content:
      description: A header with no content is returned.
    not_found:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Resource not found
    not_modified:
      description: Not modified
    preview_header_missing:
      content:
        application/json:
          schema:
            properties:
              documentation_url:
                type: string
              message:
                type: string
            required:
              - message
              - documentation_url
            type: object
      description: Preview header missing
    requires_authentication:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Requires authentication
    service_unavailable:
      content:
        application/json:
          schema:
            properties:
              code:
                type: string
              documentation_url:
                type: string
              message:
                type: string
            type: object
      description: Service unavailable
    temporary_redirect:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Temporary Redirect
    validation_failed:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/validation-error"
      description: Validation failed
    validation_failed_simple:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/validation-error-simple"
      description: Validation failed
  schemas:
    actor:
      description: Actor
      properties:
        avatar_url:
          format: uri
          type: string
        display_login:
          type: string
        gravatar_id:
          nullable: true
          type: string
        id:
          type: integer
        login:
          type: string
        url:
          format: uri
          type: string
      required:
        - id
        - login
        - gravatar_id
        - url
        - avatar_url
      title: Actor
      type: object
    api-overview:
      description: Api Overview
      properties:
        dependabot:
          example:
            - 192.168.7.15/32
            - 192.168.7.16/32
          items:
            type: string
          type: array
        installed_version:
          example: 2.21.0
          type: string
        packages:
          example:
            - 13.65.0.0/16
            - 157.55.204.33/32
            - 2a01:111:f403:f90c::/62
          items:
            type: string
          type: array
        verifiable_password_authentication:
          example: true
          type: boolean
      required:
        - verifiable_password_authentication
      title: Api Overview
      type: object
    app-permissions:
      description: The permissions granted to the user-to-server access token.
      example:
        contents: read
        deployments: write
        issues: read
        single_file: read
      properties:
        actions:
          description: "The level of permission to grant the access token for GitHub
            Actions workflows, workflow runs, and artifacts. Can be one of:
            `read` or `write`."
          enum:
            - read
            - write
          type: string
        administration:
          description: "The level of permission to grant the access token for repository
            creation, deletion, settings, teams, and collaborators creation. Can
            be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        checks:
          description: "The level of permission to grant the access token for checks on
            code. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        content_references:
          description: "The level of permission to grant the access token for notification
            of content references and creation content attachments. Can be one
            of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        contents:
          description: "The level of permission to grant the access token for repository
            contents, commits, branches, downloads, releases, and merges. Can be
            one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        deployments:
          description: "The level of permission to grant the access token for deployments
            and deployment statuses. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        environments:
          description: "The level of permission to grant the access token for managing
            repository environments. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        issues:
          description: "The level of permission to grant the access token for issues and
            related comments, assignees, labels, and milestones. Can be one of:
            `read` or `write`."
          enum:
            - read
            - write
          type: string
        members:
          description: "The level of permission to grant the access token for organization
            teams and members. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        metadata:
          description: "The level of permission to grant the access token to search
            repositories, list collaborators, and access repository metadata.
            Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        organization_administration:
          description: "The level of permission to grant the access token to manage access
            to an organization. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        organization_hooks:
          description: "The level of permission to grant the access token to manage the
            post-receive hooks for an organization. Can be one of: `read` or
            `write`."
          enum:
            - read
            - write
          type: string
        organization_plan:
          description: "The level of permission to grant the access token for viewing an
            organization's plan. Can be one of: `read`."
          enum:
            - read
          type: string
        organization_projects:
          description: "The level of permission to grant the access token to manage
            organization projects, columns, and cards. Can be one of: `read`,
            `write`, or `admin`."
          enum:
            - read
            - write
            - admin
          type: string
        organization_secrets:
          description: "The level of permission to grant the access token to manage
            organization secrets. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        organization_self_hosted_runners:
          description: "The level of permission to grant the access token to view and
            manage GitHub Actions self-hosted runners available to an
            organization. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        organization_user_blocking:
          description: "The level of permission to grant the access token to view and
            manage users blocked by the organization. Can be one of: `read` or
            `write`."
          enum:
            - read
            - write
          type: string
        packages:
          description: "The level of permission to grant the access token for packages
            published to GitHub Packages. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        pages:
          description: "The level of permission to grant the access token to retrieve
            Pages statuses, configuration, and builds, as well as create new
            builds. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        pull_requests:
          description: "The level of permission to grant the access token for pull
            requests and related comments, assignees, labels, milestones, and
            merges. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        repository_hooks:
          description: "The level of permission to grant the access token to manage the
            post-receive hooks for a repository. Can be one of: `read` or
            `write`."
          enum:
            - read
            - write
          type: string
        repository_projects:
          description: "The level of permission to grant the access token to manage
            repository projects, columns, and cards. Can be one of: `read`,
            `write`, or `admin`."
          enum:
            - read
            - write
            - admin
          type: string
        secret_scanning_alerts:
          description: "The level of permission to grant the access token to view and
            manage secret scanning alerts. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        secrets:
          description: "The level of permission to grant the access token to manage
            repository secrets. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        security_events:
          description: "The level of permission to grant the access token to view and
            manage security events like code scanning alerts. Can be one of:
            `read` or `write`."
          enum:
            - read
            - write
          type: string
        single_file:
          description: "The level of permission to grant the access token to manage just a
            single file. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        statuses:
          description: "The level of permission to grant the access token for commit
            statuses. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        team_discussions:
          description: "The level of permission to grant the access token to manage team
            discussions and related comments. Can be one of: `read` or `write`."
          enum:
            - read
            - write
          type: string
        vulnerability_alerts:
          description: "The level of permission to grant the access token to retrieve
            Dependabot alerts. Can be one of: `read`."
          enum:
            - read
          type: string
        workflows:
          description: "The level of permission to grant the access token to update GitHub
            Actions workflow files. Can be one of: `write`."
          enum:
            - write
          type: string
      title: App Permissions
      type: object
    application-grant:
      description: The authorization associated with an OAuth Access.
      properties:
        app:
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              format: uri
              type: string
          required:
            - client_id
            - name
            - url
          type: object
        created_at:
          example: 2011-09-06T17:26:27Z
          format: date-time
          type: string
        id:
          example: 1
          type: integer
        scopes:
          example:
            - public_repo
          items:
            type: string
          type: array
        updated_at:
          example: 2011-09-06T20:39:23Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/applications/grants/1
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - app
        - id
        - scopes
        - url
        - created_at
        - updated_at
      title: Application Grant
      type: object
    author_association:
      description: How the author is associated with the repository.
      enum:
        - COLLABORATOR
        - CONTRIBUTOR
        - FIRST_TIMER
        - FIRST_TIME_CONTRIBUTOR
        - MANNEQUIN
        - MEMBER
        - NONE
        - OWNER
      example: OWNER
      title: author_association
      type: string
    authorization:
      description: The authorization for an OAuth app, GitHub App, or a Personal
        Access Token.
      properties:
        app:
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              format: uri
              type: string
          required:
            - client_id
            - name
            - url
          type: object
        created_at:
          format: date-time
          type: string
        fingerprint:
          nullable: true
          type: string
        hashed_token:
          nullable: true
          type: string
        id:
          type: integer
        installation:
          allOf:
            - $ref: "#/components/schemas/scoped-installation"
          nullable: true
        note:
          nullable: true
          type: string
        note_url:
          format: uri
          nullable: true
          type: string
        scopes:
          description: A list of scopes that this authorization is in.
          items:
            type: string
          nullable: true
          type: array
        token:
          type: string
        token_last_eight:
          nullable: true
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - app
        - id
        - note
        - note_url
        - scopes
        - token
        - hashed_token
        - token_last_eight
        - fingerprint
        - url
        - created_at
        - updated_at
      title: Authorization
      type: object
    base-gist:
      description: Base Gist
      properties:
        comments:
          type: integer
        comments_url:
          format: uri
          type: string
        commits_url:
          format: uri
          type: string
        created_at:
          format: date-time
          type: string
        description:
          nullable: true
          type: string
        files:
          additionalProperties:
            properties:
              filename:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
              type:
                type: string
            type: object
          type: object
        forks:
          items: {}
          type: array
        forks_url:
          format: uri
          type: string
        git_pull_url:
          format: uri
          type: string
        git_push_url:
          format: uri
          type: string
        history:
          items: {}
          type: array
        html_url:
          format: uri
          type: string
        id:
          type: string
        node_id:
          type: string
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        public:
          type: boolean
        truncated:
          type: boolean
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - id
        - node_id
        - url
        - forks_url
        - commits_url
        - git_pull_url
        - git_push_url
        - html_url
        - comments_url
        - public
        - description
        - comments
        - user
        - files
        - created_at
        - updated_at
      title: Base Gist
      type: object
    basic-error:
      description: Basic Error
      properties:
        documentation_url:
          type: string
        message:
          type: string
        status:
          type: string
        url:
          type: string
      title: Basic Error
      type: object
    blob:
      description: Blob
      properties:
        content:
          type: string
        encoding:
          type: string
        highlighted_content:
          type: string
        node_id:
          type: string
        sha:
          type: string
        size:
          nullable: true
          type: integer
        url:
          format: uri
          type: string
      required:
        - sha
        - url
        - node_id
        - size
        - content
        - encoding
      title: Blob
      type: object
    branch-protection:
      description: Branch Protection
      properties:
        allow_deletions:
          properties:
            enabled:
              type: boolean
          type: object
        allow_force_pushes:
          properties:
            enabled:
              type: boolean
          type: object
        enforce_admins:
          $ref: "#/components/schemas/protected-branch-admin-enforced"
        name:
          example: '"branch/with/protection"'
          type: string
        protection_url:
          example: '"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection"'
          type: string
        required_conversation_resolution:
          properties:
            enabled:
              type: boolean
          type: object
        required_linear_history:
          properties:
            enabled:
              type: boolean
          type: object
        required_pull_request_reviews:
          $ref: "#/components/schemas/protected-branch-pull-request-review"
        required_signatures:
          properties:
            enabled:
              example: true
              type: boolean
            url:
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
              format: uri
              type: string
          required:
            - url
            - enabled
          type: object
        required_status_checks:
          properties:
            contexts:
              items:
                type: string
              type: array
            contexts_url:
              type: string
            enforcement_level:
              type: string
            url:
              type: string
          required:
            - contexts
          type: object
        restrictions:
          $ref: "#/components/schemas/branch-restriction-policy"
        url:
          type: string
      title: Branch Protection
      type: object
    branch-restriction-policy:
      description: Branch Restriction Policy
      properties:
        apps:
          items:
            properties:
              created_at:
                type: string
              description:
                type: string
              events:
                items:
                  type: string
                type: array
              external_url:
                type: string
              html_url:
                type: string
              id:
                type: integer
              name:
                type: string
              node_id:
                type: string
              owner:
                properties:
                  avatar_url:
                    type: string
                  description:
                    type: string
                  events_url:
                    type: string
                  followers_url:
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"'
                    type: string
                  following_url:
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"'
                    type: string
                  gists_url:
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"'
                    type: string
                  gravatar_id:
                    example: '""'
                    type: string
                  hooks_url:
                    type: string
                  html_url:
                    example: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                    type: string
                  id:
                    type: integer
                  issues_url:
                    type: string
                  login:
                    type: string
                  members_url:
                    type: string
                  node_id:
                    type: string
                  organizations_url:
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"'
                    type: string
                  public_members_url:
                    type: string
                  received_events_url:
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"'
                    type: string
                  repos_url:
                    type: string
                  starred_url:
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"'
                    type: string
                  subscriptions_url:
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"'
                    type: string
                  type:
                    example: '"Organization"'
                    type: string
                  url:
                    type: string
                type: object
              permissions:
                properties:
                  contents:
                    type: string
                  issues:
                    type: string
                  metadata:
                    type: string
                  single_file:
                    type: string
                type: object
              slug:
                type: string
              updated_at:
                type: string
            type: object
          type: array
        apps_url:
          format: uri
          type: string
        teams:
          items:
            properties:
              description:
                nullable: true
                type: string
              html_url:
                type: string
              id:
                type: integer
              members_url:
                type: string
              name:
                type: string
              node_id:
                type: string
              parent:
                nullable: true
                type: string
              permission:
                type: string
              privacy:
                type: string
              repositories_url:
                type: string
              slug:
                type: string
              url:
                type: string
            type: object
          type: array
        teams_url:
          format: uri
          type: string
        url:
          format: uri
          type: string
        users:
          items:
            properties:
              avatar_url:
                type: string
              events_url:
                type: string
              followers_url:
                type: string
              following_url:
                type: string
              gists_url:
                type: string
              gravatar_id:
                type: string
              html_url:
                type: string
              id:
                type: integer
              login:
                type: string
              node_id:
                type: string
              organizations_url:
                type: string
              received_events_url:
                type: string
              repos_url:
                type: string
              site_admin:
                type: boolean
              starred_url:
                type: string
              subscriptions_url:
                type: string
              type:
                type: string
              url:
                type: string
            type: object
          type: array
        users_url:
          format: uri
          type: string
      required:
        - url
        - users_url
        - teams_url
        - apps_url
        - users
        - teams
        - apps
      title: Branch Restriction Policy
      type: object
    branch-short:
      description: Branch Short
      properties:
        commit:
          properties:
            sha:
              type: string
            url:
              type: string
          required:
            - sha
            - url
          type: object
        name:
          type: string
        protected:
          type: boolean
      required:
        - name
        - commit
        - protected
      title: Branch Short
      type: object
    branch-with-protection:
      description: Branch With Protection
      properties:
        _links:
          properties:
            html:
              type: string
            self:
              format: uri
              type: string
          required:
            - html
            - self
          type: object
        commit:
          $ref: "#/components/schemas/commit"
        name:
          type: string
        pattern:
          example: '"mas*"'
          type: string
        protected:
          type: boolean
        protection:
          $ref: "#/components/schemas/branch-protection"
        protection_url:
          format: uri
          type: string
        required_approving_review_count:
          example: 1
          type: integer
      required:
        - name
        - commit
        - _links
        - protection
        - protected
        - protection_url
      title: Branch With Protection
      type: object
    check-annotation:
      description: Check Annotation
      properties:
        annotation_level:
          example: warning
          nullable: true
          type: string
        blob_href:
          type: string
        end_column:
          example: 10
          nullable: true
          type: integer
        end_line:
          example: 2
          type: integer
        message:
          example: Check your spelling for 'banaas'.
          nullable: true
          type: string
        path:
          example: README.md
          type: string
        raw_details:
          example: Do you mean 'bananas' or 'banana'?
          nullable: true
          type: string
        start_column:
          example: 5
          nullable: true
          type: integer
        start_line:
          example: 2
          type: integer
        title:
          example: Spell Checker
          nullable: true
          type: string
      required:
        - path
        - blob_href
        - start_line
        - end_line
        - start_column
        - end_column
        - annotation_level
        - title
        - message
        - raw_details
      title: Check Annotation
      type: object
    check-run:
      description: A check performed on the code of a given code change
      properties:
        app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        check_suite:
          nullable: true
          properties:
            id:
              type: integer
          required:
            - id
          type: object
        completed_at:
          example: 2018-05-04T01:14:52Z
          format: date-time
          nullable: true
          type: string
        conclusion:
          enum:
            - success
            - failure
            - neutral
            - cancelled
            - skipped
            - timed_out
            - action_required
          example: neutral
          nullable: true
          type: string
        deployment:
          $ref: "#/components/schemas/deployment-simple"
        details_url:
          example: https://example.com
          nullable: true
          type: string
        external_id:
          example: "42"
          nullable: true
          type: string
        head_sha:
          description: The SHA of the commit that is being checked.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        html_url:
          example: https://github.com/github/hello-world/runs/4
          nullable: true
          type: string
        id:
          description: The id of the check.
          example: 21
          type: integer
        name:
          description: The name of the check.
          example: test-coverage
          type: string
        node_id:
          example: MDg6Q2hlY2tSdW40
          type: string
        output:
          properties:
            annotations_count:
              type: integer
            annotations_url:
              format: uri
              type: string
            summary:
              nullable: true
              type: string
            text:
              nullable: true
              type: string
            title:
              nullable: true
              type: string
          required:
            - title
            - summary
            - text
            - annotations_count
            - annotations_url
          type: object
        pull_requests:
          items:
            $ref: "#/components/schemas/pull-request-minimal"
        started_at:
          example: 2018-05-04T01:14:52Z
          format: date-time
          nullable: true
          type: string
        status:
          description: The phase of the lifecycle that the check is currently in.
          enum:
            - queued
            - in_progress
            - completed
          example: queued
          type: string
        url:
          example: https://api.github.com/repos/github/hello-world/check-runs/4
          type: string
      required:
        - id
        - node_id
        - head_sha
        - name
        - url
        - html_url
        - details_url
        - status
        - conclusion
        - started_at
        - completed_at
        - external_id
        - check_suite
        - output
        - app
        - pull_requests
      title: CheckRun
      type: object
    check-suite:
      description: A suite of checks performed on the code of a given code change
      properties:
        after:
          example: d6fde92930d4715a2b49857d24b940956b26d2d3
          nullable: true
          type: string
        app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        before:
          example: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          nullable: true
          type: string
        check_runs_url:
          type: string
        conclusion:
          enum:
            - success
            - failure
            - neutral
            - cancelled
            - skipped
            - timed_out
            - action_required
          example: neutral
          nullable: true
          type: string
        created_at:
          format: date-time
          nullable: true
          type: string
        head_branch:
          example: master
          nullable: true
          type: string
        head_commit:
          $ref: "#/components/schemas/simple-commit"
        head_sha:
          description: The SHA of the head commit that is being checked.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        id:
          example: 5
          type: integer
        latest_check_runs_count:
          type: integer
        node_id:
          example: MDEwOkNoZWNrU3VpdGU1
          type: string
        pull_requests:
          items:
            $ref: "#/components/schemas/pull-request-minimal"
          nullable: true
          type: array
        repository:
          $ref: "#/components/schemas/minimal-repository"
        status:
          enum:
            - queued
            - in_progress
            - completed
          example: completed
          nullable: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          type: string
        url:
          example: https://api.github.com/repos/github/hello-world/check-suites/5
          nullable: true
          type: string
      required:
        - id
        - node_id
        - head_branch
        - status
        - conclusion
        - head_sha
        - url
        - before
        - after
        - created_at
        - updated_at
        - app
        - head_commit
        - repository
        - latest_check_runs_count
        - check_runs_url
        - pull_requests
      title: CheckSuite
      type: object
    check-suite-preference:
      description: Check suite configuration preferences for a repository.
      properties:
        preferences:
          properties:
            auto_trigger_checks:
              items:
                properties:
                  app_id:
                    type: integer
                  setting:
                    type: boolean
                required:
                  - app_id
                  - setting
                type: object
              type: array
          type: object
        repository:
          $ref: "#/components/schemas/minimal-repository"
      required:
        - preferences
        - repository
      title: Check Suite Preference
      type: object
    code-frequency-stat:
      description: Code Frequency Stat
      items:
        type: integer
      title: Code Frequency Stat
      type: array
    code-of-conduct:
      description: Code Of Conduct
      properties:
        body:
          example: >
            # Contributor Covenant Code of Conduct


            ## Our Pledge


            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.


            ## Our Standards


            Examples of behavior that contributes to creating a positive environment include:


            * Using welcoming and inclusive language

            * Being respectful of differing viewpoints and experiences

            * Gracefully accepting constructive criticism

            * Focusing on what is best for the community

            * Showing empathy towards other community members


            Examples of unacceptable behavior by participants include:


            * The use of sexualized language or imagery and unwelcome sexual attention or advances

            * Trolling, insulting/derogatory comments, and personal or political attacks

            * Public or private harassment

            * Publishing others' private information, such as a physical or electronic address, without explicit permission

            * Other conduct which could reasonably be considered inappropriate in a professional setting


            ## Our Responsibilities


            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.


            ## Scope


            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement


            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.


            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.


            ## Attribution


            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]


            [homepage]: http://contributor-covenant.org

            [version]: http://contributor-covenant.org/version/1/4/
          type: string
        html_url:
          format: uri
          nullable: true
          type: string
        key:
          example: contributor_covenant
          type: string
        name:
          example: Contributor Covenant
          type: string
        url:
          example: https://api.github.com/codes_of_conduct/contributor_covenant
          format: uri
          type: string
      required:
        - url
        - html_url
        - key
        - name
      title: Code Of Conduct
      type: object
    code-of-conduct-simple:
      description: Code of Conduct Simple
      properties:
        html_url:
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
          format: uri
          nullable: true
          type: string
        key:
          example: citizen_code_of_conduct
          type: string
        name:
          example: Citizen Code of Conduct
          type: string
        url:
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
          format: uri
          type: string
      required:
        - url
        - key
        - name
        - html_url
      title: Code Of Conduct Simple
      type: object
    code-search-result-item:
      description: Code Search Result Item
      properties:
        file_size:
          type: integer
        git_url:
          format: uri
          type: string
        html_url:
          format: uri
          type: string
        language:
          nullable: true
          type: string
        last_modified_at:
          format: date-time
          type: string
        line_numbers:
          example:
            - 73..77
            - 77..78
          items:
            type: string
          type: array
        name:
          type: string
        path:
          type: string
        repository:
          $ref: "#/components/schemas/minimal-repository"
        score:
          type: number
        sha:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        url:
          format: uri
          type: string
      required:
        - score
        - name
        - path
        - sha
        - git_url
        - html_url
        - url
        - repository
      title: Code Search Result Item
      type: object
    collaborator:
      description: Collaborator
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          format: uri
          type: string
        events_url:
          example: https://api.github.com/users/octocat/events{/privacy}
          type: string
        followers_url:
          example: https://api.github.com/users/octocat/followers
          format: uri
          type: string
        following_url:
          example: https://api.github.com/users/octocat/following{/other_user}
          type: string
        gists_url:
          example: https://api.github.com/users/octocat/gists{/gist_id}
          type: string
        gravatar_id:
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
          type: string
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          type: integer
        login:
          example: octocat
          type: string
        node_id:
          example: MDQ6VXNlcjE=
          type: string
        organizations_url:
          example: https://api.github.com/users/octocat/orgs
          format: uri
          type: string
        permissions:
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          required:
            - pull
            - push
            - admin
          type: object
        received_events_url:
          example: https://api.github.com/users/octocat/received_events
          format: uri
          type: string
        repos_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_url:
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
          type: string
        subscriptions_url:
          example: https://api.github.com/users/octocat/subscriptions
          format: uri
          type: string
        type:
          example: User
          type: string
        url:
          example: https://api.github.com/users/octocat
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      title: Collaborator
      type: object
    combined-commit-status:
      description: Combined Commit Status
      properties:
        commit_url:
          format: uri
          type: string
        repository:
          $ref: "#/components/schemas/minimal-repository"
        sha:
          type: string
        state:
          type: string
        statuses:
          items:
            $ref: "#/components/schemas/simple-commit-status"
          type: array
        total_count:
          type: integer
        url:
          format: uri
          type: string
      required:
        - state
        - sha
        - total_count
        - statuses
        - repository
        - commit_url
        - url
      title: Combined Commit Status
      type: object
    commit:
      description: Commit
      properties:
        author:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        comments_url:
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          format: uri
          type: string
        commit:
          properties:
            author:
              allOf:
                - $ref: "#/components/schemas/git-user"
              nullable: true
            comment_count:
              example: 0
              type: integer
            committer:
              allOf:
                - $ref: "#/components/schemas/git-user"
              nullable: true
            message:
              example: Fix all the bugs
              type: string
            tree:
              properties:
                sha:
                  example: 827efc6d56897b048c772eb4087f854f46256132
                  type: string
                url:
                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132
                  format: uri
                  type: string
              required:
                - sha
                - url
              type: object
            url:
              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
              format: uri
              type: string
            verification:
              $ref: "#/components/schemas/verification"
          required:
            - author
            - committer
            - comment_count
            - message
            - tree
            - url
          type: object
        committer:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        files:
          items:
            properties:
              additions:
                type: integer
              blob_url:
                type: string
              changes:
                type: integer
              contents_url:
                example: '"https://api.github.com/repos/owner-3d68404b07d25daeb2d4a6bf/AAA_Public_Repo/contents/geometry.js?ref=c3956841a7cb7e8ba4a6fd923568d86958f01573"'
                type: string
              deletions:
                type: integer
              filename:
                type: string
              patch:
                type: string
              previous_filename:
                example: '"subdir/before_name.txt"'
                type: string
              raw_url:
                type: string
              sha:
                example: '"1e8e60ce9733d5283f7836fa602b6365a66b2567"'
                type: string
              status:
                type: string
            type: object
          type: array
        html_url:
          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          format: uri
          type: string
        node_id:
          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          type: string
        parents:
          items:
            properties:
              html_url:
                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
                format: uri
                type: string
              sha:
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd
                format: uri
                type: string
            required:
              - sha
              - url
            type: object
          type: array
        sha:
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        stats:
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
          type: object
        url:
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          format: uri
          type: string
      required:
        - url
        - sha
        - node_id
        - html_url
        - comments_url
        - commit
        - author
        - committer
        - parents
      title: Commit
      type: object
    commit-activity:
      description: Commit Activity
      properties:
        days:
          example:
            - 0
            - 3
            - 26
            - 20
            - 39
            - 1
            - 0
          items:
            type: integer
          type: array
        total:
          example: 89
          type: integer
        week:
          example: 1336280400
          type: integer
      required:
        - days
        - total
        - week
      title: Commit Activity
      type: object
    commit-comment:
      description: Commit Comment
      properties:
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          type: string
        commit_id:
          type: string
        created_at:
          format: date-time
          type: string
        html_url:
          format: uri
          type: string
        id:
          type: integer
        line:
          nullable: true
          type: integer
        node_id:
          type: string
        path:
          nullable: true
          type: string
        position:
          nullable: true
          type: integer
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - url
        - html_url
        - id
        - node_id
        - user
        - position
        - line
        - path
        - commit_id
        - body
        - author_association
        - created_at
        - updated_at
      title: Commit Comment
      type: object
    commit-comparison:
      description: Commit Comparison
      properties:
        ahead_by:
          example: 4
          type: integer
        base_commit:
          $ref: "#/components/schemas/commit"
        behind_by:
          example: 5
          type: integer
        commits:
          items:
            $ref: "#/components/schemas/commit"
          type: array
        diff_url:
          example: https://github.com/octocat/Hello-World/compare/master...topic.diff
          format: uri
          type: string
        files:
          items:
            $ref: "#/components/schemas/diff-entry"
          type: array
        html_url:
          example: https://github.com/octocat/Hello-World/compare/master...topic
          format: uri
          type: string
        merge_base_commit:
          $ref: "#/components/schemas/commit"
        patch_url:
          example: https://github.com/octocat/Hello-World/compare/master...topic.patch
          format: uri
          type: string
        permalink_url:
          example: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
          format: uri
          type: string
        status:
          enum:
            - diverged
            - ahead
            - behind
            - identical
          example: ahead
          type: string
        total_commits:
          example: 6
          type: integer
        url:
          example: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
          format: uri
          type: string
      required:
        - url
        - html_url
        - permalink_url
        - diff_url
        - patch_url
        - base_commit
        - merge_base_commit
        - status
        - ahead_by
        - behind_by
        - total_commits
        - commits
      title: Commit Comparison
      type: object
    commit-search-result-item:
      description: Commit Search Result Item
      properties:
        author:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        comments_url:
          format: uri
          type: string
        commit:
          properties:
            author:
              properties:
                date:
                  format: date-time
                  type: string
                email:
                  type: string
                name:
                  type: string
              required:
                - name
                - email
                - date
              type: object
            comment_count:
              type: integer
            committer:
              allOf:
                - $ref: "#/components/schemas/git-user"
              nullable: true
            message:
              type: string
            tree:
              properties:
                sha:
                  type: string
                url:
                  format: uri
                  type: string
              required:
                - sha
                - url
              type: object
            url:
              format: uri
              type: string
            verification:
              $ref: "#/components/schemas/verification"
          required:
            - author
            - committer
            - comment_count
            - message
            - tree
            - url
          type: object
        committer:
          allOf:
            - $ref: "#/components/schemas/git-user"
          nullable: true
        html_url:
          format: uri
          type: string
        node_id:
          type: string
        parents:
          items:
            properties:
              html_url:
                type: string
              sha:
                type: string
              url:
                type: string
            type: object
          type: array
        repository:
          $ref: "#/components/schemas/minimal-repository"
        score:
          type: number
        sha:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        url:
          format: uri
          type: string
      required:
        - sha
        - node_id
        - url
        - html_url
        - author
        - committer
        - parents
        - comments_url
        - commit
        - repository
        - score
      title: Commit Search Result Item
      type: object
    configuration-status:
      properties:
        progress:
          items:
            properties:
              key:
                type: string
              status:
                type: string
            required:
              - status
              - key
            type: object
          type: array
        status:
          type: string
      type: object
    content-directory:
      description: A list of directory items
      items:
        properties:
          _links:
            properties:
              git:
                format: uri
                nullable: true
                type: string
              html:
                format: uri
                nullable: true
                type: string
              self:
                format: uri
                type: string
            required:
              - git
              - html
              - self
            type: object
          content:
            type: string
          download_url:
            format: uri
            nullable: true
            type: string
          git_url:
            format: uri
            nullable: true
            type: string
          html_url:
            format: uri
            nullable: true
            type: string
          name:
            type: string
          path:
            type: string
          sha:
            type: string
          size:
            type: integer
          type:
            type: string
          url:
            format: uri
            type: string
        required:
          - _links
          - git_url
          - html_url
          - download_url
          - name
          - path
          - sha
          - size
          - type
          - url
        type: object
      title: Content Directory
      type: array
    content-file:
      description: Content File
      properties:
        _links:
          properties:
            git:
              format: uri
              nullable: true
              type: string
            html:
              format: uri
              nullable: true
              type: string
            self:
              format: uri
              type: string
          required:
            - git
            - html
            - self
          type: object
        content:
          type: string
        download_url:
          format: uri
          nullable: true
          type: string
        encoding:
          type: string
        git_url:
          format: uri
          nullable: true
          type: string
        html_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        submodule_git_url:
          example: '"git://example.com/defunkt/dotjs.git"'
          type: string
        target:
          example: '"actual/actual.md"'
          type: string
        type:
          type: string
        url:
          format: uri
          type: string
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - content
        - encoding
      title: Content File
      type: object
    content-reference-attachment:
      description: Content Reference attachments allow you to provide context around
        URLs posted in comments
      properties:
        body:
          description: The body of the attachment
          example: Body of the attachment
          maxLength: 262144
          type: string
        id:
          description: The ID of the attachment
          example: 21
          type: integer
        node_id:
          description: The node_id of the content attachment
          example: MDE3OkNvbnRlbnRBdHRhY2htZW50MjE=
          type: string
        title:
          description: The title of the attachment
          example: Title of the attachment
          maxLength: 1024
          type: string
      required:
        - id
        - title
        - body
      title: ContentReferenceAttachment
      type: object
    content-submodule:
      description: An object describing a symlink
      properties:
        _links:
          properties:
            git:
              format: uri
              nullable: true
              type: string
            html:
              format: uri
              nullable: true
              type: string
            self:
              format: uri
              type: string
          required:
            - git
            - html
            - self
          type: object
        download_url:
          format: uri
          nullable: true
          type: string
        git_url:
          format: uri
          nullable: true
          type: string
        html_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        submodule_git_url:
          format: uri
          type: string
        type:
          type: string
        url:
          format: uri
          type: string
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - submodule_git_url
      title: Symlink Content
      type: object
    content-symlink:
      description: An object describing a symlink
      properties:
        _links:
          properties:
            git:
              format: uri
              nullable: true
              type: string
            html:
              format: uri
              nullable: true
              type: string
            self:
              format: uri
              type: string
          required:
            - git
            - html
            - self
          type: object
        download_url:
          format: uri
          nullable: true
          type: string
        git_url:
          format: uri
          nullable: true
          type: string
        html_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        target:
          type: string
        type:
          type: string
        url:
          format: uri
          type: string
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - target
      title: Symlink Content
      type: object
    content-tree:
      description: Content Tree
      properties:
        _links:
          properties:
            git:
              format: uri
              nullable: true
              type: string
            html:
              format: uri
              nullable: true
              type: string
            self:
              format: uri
              type: string
          required:
            - git
            - html
            - self
          type: object
        download_url:
          format: uri
          nullable: true
          type: string
        entries:
          items:
            properties:
              _links:
                properties:
                  git:
                    format: uri
                    nullable: true
                    type: string
                  html:
                    format: uri
                    nullable: true
                    type: string
                  self:
                    format: uri
                    type: string
                required:
                  - git
                  - html
                  - self
                type: object
              content:
                type: string
              download_url:
                format: uri
                nullable: true
                type: string
              git_url:
                format: uri
                nullable: true
                type: string
              html_url:
                format: uri
                nullable: true
                type: string
              name:
                type: string
              path:
                type: string
              sha:
                type: string
              size:
                type: integer
              type:
                type: string
              url:
                format: uri
                type: string
            required:
              - _links
              - git_url
              - html_url
              - download_url
              - name
              - path
              - sha
              - size
              - type
              - url
            type: object
          type: array
        git_url:
          format: uri
          nullable: true
          type: string
        html_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        type:
          type: string
        url:
          format: uri
          type: string
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - content
        - encoding
      title: Content Tree
      type: object
    contributor:
      description: Contributor
      properties:
        avatar_url:
          format: uri
          type: string
        contributions:
          type: integer
        email:
          type: string
        events_url:
          type: string
        followers_url:
          format: uri
          type: string
        following_url:
          type: string
        gists_url:
          type: string
        gravatar_id:
          nullable: true
          type: string
        html_url:
          format: uri
          type: string
        id:
          type: integer
        login:
          type: string
        name:
          type: string
        node_id:
          type: string
        organizations_url:
          format: uri
          type: string
        received_events_url:
          format: uri
          type: string
        repos_url:
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_url:
          type: string
        subscriptions_url:
          format: uri
          type: string
        type:
          type: string
        url:
          format: uri
          type: string
      required:
        - contributions
        - type
      title: Contributor
      type: object
    contributor-activity:
      description: Contributor Activity
      properties:
        author:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        total:
          example: 135
          type: integer
        weeks:
          example:
            - a: 6898
              c: 10
              d: 77
              w: "1367712000"
          items:
            properties:
              a:
                type: integer
              c:
                type: integer
              d:
                type: integer
              w:
                type: integer
            type: object
          type: array
      required:
        - author
        - total
        - weeks
      title: Contributor Activity
      type: object
    deploy-key:
      description: An SSH key granting access to a single repository.
      properties:
        created_at:
          type: string
        id:
          type: integer
        key:
          type: string
        read_only:
          type: boolean
        title:
          type: string
        url:
          type: string
        verified:
          type: boolean
      required:
        - id
        - key
        - url
        - title
        - verified
        - created_at
        - read_only
      title: Deploy Key
      type: object
    deployment:
      description: A request for a specific ref(branch,sha,tag) to be deployed
      properties:
        created_at:
          example: 2012-07-20T01:19:13Z
          format: date-time
          type: string
        creator:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        description:
          example: Deploy request from hubot
          nullable: true
          type: string
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          example: MDEwOkRlcGxveW1lbnQx
          type: string
        original_environment:
          example: staging
          type: string
        payload:
          oneOf:
            - properties: {}
              type: object
            - type: string
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        production_environment:
          description: "Specifies if the given environment is one that end-users directly
            interact with. Default: false."
          example: true
          type: boolean
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        repository_url:
          example: https://api.github.com/repos/octocat/example
          format: uri
          type: string
        sha:
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          type: string
        statuses_url:
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
          format: uri
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        transient_environment:
          description: "Specifies if the given environment is will no longer exist at some
            point in the future. Default: false."
          example: true
          type: boolean
        updated_at:
          example: 2012-07-20T01:19:13Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/example/deployments/1
          format: uri
          type: string
      required:
        - id
        - node_id
        - sha
        - ref
        - task
        - environment
        - creator
        - payload
        - description
        - statuses_url
        - repository_url
        - url
        - created_at
        - updated_at
      title: Deployment
      type: object
    deployment-simple:
      description: A deployment created as the result of an Actions check run from a
        workflow that references an environment
      properties:
        created_at:
          example: 2012-07-20T01:19:13Z
          format: date-time
          type: string
        description:
          example: Deploy request from hubot
          nullable: true
          type: string
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          example: MDEwOkRlcGxveW1lbnQx
          type: string
        original_environment:
          example: staging
          type: string
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        production_environment:
          description: "Specifies if the given environment is one that end-users directly
            interact with. Default: false."
          example: true
          type: boolean
        repository_url:
          example: https://api.github.com/repos/octocat/example
          format: uri
          type: string
        statuses_url:
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
          format: uri
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        transient_environment:
          description: "Specifies if the given environment is will no longer exist at some
            point in the future. Default: false."
          example: true
          type: boolean
        updated_at:
          example: 2012-07-20T01:19:13Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/example/deployments/1
          format: uri
          type: string
      required:
        - id
        - node_id
        - task
        - environment
        - description
        - statuses_url
        - repository_url
        - url
        - created_at
        - updated_at
      title: Deployment
      type: object
    deployment-status:
      description: The status of a deployment.
      properties:
        created_at:
          example: 2012-07-20T01:19:13Z
          format: date-time
          type: string
        creator:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        deployment_url:
          example: https://api.github.com/repos/octocat/example/deployments/42
          format: uri
          type: string
        description:
          default: ""
          description: A short description of the status.
          example: Deployment finished successfully.
          maxLength: 140
          type: string
        environment:
          default: ""
          description: The environment of the deployment that the status is for.
          example: production
          type: string
        environment_url:
          default: ""
          description: The URL for accessing your environment.
          example: https://staging.example.com/
          format: uri
          type: string
        id:
          example: 1
          type: integer
        log_url:
          default: ""
          description: The URL to associate with this status.
          example: https://example.com/deployment/42/output
          format: uri
          type: string
        node_id:
          example: MDE2OkRlcGxveW1lbnRTdGF0dXMx
          type: string
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        repository_url:
          example: https://api.github.com/repos/octocat/example
          format: uri
          type: string
        state:
          description: The state of the status.
          enum:
            - error
            - failure
            - inactive
            - pending
            - success
            - queued
            - in_progress
          example: success
          type: string
        target_url:
          default: ""
          description: "Deprecated: the URL to associate with this status."
          example: https://example.com/deployment/42/output
          format: uri
          type: string
        updated_at:
          example: 2012-07-20T01:19:13Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
          format: uri
          type: string
      required:
        - id
        - node_id
        - state
        - creator
        - description
        - deployment_url
        - target_url
        - repository_url
        - url
        - created_at
        - updated_at
      title: Deployment Status
      type: object
    diff-entry:
      description: Diff Entry
      properties:
        additions:
          example: 103
          type: integer
        blob_url:
          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          format: uri
          type: string
        changes:
          example: 124
          type: integer
        contents_url:
          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
          format: uri
          type: string
        deletions:
          example: 21
          type: integer
        filename:
          example: file1.txt
          type: string
        patch:
          example: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
          type: string
        previous_filename:
          example: file.txt
          type: string
        raw_url:
          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          format: uri
          type: string
        sha:
          example: bbcd538c8e72b8c175046e27cc8f907076331401
          type: string
        status:
          example: added
          type: string
      required:
        - additions
        - blob_url
        - changes
        - contents_url
        - deletions
        - filename
        - raw_url
        - sha
        - status
      title: Diff Entry
      type: object
    email:
      description: Email
      properties:
        email:
          example: octocat@github.com
          format: email
          type: string
        primary:
          example: true
          type: boolean
        verified:
          example: true
          type: boolean
        visibility:
          example: public
          nullable: true
          type: string
      required:
        - email
        - primary
        - verified
        - visibility
      title: Email
      type: object
    enterprise:
      description: An enterprise account
      properties:
        avatar_url:
          format: uri
          type: string
        created_at:
          example: 2019-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        description:
          description: A short description of the enterprise.
          nullable: true
          type: string
        html_url:
          example: https://github.com/enterprises/octo-business
          format: uri
          type: string
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        name:
          description: The name of the enterprise.
          example: Octo Business
          type: string
        node_id:
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          type: string
        slug:
          description: The slug url identifier for the enterprise.
          example: octo-business
          type: string
        updated_at:
          example: 2019-01-26T19:14:43Z
          format: date-time
          nullable: true
          type: string
        website_url:
          description: The enterprise's website URL.
          format: uri
          nullable: true
          type: string
      required:
        - id
        - node_id
        - name
        - slug
        - html_url
        - created_at
        - updated_at
        - avatar_url
      title: Enterprise
      type: object
    enterprise-overview:
      properties:
        comments:
          properties:
            total_commit_comments:
              type: integer
            total_gist_comments:
              type: integer
            total_issue_comments:
              type: integer
            total_pull_request_comments:
              type: integer
          type: object
        gists:
          properties:
            private_gists:
              type: integer
            public_gists:
              type: integer
            total_gists:
              type: integer
          type: object
        hooks:
          properties:
            active_hooks:
              type: integer
            inactive_hooks:
              type: integer
            total_hooks:
              type: integer
          type: object
        issues:
          properties:
            closed_issues:
              type: integer
            open_issues:
              type: integer
            total_issues:
              type: integer
          type: object
        milestones:
          properties:
            closed_milestones:
              type: integer
            open_milestones:
              type: integer
            total_milestones:
              type: integer
          type: object
        orgs:
          properties:
            disabled_orgs:
              type: integer
            total_orgs:
              type: integer
            total_team_members:
              type: integer
            total_teams:
              type: integer
          type: object
        pages:
          properties:
            total_pages:
              type: integer
          type: object
        pulls:
          properties:
            mergeable_pulls:
              type: integer
            merged_pulls:
              type: integer
            total_pulls:
              type: integer
            unmergeable_pulls:
              type: integer
          type: object
        repos:
          properties:
            fork_repos:
              type: integer
            org_repos:
              type: integer
            root_repos:
              type: integer
            total_pushes:
              type: integer
            total_repos:
              type: integer
            total_wikis:
              type: integer
          type: object
        users:
          properties:
            admin_users:
              type: integer
            suspended_users:
              type: integer
            total_users:
              type: integer
          type: object
      type: object
    enterprise-public-key:
      properties:
        id:
          type: integer
        key:
          type: string
        key_id:
          type: string
        repository_id:
          nullable: true
          type: integer
        url:
          type: string
        user_id:
          nullable: true
          type: integer
      type: object
    enterprise-settings:
      properties:
        enterprise:
          properties:
            admin_password:
              nullable: true
              type: string
            assets:
              nullable: true
              type: string
            auth_mode:
              type: string
            avatar:
              properties:
                enabled:
                  type: boolean
                uri:
                  type: string
              type: object
            cas:
              properties:
                url:
                  nullable: true
                  type: string
              type: object
            collectd:
              properties:
                enabled:
                  type: boolean
                encryption:
                  nullable: true
                  type: string
                password:
                  nullable: true
                  type: string
                port:
                  type: integer
                server:
                  nullable: true
                  type: string
                username:
                  nullable: true
                  type: string
              type: object
            configuration_id:
              type: integer
            configuration_run_count:
              type: integer
            customer:
              properties:
                email:
                  type: string
                name:
                  type: string
                public_key_data:
                  type: string
                secret_key_data:
                  type: string
                uuid:
                  type: string
              type: object
            expire_sessions:
              type: boolean
            github_hostname:
              type: string
            github_oauth:
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                organization_name:
                  type: string
                organization_team:
                  type: string
              type: object
            github_ssl:
              properties:
                cert:
                  nullable: true
                  type: string
                enabled:
                  type: boolean
                key:
                  nullable: true
                  type: string
              type: object
            http_proxy:
              nullable: true
              type: string
            identicons_host:
              type: string
            ldap:
              properties:
                admin_group:
                  nullable: true
                  type: string
                base:
                  items: {}
                  type: array
                bind_dn:
                  nullable: true
                  type: string
                host:
                  nullable: true
                  type: string
                method:
                  type: string
                password:
                  nullable: true
                  type: string
                port:
                  type: integer
                posix_support:
                  type: boolean
                profile:
                  properties:
                    key:
                      nullable: true
                      type: string
                    mail:
                      nullable: true
                      type: string
                    name:
                      nullable: true
                      type: string
                    uid:
                      type: string
                  type: object
                reconciliation:
                  properties:
                    org:
                      nullable: true
                      type: string
                    user:
                      nullable: true
                      type: string
                  type: object
                recursive_group_search:
                  type: boolean
                search_strategy:
                  type: string
                sync_enabled:
                  type: boolean
                team_sync_interval:
                  type: integer
                uid:
                  nullable: true
                  type: string
                user_groups:
                  items: {}
                  type: array
                user_sync_emails:
                  type: boolean
                user_sync_interval:
                  type: integer
                user_sync_keys:
                  type: boolean
                virtual_attribute_enabled:
                  type: boolean
              type: object
            license:
              properties:
                cluster_support:
                  type: boolean
                evaluation:
                  type: boolean
                expire_at:
                  type: string
                perpetual:
                  type: boolean
                seats:
                  type: integer
                ssh_allowed:
                  type: boolean
                support_key:
                  type: string
                unlimited_seating:
                  type: boolean
              type: object
            load_balancer:
              nullable: true
              type: string
            mapping:
              properties:
                basemap:
                  type: string
                enabled:
                  type: boolean
                tileserver:
                  nullable: true
                  type: string
                token:
                  nullable: true
                  type: string
              type: object
            ntp:
              properties:
                primary_server:
                  type: string
                secondary_server:
                  type: string
              type: object
            pages:
              properties:
                enabled:
                  type: boolean
              type: object
            private_mode:
              type: boolean
            public_pages:
              type: boolean
            saml:
              properties:
                certificate:
                  nullable: true
                  type: string
                certificate_path:
                  nullable: true
                  type: string
                disable_admin_demote:
                  type: boolean
                idp_initiated_sso:
                  type: boolean
                issuer:
                  nullable: true
                  type: string
                sso_url:
                  nullable: true
                  type: string
              type: object
            signup_enabled:
              type: boolean
            smtp:
              properties:
                address:
                  type: string
                authentication:
                  type: string
                discard-to-noreply-address:
                  type: boolean
                domain:
                  type: string
                enable_starttls_auto:
                  type: boolean
                enabled:
                  type: boolean
                noreply_address:
                  type: string
                password:
                  type: string
                port:
                  type: string
                support_address:
                  type: string
                support_address_type:
                  type: string
                user_name:
                  type: string
                username:
                  type: string
              type: object
            snmp:
              properties:
                community:
                  type: string
                enabled:
                  type: boolean
              type: object
            subdomain_isolation:
              type: boolean
            syslog:
              properties:
                enabled:
                  type: boolean
                protocol_name:
                  type: string
                server:
                  nullable: true
                  type: string
              type: object
            timezone:
              nullable: true
              type: string
          type: object
        run_list:
          items:
            type: string
          type: array
      type: object
    event:
      description: Event
      properties:
        actor:
          $ref: "#/components/schemas/actor"
        created_at:
          format: date-time
          nullable: true
          type: string
        id:
          type: string
        org:
          $ref: "#/components/schemas/actor"
        payload:
          properties:
            action:
              type: string
            comment:
              $ref: "#/components/schemas/issue-comment"
            issue:
              $ref: "#/components/schemas/issue-simple"
            pages:
              items:
                properties:
                  action:
                    type: string
                  html_url:
                    type: string
                  page_name:
                    type: string
                  sha:
                    type: string
                  summary:
                    nullable: true
                    type: string
                  title:
                    type: string
                type: object
              type: array
          type: object
        public:
          type: boolean
        repo:
          properties:
            id:
              type: integer
            name:
              type: string
            url:
              format: uri
              type: string
          required:
            - id
            - name
            - url
          type: object
        type:
          nullable: true
          type: string
      required:
        - id
        - type
        - actor
        - repo
        - payload
        - public
        - created_at
      title: Event
      type: object
    feed:
      description: Feed
      properties:
        _links:
          properties:
            current_user:
              $ref: "#/components/schemas/link-with-type"
            current_user_actor:
              $ref: "#/components/schemas/link-with-type"
            current_user_organization:
              $ref: "#/components/schemas/link-with-type"
            current_user_organizations:
              items:
                $ref: "#/components/schemas/link-with-type"
              type: array
            current_user_public:
              $ref: "#/components/schemas/link-with-type"
            security_advisories:
              $ref: "#/components/schemas/link-with-type"
            timeline:
              $ref: "#/components/schemas/link-with-type"
            user:
              $ref: "#/components/schemas/link-with-type"
          required:
            - timeline
            - user
          type: object
        current_user_actor_url:
          example: https://github.com/octocat.private.actor?token=abc123
          type: string
        current_user_organization_url:
          example: https://github.com/octocat-org
          type: string
        current_user_organization_urls:
          example:
            - https://github.com/organizations/github/octocat.private.atom?token=abc123
          items:
            format: uri
            type: string
          type: array
        current_user_public_url:
          example: https://github.com/octocat
          type: string
        current_user_url:
          example: https://github.com/octocat.private?token=abc123
          type: string
        timeline_url:
          example: https://github.com/timeline
          type: string
        user_url:
          example: https://github.com/{user}
          type: string
      required:
        - _links
        - timeline_url
        - user_url
      title: Feed
      type: object
    file-commit:
      description: File Commit
      properties:
        commit:
          properties:
            author:
              properties:
                date:
                  type: string
                email:
                  type: string
                name:
                  type: string
              type: object
            committer:
              properties:
                date:
                  type: string
                email:
                  type: string
                name:
                  type: string
              type: object
            html_url:
              type: string
            message:
              type: string
            node_id:
              type: string
            parents:
              items:
                properties:
                  html_url:
                    type: string
                  sha:
                    type: string
                  url:
                    type: string
                type: object
              type: array
            sha:
              type: string
            tree:
              properties:
                sha:
                  type: string
                url:
                  type: string
              type: object
            url:
              type: string
            verification:
              properties:
                payload:
                  nullable: true
                  type: string
                reason:
                  type: string
                signature:
                  nullable: true
                  type: string
                verified:
                  type: boolean
              type: object
          type: object
        content:
          nullable: true
          properties:
            _links:
              properties:
                git:
                  type: string
                html:
                  type: string
                self:
                  type: string
              type: object
            download_url:
              type: string
            git_url:
              type: string
            html_url:
              type: string
            name:
              type: string
            path:
              type: string
            sha:
              type: string
            size:
              type: integer
            type:
              type: string
            url:
              type: string
          type: object
      required:
        - content
        - commit
      title: File Commit
      type: object
    full-repository:
      description: Full Repository
      properties:
        allow_merge_commit:
          example: true
          type: boolean
        allow_rebase_merge:
          example: true
          type: boolean
        allow_squash_merge:
          example: true
          type: boolean
        anonymous_access_enabled:
          default: true
          description: Whether anonymous git access is allowed.
          type: boolean
        archive_url:
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          type: string
        archived:
          type: boolean
        assignees_url:
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
          type: string
        blobs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          type: string
        branches_url:
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
          type: string
        clone_url:
          example: https://github.com/octocat/Hello-World.git
          type: string
        code_of_conduct:
          $ref: "#/components/schemas/code-of-conduct-simple"
        collaborators_url:
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          type: string
        comments_url:
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
          type: string
        commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
          type: string
        compare_url:
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          type: string
        contents_url:
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
          type: string
        contributors_url:
          example: http://api.github.com/repos/octocat/Hello-World/contributors
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          type: string
        default_branch:
          example: master
          type: string
        delete_branch_on_merge:
          example: false
          type: boolean
        deployments_url:
          example: http://api.github.com/repos/octocat/Hello-World/deployments
          format: uri
          type: string
        description:
          example: This your first repo!
          nullable: true
          type: string
        disabled:
          description: Returns whether or not this repository disabled.
          type: boolean
        downloads_url:
          example: http://api.github.com/repos/octocat/Hello-World/downloads
          format: uri
          type: string
        events_url:
          example: http://api.github.com/repos/octocat/Hello-World/events
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          type: integer
        forks_count:
          example: 9
          type: integer
        forks_url:
          example: http://api.github.com/repos/octocat/Hello-World/forks
          format: uri
          type: string
        full_name:
          example: octocat/Hello-World
          type: string
        git_commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          type: string
        git_refs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          type: string
        git_tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          type: string
        git_url:
          example: git:github.com/octocat/Hello-World.git
          type: string
        has_advanced_security:
          example: true
          type: boolean
        has_downloads:
          example: true
          type: boolean
        has_issues:
          example: true
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          example: true
          type: boolean
        has_wiki:
          example: true
          type: boolean
        homepage:
          example: https://github.com
          format: uri
          nullable: true
          type: string
        hooks_url:
          example: http://api.github.com/repos/octocat/Hello-World/hooks
          format: uri
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World
          format: uri
          type: string
        id:
          example: 1296269
          type: integer
        is_template:
          example: true
          type: boolean
        issue_comment_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          type: string
        issue_events_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          type: string
        issues_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
          type: string
        keys_url:
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          type: string
        labels_url:
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          example: http://api.github.com/repos/octocat/Hello-World/languages
          format: uri
          type: string
        license:
          allOf:
            - $ref: "#/components/schemas/license-simple"
          nullable: true
        master_branch:
          type: string
        merges_url:
          example: http://api.github.com/repos/octocat/Hello-World/merges
          format: uri
          type: string
        milestones_url:
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
          type: string
        mirror_url:
          example: git:git.example.com/octocat/Hello-World
          format: uri
          nullable: true
          type: string
        name:
          example: Hello-World
          type: string
        network_count:
          example: 0
          type: integer
        node_id:
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          type: string
        notifications_url:
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          type: string
        open_issues:
          type: integer
        open_issues_count:
          example: 0
          type: integer
        organization:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        owner:
          $ref: "#/components/schemas/simple-user"
        parent:
          $ref: "#/components/schemas/repository"
        permissions:
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          required:
            - admin
            - pull
            - push
          type: object
        private:
          type: boolean
        pulls_url:
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
          type: string
        pushed_at:
          example: 2011-01-26T19:06:43Z
          format: date-time
          type: string
        releases_url:
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          type: string
        size:
          example: 108
          type: integer
        source:
          $ref: "#/components/schemas/repository"
        ssh_url:
          example: git@github.com:octocat/Hello-World.git
          type: string
        stargazers_count:
          example: 80
          type: integer
        stargazers_url:
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
          format: uri
          type: string
        statuses_url:
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          type: string
        subscribers_count:
          example: 42
          type: integer
        subscribers_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
          format: uri
          type: string
        subscription_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscription
          format: uri
          type: string
        svn_url:
          example: https://svn.github.com/octocat/Hello-World
          format: uri
          type: string
        tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/tags
          format: uri
          type: string
        teams_url:
          example: http://api.github.com/repos/octocat/Hello-World/teams
          format: uri
          type: string
        template_repository:
          allOf:
            - $ref: "#/components/schemas/repository"
          nullable: true
          type: object
        topics:
          example:
            - octocat
            - atom
            - electron
            - API
          items:
            type: string
          type: array
        trees_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          type: string
        updated_at:
          example: 2011-01-26T19:14:43Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World
          format: uri
          type: string
        visibility:
          description: "The repository visibility: public, private, or internal."
          example: public
          type: string
        watchers:
          type: integer
        watchers_count:
          example: 80
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
        - network_count
        - subscribers_count
      title: Full Repository
      type: object
    gist-comment:
      description: A comment made to a gist.
      properties:
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          description: The comment text.
          example: Body of the attachment
          maxLength: 65535
          type: string
        created_at:
          example: 2011-04-18T23:23:56Z
          format: date-time
          type: string
        id:
          example: 1
          type: integer
        node_id:
          example: MDExOkdpc3RDb21tZW50MQ==
          type: string
        updated_at:
          example: 2011-04-18T23:23:56Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - url
        - id
        - node_id
        - user
        - body
        - author_association
        - created_at
        - updated_at
      title: Gist Comment
      type: object
    gist-commit:
      description: Gist Commit
      properties:
        change_status:
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
          type: object
        committed_at:
          example: 2010-04-14T02:15:15Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        version:
          example: 57a7f021a713b1c5a6a199b54cc514735d2d462f
          type: string
      required:
        - url
        - user
        - version
        - committed_at
        - change_status
      title: Gist Commit
      type: object
    gist-simple:
      description: Gist Simple
      properties:
        comments:
          type: integer
        comments_url:
          type: string
        commits_url:
          type: string
        created_at:
          type: string
        description:
          nullable: true
          type: string
        files:
          additionalProperties:
            nullable: true
            properties:
              content:
                type: string
              filename:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
              truncated:
                type: boolean
              type:
                type: string
            type: object
          type: object
        fork_of:
          description: Gist
          nullable: true
          properties:
            comments:
              type: integer
            comments_url:
              format: uri
              type: string
            commits_url:
              format: uri
              type: string
            created_at:
              format: date-time
              type: string
            description:
              nullable: true
              type: string
            files:
              additionalProperties:
                properties:
                  filename:
                    type: string
                  language:
                    type: string
                  raw_url:
                    type: string
                  size:
                    type: integer
                  type:
                    type: string
                type: object
              type: object
            forks:
              items: {}
              type: array
            forks_url:
              format: uri
              type: string
            git_pull_url:
              format: uri
              type: string
            git_push_url:
              format: uri
              type: string
            history:
              items: {}
              type: array
            html_url:
              format: uri
              type: string
            id:
              type: string
            node_id:
              type: string
            owner:
              allOf:
                - $ref: "#/components/schemas/simple-user"
              nullable: true
            public:
              type: boolean
            truncated:
              type: boolean
            updated_at:
              format: date-time
              type: string
            url:
              format: uri
              type: string
            user:
              allOf:
                - $ref: "#/components/schemas/simple-user"
              nullable: true
          required:
            - id
            - node_id
            - url
            - forks_url
            - commits_url
            - git_pull_url
            - git_push_url
            - html_url
            - comments_url
            - public
            - description
            - comments
            - user
            - files
            - created_at
            - updated_at
          title: Gist
          type: object
        forks:
          deprecated: true
          items:
            type: object
          nullable: true
          type: array
        forks_url:
          type: string
        git_pull_url:
          type: string
        git_push_url:
          type: string
        history:
          deprecated: true
          items:
            type: object
          nullable: true
          type: array
        html_url:
          type: string
        id:
          type: string
        node_id:
          type: string
        owner:
          $ref: "#/components/schemas/simple-user"
        public:
          type: boolean
        truncated:
          type: boolean
        updated_at:
          type: string
        url:
          type: string
        user:
          nullable: true
          type: string
      title: Gist Simple
      type: object
    git-commit:
      description: Low-level Git commit operations within a repository
      properties:
        author:
          description: Identifying information for the git-user
          properties:
            date:
              description: Timestamp of the commit
              example: 2014-08-09T08:02:04+12:00
              format: date-time
              type: string
            email:
              description: Git email address of the user
              example: monalisa.octocat@example.com
              type: string
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
            - email
            - name
            - date
          type: object
        committer:
          description: Identifying information for the git-user
          properties:
            date:
              description: Timestamp of the commit
              example: 2014-08-09T08:02:04+12:00
              format: date-time
              type: string
            email:
              description: Git email address of the user
              example: monalisa.octocat@example.com
              type: string
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
            - email
            - name
            - date
          type: object
        html_url:
          format: uri
          type: string
        message:
          description: Message describing the purpose of the commit
          example: "Fix #42"
          type: string
        node_id:
          type: string
        parents:
          items:
            properties:
              html_url:
                format: uri
                type: string
              sha:
                description: SHA for the commit
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                format: uri
                type: string
            required:
              - sha
              - url
              - html_url
            type: object
          type: array
        sha:
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
          type: string
        tree:
          properties:
            sha:
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
            url:
              format: uri
              type: string
          required:
            - sha
            - url
          type: object
        url:
          format: uri
          type: string
        verification:
          properties:
            payload:
              nullable: true
              type: string
            reason:
              type: string
            signature:
              nullable: true
              type: string
            verified:
              type: boolean
          required:
            - verified
            - reason
            - signature
            - payload
          type: object
      required:
        - sha
        - node_id
        - url
        - html_url
        - author
        - committer
        - tree
        - message
        - parents
        - verification
      title: Git Commit
      type: object
    git-ref:
      description: Git references within a repository
      properties:
        node_id:
          type: string
        object:
          properties:
            sha:
              description: SHA for the reference
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              maxLength: 40
              minLength: 40
              type: string
            type:
              type: string
            url:
              format: uri
              type: string
          required:
            - type
            - sha
            - url
          type: object
        ref:
          type: string
        url:
          format: uri
          type: string
      required:
        - ref
        - node_id
        - url
        - object
      title: Git Reference
      type: object
    git-tag:
      description: Metadata for a Git tag
      properties:
        message:
          description: Message describing the purpose of the tag
          example: Initial public release
          type: string
        node_id:
          example: MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
          type: string
        object:
          properties:
            sha:
              type: string
            type:
              type: string
            url:
              format: uri
              type: string
          required:
            - sha
            - type
            - url
          type: object
        sha:
          example: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
          type: string
        tag:
          description: Name of the tag
          example: v0.0.1
          type: string
        tagger:
          properties:
            date:
              type: string
            email:
              type: string
            name:
              type: string
          required:
            - date
            - email
            - name
          type: object
        url:
          description: URL for the tag
          example: https://api.github.com/repositories/42/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
          format: uri
          type: string
        verification:
          $ref: "#/components/schemas/verification"
      required:
        - sha
        - url
        - node_id
        - tagger
        - object
        - tag
        - message
      title: Git Tag
      type: object
    git-tree:
      description: The hierarchy between files in a Git repository.
      properties:
        sha:
          type: string
        tree:
          description: Objects specifying a tree structure
          example:
            - mode: "100644"
              path: file.rb
              properties:
                mode:
                  type: string
                path:
                  type: string
                sha:
                  type: string
                size:
                  type: integer
                type:
                  type: string
                url:
                  type: string
              required:
                - path
                - mode
                - type
                - sha
                - url
                - size
              sha: 44b4fc6d56897b048c772eb4087f854f46256132
              size: 30
              type: blob
              url: https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
          items:
            properties:
              mode:
                example: "040000"
                type: string
              path:
                example: test/file.rb
                type: string
              sha:
                example: 23f6827669e43831def8a7ad935069c8bd418261
                type: string
              size:
                example: 12
                type: integer
              type:
                example: tree
                type: string
              url:
                example: https://api.github.com/repos/owner-482f3203ecf01f67e9deb18e/BBB_Private_Repo/git/blobs/23f6827669e43831def8a7ad935069c8bd418261
                type: string
            type: object
          type: array
        truncated:
          type: boolean
        url:
          format: uri
          type: string
      required:
        - sha
        - url
        - tree
        - truncated
      title: Git Tree
      type: object
    git-user:
      description: Metaproperties for Git author/committer information.
      properties:
        date:
          example: '"2007-10-29T02:42:39.000-07:00"'
          type: string
        email:
          example: '"chris@ozmm.org"'
          type: string
        name:
          example: '"Chris Wanstrath"'
          type: string
      title: Git User
      type: object
    gitignore-template:
      description: Gitignore Template
      properties:
        name:
          example: C
          type: string
        source:
          example: |
            # Object files
            *.o

            # Libraries
            *.lib
            *.a

            # Shared objects (inc. Windows DLLs)
            *.dll
            *.so
            *.so.*
            *.dylib

            # Executables
            *.exe
            *.out
            *.app
          type: string
      required:
        - name
        - source
      title: Gitignore Template
      type: object
    global-hook:
      properties:
        active:
          type: boolean
        config:
          properties:
            content_type:
              type: string
            insecure_ssl:
              type: string
            secret:
              type: string
            url:
              type: string
          type: object
        created_at:
          type: string
        events:
          items:
            type: string
          type: array
        id:
          type: integer
        name:
          type: string
        ping_url:
          type: string
        type:
          type: string
        updated_at:
          type: string
        url:
          type: string
      type: object
    global-hook-2:
      properties:
        active:
          type: boolean
        config:
          properties:
            content_type:
              type: string
            insecure_ssl:
              type: string
            url:
              type: string
          type: object
        created_at:
          type: string
        events:
          items:
            type: string
          type: array
        id:
          type: integer
        name:
          type: string
        ping_url:
          type: string
        type:
          type: string
        updated_at:
          type: string
        url:
          type: string
      type: object
    gpg-key:
      description: A unique encryption key
      properties:
        can_certify:
          example: true
          type: boolean
        can_encrypt_comms:
          type: boolean
        can_encrypt_storage:
          type: boolean
        can_sign:
          example: true
          type: boolean
        created_at:
          example: 2016-03-24T11:31:04-06:00
          format: date-time
          type: string
        emails:
          example:
            - email: mastahyeti@users.noreply.github.com
              verified: true
          items:
            properties:
              email:
                type: string
              verified:
                type: boolean
            type: object
          type: array
        expires_at:
          format: date-time
          nullable: true
          type: string
        id:
          example: 3
          type: integer
        key_id:
          example: 3262EFF25BA0D270
          type: string
        primary_key_id:
          nullable: true
          type: integer
        public_key:
          example: xsBNBFayYZ...
          type: string
        raw_key:
          nullable: true
          type: string
        subkeys:
          example:
            - can_certify: false
              can_encrypt_comms: true
              can_encrypt_storage: true
              can_sign: false
              created_at: 2016-03-24T11:31:04-06:00
              emails: []
              expires_at: null
              id: 4
              key_id: 4A595D4C72EE49C7
              primary_key_id: 3
              public_key: zsBNBFayYZ...
              subkeys: []
          items:
            properties:
              can_certify:
                type: boolean
              can_encrypt_comms:
                type: boolean
              can_encrypt_storage:
                type: boolean
              can_sign:
                type: boolean
              created_at:
                type: string
              emails:
                items: {}
                type: array
              expires_at:
                nullable: true
                type: string
              id:
                type: integer
              key_id:
                type: string
              primary_key_id:
                type: integer
              public_key:
                type: string
              raw_key:
                nullable: true
                type: string
              subkeys:
                items: {}
                type: array
            type: object
          type: array
      required:
        - id
        - primary_key_id
        - key_id
        - raw_key
        - public_key
        - created_at
        - expires_at
        - can_sign
        - can_encrypt_comms
        - can_encrypt_storage
        - can_certify
        - emails
        - subkeys
      title: GPG Key
      type: object
    hook:
      description: Webhooks for repositories.
      properties:
        active:
          description: Determines whether the hook is actually triggered on pushes.
          example: true
          type: boolean
        config:
          properties:
            content_type:
              $ref: "#/components/schemas/webhook-config-content-type"
            digest:
              example: '"sha256"'
              type: string
            email:
              example: '"foo@bar.com"'
              type: string
            insecure_ssl:
              $ref: "#/components/schemas/webhook-config-insecure-ssl"
            password:
              example: '"foo"'
              type: string
            room:
              example: '"roomer"'
              type: string
            secret:
              $ref: "#/components/schemas/webhook-config-secret"
            subdomain:
              example: '"foo"'
              type: string
            token:
              example: '"abc"'
              type: string
            url:
              $ref: "#/components/schemas/webhook-config-url"
          type: object
        created_at:
          example: 2011-09-06T17:26:27Z
          format: date-time
          type: string
        events:
          description: "Determines what events the hook is triggered for. Default:
            ['push']."
          example:
            - push
            - pull_request
          items:
            type: string
          type: array
        id:
          description: Unique identifier of the webhook.
          example: 42
          type: integer
        last_response:
          $ref: "#/components/schemas/hook-response"
        name:
          description: The name of a valid service, use 'web' for a webhook.
          example: web
          type: string
        ping_url:
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/pings
          format: uri
          type: string
        test_url:
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/test
          format: uri
          type: string
        type:
          type: string
        updated_at:
          example: 2011-09-06T20:39:23Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1
          format: uri
          type: string
      required:
        - id
        - url
        - type
        - name
        - active
        - events
        - config
        - ping_url
        - created_at
        - updated_at
        - last_response
        - test_url
      title: Webhook
      type: object
    hook-response:
      properties:
        code:
          nullable: true
          type: integer
        message:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
      required:
        - code
        - status
        - message
      title: Hook Response
      type: object
    hovercard:
      description: Hovercard
      properties:
        contexts:
          items:
            properties:
              message:
                type: string
              octicon:
                type: string
            required:
              - message
              - octicon
            type: object
          type: array
      required:
        - contexts
      title: Hovercard
      type: object
    installation-ghes-2:
      description: Installation
      properties:
        access_tokens_url:
          example: https://api.github.com/installations/1/access_tokens
          format: uri
          type: string
        account:
          anyOf:
            - $ref: "#/components/schemas/simple-user"
            - $ref: "#/components/schemas/enterprise"
          nullable: true
        app_id:
          example: 1
          type: integer
        app_slug:
          example: github-actions
          type: string
        contact_email:
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        events:
          items:
            type: string
          type: array
        html_url:
          example: https://github.com/organizations/github/settings/installations/1
          format: uri
          type: string
        id:
          description: The ID of the installation.
          example: 1
          type: integer
        permissions:
          example:
            deployments: write
            issues: read
          properties:
            checks:
              type: string
            contents:
              type: string
            deployments:
              type: string
            issues:
              example: '"read"'
              type: string
            metadata:
              type: string
            organization_administration:
              example: '"read"'
              type: string
            pull_requests:
              type: string
            statuses:
              type: string
          type: object
        repositories_url:
          example: https://api.github.com/installation/repositories
          format: uri
          type: string
        repository_selection:
          description: Describe whether all repositories have been selected or there's a
            selection involved
          enum:
            - all
            - selected
          type: string
        single_file_name:
          example: config.yaml
          nullable: true
          type: string
        suspended_at:
          format: date-time
          nullable: true
          type: string
        suspended_by:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        target_id:
          description: The ID of the user or organization this token is being scoped to.
          type: integer
        target_type:
          example: Organization
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - id
        - app_id
        - app_slug
        - target_id
        - target_type
        - single_file_name
        - repository_selection
        - access_tokens_url
        - html_url
        - repositories_url
        - events
        - account
        - permissions
        - created_at
        - updated_at
      title: Installation
      type: object
    installation-token:
      description: Authentication token for a GitHub App installed on a user or org.
      properties:
        expires_at:
          type: string
        has_multiple_single_files:
          example: true
          type: boolean
        permissions:
          properties:
            contents:
              type: string
            issues:
              type: string
            metadata:
              example: read
              type: string
            single_file:
              example: read
              type: string
          type: object
        repositories:
          items:
            $ref: "#/components/schemas/repository"
          type: array
        repository_selection:
          enum:
            - all
            - selected
          type: string
        single_file:
          example: README.md
          type: string
        single_file_paths:
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
          items:
            type: string
          type: array
        token:
          type: string
      required:
        - token
        - expires_at
      title: Installation Token
      type: object
    integration:
      additionalProperties: true
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to
        specific repositories. They come with granular permissions and built-in
        webhooks. GitHub apps are first class actors within GitHub.
      properties:
        client_id:
          example: '"Iv1.25b5d1e65ffc4022"'
          type: string
        client_secret:
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
          type: string
        created_at:
          example: 2017-07-08T16:18:44-04:00
          format: date-time
          type: string
        description:
          example: The description of the app.
          nullable: true
          type: string
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          items:
            type: string
          type: array
        external_url:
          example: https://example.com
          format: uri
          type: string
        html_url:
          example: https://github.com/apps/super-ci
          format: uri
          type: string
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        node_id:
          example: MDExOkludGVncmF0aW9uMQ==
          type: string
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        pem:
          example: '"-----BEGIN RSA PRIVATE
            KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
            RSA PRIVATE KEY-----\n"'
          type: string
        permissions:
          additionalProperties:
            type: string
          description: The set of permissions for the GitHub app
          example:
            deployments: write
            issues: read
          properties:
            checks:
              type: string
            contents:
              type: string
            deployments:
              type: string
            issues:
              type: string
            metadata:
              type: string
          type: object
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        updated_at:
          example: 2017-07-08T16:18:44-04:00
          format: date-time
          type: string
        webhook_secret:
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
          type: string
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
      title: GitHub app
      type: object
    issue:
      description: Issues are a great way to keep track of tasks, enhancements, and
        bugs for your projects.
      properties:
        active_lock_reason:
          nullable: true
          type: string
        assignee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assignees:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try and
            create the widget, Safari crashes. This is reproducible on 10.8, but
            not 10.9. Maybe a browser bug?
          nullable: true
          type: string
        body_html:
          type: string
        body_text:
          type: string
        closed_at:
          format: date-time
          nullable: true
          type: string
        closed_by:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        comments:
          type: integer
        comments_url:
          format: uri
          type: string
        created_at:
          format: date-time
          type: string
        events_url:
          format: uri
          type: string
        html_url:
          format: uri
          type: string
        id:
          type: integer
        labels:
          description: Labels to associate with this issue; pass one or more label names
            to replace the set of labels on this issue; send an empty array to
            clear all labels from the issue; note that the labels are silently
            dropped for users without push access to the repository
          example:
            - bug
            - registration
          items:
            oneOf:
              - type: string
              - properties:
                  color:
                    nullable: true
                    type: string
                  default:
                    type: boolean
                  description:
                    nullable: true
                    type: string
                  id:
                    format: int64
                    type: integer
                  name:
                    type: string
                  node_id:
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
          type: array
        labels_url:
          type: string
        locked:
          type: boolean
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
          nullable: true
        node_id:
          type: string
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        pull_request:
          properties:
            diff_url:
              format: uri
              nullable: true
              type: string
            html_url:
              format: uri
              nullable: true
              type: string
            merged_at:
              format: date-time
              nullable: true
              type: string
            patch_url:
              format: uri
              nullable: true
              type: string
            url:
              format: uri
              nullable: true
              type: string
          required:
            - diff_url
            - html_url
            - patch_url
            - url
          type: object
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        repository:
          $ref: "#/components/schemas/repository"
        repository_url:
          format: uri
          type: string
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        timeline_url:
          format: uri
          type: string
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - assignee
        - closed_at
        - comments
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - labels
        - labels_url
        - milestone
        - number
        - repository_url
        - state
        - locked
        - title
        - url
        - user
        - author_association
        - created_at
        - updated_at
      title: Issue
      type: object
    issue-comment:
      description: Comments provide a way for people to collaborate on an issue.
      properties:
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_html:
          type: string
        body_text:
          type: string
        created_at:
          example: 2011-04-14T16:00:49Z
          format: date-time
          type: string
        html_url:
          format: uri
          type: string
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
        issue_url:
          format: uri
          type: string
        node_id:
          type: string
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        updated_at:
          example: 2011-04-14T16:00:49Z
          format: date-time
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - id
        - node_id
        - html_url
        - issue_url
        - author_association
        - user
        - url
        - created_at
        - updated_at
      title: Issue Comment
      type: object
    issue-event:
      description: Issue Event
      properties:
        actor:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assignee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assigner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        author_association:
          $ref: "#/components/schemas/author_association"
        commit_id:
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
          type: string
        commit_url:
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
          type: string
        created_at:
          example: 2011-04-14T16:00:49Z
          format: date-time
          type: string
        dismissed_review:
          $ref: "#/components/schemas/issue-event-dismissed-review"
        event:
          example: closed
          type: string
        id:
          example: 1
          type: integer
        issue:
          $ref: "#/components/schemas/issue-simple"
        label:
          $ref: "#/components/schemas/issue-event-label"
        lock_reason:
          nullable: true
          type: string
        milestone:
          $ref: "#/components/schemas/issue-event-milestone"
        node_id:
          example: MDEwOklzc3VlRXZlbnQx
          type: string
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        project_card:
          $ref: "#/components/schemas/issue-event-project-card"
        rename:
          $ref: "#/components/schemas/issue-event-rename"
        requested_reviewer:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        requested_team:
          $ref: "#/components/schemas/team"
        review_requester:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/events/1
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
      title: Issue Event
      type: object
    issue-event-dismissed-review:
      properties:
        dismissal_commit_id:
          nullable: true
          type: string
        dismissal_message:
          nullable: true
          type: string
        review_id:
          type: integer
        state:
          type: string
      required:
        - state
        - review_id
        - dismissal_message
      title: Issue Event Dismissed Review
      type: object
    issue-event-for-issue:
      description: Issue Event for Issue
      properties:
        actor:
          $ref: "#/components/schemas/simple-user"
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          example: '":+1:"'
          nullable: true
          type: string
        body_html:
          example: '"<p>Accusantium fugiat cumque. Autem qui nostrum. Atque quae
            ullam.</p>"'
          type: string
        body_text:
          example: '"Accusantium fugiat cumque. Autem qui nostrum. Atque quae ullam."'
          type: string
        commit_id:
          nullable: true
          type: string
        commit_url:
          nullable: true
          type: string
        created_at:
          type: string
        event:
          type: string
        html_url:
          example: '"https://github.com/owner-3906e11a33a3d55ba449d63f/BBB_Private_Repo/commit/480d4f47447129f015cb327536c522ca683939a1"'
          type: string
        id:
          type: integer
        issue_url:
          example: '"https://api.github.com/repos/owner-3906e11a33a3d55ba449d63f/AAA_Public_Repo/issues/1"'
          type: string
        lock_reason:
          example: '"off-topic"'
          nullable: true
          type: string
        message:
          example: '"add a bunch of files"'
          type: string
        node_id:
          type: string
        pull_request_url:
          example: '"https://api.github.com/repos/owner-3906e11a33a3d55ba449d63f/AAA_Public_Repo/pulls/2"'
          type: string
        sha:
          example: '"480d4f47447129f015cb327536c522ca683939a1"'
          type: string
        state:
          example: '"commented"'
          type: string
        submitted_at:
          example: '"2020-07-09T00:17:51Z"'
          type: string
        updated_at:
          example: '"2020-07-09T00:17:36Z"'
          type: string
        url:
          type: string
      title: Issue Event for Issue
      type: object
    issue-event-label:
      description: Issue Event Label
      properties:
        color:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      required:
        - name
        - color
      title: Issue Event Label
      type: object
    issue-event-milestone:
      description: Issue Event Milestone
      properties:
        title:
          type: string
      required:
        - title
      title: Issue Event Milestone
      type: object
    issue-event-project-card:
      description: Issue Event Project Card
      properties:
        column_name:
          type: string
        id:
          type: integer
        previous_column_name:
          type: string
        project_id:
          type: integer
        project_url:
          format: uri
          type: string
        url:
          format: uri
          type: string
      required:
        - url
        - id
        - project_url
        - project_id
        - column_name
      title: Issue Event Project Card
      type: object
    issue-event-rename:
      description: Issue Event Rename
      properties:
        from:
          type: string
        to:
          type: string
      required:
        - from
        - to
      title: Issue Event Rename
      type: object
    issue-search-result-item:
      description: Issue Search Result Item
      properties:
        active_lock_reason:
          nullable: true
          type: string
        assignee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assignees:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          type: string
        body_html:
          type: string
        body_text:
          type: string
        closed_at:
          format: date-time
          nullable: true
          type: string
        comments:
          type: integer
        comments_url:
          format: uri
          type: string
        created_at:
          format: date-time
          type: string
        draft:
          type: boolean
        events_url:
          format: uri
          type: string
        html_url:
          format: uri
          type: string
        id:
          type: integer
        labels:
          items:
            properties:
              color:
                type: string
              default:
                type: boolean
              description:
                nullable: true
                type: string
              id:
                format: int64
                type: integer
              name:
                type: string
              node_id:
                type: string
              url:
                type: string
            type: object
          type: array
        labels_url:
          type: string
        locked:
          type: boolean
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
          nullable: true
        node_id:
          type: string
        number:
          type: integer
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        pull_request:
          properties:
            diff_url:
              format: uri
              nullable: true
              type: string
            html_url:
              format: uri
              nullable: true
              type: string
            merged_at:
              format: date-time
              nullable: true
              type: string
            patch_url:
              format: uri
              nullable: true
              type: string
            url:
              format: uri
              nullable: true
              type: string
          required:
            - diff_url
            - html_url
            - patch_url
            - url
          type: object
        repository:
          $ref: "#/components/schemas/repository"
        repository_url:
          format: uri
          type: string
        score:
          type: number
        state:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        timeline_url:
          format: uri
          type: string
        title:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - assignee
        - closed_at
        - comments
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - labels
        - labels_url
        - milestone
        - number
        - repository_url
        - state
        - locked
        - title
        - url
        - user
        - author_association
        - created_at
        - updated_at
        - score
      title: Issue Search Result Item
      type: object
    issue-simple:
      description: Issue Simple
      properties:
        active_lock_reason:
          example: too heated
          nullable: true
          type: string
        assignee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assignees:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          example: I'm having a problem with this.
          type: string
        body_html:
          type: string
        body_text:
          type: string
        closed_at:
          format: date-time
          nullable: true
          type: string
        comments:
          example: 0
          type: integer
        comments_url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          format: uri
          type: string
        created_at:
          example: 2011-04-22T13:33:48Z
          format: date-time
          type: string
        events_url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          format: uri
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World/issues/1347
          format: uri
          type: string
        id:
          example: 1
          type: integer
        labels:
          items:
            $ref: "#/components/schemas/label"
          type: array
        labels_url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          type: string
        locked:
          example: true
          type: boolean
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
          nullable: true
        node_id:
          example: MDU6SXNzdWUx
          type: string
        number:
          example: 1347
          type: integer
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        pull_request:
          properties:
            diff_url:
              format: uri
              nullable: true
              type: string
            html_url:
              format: uri
              nullable: true
              type: string
            merged_at:
              format: date-time
              nullable: true
              type: string
            patch_url:
              format: uri
              nullable: true
              type: string
            url:
              format: uri
              nullable: true
              type: string
          required:
            - diff_url
            - html_url
            - patch_url
            - url
          type: object
        repository:
          $ref: "#/components/schemas/repository"
        repository_url:
          example: https://api.github.com/repos/octocat/Hello-World
          format: uri
          type: string
        state:
          example: open
          type: string
        timeline_url:
          format: uri
          type: string
        title:
          example: Found a bug
          type: string
        updated_at:
          example: 2011-04-22T13:33:48Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - assignee
        - closed_at
        - comments
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - labels
        - labels_url
        - milestone
        - number
        - repository_url
        - state
        - locked
        - title
        - url
        - user
        - author_association
        - created_at
        - updated_at
      title: Issue Simple
      type: object
    key:
      description: Key
      properties:
        created_at:
          format: date-time
          type: string
        id:
          type: integer
        key:
          type: string
        read_only:
          type: boolean
        title:
          type: string
        url:
          type: string
        verified:
          type: boolean
      required:
        - key
        - id
        - url
        - title
        - created_at
        - verified
        - read_only
      title: Key
      type: object
    key-simple:
      description: Key Simple
      properties:
        id:
          type: integer
        key:
          type: string
      required:
        - key
        - id
      title: Key Simple
      type: object
    label:
      description: Color-coded labels help you categorize and filter your issues (just
        like labels in Gmail).
      properties:
        color:
          description: "6-character hex code, without the leading #, identifying the color"
          example: FFFFFF
          type: string
        default:
          example: true
          type: boolean
        description:
          example: Something isn't working
          nullable: true
          type: string
        id:
          example: 208045946
          format: int64
          type: integer
        name:
          description: The name of the label.
          example: bug
          type: string
        node_id:
          example: MDU6TGFiZWwyMDgwNDU5NDY=
          type: string
        url:
          description: URL for the label
          example: https://api.github.com/repositories/42/labels/bug
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - name
        - description
        - color
        - default
      title: Label
      type: object
    label-search-result-item:
      description: Label Search Result Item
      properties:
        color:
          type: string
        default:
          type: boolean
        description:
          nullable: true
          type: string
        id:
          type: integer
        name:
          type: string
        node_id:
          type: string
        score:
          type: number
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        url:
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - name
        - color
        - default
        - description
        - score
      title: Label Search Result Item
      type: object
    language:
      additionalProperties:
        type: integer
      description: Language
      title: Language
      type: object
    ldap-mapping-team:
      properties:
        description:
          nullable: true
          type: string
        html_url:
          type: string
        id:
          type: integer
        ldap_dn:
          type: string
        members_url:
          type: string
        name:
          type: string
        node_id:
          type: string
        parent:
          nullable: true
        permission:
          type: string
        privacy:
          type: string
        repositories_url:
          type: string
        slug:
          type: string
        url:
          type: string
      type: object
    ldap-mapping-user:
      description: Ldap Private User
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          format: uri
          type: string
        bio:
          example: There once was...
          nullable: true
          type: string
        blog:
          example: https://github.com/blog
          nullable: true
          type: string
        business_plus:
          type: boolean
        collaborators:
          example: 8
          type: integer
        company:
          example: GitHub
          nullable: true
          type: string
        created_at:
          example: 2008-01-14T04:33:35Z
          format: date-time
          type: string
        disk_usage:
          example: 10000
          type: integer
        email:
          example: octocat@github.com
          format: email
          nullable: true
          type: string
        events_url:
          example: https://api.github.com/users/octocat/events{/privacy}
          type: string
        followers:
          example: 20
          type: integer
        followers_url:
          example: https://api.github.com/users/octocat/followers
          format: uri
          type: string
        following:
          example: 0
          type: integer
        following_url:
          example: https://api.github.com/users/octocat/following{/other_user}
          type: string
        gists_url:
          example: https://api.github.com/users/octocat/gists{/gist_id}
          type: string
        gravatar_id:
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
          type: string
        hireable:
          nullable: true
          type: boolean
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          type: integer
        ldap_dn:
          type: string
        location:
          example: San Francisco
          nullable: true
          type: string
        login:
          example: octocat
          type: string
        name:
          example: monalisa octocat
          nullable: true
          type: string
        node_id:
          example: MDQ6VXNlcjE=
          type: string
        organizations_url:
          example: https://api.github.com/users/octocat/orgs
          format: uri
          type: string
        owned_private_repos:
          example: 100
          type: integer
        plan:
          properties:
            collaborators:
              type: integer
            name:
              type: string
            private_repos:
              type: integer
            space:
              type: integer
          required:
            - collaborators
            - name
            - space
            - private_repos
          type: object
        private_gists:
          example: 81
          type: integer
        public_gists:
          example: 1
          type: integer
        public_repos:
          example: 2
          type: integer
        received_events_url:
          example: https://api.github.com/users/octocat/received_events
          format: uri
          type: string
        repos_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_url:
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
          type: string
        subscriptions_url:
          example: https://api.github.com/users/octocat/subscriptions
          format: uri
          type: string
        suspended_at:
          format: date-time
          nullable: true
          type: string
        total_private_repos:
          example: 100
          type: integer
        twitter_username:
          example: monalisa
          nullable: true
          type: string
        two_factor_authentication:
          example: true
          type: boolean
        type:
          example: User
          type: string
        updated_at:
          example: 2008-01-14T04:33:35Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/users/octocat
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - bio
        - blog
        - company
        - email
        - followers
        - following
        - hireable
        - location
        - name
        - public_gists
        - public_repos
        - created_at
        - updated_at
        - collaborators
        - disk_usage
        - owned_private_repos
        - private_gists
        - total_private_repos
        - two_factor_authentication
      title: Ldap Private User
      type: object
    license:
      description: License
      properties:
        body:
          example: >
            

            The MIT License (MIT)


            Copyright (c) [year] [fullname]


            Permission is hereby granted, free of charge, to any person obtaining a copy

            of this software and associated documentation files (the "Software"), to deal

            in the Software without restriction, including without limitation the rights

            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell

            copies of the Software, and to permit persons to whom the Software is

            furnished to do so, subject to the following conditions:


            The above copyright notice and this permission notice shall be included in all

            copies or substantial portions of the Software.


            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

            IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

            FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE

            AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER

            LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

            OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE

            SOFTWARE.
          type: string
        conditions:
          example:
            - include-copyright
          items:
            type: string
          type: array
        description:
          example: A permissive license that is short and to the point. It lets people do
            anything with your code with proper attribution and without
            warranty.
          type: string
        featured:
          example: true
          type: boolean
        html_url:
          example: http://choosealicense.com/licenses/mit/
          format: uri
          type: string
        implementation:
          example: Create a text file (typically named LICENSE or LICENSE.txt) in the root
            of your source code and copy the text of the license into the file.
            Replace [year] with the current year and [fullname] with the name
            (or names) of the copyright holders.
          type: string
        key:
          example: mit
          type: string
        limitations:
          example:
            - no-liability
          items:
            type: string
          type: array
        name:
          example: MIT License
          type: string
        node_id:
          example: MDc6TGljZW5zZW1pdA==
          type: string
        permissions:
          example:
            - commercial-use
            - modifications
            - distribution
            - sublicense
            - private-use
          items:
            type: string
          type: array
        spdx_id:
          example: MIT
          nullable: true
          type: string
        url:
          example: https://api.github.com/licenses/mit
          format: uri
          nullable: true
          type: string
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
        - html_url
        - description
        - implementation
        - permissions
        - conditions
        - limitations
        - body
        - featured
      title: License
      type: object
    license-content:
      description: License Content
      properties:
        _links:
          properties:
            git:
              format: uri
              nullable: true
              type: string
            html:
              format: uri
              nullable: true
              type: string
            self:
              format: uri
              type: string
          required:
            - git
            - html
            - self
          type: object
        content:
          type: string
        download_url:
          format: uri
          nullable: true
          type: string
        encoding:
          type: string
        git_url:
          format: uri
          nullable: true
          type: string
        html_url:
          format: uri
          nullable: true
          type: string
        license:
          allOf:
            - $ref: "#/components/schemas/license-simple"
          nullable: true
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        type:
          type: string
        url:
          format: uri
          type: string
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - content
        - encoding
        - license
      title: License Content
      type: object
    license-info:
      properties:
        days_until_expiration:
          type: integer
        expire_at:
          type: string
        kind:
          type: string
        seats:
          oneOf:
            - type: string
            - type: integer
        seats_available:
          oneOf:
            - type: string
            - type: integer
        seats_used:
          type: integer
      type: object
    license-simple:
      description: License Simple
      properties:
        html_url:
          format: uri
          type: string
        key:
          example: mit
          type: string
        name:
          example: MIT License
          type: string
        node_id:
          example: MDc6TGljZW5zZW1pdA==
          type: string
        spdx_id:
          example: MIT
          nullable: true
          type: string
        url:
          example: https://api.github.com/licenses/mit
          format: uri
          nullable: true
          type: string
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      title: License Simple
      type: object
    link:
      description: Hypermedia Link
      properties:
        href:
          type: string
      required:
        - href
      title: Link
      type: object
    link-with-type:
      description: Hypermedia Link with Type
      properties:
        href:
          type: string
        type:
          type: string
      required:
        - href
        - type
      title: Link With Type
      type: object
    maintenance-status:
      properties:
        connection_services:
          items:
            properties:
              name:
                type: string
              number:
                type: integer
            required:
              - name
              - number
            type: object
          type: array
        scheduled_time:
          type: string
        status:
          type: string
      type: object
    milestone:
      description: A collection of related issues and pull requests.
      properties:
        closed_at:
          example: 2013-02-12T13:22:01Z
          format: date-time
          nullable: true
          type: string
        closed_issues:
          example: 8
          type: integer
        created_at:
          example: 2011-04-10T20:09:31Z
          format: date-time
          type: string
        creator:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        description:
          example: Tracking milestone for version 1.0
          nullable: true
          type: string
        due_on:
          example: 2012-10-09T23:39:01Z
          format: date-time
          nullable: true
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World/milestones/v1.0
          format: uri
          type: string
        id:
          example: 1002604
          type: integer
        labels_url:
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          format: uri
          type: string
        node_id:
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
          type: string
        number:
          description: The number of the milestone.
          example: 42
          type: integer
        open_issues:
          example: 4
          type: integer
        state:
          default: open
          description: The state of the milestone.
          enum:
            - open
            - closed
          example: open
          type: string
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        updated_at:
          example: 2014-03-03T18:58:10Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
          format: uri
          type: string
      required:
        - closed_issues
        - creator
        - description
        - due_on
        - closed_at
        - id
        - node_id
        - labels_url
        - html_url
        - number
        - open_issues
        - state
        - title
        - url
        - created_at
        - updated_at
      title: Milestone
      type: object
    minimal-repository:
      description: Minimal Repository
      properties:
        anonymous_access_enabled:
          type: boolean
        archive_url:
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          type: string
        archived:
          type: boolean
        assignees_url:
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
          type: string
        blobs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          type: string
        branches_url:
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
          type: string
        clone_url:
          type: string
        collaborators_url:
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          type: string
        comments_url:
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
          type: string
        commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
          type: string
        compare_url:
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          type: string
        contents_url:
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
          type: string
        contributors_url:
          example: http://api.github.com/repos/octocat/Hello-World/contributors
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        default_branch:
          type: string
        delete_branch_on_merge:
          type: boolean
        deployments_url:
          example: http://api.github.com/repos/octocat/Hello-World/deployments
          format: uri
          type: string
        description:
          example: This your first repo!
          nullable: true
          type: string
        disabled:
          type: boolean
        downloads_url:
          example: http://api.github.com/repos/octocat/Hello-World/downloads
          format: uri
          type: string
        events_url:
          example: http://api.github.com/repos/octocat/Hello-World/events
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          example: 0
          type: integer
        forks_count:
          type: integer
        forks_url:
          example: http://api.github.com/repos/octocat/Hello-World/forks
          format: uri
          type: string
        full_name:
          example: octocat/Hello-World
          type: string
        git_commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          type: string
        git_refs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          type: string
        git_tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          type: string
        git_url:
          type: string
        has_downloads:
          type: boolean
        has_issues:
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        homepage:
          nullable: true
          type: string
        hooks_url:
          example: http://api.github.com/repos/octocat/Hello-World/hooks
          format: uri
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World
          format: uri
          type: string
        id:
          example: 1296269
          type: integer
        is_template:
          type: boolean
        issue_comment_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          type: string
        issue_events_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          type: string
        issues_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
          type: string
        keys_url:
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          type: string
        labels_url:
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          example: http://api.github.com/repos/octocat/Hello-World/languages
          format: uri
          type: string
        license:
          nullable: true
          properties:
            key:
              type: string
            name:
              type: string
            node_id:
              type: string
            spdx_id:
              type: string
            url:
              type: string
          type: object
        merges_url:
          example: http://api.github.com/repos/octocat/Hello-World/merges
          format: uri
          type: string
        milestones_url:
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
          type: string
        mirror_url:
          nullable: true
          type: string
        name:
          example: Hello-World
          type: string
        network_count:
          type: integer
        node_id:
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          type: string
        notifications_url:
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          type: string
        open_issues:
          example: 0
          type: integer
        open_issues_count:
          type: integer
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
          type: object
        permissions:
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          type: object
        private:
          type: boolean
        pulls_url:
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
          type: string
        pushed_at:
          example: 2011-01-26T19:06:43Z
          format: date-time
          nullable: true
          type: string
        releases_url:
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          type: string
        size:
          type: integer
        ssh_url:
          type: string
        stargazers_count:
          type: integer
        stargazers_url:
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
          format: uri
          type: string
        statuses_url:
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          type: string
        subscribers_count:
          type: integer
        subscribers_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
          format: uri
          type: string
        subscription_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscription
          format: uri
          type: string
        svn_url:
          type: string
        tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/tags
          format: uri
          type: string
        teams_url:
          example: http://api.github.com/repos/octocat/Hello-World/teams
          format: uri
          type: string
        template_repository:
          allOf:
            - $ref: "#/components/schemas/repository"
          nullable: true
          type: object
        topics:
          items:
            type: string
          type: array
        trees_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          type: string
        updated_at:
          example: 2011-01-26T19:14:43Z
          format: date-time
          nullable: true
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World
          format: uri
          type: string
        visibility:
          type: string
        watchers:
          example: 0
          type: integer
        watchers_count:
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
      title: Minimal Repository
      type: object
    org-hook:
      description: Org Hook
      properties:
        active:
          example: true
          type: boolean
        config:
          properties:
            content_type:
              example: '"form"'
              type: string
            insecure_ssl:
              example: '"0"'
              type: string
            secret:
              example: '"********"'
              type: string
            url:
              example: '"http://example.com/2"'
              type: string
          type: object
        created_at:
          example: 2011-09-06T17:26:27Z
          format: date-time
          type: string
        events:
          example:
            - push
            - pull_request
          items:
            type: string
          type: array
        id:
          example: 1
          type: integer
        name:
          example: web
          type: string
        ping_url:
          example: https://api.github.com/orgs/octocat/hooks/1/pings
          format: uri
          type: string
        type:
          type: string
        updated_at:
          example: 2011-09-06T20:39:23Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/orgs/octocat/hooks/1
          format: uri
          type: string
      required:
        - id
        - url
        - type
        - name
        - active
        - events
        - config
        - ping_url
        - created_at
        - updated_at
      title: Org Hook
      type: object
    org-membership:
      description: Org Membership
      properties:
        organization:
          $ref: "#/components/schemas/organization-simple"
        organization_url:
          example: https://api.github.com/orgs/octocat
          format: uri
          type: string
        permissions:
          properties:
            can_create_repository:
              type: boolean
          required:
            - can_create_repository
          type: object
        role:
          description: The user's membership type in the organization.
          enum:
            - admin
            - member
            - billing_manager
          example: admin
          type: string
        state:
          description: The state of the member in the organization. The `pending` state
            indicates the user has not yet accepted an invitation.
          enum:
            - active
            - pending
          example: active
          type: string
        url:
          example: https://api.github.com/orgs/octocat/memberships/defunkt
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - state
        - role
        - organization_url
        - url
        - organization
        - user
      title: Org Membership
      type: object
    org-pre-receive-hook:
      properties:
        allow_downstream_configuration:
          type: boolean
        configuration_url:
          type: string
        enforcement:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    organization-full:
      description: Organization Full
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          type: string
        billing_email:
          example: org@example.com
          format: email
          nullable: true
          type: string
        blog:
          example: https://github.com/blog
          format: uri
          type: string
        collaborators:
          example: 8
          nullable: true
          type: integer
        company:
          example: GitHub
          type: string
        created_at:
          example: 2008-01-14T04:33:35Z
          format: date-time
          type: string
        default_repository_permission:
          nullable: true
          type: string
        description:
          example: A great organization
          nullable: true
          type: string
        disk_usage:
          example: 10000
          nullable: true
          type: integer
        email:
          example: octocat@github.com
          format: email
          type: string
        events_url:
          example: https://api.github.com/orgs/github/events
          format: uri
          type: string
        followers:
          example: 20
          type: integer
        following:
          example: 0
          type: integer
        has_organization_projects:
          example: true
          type: boolean
        has_repository_projects:
          example: true
          type: boolean
        hooks_url:
          example: https://api.github.com/orgs/github/hooks
          type: string
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          type: integer
        issues_url:
          example: https://api.github.com/orgs/github/issues
          type: string
        location:
          example: San Francisco
          type: string
        login:
          example: github
          type: string
        members_allowed_repository_creation_type:
          example: all
          type: string
        members_can_create_internal_repositories:
          example: true
          type: boolean
        members_can_create_pages:
          example: true
          type: boolean
        members_can_create_private_pages:
          example: true
          type: boolean
        members_can_create_private_repositories:
          example: true
          type: boolean
        members_can_create_public_pages:
          example: true
          type: boolean
        members_can_create_public_repositories:
          example: true
          type: boolean
        members_can_create_repositories:
          example: true
          nullable: true
          type: boolean
        members_url:
          example: https://api.github.com/orgs/github/members{/member}
          type: string
        name:
          example: github
          type: string
        node_id:
          example: MDEyOk9yZ2FuaXphdGlvbjE=
          type: string
        owned_private_repos:
          example: 100
          type: integer
        plan:
          properties:
            filled_seats:
              type: integer
            name:
              type: string
            private_repos:
              type: integer
            seats:
              type: integer
            space:
              type: integer
          required:
            - name
            - space
            - private_repos
          type: object
        private_gists:
          example: 81
          nullable: true
          type: integer
        public_gists:
          example: 1
          type: integer
        public_members_url:
          example: https://api.github.com/orgs/github/public_members{/member}
          type: string
        public_repos:
          example: 2
          type: integer
        repos_url:
          example: https://api.github.com/orgs/github/repos
          format: uri
          type: string
        total_private_repos:
          example: 100
          type: integer
        two_factor_requirement_enabled:
          example: true
          nullable: true
          type: boolean
        type:
          example: Organization
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          example: https://api.github.com/orgs/github
          format: uri
          type: string
      required:
        - login
        - url
        - id
        - node_id
        - repos_url
        - events_url
        - hooks_url
        - issues_url
        - members_url
        - public_members_url
        - avatar_url
        - description
        - html_url
        - has_organization_projects
        - has_repository_projects
        - public_repos
        - public_gists
        - followers
        - following
        - type
        - created_at
        - updated_at
      title: Organization Full
      type: object
    organization-simple:
      description: Organization Simple
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          type: string
        description:
          example: A great organization
          nullable: true
          type: string
        events_url:
          example: https://api.github.com/orgs/github/events
          format: uri
          type: string
        hooks_url:
          example: https://api.github.com/orgs/github/hooks
          type: string
        id:
          example: 1
          type: integer
        issues_url:
          example: https://api.github.com/orgs/github/issues
          type: string
        login:
          example: github
          type: string
        members_url:
          example: https://api.github.com/orgs/github/members{/member}
          type: string
        node_id:
          example: MDEyOk9yZ2FuaXphdGlvbjE=
          type: string
        public_members_url:
          example: https://api.github.com/orgs/github/public_members{/member}
          type: string
        repos_url:
          example: https://api.github.com/orgs/github/repos
          format: uri
          type: string
        url:
          example: https://api.github.com/orgs/github
          format: uri
          type: string
      required:
        - login
        - url
        - id
        - node_id
        - repos_url
        - events_url
        - hooks_url
        - issues_url
        - members_url
        - public_members_url
        - avatar_url
        - description
      title: Organization Simple
      type: object
    page:
      description: The configuration for GitHub Pages for a repository.
      properties:
        cname:
          description: The Pages site's custom domain
          example: example.com
          nullable: true
          type: string
        custom_404:
          default: false
          description: Whether the Page has a custom 404 page.
          example: false
          type: boolean
        html_url:
          description: The web address the Page can be accessed from.
          example: https://example.com
          format: uri
          type: string
        https_certificate:
          $ref: "#/components/schemas/pages-https-certificate"
        https_enforced:
          description: Whether https is enabled on the domain
          example: true
          type: boolean
        public:
          description: Whether the GitHub Pages site is publicly visible. If set to
            `true`, the site is accessible to anyone on the internet. If set to
            `false`, the site will only be accessible to users who have at least
            `read` access to the repository that published the site.
          example: true
          type: boolean
        source:
          $ref: "#/components/schemas/pages-source-hash"
        status:
          description: The status of the most recent build of the Page.
          enum:
            - built
            - building
            - errored
          example: built
          nullable: true
          type: string
        url:
          description: The API address for accessing this Page resource.
          example: https://api.github.com/repos/github/hello-world/pages
          format: uri
          type: string
      required:
        - url
        - status
        - cname
        - custom_404
        - public
      title: GitHub Pages
      type: object
    page-build:
      description: Page Build
      properties:
        commit:
          type: string
        created_at:
          format: date-time
          type: string
        duration:
          type: integer
        error:
          properties:
            message:
              nullable: true
              type: string
          required:
            - message
          type: object
        pusher:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        status:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
      required:
        - url
        - status
        - error
        - pusher
        - commit
        - duration
        - created_at
        - updated_at
      title: Page Build
      type: object
    page-build-status:
      description: Page Build Status
      properties:
        status:
          example: queued
          type: string
        url:
          example: https://api.github.com/repos/github/hello-world/pages/builds/latest
          format: uri
          type: string
      required:
        - url
        - status
      title: Page Build Status
      type: object
    pages-https-certificate:
      properties:
        description:
          example: Certificate is approved
          type: string
        domains:
          description: Array of the domain set and its alternate name (if it is configured)
          example:
            - example.com
            - www.example.com
          items: {}
          type: array
        expires_at:
          format: date
          type: string
        state:
          enum:
            - new
            - authorization_created
            - authorization_pending
            - authorized
            - authorization_revoked
            - issued
            - uploaded
            - approved
            - errored
            - bad_authz
            - destroy_pending
            - dns_changed
          example: approved
          type: string
      required:
        - state
        - description
        - domains
      title: Pages Https Certificate
      type: object
    pages-source-hash:
      properties:
        branch:
          type: string
        path:
          type: string
      required:
        - branch
        - path
      title: Pages Source Hash
      type: object
    participation-stats:
      properties:
        all:
          items:
            type: integer
          type: array
        owner:
          items:
            type: integer
          type: array
      required:
        - all
        - owner
      title: Participation Stats
      type: object
    pre-receive-environment:
      properties:
        created_at:
          type: string
        default_environment:
          type: boolean
        download:
          properties:
            downloaded_at:
              nullable: true
              type: string
            message:
              nullable: true
              type: string
            state:
              type: string
            url:
              type: string
          type: object
        hooks_count:
          type: integer
        html_url:
          type: string
        id:
          type: integer
        image_url:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    pre-receive-environment-download-status:
      properties:
        downloaded_at:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        state:
          type: string
        url:
          type: string
      type: object
    pre-receive-hook:
      properties:
        allow_downstream_configuration:
          type: boolean
        enforcement:
          type: string
        environment:
          properties:
            created_at:
              type: string
            default_environment:
              type: boolean
            download:
              properties:
                downloaded_at:
                  nullable: true
                  type: string
                message:
                  nullable: true
                  type: string
                state:
                  type: string
                url:
                  type: string
              type: object
            hooks_count:
              type: integer
            html_url:
              type: string
            id:
              type: integer
            image_url:
              type: string
            name:
              type: string
            url:
              type: string
          type: object
        id:
          type: integer
        name:
          type: string
        script:
          type: string
        script_repository:
          properties:
            full_name:
              type: string
            html_url:
              type: string
            id:
              type: integer
            url:
              type: string
          type: object
      type: object
    private-user:
      description: Private User
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          format: uri
          type: string
        bio:
          example: There once was...
          nullable: true
          type: string
        blog:
          example: https://github.com/blog
          nullable: true
          type: string
        business_plus:
          type: boolean
        collaborators:
          example: 8
          type: integer
        company:
          example: GitHub
          nullable: true
          type: string
        created_at:
          example: 2008-01-14T04:33:35Z
          format: date-time
          type: string
        disk_usage:
          example: 10000
          type: integer
        email:
          example: octocat@github.com
          format: email
          nullable: true
          type: string
        events_url:
          example: https://api.github.com/users/octocat/events{/privacy}
          type: string
        followers:
          example: 20
          type: integer
        followers_url:
          example: https://api.github.com/users/octocat/followers
          format: uri
          type: string
        following:
          example: 0
          type: integer
        following_url:
          example: https://api.github.com/users/octocat/following{/other_user}
          type: string
        gists_url:
          example: https://api.github.com/users/octocat/gists{/gist_id}
          type: string
        gravatar_id:
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
          type: string
        hireable:
          nullable: true
          type: boolean
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          type: integer
        ldap_dn:
          type: string
        location:
          example: San Francisco
          nullable: true
          type: string
        login:
          example: octocat
          type: string
        name:
          example: monalisa octocat
          nullable: true
          type: string
        node_id:
          example: MDQ6VXNlcjE=
          type: string
        organizations_url:
          example: https://api.github.com/users/octocat/orgs
          format: uri
          type: string
        owned_private_repos:
          example: 100
          type: integer
        plan:
          properties:
            collaborators:
              type: integer
            name:
              type: string
            private_repos:
              type: integer
            space:
              type: integer
          required:
            - collaborators
            - name
            - space
            - private_repos
          type: object
        private_gists:
          example: 81
          type: integer
        public_gists:
          example: 1
          type: integer
        public_repos:
          example: 2
          type: integer
        received_events_url:
          example: https://api.github.com/users/octocat/received_events
          format: uri
          type: string
        repos_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_url:
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
          type: string
        subscriptions_url:
          example: https://api.github.com/users/octocat/subscriptions
          format: uri
          type: string
        suspended_at:
          format: date-time
          nullable: true
          type: string
        total_private_repos:
          example: 100
          type: integer
        two_factor_authentication:
          example: true
          type: boolean
        type:
          example: User
          type: string
        updated_at:
          example: 2008-01-14T04:33:35Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/users/octocat
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - bio
        - blog
        - company
        - email
        - followers
        - following
        - hireable
        - location
        - name
        - public_gists
        - public_repos
        - created_at
        - updated_at
        - collaborators
        - disk_usage
        - owned_private_repos
        - private_gists
        - total_private_repos
        - two_factor_authentication
      title: Private User
      type: object
    project:
      description: Projects are a way to organize columns and cards of work.
      properties:
        body:
          description: Body of the project
          example: This project represents the sprint of the first week in January
          nullable: true
          type: string
        columns_url:
          example: https://api.github.com/projects/1002604/columns
          format: uri
          type: string
        created_at:
          example: 2011-04-10T20:09:31Z
          format: date-time
          type: string
        creator:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        html_url:
          example: https://github.com/api-playground/projects-test/projects/12
          format: uri
          type: string
        id:
          example: 1002604
          type: integer
        name:
          description: Name of the project
          example: Week One Sprint
          type: string
        node_id:
          example: MDc6UHJvamVjdDEwMDI2MDQ=
          type: string
        number:
          example: 1
          type: integer
        organization_permission:
          description: The baseline permission that all organization members have on this
            project. Only present if owner is an organization.
          enum:
            - read
            - write
            - admin
            - none
          type: string
        owner_url:
          example: https://api.github.com/repos/api-playground/projects-test
          format: uri
          type: string
        private:
          description: Whether or not this project can be seen by everyone. Only present
            if owner is an organization.
          type: boolean
        state:
          description: State of the project; either 'open' or 'closed'
          example: open
          type: string
        updated_at:
          example: 2014-03-03T18:58:10Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/projects/1002604
          format: uri
          type: string
      required:
        - id
        - node_id
        - number
        - name
        - body
        - state
        - url
        - html_url
        - owner_url
        - creator
        - columns_url
        - created_at
        - updated_at
      title: Project
      type: object
    project-card:
      description: Project cards represent a scope of work.
      properties:
        archived:
          description: Whether or not the card is archived
          example: false
          type: boolean
        column_url:
          example: https://api.github.com/projects/columns/367
          format: uri
          type: string
        content_url:
          example: https://api.github.com/repos/api-playground/projects-test/issues/3
          format: uri
          type: string
        created_at:
          example: 2016-09-05T14:21:06Z
          format: date-time
          type: string
        creator:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        id:
          description: The project card's ID
          example: 42
          type: integer
        node_id:
          example: MDExOlByb2plY3RDYXJkMTQ3OA==
          type: string
        note:
          example: Add payload for delete Project column
          nullable: true
          type: string
        project_url:
          example: https://api.github.com/projects/120
          format: uri
          type: string
        updated_at:
          example: 2016-09-05T14:20:22Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/projects/columns/cards/1478
          format: uri
          type: string
      required:
        - id
        - node_id
        - note
        - url
        - column_url
        - project_url
        - creator
        - created_at
        - updated_at
      title: Project Card
      type: object
    project-column:
      description: Project columns contain cards of work.
      properties:
        cards_url:
          example: https://api.github.com/projects/columns/367/cards
          format: uri
          type: string
        created_at:
          example: 2016-09-05T14:18:44Z
          format: date-time
          type: string
        id:
          description: The unique identifier of the project column
          example: 42
          type: integer
        name:
          description: Name of the project column
          example: Remaining tasks
          type: string
        node_id:
          example: MDEzOlByb2plY3RDb2x1bW4zNjc=
          type: string
        project_url:
          example: https://api.github.com/projects/120
          format: uri
          type: string
        updated_at:
          example: 2016-09-05T14:22:28Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/projects/columns/367
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - project_url
        - cards_url
        - name
        - created_at
        - updated_at
      title: Project Column
      type: object
    protected-branch:
      description: Branch protections protect branches
      properties:
        allow_deletions:
          additionalProperties: false
          properties:
            enabled:
              type: boolean
          required:
            - enabled
          type: object
        allow_force_pushes:
          additionalProperties: false
          properties:
            enabled:
              type: boolean
          required:
            - enabled
          type: object
        enforce_admins:
          additionalProperties: false
          properties:
            enabled:
              type: boolean
            url:
              format: uri
              type: string
          required:
            - url
            - enabled
          type: object
        required_conversation_resolution:
          additionalProperties: false
          properties:
            enabled:
              type: boolean
          type: object
        required_linear_history:
          additionalProperties: false
          properties:
            enabled:
              type: boolean
          required:
            - enabled
          type: object
        required_pull_request_reviews:
          properties:
            dismiss_stale_reviews:
              type: boolean
            dismissal_restrictions:
              properties:
                teams:
                  items:
                    $ref: "#/components/schemas/team"
                  type: array
                teams_url:
                  format: uri
                  type: string
                url:
                  format: uri
                  type: string
                users:
                  items:
                    $ref: "#/components/schemas/simple-user"
                  type: array
                users_url:
                  format: uri
                  type: string
              required:
                - url
                - users_url
                - teams_url
                - users
                - teams
              type: object
            require_code_owner_reviews:
              type: boolean
            required_approving_review_count:
              type: integer
            url:
              format: uri
              type: string
          required:
            - url
          type: object
        required_signatures:
          properties:
            enabled:
              example: true
              type: boolean
            url:
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
              format: uri
              type: string
          required:
            - url
            - enabled
          type: object
        required_status_checks:
          $ref: "#/components/schemas/status-check-policy"
        restrictions:
          $ref: "#/components/schemas/branch-restriction-policy"
        url:
          format: uri
          type: string
      required:
        - url
      title: Protected Branch
      type: object
    protected-branch-admin-enforced:
      description: Protected Branch Admin Enforced
      properties:
        enabled:
          example: true
          type: boolean
        url:
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
          format: uri
          type: string
      required:
        - url
        - enabled
      title: Protected Branch Admin Enforced
      type: object
    protected-branch-pull-request-review:
      description: Protected Branch Pull Request Review
      properties:
        dismiss_stale_reviews:
          example: true
          type: boolean
        dismissal_restrictions:
          properties:
            teams:
              description: The list of teams with review dismissal access.
              items:
                $ref: "#/components/schemas/team"
              type: array
            teams_url:
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams"'
              type: string
            url:
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions"'
              type: string
            users:
              description: The list of users with review dismissal access.
              items:
                $ref: "#/components/schemas/simple-user"
              type: array
            users_url:
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users"'
              type: string
          type: object
        require_code_owner_reviews:
          example: true
          type: boolean
        required_approving_review_count:
          example: 2
          maximum: 6
          minimum: 1
          type: integer
        url:
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
          format: uri
          type: string
      required:
        - dismiss_stale_reviews
        - require_code_owner_reviews
      title: Protected Branch Pull Request Review
      type: object
    public-user:
      additionalProperties: false
      description: Public User
      properties:
        avatar_url:
          format: uri
          type: string
        bio:
          nullable: true
          type: string
        blog:
          nullable: true
          type: string
        collaborators:
          example: 3
          type: integer
        company:
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        disk_usage:
          example: 1
          type: integer
        email:
          format: email
          nullable: true
          type: string
        events_url:
          type: string
        followers:
          type: integer
        followers_url:
          format: uri
          type: string
        following:
          type: integer
        following_url:
          type: string
        gists_url:
          type: string
        gravatar_id:
          nullable: true
          type: string
        hireable:
          nullable: true
          type: boolean
        html_url:
          format: uri
          type: string
        id:
          type: integer
        location:
          nullable: true
          type: string
        login:
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
        organizations_url:
          format: uri
          type: string
        owned_private_repos:
          example: 2
          type: integer
        plan:
          properties:
            collaborators:
              type: integer
            name:
              type: string
            private_repos:
              type: integer
            space:
              type: integer
          required:
            - collaborators
            - name
            - space
            - private_repos
          type: object
        private_gists:
          example: 1
          type: integer
        public_gists:
          type: integer
        public_repos:
          type: integer
        received_events_url:
          format: uri
          type: string
        repos_url:
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_url:
          type: string
        subscriptions_url:
          format: uri
          type: string
        suspended_at:
          format: date-time
          nullable: true
          type: string
        total_private_repos:
          example: 2
          type: integer
        type:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - bio
        - blog
        - company
        - email
        - followers
        - following
        - hireable
        - location
        - name
        - public_gists
        - public_repos
        - created_at
        - updated_at
      title: Public User
      type: object
    pull-request:
      description: Pull requests let you tell others about changes you've pushed to a
        repository on GitHub. Once a pull request is sent, interested parties
        can review the set of changes, discuss potential modifications, and even
        push follow-up commits if necessary.
      properties:
        _links:
          properties:
            comments:
              $ref: "#/components/schemas/link"
            commits:
              $ref: "#/components/schemas/link"
            html:
              $ref: "#/components/schemas/link"
            issue:
              $ref: "#/components/schemas/link"
            review_comment:
              $ref: "#/components/schemas/link"
            review_comments:
              $ref: "#/components/schemas/link"
            self:
              $ref: "#/components/schemas/link"
            statuses:
              $ref: "#/components/schemas/link"
          required:
            - comments
            - commits
            - statuses
            - html
            - issue
            - review_comments
            - review_comment
            - self
          type: object
        active_lock_reason:
          example: too heated
          nullable: true
          type: string
        additions:
          example: 100
          type: integer
        assignee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assignees:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        author_association:
          $ref: "#/components/schemas/author_association"
        base:
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              properties:
                allow_merge_commit:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                anonymous_access_enabled:
                  type: boolean
                archive_url:
                  type: string
                archived:
                  type: boolean
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                clone_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  format: uri
                  type: string
                created_at:
                  format: date-time
                  type: string
                default_branch:
                  type: string
                deployments_url:
                  format: uri
                  type: string
                description:
                  nullable: true
                  type: string
                disabled:
                  type: boolean
                downloads_url:
                  format: uri
                  type: string
                events_url:
                  format: uri
                  type: string
                fork:
                  type: boolean
                forks:
                  type: integer
                forks_count:
                  type: integer
                forks_url:
                  format: uri
                  type: string
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_pages:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                homepage:
                  format: uri
                  nullable: true
                  type: string
                hooks_url:
                  format: uri
                  type: string
                html_url:
                  format: uri
                  type: string
                id:
                  type: integer
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                language:
                  nullable: true
                  type: string
                languages_url:
                  format: uri
                  type: string
                license:
                  allOf:
                    - $ref: "#/components/schemas/license-simple"
                  nullable: true
                master_branch:
                  type: string
                merges_url:
                  format: uri
                  type: string
                milestones_url:
                  type: string
                mirror_url:
                  format: uri
                  nullable: true
                  type: string
                name:
                  type: string
                node_id:
                  type: string
                notifications_url:
                  type: string
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                owner:
                  properties:
                    avatar_url:
                      format: uri
                      type: string
                    events_url:
                      type: string
                    followers_url:
                      format: uri
                      type: string
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      nullable: true
                      type: string
                    html_url:
                      format: uri
                      type: string
                    id:
                      type: integer
                    login:
                      type: string
                    node_id:
                      type: string
                    organizations_url:
                      format: uri
                      type: string
                    received_events_url:
                      format: uri
                      type: string
                    repos_url:
                      format: uri
                      type: string
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      format: uri
                      type: string
                    type:
                      type: string
                    url:
                      format: uri
                      type: string
                  required:
                    - avatar_url
                    - events_url
                    - followers_url
                    - following_url
                    - gists_url
                    - gravatar_id
                    - html_url
                    - id
                    - node_id
                    - login
                    - organizations_url
                    - received_events_url
                    - repos_url
                    - site_admin
                    - starred_url
                    - subscriptions_url
                    - type
                    - url
                  type: object
                permissions:
                  properties:
                    admin:
                      type: boolean
                    pull:
                      type: boolean
                    push:
                      type: boolean
                  required:
                    - admin
                    - pull
                    - push
                  type: object
                private:
                  type: boolean
                pulls_url:
                  type: string
                pushed_at:
                  format: date-time
                  type: string
                releases_url:
                  type: string
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                stargazers_url:
                  format: uri
                  type: string
                statuses_url:
                  type: string
                subscribers_url:
                  format: uri
                  type: string
                subscription_url:
                  format: uri
                  type: string
                svn_url:
                  format: uri
                  type: string
                tags_url:
                  format: uri
                  type: string
                teams_url:
                  format: uri
                  type: string
                topics:
                  items:
                    type: string
                  type: array
                trees_url:
                  type: string
                updated_at:
                  format: date-time
                  type: string
                url:
                  format: uri
                  type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
              required:
                - archive_url
                - assignees_url
                - blobs_url
                - branches_url
                - collaborators_url
                - comments_url
                - commits_url
                - compare_url
                - contents_url
                - contributors_url
                - deployments_url
                - description
                - downloads_url
                - events_url
                - fork
                - forks_url
                - full_name
                - git_commits_url
                - git_refs_url
                - git_tags_url
                - hooks_url
                - html_url
                - id
                - node_id
                - issue_comment_url
                - issue_events_url
                - issues_url
                - keys_url
                - labels_url
                - languages_url
                - merges_url
                - milestones_url
                - name
                - notifications_url
                - owner
                - private
                - pulls_url
                - releases_url
                - stargazers_url
                - statuses_url
                - subscribers_url
                - subscription_url
                - tags_url
                - teams_url
                - trees_url
                - url
                - clone_url
                - default_branch
                - forks
                - forks_count
                - git_url
                - has_downloads
                - has_issues
                - has_projects
                - has_wiki
                - has_pages
                - homepage
                - language
                - archived
                - disabled
                - mirror_url
                - open_issues
                - open_issues_count
                - license
                - pushed_at
                - size
                - ssh_url
                - stargazers_count
                - svn_url
                - watchers
                - watchers_count
                - created_at
                - updated_at
              type: object
            sha:
              type: string
            user:
              properties:
                avatar_url:
                  format: uri
                  type: string
                events_url:
                  type: string
                followers_url:
                  format: uri
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  nullable: true
                  type: string
                html_url:
                  format: uri
                  type: string
                id:
                  type: integer
                login:
                  type: string
                node_id:
                  type: string
                organizations_url:
                  format: uri
                  type: string
                received_events_url:
                  format: uri
                  type: string
                repos_url:
                  format: uri
                  type: string
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  format: uri
                  type: string
                type:
                  type: string
                url:
                  format: uri
                  type: string
              required:
                - avatar_url
                - events_url
                - followers_url
                - following_url
                - gists_url
                - gravatar_id
                - html_url
                - id
                - node_id
                - login
                - organizations_url
                - received_events_url
                - repos_url
                - site_admin
                - starred_url
                - subscriptions_url
                - type
                - url
              type: object
          required:
            - label
            - ref
            - repo
            - sha
            - user
          type: object
        body:
          example: Please pull these awesome changes
          nullable: true
          type: string
        changed_files:
          example: 5
          type: integer
        closed_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        comments:
          example: 10
          type: integer
        comments_url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          format: uri
          type: string
        commits:
          example: 3
          type: integer
        commits_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          type: string
        deletions:
          example: 3
          type: integer
        diff_url:
          example: https://github.com/octocat/Hello-World/pull/1347.diff
          format: uri
          type: string
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
        head:
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              properties:
                allow_merge_commit:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                anonymous_access_enabled:
                  type: boolean
                archive_url:
                  type: string
                archived:
                  type: boolean
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                clone_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  format: uri
                  type: string
                created_at:
                  format: date-time
                  type: string
                default_branch:
                  type: string
                deployments_url:
                  format: uri
                  type: string
                description:
                  nullable: true
                  type: string
                disabled:
                  type: boolean
                downloads_url:
                  format: uri
                  type: string
                events_url:
                  format: uri
                  type: string
                fork:
                  type: boolean
                forks:
                  type: integer
                forks_count:
                  type: integer
                forks_url:
                  format: uri
                  type: string
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_pages:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                homepage:
                  format: uri
                  nullable: true
                  type: string
                hooks_url:
                  format: uri
                  type: string
                html_url:
                  format: uri
                  type: string
                id:
                  type: integer
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                language:
                  nullable: true
                  type: string
                languages_url:
                  format: uri
                  type: string
                license:
                  nullable: true
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                    node_id:
                      type: string
                    spdx_id:
                      nullable: true
                      type: string
                    url:
                      format: uri
                      nullable: true
                      type: string
                  required:
                    - key
                    - name
                    - url
                    - spdx_id
                    - node_id
                  type: object
                master_branch:
                  type: string
                merges_url:
                  format: uri
                  type: string
                milestones_url:
                  type: string
                mirror_url:
                  format: uri
                  nullable: true
                  type: string
                name:
                  type: string
                node_id:
                  type: string
                notifications_url:
                  type: string
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                owner:
                  properties:
                    avatar_url:
                      format: uri
                      type: string
                    events_url:
                      type: string
                    followers_url:
                      format: uri
                      type: string
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      nullable: true
                      type: string
                    html_url:
                      format: uri
                      type: string
                    id:
                      type: integer
                    login:
                      type: string
                    node_id:
                      type: string
                    organizations_url:
                      format: uri
                      type: string
                    received_events_url:
                      format: uri
                      type: string
                    repos_url:
                      format: uri
                      type: string
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      format: uri
                      type: string
                    type:
                      type: string
                    url:
                      format: uri
                      type: string
                  required:
                    - avatar_url
                    - events_url
                    - followers_url
                    - following_url
                    - gists_url
                    - gravatar_id
                    - html_url
                    - id
                    - node_id
                    - login
                    - organizations_url
                    - received_events_url
                    - repos_url
                    - site_admin
                    - starred_url
                    - subscriptions_url
                    - type
                    - url
                  type: object
                permissions:
                  properties:
                    admin:
                      type: boolean
                    pull:
                      type: boolean
                    push:
                      type: boolean
                  required:
                    - admin
                    - pull
                    - push
                  type: object
                private:
                  type: boolean
                pulls_url:
                  type: string
                pushed_at:
                  format: date-time
                  type: string
                releases_url:
                  type: string
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                stargazers_url:
                  format: uri
                  type: string
                statuses_url:
                  type: string
                subscribers_url:
                  format: uri
                  type: string
                subscription_url:
                  format: uri
                  type: string
                svn_url:
                  format: uri
                  type: string
                tags_url:
                  format: uri
                  type: string
                teams_url:
                  format: uri
                  type: string
                topics:
                  items:
                    type: string
                  type: array
                trees_url:
                  type: string
                updated_at:
                  format: date-time
                  type: string
                url:
                  format: uri
                  type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
              required:
                - archive_url
                - assignees_url
                - blobs_url
                - branches_url
                - collaborators_url
                - comments_url
                - commits_url
                - compare_url
                - contents_url
                - contributors_url
                - deployments_url
                - description
                - downloads_url
                - events_url
                - fork
                - forks_url
                - full_name
                - git_commits_url
                - git_refs_url
                - git_tags_url
                - hooks_url
                - html_url
                - id
                - node_id
                - issue_comment_url
                - issue_events_url
                - issues_url
                - keys_url
                - labels_url
                - languages_url
                - merges_url
                - milestones_url
                - name
                - notifications_url
                - owner
                - private
                - pulls_url
                - releases_url
                - stargazers_url
                - statuses_url
                - subscribers_url
                - subscription_url
                - tags_url
                - teams_url
                - trees_url
                - url
                - clone_url
                - default_branch
                - forks
                - forks_count
                - git_url
                - has_downloads
                - has_issues
                - has_projects
                - has_wiki
                - has_pages
                - homepage
                - language
                - archived
                - disabled
                - mirror_url
                - open_issues
                - open_issues_count
                - license
                - pushed_at
                - size
                - ssh_url
                - stargazers_count
                - svn_url
                - watchers
                - watchers_count
                - created_at
                - updated_at
              type: object
            sha:
              type: string
            user:
              properties:
                avatar_url:
                  format: uri
                  type: string
                events_url:
                  type: string
                followers_url:
                  format: uri
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  nullable: true
                  type: string
                html_url:
                  format: uri
                  type: string
                id:
                  type: integer
                login:
                  type: string
                node_id:
                  type: string
                organizations_url:
                  format: uri
                  type: string
                received_events_url:
                  format: uri
                  type: string
                repos_url:
                  format: uri
                  type: string
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  format: uri
                  type: string
                type:
                  type: string
                url:
                  format: uri
                  type: string
              required:
                - avatar_url
                - events_url
                - followers_url
                - following_url
                - gists_url
                - gravatar_id
                - html_url
                - id
                - node_id
                - login
                - organizations_url
                - received_events_url
                - repos_url
                - site_admin
                - starred_url
                - subscriptions_url
                - type
                - url
              type: object
          required:
            - label
            - ref
            - repo
            - sha
            - user
          type: object
        html_url:
          example: https://github.com/octocat/Hello-World/pull/1347
          format: uri
          type: string
        id:
          example: 1
          type: integer
        issue_url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
          format: uri
          type: string
        labels:
          items:
            properties:
              color:
                type: string
              default:
                type: boolean
              description:
                nullable: true
                type: string
              id:
                format: int64
                type: integer
              name:
                type: string
              node_id:
                type: string
              url:
                type: string
            type: object
          type: array
        locked:
          example: true
          type: boolean
        maintainer_can_modify:
          description: Indicates whether maintainers can modify the pull request.
          example: true
          type: boolean
        merge_commit_sha:
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
          type: string
        mergeable:
          example: true
          nullable: true
          type: boolean
        mergeable_state:
          example: clean
          type: string
        merged:
          type: boolean
        merged_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        merged_by:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
          nullable: true
        node_id:
          example: MDExOlB1bGxSZXF1ZXN0MQ==
          type: string
        number:
          description: Number uniquely identifying the pull request within its repository.
          example: 42
          type: integer
        patch_url:
          example: https://github.com/octocat/Hello-World/pull/1347.patch
          format: uri
          type: string
        rebaseable:
          example: true
          nullable: true
          type: boolean
        requested_reviewers:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        requested_teams:
          items:
            $ref: "#/components/schemas/team-simple"
          nullable: true
          type: array
        review_comment_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          type: string
        review_comments:
          example: 0
          type: integer
        review_comments_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          format: uri
          type: string
        state:
          description: State of this Pull Request. Either `open` or `closed`.
          enum:
            - open
            - closed
          example: open
          type: string
        statuses_url:
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          format: uri
          type: string
        title:
          description: The title of the pull request.
          example: Amazing new feature
          type: string
        updated_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - _links
        - assignee
        - labels
        - base
        - body
        - closed_at
        - comments_url
        - commits_url
        - created_at
        - diff_url
        - head
        - html_url
        - id
        - node_id
        - issue_url
        - merge_commit_sha
        - merged_at
        - milestone
        - number
        - patch_url
        - review_comment_url
        - review_comments_url
        - statuses_url
        - state
        - locked
        - title
        - updated_at
        - url
        - user
        - author_association
        - additions
        - changed_files
        - comments
        - commits
        - deletions
        - mergeable
        - mergeable_state
        - merged
        - maintainer_can_modify
        - merged_by
        - review_comments
      title: Pull Request
      type: object
    pull-request-merge-result:
      description: Pull Request Merge Result
      properties:
        merged:
          type: boolean
        message:
          type: string
        sha:
          type: string
      required:
        - merged
        - message
        - sha
      title: Pull Request Merge Result
      type: object
    pull-request-minimal:
      properties:
        base:
          properties:
            ref:
              type: string
            repo:
              properties:
                id:
                  type: integer
                name:
                  type: string
                url:
                  type: string
              required:
                - id
                - url
                - name
              type: object
            sha:
              type: string
          required:
            - ref
            - sha
            - repo
          type: object
        head:
          properties:
            ref:
              type: string
            repo:
              properties:
                id:
                  type: integer
                name:
                  type: string
                url:
                  type: string
              required:
                - id
                - url
                - name
              type: object
            sha:
              type: string
          required:
            - ref
            - sha
            - repo
          type: object
        id:
          type: integer
        number:
          type: integer
        url:
          type: string
      required:
        - id
        - number
        - url
        - head
        - base
      title: Pull Request Minimal
      type: object
    pull-request-review:
      description: Pull Request Reviews are reviews on pull requests.
      properties:
        _links:
          properties:
            html:
              properties:
                href:
                  type: string
              required:
                - href
              type: object
            pull_request:
              properties:
                href:
                  type: string
              required:
                - href
              type: object
          required:
            - html
            - pull_request
          type: object
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          description: The text of the review.
          example: This looks great.
          type: string
        body_html:
          type: string
        body_text:
          type: string
        commit_id:
          description: A commit SHA for the review.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          format: uri
          type: string
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
        node_id:
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
          type: string
        pull_request_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
          format: uri
          type: string
        state:
          example: CHANGES_REQUESTED
          type: string
        submitted_at:
          format: date-time
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - id
        - node_id
        - user
        - body
        - state
        - commit_id
        - html_url
        - pull_request_url
        - _links
        - author_association
      title: Pull Request Review
      type: object
    pull-request-review-comment:
      description: Pull Request Review Comments are comments on a portion of the Pull
        Request's diff.
      properties:
        _links:
          properties:
            html:
              properties:
                href:
                  example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  format: uri
                  type: string
              required:
                - href
              type: object
            pull_request:
              properties:
                href:
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/1
                  format: uri
                  type: string
              required:
                - href
              type: object
            self:
              properties:
                href:
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  format: uri
                  type: string
              required:
                - href
              type: object
          required:
            - self
            - html
            - pull_request
          type: object
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          description: The text of the comment.
          example: We should probably include a check for null values here.
          type: string
        body_html:
          example: '"<p>comment body</p>"'
          type: string
        body_text:
          example: '"comment body"'
          type: string
        commit_id:
          description: The SHA of the commit to which the comment applies.
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        created_at:
          example: 2011-04-14T16:00:49Z
          format: date-time
          type: string
        diff_hunk:
          description: The diff of the line that the comment refers to.
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
          type: string
        html_url:
          description: HTML URL for the pull request review comment.
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          format: uri
          type: string
        id:
          description: The ID of the pull request review comment.
          example: 1
          type: integer
        in_reply_to_id:
          description: The comment ID to reply to.
          example: 8
          type: integer
        line:
          description: The line of the blob to which the comment applies. The last line of
            the range for a multi-line comment
          example: 2
          type: integer
        node_id:
          description: The node ID of the pull request review comment.
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
          type: string
        original_commit_id:
          description: The SHA of the original commit to which the comment applies.
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          type: string
        original_line:
          description: The line of the blob to which the comment applies. The last line of
            the range for a multi-line comment
          example: 2
          type: integer
        original_position:
          description: The index of the original line in the diff to which the comment
            applies.
          example: 4
          type: integer
        original_start_line:
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
          type: integer
        path:
          description: The relative path of the file to which the comment applies.
          example: config/database.yaml
          type: string
        position:
          description: The line index in the diff to which the comment applies.
          example: 1
          type: integer
        pull_request_review_id:
          description: The ID of the pull request review to which the comment belongs.
          example: 42
          nullable: true
          type: integer
        pull_request_url:
          description: URL for the pull request that the review comment belongs to.
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
          format: uri
          type: string
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        side:
          default: RIGHT
          description: The side of the diff to which the comment applies. The side of the
            last line of the range for a multi-line comment
          enum:
            - LEFT
            - RIGHT
          type: string
        start_line:
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
          type: integer
        start_side:
          default: RIGHT
          description: The side of the first line of the range for a multi-line comment.
          enum:
            - LEFT
            - RIGHT
          nullable: true
          type: string
        updated_at:
          example: 2011-04-14T16:00:49Z
          format: date-time
          type: string
        url:
          description: URL for the pull request review comment
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          type: string
        user:
          $ref: "#/components/schemas/simple-user"
      required:
        - url
        - id
        - node_id
        - pull_request_review_id
        - diff_hunk
        - path
        - position
        - original_position
        - commit_id
        - original_commit_id
        - user
        - body
        - created_at
        - updated_at
        - html_url
        - pull_request_url
        - author_association
        - _links
      title: Pull Request Review Comment
      type: object
    pull-request-review-request:
      description: Pull Request Review Request
      properties:
        teams:
          items:
            $ref: "#/components/schemas/team-simple"
          type: array
        users:
          items:
            $ref: "#/components/schemas/simple-user"
          type: array
      required:
        - users
        - teams
      title: Pull Request Review Request
      type: object
    pull-request-simple:
      description: Pull Request Simple
      properties:
        _links:
          properties:
            comments:
              $ref: "#/components/schemas/link"
            commits:
              $ref: "#/components/schemas/link"
            html:
              $ref: "#/components/schemas/link"
            issue:
              $ref: "#/components/schemas/link"
            review_comment:
              $ref: "#/components/schemas/link"
            review_comments:
              $ref: "#/components/schemas/link"
            self:
              $ref: "#/components/schemas/link"
            statuses:
              $ref: "#/components/schemas/link"
          required:
            - comments
            - commits
            - statuses
            - html
            - issue
            - review_comments
            - review_comment
            - self
          type: object
        active_lock_reason:
          example: too heated
          nullable: true
          type: string
        assignee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assignees:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        author_association:
          $ref: "#/components/schemas/author_association"
        base:
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: "#/components/schemas/repository"
            sha:
              type: string
            user:
              allOf:
                - $ref: "#/components/schemas/simple-user"
              nullable: true
          required:
            - label
            - ref
            - repo
            - sha
            - user
          type: object
        body:
          example: Please pull these awesome changes
          nullable: true
          type: string
        closed_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        comments_url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          format: uri
          type: string
        commits_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          type: string
        diff_url:
          example: https://github.com/octocat/Hello-World/pull/1347.diff
          format: uri
          type: string
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
        head:
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: "#/components/schemas/repository"
            sha:
              type: string
            user:
              allOf:
                - $ref: "#/components/schemas/simple-user"
              nullable: true
          required:
            - label
            - ref
            - repo
            - sha
            - user
          type: object
        html_url:
          example: https://github.com/octocat/Hello-World/pull/1347
          format: uri
          type: string
        id:
          example: 1
          type: integer
        issue_url:
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
          format: uri
          type: string
        labels:
          items:
            properties:
              color:
                type: string
              default:
                type: boolean
              description:
                type: string
              id:
                format: int64
                type: integer
              name:
                type: string
              node_id:
                type: string
              url:
                type: string
            type: object
          type: array
        locked:
          example: true
          type: boolean
        merge_commit_sha:
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
          type: string
        merged_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
          nullable: true
        node_id:
          example: MDExOlB1bGxSZXF1ZXN0MQ==
          type: string
        number:
          example: 1347
          type: integer
        patch_url:
          example: https://github.com/octocat/Hello-World/pull/1347.patch
          format: uri
          type: string
        requested_reviewers:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        requested_teams:
          items:
            $ref: "#/components/schemas/team-simple"
          nullable: true
          type: array
        review_comment_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          type: string
        review_comments_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          format: uri
          type: string
        state:
          example: open
          type: string
        statuses_url:
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          format: uri
          type: string
        title:
          example: new-feature
          type: string
        updated_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - _links
        - assignee
        - labels
        - base
        - body
        - closed_at
        - comments_url
        - commits_url
        - created_at
        - diff_url
        - head
        - html_url
        - id
        - node_id
        - issue_url
        - merge_commit_sha
        - merged_at
        - milestone
        - number
        - patch_url
        - review_comment_url
        - review_comments_url
        - statuses_url
        - state
        - locked
        - title
        - updated_at
        - url
        - user
        - author_association
      title: Pull Request Simple
      type: object
    rate-limit:
      properties:
        limit:
          type: integer
        remaining:
          type: integer
        reset:
          type: integer
      required:
        - limit
        - remaining
        - reset
      title: Rate Limit
      type: object
    rate-limit-overview:
      description: Rate Limit Overview
      properties:
        rate:
          $ref: "#/components/schemas/rate-limit"
        resources:
          properties:
            code_scanning_upload:
              $ref: "#/components/schemas/rate-limit"
            core:
              $ref: "#/components/schemas/rate-limit"
            graphql:
              $ref: "#/components/schemas/rate-limit"
            integration_manifest:
              $ref: "#/components/schemas/rate-limit"
            search:
              $ref: "#/components/schemas/rate-limit"
            source_import:
              $ref: "#/components/schemas/rate-limit"
          required:
            - core
            - search
          type: object
      required:
        - rate
        - resources
      title: Rate Limit Overview
      type: object
    reaction:
      description: Reactions to conversations provide a way to help people express
        their feelings more simply and effectively.
      properties:
        content:
          description: The reaction to use
          enum:
            - "+1"
            - "-1"
            - laugh
            - confused
            - heart
            - hooray
            - rocket
            - eyes
          example: heart
          type: string
        created_at:
          example: 2016-05-20T20:09:31Z
          format: date-time
          type: string
        id:
          example: 1
          type: integer
        node_id:
          example: MDg6UmVhY3Rpb24x
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - id
        - node_id
        - user
        - content
        - created_at
      title: Reaction
      type: object
    reaction-rollup:
      properties:
        "+1":
          type: integer
        "-1":
          type: integer
        confused:
          type: integer
        eyes:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        laugh:
          type: integer
        rocket:
          type: integer
        total_count:
          type: integer
        url:
          format: uri
          type: string
      required:
        - url
        - total_count
        - "+1"
        - "-1"
        - laugh
        - confused
        - heart
        - hooray
        - eyes
        - rocket
      title: Reaction Rollup
      type: object
    release:
      description: A release.
      properties:
        assets:
          items:
            $ref: "#/components/schemas/release-asset"
          type: array
        assets_url:
          format: uri
          type: string
        author:
          $ref: "#/components/schemas/simple-user"
        body:
          nullable: true
          type: string
        body_html:
          type: string
        body_text:
          type: string
        created_at:
          format: date-time
          type: string
        draft:
          description: true to create a draft (unpublished) release, false to create a
            published one.
          example: false
          type: boolean
        html_url:
          format: uri
          type: string
        id:
          type: integer
        name:
          nullable: true
          type: string
        node_id:
          type: string
        prerelease:
          description: Whether to identify the release as a prerelease or a full release.
          example: false
          type: boolean
        published_at:
          format: date-time
          nullable: true
          type: string
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        tag_name:
          description: The name of the tag.
          example: v1.0.0
          type: string
        tarball_url:
          format: uri
          nullable: true
          type: string
        target_commitish:
          description: Specifies the commitish value that determines where the Git tag is
            created from.
          example: master
          type: string
        upload_url:
          type: string
        url:
          format: uri
          type: string
        zipball_url:
          format: uri
          nullable: true
          type: string
      required:
        - assets_url
        - upload_url
        - tarball_url
        - zipball_url
        - created_at
        - published_at
        - draft
        - id
        - node_id
        - author
        - html_url
        - name
        - prerelease
        - tag_name
        - target_commitish
        - assets
        - url
      title: Release
      type: object
    release-asset:
      description: Data related to a release.
      properties:
        browser_download_url:
          format: uri
          type: string
        content_type:
          type: string
        created_at:
          format: date-time
          type: string
        download_count:
          type: integer
        id:
          type: integer
        label:
          nullable: true
          type: string
        name:
          description: The file name of the asset.
          example: Team Environment
          type: string
        node_id:
          type: string
        size:
          type: integer
        state:
          description: State of the release asset.
          enum:
            - uploaded
            - open
          type: string
        updated_at:
          format: date-time
          type: string
        uploader:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        url:
          format: uri
          type: string
      required:
        - id
        - name
        - content_type
        - size
        - state
        - url
        - node_id
        - download_count
        - label
        - uploader
        - browser_download_url
        - created_at
        - updated_at
      title: Release Asset
      type: object
    repo-search-result-item:
      description: Repo Search Result Item
      properties:
        allow_merge_commit:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_squash_merge:
          type: boolean
        archive_url:
          type: string
        archived:
          type: boolean
        assignees_url:
          type: string
        blobs_url:
          type: string
        branches_url:
          type: string
        clone_url:
          type: string
        collaborators_url:
          type: string
        comments_url:
          type: string
        commits_url:
          type: string
        compare_url:
          type: string
        contents_url:
          type: string
        contributors_url:
          format: uri
          type: string
        created_at:
          format: date-time
          type: string
        default_branch:
          type: string
        delete_branch_on_merge:
          type: boolean
        deployments_url:
          format: uri
          type: string
        description:
          nullable: true
          type: string
        disabled:
          description: Returns whether or not this repository disabled.
          type: boolean
        downloads_url:
          format: uri
          type: string
        events_url:
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          type: integer
        forks_count:
          type: integer
        forks_url:
          format: uri
          type: string
        full_name:
          type: string
        git_commits_url:
          type: string
        git_refs_url:
          type: string
        git_tags_url:
          type: string
        git_url:
          type: string
        has_downloads:
          type: boolean
        has_issues:
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        homepage:
          format: uri
          nullable: true
          type: string
        hooks_url:
          format: uri
          type: string
        html_url:
          format: uri
          type: string
        id:
          type: integer
        issue_comment_url:
          type: string
        issue_events_url:
          type: string
        issues_url:
          type: string
        keys_url:
          type: string
        labels_url:
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          format: uri
          type: string
        license:
          allOf:
            - $ref: "#/components/schemas/license-simple"
          nullable: true
        master_branch:
          type: string
        merges_url:
          format: uri
          type: string
        milestones_url:
          type: string
        mirror_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        node_id:
          type: string
        notifications_url:
          type: string
        open_issues:
          type: integer
        open_issues_count:
          type: integer
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        permissions:
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          required:
            - admin
            - pull
            - push
          type: object
        private:
          type: boolean
        pulls_url:
          type: string
        pushed_at:
          format: date-time
          type: string
        releases_url:
          type: string
        score:
          type: number
        size:
          type: integer
        ssh_url:
          type: string
        stargazers_count:
          type: integer
        stargazers_url:
          format: uri
          type: string
        statuses_url:
          type: string
        subscribers_url:
          format: uri
          type: string
        subscription_url:
          format: uri
          type: string
        svn_url:
          format: uri
          type: string
        tags_url:
          format: uri
          type: string
        teams_url:
          format: uri
          type: string
        temp_clone_token:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        topics:
          items:
            type: string
          type: array
        trees_url:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        watchers:
          type: integer
        watchers_count:
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
        - score
      title: Repo Search Result Item
      type: object
    repository:
      description: A git repository
      properties:
        allow_merge_commit:
          default: true
          description: Whether to allow merge commits for pull requests.
          example: true
          type: boolean
        allow_rebase_merge:
          default: true
          description: Whether to allow rebase merges for pull requests.
          example: true
          type: boolean
        allow_squash_merge:
          default: true
          description: Whether to allow squash merges for pull requests.
          example: true
          type: boolean
        anonymous_access_enabled:
          type: boolean
        archive_url:
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          type: string
        archived:
          default: false
          description: Whether the repository is archived.
          type: boolean
        assignees_url:
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
          type: string
        blobs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          type: string
        branches_url:
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
          type: string
        clone_url:
          example: https://github.com/octocat/Hello-World.git
          type: string
        collaborators_url:
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          type: string
        comments_url:
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
          type: string
        commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
          type: string
        compare_url:
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          type: string
        contents_url:
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
          type: string
        contributors_url:
          example: http://api.github.com/repos/octocat/Hello-World/contributors
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        default_branch:
          description: The default branch of the repository.
          example: master
          type: string
        delete_branch_on_merge:
          default: false
          description: Whether to delete head branches when pull requests are merged
          example: false
          type: boolean
        deployments_url:
          example: http://api.github.com/repos/octocat/Hello-World/deployments
          format: uri
          type: string
        description:
          example: This your first repo!
          nullable: true
          type: string
        disabled:
          description: Returns whether or not this repository disabled.
          type: boolean
        downloads_url:
          example: http://api.github.com/repos/octocat/Hello-World/downloads
          format: uri
          type: string
        events_url:
          example: http://api.github.com/repos/octocat/Hello-World/events
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          type: integer
        forks_count:
          example: 9
          type: integer
        forks_url:
          example: http://api.github.com/repos/octocat/Hello-World/forks
          format: uri
          type: string
        full_name:
          example: octocat/Hello-World
          type: string
        git_commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          type: string
        git_refs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          type: string
        git_tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          type: string
        git_url:
          example: git:github.com/octocat/Hello-World.git
          type: string
        has_downloads:
          default: true
          description: Whether downloads are enabled.
          example: true
          type: boolean
        has_issues:
          default: true
          description: Whether issues are enabled.
          example: true
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          default: true
          description: Whether projects are enabled.
          example: true
          type: boolean
        has_wiki:
          default: true
          description: Whether the wiki is enabled.
          example: true
          type: boolean
        homepage:
          example: https://github.com
          format: uri
          nullable: true
          type: string
        hooks_url:
          example: http://api.github.com/repos/octocat/Hello-World/hooks
          format: uri
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World
          format: uri
          type: string
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        is_template:
          default: false
          description: Whether this repository acts as a template that can be used to
            generate new repositories.
          example: true
          type: boolean
        issue_comment_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          type: string
        issue_events_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          type: string
        issues_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
          type: string
        keys_url:
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          type: string
        labels_url:
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          example: http://api.github.com/repos/octocat/Hello-World/languages
          format: uri
          type: string
        license:
          allOf:
            - $ref: "#/components/schemas/license-simple"
          nullable: true
        master_branch:
          type: string
        merges_url:
          example: http://api.github.com/repos/octocat/Hello-World/merges
          format: uri
          type: string
        milestones_url:
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
          type: string
        mirror_url:
          example: git:git.example.com/octocat/Hello-World
          format: uri
          nullable: true
          type: string
        name:
          description: The name of the repository.
          example: Team Environment
          type: string
        network_count:
          type: integer
        node_id:
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          type: string
        notifications_url:
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          type: string
        open_issues:
          type: integer
        open_issues_count:
          example: 0
          type: integer
        organization:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        permissions:
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
          required:
            - admin
            - pull
            - push
          type: object
        private:
          default: false
          description: Whether the repository is private or public.
          type: boolean
        pulls_url:
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
          type: string
        pushed_at:
          example: 2011-01-26T19:06:43Z
          format: date-time
          nullable: true
          type: string
        releases_url:
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          type: string
        size:
          example: 108
          type: integer
        ssh_url:
          example: git@github.com:octocat/Hello-World.git
          type: string
        stargazers_count:
          example: 80
          type: integer
        stargazers_url:
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
          format: uri
          type: string
        starred_at:
          example: '"2020-07-09T00:17:42Z"'
          type: string
        statuses_url:
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          type: string
        subscribers_count:
          type: integer
        subscribers_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
          format: uri
          type: string
        subscription_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscription
          format: uri
          type: string
        svn_url:
          example: https://svn.github.com/octocat/Hello-World
          format: uri
          type: string
        tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/tags
          format: uri
          type: string
        teams_url:
          example: http://api.github.com/repos/octocat/Hello-World/teams
          format: uri
          type: string
        template_repository:
          nullable: true
          properties:
            allow_merge_commit:
              type: boolean
            allow_rebase_merge:
              type: boolean
            allow_squash_merge:
              type: boolean
            anonymous_access_enabled:
              type: boolean
            archive_url:
              type: string
            archived:
              type: boolean
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            clone_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            created_at:
              type: string
            default_branch:
              type: string
            delete_branch_on_merge:
              type: boolean
            deployments_url:
              type: string
            description:
              type: string
            disabled:
              type: boolean
            downloads_url:
              type: string
            events_url:
              type: string
            fork:
              type: boolean
            forks_count:
              type: integer
            forks_url:
              type: string
            full_name:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            has_downloads:
              type: boolean
            has_issues:
              type: boolean
            has_pages:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            homepage:
              type: string
            hooks_url:
              type: string
            html_url:
              type: string
            id:
              type: integer
            is_template:
              type: boolean
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            language:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            mirror_url:
              type: string
            name:
              type: string
            network_count:
              type: integer
            node_id:
              type: string
            notifications_url:
              type: string
            open_issues_count:
              type: integer
            owner:
              properties:
                avatar_url:
                  type: string
                events_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                html_url:
                  type: string
                id:
                  type: integer
                login:
                  type: string
                node_id:
                  type: string
                organizations_url:
                  type: string
                received_events_url:
                  type: string
                repos_url:
                  type: string
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                type:
                  type: string
                url:
                  type: string
              type: object
            permissions:
              properties:
                admin:
                  type: boolean
                pull:
                  type: boolean
                push:
                  type: boolean
              type: object
            private:
              type: boolean
            pulls_url:
              type: string
            pushed_at:
              type: string
            releases_url:
              type: string
            size:
              type: integer
            ssh_url:
              type: string
            stargazers_count:
              type: integer
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_count:
              type: integer
            subscribers_url:
              type: string
            subscription_url:
              type: string
            svn_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            topics:
              items:
                type: string
              type: array
            trees_url:
              type: string
            updated_at:
              type: string
            url:
              type: string
            visibility:
              type: string
            watchers_count:
              type: integer
          type: object
        topics:
          items:
            type: string
          type: array
        trees_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          type: string
        updated_at:
          example: 2011-01-26T19:14:43Z
          format: date-time
          nullable: true
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World
          format: uri
          type: string
        visibility:
          default: public
          description: "The repository visibility: public, private, or internal."
          type: string
        watchers:
          type: integer
        watchers_count:
          example: 80
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
      title: Repository
      type: object
    repository-collaborator-permission:
      description: Repository Collaborator Permission
      properties:
        permission:
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - permission
        - user
      title: Repository Collaborator Permission
      type: object
    repository-invitation:
      description: Repository invitations let you manage who you collaborate with.
      properties:
        created_at:
          example: 2016-06-13T14:52:50-05:00
          format: date-time
          type: string
        expired:
          description: Whether or not the invitation has expired
          type: boolean
        html_url:
          example: https://github.com/octocat/Hello-World/invitations
          type: string
        id:
          description: Unique identifier of the repository invitation.
          example: 42
          type: integer
        invitee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        inviter:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        node_id:
          type: string
        permissions:
          description: The permission associated with the invitation.
          enum:
            - read
            - write
            - admin
            - triage
            - maintain
          example: read
          type: string
        repository:
          $ref: "#/components/schemas/minimal-repository"
        url:
          description: URL for the repository invitation
          example: https://api.github.com/user/repository-invitations/1
          type: string
      required:
        - id
        - node_id
        - permissions
        - inviter
        - invitee
        - repository
        - url
        - html_url
        - created_at
      title: Repository Invitation
      type: object
    repository-pre-receive-hook:
      properties:
        configuration_url:
          type: string
        enforcement:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    repository-subscription:
      description: Repository invitations let you manage who you collaborate with.
      properties:
        created_at:
          example: 2012-10-06T21:34:12Z
          format: date-time
          type: string
        ignored:
          description: Determines if all notifications should be blocked from this
            repository.
          type: boolean
        reason:
          nullable: true
          type: string
        repository_url:
          example: https://api.github.com/repos/octocat/example
          format: uri
          type: string
        subscribed:
          description: Determines if notifications should be received from this repository.
          example: true
          type: boolean
        url:
          example: https://api.github.com/repos/octocat/example/subscription
          format: uri
          type: string
      required:
        - created_at
        - ignored
        - reason
        - subscribed
        - url
        - repository_url
      title: Repository Invitation
      type: object
    review-comment:
      description: Legacy Review Comment
      properties:
        _links:
          properties:
            html:
              $ref: "#/components/schemas/link"
            pull_request:
              $ref: "#/components/schemas/link"
            self:
              $ref: "#/components/schemas/link"
          required:
            - self
            - html
            - pull_request
          type: object
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          example: Great stuff
          type: string
        body_html:
          type: string
        body_text:
          type: string
        commit_id:
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        created_at:
          example: 2011-04-14T16:00:49Z
          format: date-time
          type: string
        diff_hunk:
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          format: uri
          type: string
        id:
          example: 10
          type: integer
        in_reply_to_id:
          example: 8
          type: integer
        line:
          description: The line of the blob to which the comment applies. The last line of
            the range for a multi-line comment
          example: 2
          type: integer
        node_id:
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
          type: string
        original_commit_id:
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          type: string
        original_line:
          description: The original line of the blob to which the comment applies. The
            last line of the range for a multi-line comment
          example: 2
          type: integer
        original_position:
          example: 4
          type: integer
        original_start_line:
          description: The original first line of the range for a multi-line comment.
          example: 2
          nullable: true
          type: integer
        path:
          example: file1.txt
          type: string
        position:
          example: 1
          nullable: true
          type: integer
        pull_request_review_id:
          example: 42
          nullable: true
          type: integer
        pull_request_url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
          format: uri
          type: string
        side:
          default: RIGHT
          description: The side of the first line of the range for a multi-line comment.
          enum:
            - LEFT
            - RIGHT
          type: string
        start_line:
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
          type: integer
        start_side:
          default: RIGHT
          description: The side of the first line of the range for a multi-line comment.
          enum:
            - LEFT
            - RIGHT
          nullable: true
          type: string
        updated_at:
          example: 2011-04-14T16:00:49Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - id
        - node_id
        - url
        - body
        - diff_hunk
        - path
        - position
        - original_position
        - commit_id
        - original_commit_id
        - user
        - pull_request_review_id
        - html_url
        - pull_request_url
        - _links
        - author_association
        - created_at
        - updated_at
      title: Legacy Review Comment
      type: object
    scim-error:
      description: Scim Error
      properties:
        detail:
          nullable: true
          type: string
        documentation_url:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        schemas:
          items:
            type: string
          type: array
        scimType:
          nullable: true
          type: string
        status:
          type: integer
      title: Scim Error
      type: object
    scoped-installation:
      properties:
        account:
          $ref: "#/components/schemas/simple-user"
        has_multiple_single_files:
          example: true
          type: boolean
        permissions:
          $ref: "#/components/schemas/app-permissions"
        repositories_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        repository_selection:
          description: Describe whether all repositories have been selected or there's a
            selection involved
          enum:
            - all
            - selected
          type: string
        single_file_name:
          example: config.yaml
          nullable: true
          type: string
        single_file_paths:
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
          items:
            type: string
          type: array
      required:
        - permissions
        - repository_selection
        - single_file_name
        - repositories_url
        - account
      title: Scoped Installation
      type: object
    search-result-text-matches:
      items:
        properties:
          fragment:
            type: string
          matches:
            items:
              properties:
                indices:
                  items:
                    type: integer
                  type: array
                text:
                  type: string
              type: object
            type: array
          object_type:
            nullable: true
            type: string
          object_url:
            type: string
          property:
            type: string
        type: object
      title: Search Result Text Matches
      type: array
    short-blob:
      description: Short Blob
      properties:
        sha:
          type: string
        url:
          type: string
      required:
        - url
        - sha
      title: Short Blob
      type: object
    short-branch:
      description: Short Branch
      properties:
        commit:
          properties:
            sha:
              type: string
            url:
              format: uri
              type: string
          required:
            - sha
            - url
          type: object
        name:
          type: string
        protected:
          type: boolean
        protection:
          $ref: "#/components/schemas/branch-protection"
        protection_url:
          format: uri
          type: string
      required:
        - name
        - commit
        - protected
      title: Short Branch
      type: object
    simple-commit:
      description: Simple Commit
      properties:
        author:
          nullable: true
          properties:
            email:
              type: string
            name:
              type: string
          required:
            - name
            - email
          type: object
        committer:
          nullable: true
          properties:
            email:
              type: string
            name:
              type: string
          required:
            - name
            - email
          type: object
        id:
          type: string
        message:
          type: string
        timestamp:
          format: date-time
          type: string
        tree_id:
          type: string
      required:
        - id
        - tree_id
        - message
        - timestamp
        - author
        - committer
      title: Simple Commit
      type: object
    simple-commit-status:
      properties:
        avatar_url:
          format: uri
          nullable: true
          type: string
        context:
          type: string
        created_at:
          format: date-time
          type: string
        description:
          nullable: true
          type: string
        id:
          type: integer
        node_id:
          type: string
        required:
          nullable: true
          type: boolean
        state:
          type: string
        target_url:
          format: uri
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
      required:
        - description
        - id
        - node_id
        - state
        - context
        - target_url
        - avatar_url
        - url
        - created_at
        - updated_at
      title: Simple Commit Status
      type: object
    simple-user:
      description: Simple User
      nullable: true
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          format: uri
          type: string
        events_url:
          example: https://api.github.com/users/octocat/events{/privacy}
          type: string
        followers_url:
          example: https://api.github.com/users/octocat/followers
          format: uri
          type: string
        following_url:
          example: https://api.github.com/users/octocat/following{/other_user}
          type: string
        gists_url:
          example: https://api.github.com/users/octocat/gists{/gist_id}
          type: string
        gravatar_id:
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
          type: string
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          type: integer
        login:
          example: octocat
          type: string
        node_id:
          example: MDQ6VXNlcjE=
          type: string
        organizations_url:
          example: https://api.github.com/users/octocat/orgs
          format: uri
          type: string
        received_events_url:
          example: https://api.github.com/users/octocat/received_events
          format: uri
          type: string
        repos_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_at:
          example: '"2020-07-09T00:17:55Z"'
          type: string
        starred_url:
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
          type: string
        subscriptions_url:
          example: https://api.github.com/users/octocat/subscriptions
          format: uri
          type: string
        type:
          example: User
          type: string
        url:
          example: https://api.github.com/users/octocat
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      title: Simple User
      type: object
    ssh-key:
      properties:
        key:
          type: string
        pretty-print:
          type: string
      type: object
    stargazer:
      description: Stargazer
      properties:
        starred_at:
          format: date-time
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - starred_at
        - user
      title: Stargazer
      type: object
    starred-repository:
      description: Starred Repository
      properties:
        repo:
          $ref: "#/components/schemas/repository"
        starred_at:
          format: date-time
          type: string
      required:
        - starred_at
        - repo
      title: Starred Repository
      type: object
    status:
      description: The status of a commit.
      properties:
        avatar_url:
          nullable: true
          type: string
        context:
          type: string
        created_at:
          type: string
        creator:
          $ref: "#/components/schemas/simple-user"
        description:
          type: string
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        target_url:
          type: string
        updated_at:
          type: string
        url:
          type: string
      required:
        - url
        - avatar_url
        - id
        - node_id
        - state
        - description
        - target_url
        - context
        - created_at
        - updated_at
        - creator
      title: Status
      type: object
    status-check-policy:
      description: Status Check Policy
      properties:
        contexts:
          example:
            - continuous-integration/travis-ci
          items:
            type: string
          type: array
        contexts_url:
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
          format: uri
          type: string
        strict:
          example: true
          type: boolean
        url:
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
          format: uri
          type: string
      required:
        - url
        - contexts_url
        - strict
        - contexts
      title: Status Check Policy
      type: object
    tag:
      description: Tag
      properties:
        commit:
          properties:
            sha:
              type: string
            url:
              format: uri
              type: string
          required:
            - sha
            - url
          type: object
        name:
          example: v0.1
          type: string
        node_id:
          type: string
        tarball_url:
          example: https://github.com/octocat/Hello-World/tarball/v0.1
          format: uri
          type: string
        zipball_url:
          example: https://github.com/octocat/Hello-World/zipball/v0.1
          format: uri
          type: string
      required:
        - name
        - node_id
        - commit
        - zipball_url
        - tarball_url
      title: Tag
      type: object
    team:
      description: Groups of organization members that gives permissions on specified
        repositories.
      properties:
        description:
          nullable: true
          type: string
        html_url:
          example: https://github.com/orgs/rails/teams/core
          format: uri
          type: string
        id:
          type: integer
        members_url:
          type: string
        name:
          type: string
        node_id:
          type: string
        parent:
          allOf:
            - $ref: "#/components/schemas/team-simple"
          nullable: true
        permission:
          type: string
        privacy:
          type: string
        repositories_url:
          format: uri
          type: string
        slug:
          type: string
        url:
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
      title: Team
      type: object
    team-discussion:
      description: A team discussion is a persistent record of a free-form
        conversation within a team.
      properties:
        author:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        body:
          description: The main text of the discussion.
          example: Please suggest improvements to our workflow in comments.
          type: string
        body_html:
          example: <p>Hi! This is an area for us to collaborate as a team</p>
          type: string
        body_version:
          description: The current version of the body content. If provided, this update
            operation will be rejected if the given version does not match the
            latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        comments_count:
          example: 0
          type: integer
        comments_url:
          example: https://api.github.com/organizations/1/team/2343027/discussions/1/comments
          format: uri
          type: string
        created_at:
          example: 2018-01-25T18:56:31Z
          format: date-time
          type: string
        html_url:
          example: https://github.com/orgs/github/teams/justice-league/discussions/1
          format: uri
          type: string
        last_edited_at:
          format: date-time
          nullable: true
          type: string
        node_id:
          example: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
          type: string
        number:
          description: The unique sequence number of a team discussion.
          example: 42
          type: integer
        pinned:
          description: Whether or not this discussion should be pinned for easy retrieval.
          example: true
          type: boolean
        private:
          description: Whether or not this discussion should be restricted to team members
            and organization administrators.
          example: true
          type: boolean
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        team_url:
          example: https://api.github.com/organizations/1/team/2343027
          format: uri
          type: string
        title:
          description: The title of the discussion.
          example: How can we improve our workflow?
          type: string
        updated_at:
          example: 2018-01-25T18:56:31Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/organizations/1/team/2343027/discussions/1
          format: uri
          type: string
      required:
        - author
        - body
        - body_html
        - body_version
        - comments_count
        - comments_url
        - created_at
        - last_edited_at
        - html_url
        - pinned
        - private
        - node_id
        - number
        - team_url
        - title
        - updated_at
        - url
      title: Team Discussion
      type: object
    team-discussion-comment:
      description: A reply to a discussion within a team.
      properties:
        author:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        body:
          description: The main text of the comment.
          example: I agree with this suggestion.
          type: string
        body_html:
          example: <p>Do you like apples?</p>
          type: string
        body_version:
          description: The current version of the body content. If provided, this update
            operation will be rejected if the given version does not match the
            latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        created_at:
          example: 2018-01-15T23:53:58Z
          format: date-time
          type: string
        discussion_url:
          example: https://api.github.com/organizations/1/team/2403582/discussions/1
          format: uri
          type: string
        html_url:
          example: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
          format: uri
          type: string
        last_edited_at:
          format: date-time
          nullable: true
          type: string
        node_id:
          example: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
          type: string
        number:
          description: The unique sequence number of a team discussion comment.
          example: 42
          type: integer
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        updated_at:
          example: 2018-01-15T23:53:58Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1
          format: uri
          type: string
      required:
        - author
        - body
        - body_html
        - body_version
        - created_at
        - last_edited_at
        - discussion_url
        - html_url
        - node_id
        - number
        - updated_at
        - url
      title: Team Discussion Comment
      type: object
    team-full:
      description: Groups of organization members that gives permissions on specified
        repositories.
      properties:
        created_at:
          example: 2017-07-14T16:53:42Z
          format: date-time
          type: string
        description:
          example: A great team.
          nullable: true
          type: string
        html_url:
          example: https://github.com/orgs/rails/teams/core
          format: uri
          type: string
        id:
          description: Unique identifier of the team
          example: 42
          type: integer
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
        members_count:
          example: 3
          type: integer
        members_url:
          example: https://api.github.com/organizations/1/team/1/members{/member}
          type: string
        name:
          description: Name of the team
          example: Developers
          type: string
        node_id:
          example: MDQ6VGVhbTE=
          type: string
        organization:
          $ref: "#/components/schemas/organization-full"
        parent:
          allOf:
            - $ref: "#/components/schemas/team-simple"
          nullable: true
        permission:
          description: Permission that the team will have for its repositories
          example: push
          type: string
        privacy:
          description: The level of privacy this team should have
          enum:
            - closed
            - secret
          example: closed
          type: string
        repos_count:
          example: 10
          type: integer
        repositories_url:
          example: https://api.github.com/organizations/1/team/1/repos
          format: uri
          type: string
        slug:
          example: justice-league
          type: string
        updated_at:
          example: 2017-08-17T12:37:15Z
          format: date-time
          type: string
        url:
          description: URL for the team
          example: https://api.github.com/organizations/1/team/1
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
        - created_at
        - updated_at
        - members_count
        - repos_count
        - organization
      title: Full Team
      type: object
    team-membership:
      description: Team Membership
      properties:
        role:
          default: member
          description: The role of the user in the team.
          enum:
            - member
            - maintainer
          example: member
          type: string
        state:
          description: The state of the user's membership in the team.
          enum:
            - active
            - pending
          type: string
        url:
          format: uri
          type: string
      required:
        - role
        - state
        - url
      title: Team Membership
      type: object
    team-project:
      description: A team's access to a project.
      properties:
        body:
          nullable: true
          type: string
        columns_url:
          type: string
        created_at:
          type: string
        creator:
          $ref: "#/components/schemas/simple-user"
        html_url:
          type: string
        id:
          type: integer
        name:
          type: string
        node_id:
          type: string
        number:
          type: integer
        organization_permission:
          description: The organization permission for this project. Only present when
            owner is an organization.
          type: string
        owner_url:
          type: string
        permissions:
          properties:
            admin:
              type: boolean
            read:
              type: boolean
            write:
              type: boolean
          required:
            - read
            - write
            - admin
          type: object
        private:
          description: Whether the project is private or not. Only present when owner is
            an organization.
          type: boolean
        state:
          type: string
        updated_at:
          type: string
        url:
          type: string
      required:
        - owner_url
        - url
        - html_url
        - columns_url
        - id
        - node_id
        - name
        - body
        - number
        - state
        - creator
        - created_at
        - updated_at
        - permissions
      title: Team Project
      type: object
    team-repository:
      description: A team's access to a repository.
      properties:
        allow_merge_commit:
          default: true
          description: Whether to allow merge commits for pull requests.
          example: true
          type: boolean
        allow_rebase_merge:
          default: true
          description: Whether to allow rebase merges for pull requests.
          example: true
          type: boolean
        allow_squash_merge:
          default: true
          description: Whether to allow squash merges for pull requests.
          example: true
          type: boolean
        anonymous_access_enabled:
          type: boolean
        archive_url:
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          type: string
        archived:
          default: false
          description: Whether the repository is archived.
          type: boolean
        assignees_url:
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
          type: string
        blobs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          type: string
        branches_url:
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
          type: string
        clone_url:
          example: https://github.com/octocat/Hello-World.git
          type: string
        collaborators_url:
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          type: string
        comments_url:
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
          type: string
        commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
          type: string
        compare_url:
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          type: string
        contents_url:
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
          type: string
        contributors_url:
          example: http://api.github.com/repos/octocat/Hello-World/contributors
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        default_branch:
          description: The default branch of the repository.
          example: master
          type: string
        delete_branch_on_merge:
          default: false
          description: Whether to delete head branches when pull requests are merged
          example: false
          type: boolean
        deployments_url:
          example: http://api.github.com/repos/octocat/Hello-World/deployments
          format: uri
          type: string
        description:
          example: This your first repo!
          nullable: true
          type: string
        disabled:
          description: Returns whether or not this repository disabled.
          type: boolean
        downloads_url:
          example: http://api.github.com/repos/octocat/Hello-World/downloads
          format: uri
          type: string
        events_url:
          example: http://api.github.com/repos/octocat/Hello-World/events
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          type: integer
        forks_count:
          example: 9
          type: integer
        forks_url:
          example: http://api.github.com/repos/octocat/Hello-World/forks
          format: uri
          type: string
        full_name:
          example: octocat/Hello-World
          type: string
        git_commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          type: string
        git_refs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          type: string
        git_tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          type: string
        git_url:
          example: git:github.com/octocat/Hello-World.git
          type: string
        has_downloads:
          default: true
          description: Whether downloads are enabled.
          example: true
          type: boolean
        has_issues:
          default: true
          description: Whether issues are enabled.
          example: true
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          default: true
          description: Whether projects are enabled.
          example: true
          type: boolean
        has_wiki:
          default: true
          description: Whether the wiki is enabled.
          example: true
          type: boolean
        homepage:
          example: https://github.com
          format: uri
          nullable: true
          type: string
        hooks_url:
          example: http://api.github.com/repos/octocat/Hello-World/hooks
          format: uri
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World
          format: uri
          type: string
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        is_template:
          default: false
          description: Whether this repository acts as a template that can be used to
            generate new repositories.
          example: true
          type: boolean
        issue_comment_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          type: string
        issue_events_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          type: string
        issues_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
          type: string
        keys_url:
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          type: string
        labels_url:
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          example: http://api.github.com/repos/octocat/Hello-World/languages
          format: uri
          type: string
        license:
          allOf:
            - $ref: "#/components/schemas/license-simple"
          nullable: true
        master_branch:
          type: string
        merges_url:
          example: http://api.github.com/repos/octocat/Hello-World/merges
          format: uri
          type: string
        milestones_url:
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
          type: string
        mirror_url:
          example: git:git.example.com/octocat/Hello-World
          format: uri
          nullable: true
          type: string
        name:
          description: The name of the repository.
          example: Team Environment
          type: string
        network_count:
          type: integer
        node_id:
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          type: string
        notifications_url:
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          type: string
        open_issues:
          type: integer
        open_issues_count:
          example: 0
          type: integer
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        permissions:
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
          required:
            - admin
            - pull
            - push
          type: object
        private:
          default: false
          description: Whether the repository is private or public.
          type: boolean
        pulls_url:
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
          type: string
        pushed_at:
          example: 2011-01-26T19:06:43Z
          format: date-time
          nullable: true
          type: string
        releases_url:
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          type: string
        size:
          example: 108
          type: integer
        ssh_url:
          example: git@github.com:octocat/Hello-World.git
          type: string
        stargazers_count:
          example: 80
          type: integer
        stargazers_url:
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
          format: uri
          type: string
        statuses_url:
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          type: string
        subscribers_count:
          type: integer
        subscribers_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
          format: uri
          type: string
        subscription_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscription
          format: uri
          type: string
        svn_url:
          example: https://svn.github.com/octocat/Hello-World
          format: uri
          type: string
        tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/tags
          format: uri
          type: string
        teams_url:
          example: http://api.github.com/repos/octocat/Hello-World/teams
          format: uri
          type: string
        template_repository:
          allOf:
            - $ref: "#/components/schemas/repository"
          nullable: true
          properties:
            anonymous_access_enabled:
              type: boolean
          type: object
        topics:
          items:
            type: string
          type: array
        trees_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          type: string
        updated_at:
          example: 2011-01-26T19:14:43Z
          format: date-time
          nullable: true
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World
          format: uri
          type: string
        visibility:
          default: public
          description: "The repository visibility: public, private, or internal."
          type: string
        watchers:
          type: integer
        watchers_count:
          example: 80
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
      title: Team Repository
      type: object
    team-simple:
      description: Groups of organization members that gives permissions on specified
        repositories.
      nullable: true
      properties:
        description:
          description: Description of the team
          example: A great team.
          nullable: true
          type: string
        html_url:
          example: https://github.com/orgs/rails/teams/core
          format: uri
          type: string
        id:
          description: Unique identifier of the team
          example: 1
          type: integer
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
        members_url:
          example: https://api.github.com/organizations/1/team/1/members{/member}
          type: string
        name:
          description: Name of the team
          example: Justice League
          type: string
        node_id:
          example: MDQ6VGVhbTE=
          type: string
        permission:
          description: Permission that the team will have for its repositories
          example: admin
          type: string
        privacy:
          description: The level of privacy this team should have
          example: closed
          type: string
        repositories_url:
          example: https://api.github.com/organizations/1/team/1/repos
          format: uri
          type: string
        slug:
          example: justice-league
          type: string
        url:
          description: URL for the team
          example: https://api.github.com/organizations/1/team/1
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
      title: Team Simple
      type: object
    thread:
      description: Thread
      properties:
        id:
          type: string
        last_read_at:
          nullable: true
          type: string
        reason:
          type: string
        repository:
          $ref: "#/components/schemas/minimal-repository"
        subject:
          properties:
            latest_comment_url:
              type: string
            title:
              type: string
            type:
              type: string
            url:
              type: string
          required:
            - title
            - url
            - latest_comment_url
            - type
          type: object
        subscription_url:
          example: https://api.github.com/notifications/threads/2/subscription
          type: string
        unread:
          type: boolean
        updated_at:
          type: string
        url:
          type: string
      required:
        - id
        - unread
        - reason
        - updated_at
        - last_read_at
        - subject
        - repository
        - url
        - subscription_url
      title: Thread
      type: object
    thread-subscription:
      description: Thread Subscription
      properties:
        created_at:
          example: 2012-10-06T21:34:12Z
          format: date-time
          nullable: true
          type: string
        ignored:
          type: boolean
        reason:
          nullable: true
          type: string
        repository_url:
          example: https://api.github.com/repos/1
          format: uri
          type: string
        subscribed:
          example: true
          type: boolean
        thread_url:
          example: https://api.github.com/notifications/threads/1
          format: uri
          type: string
        url:
          example: https://api.github.com/notifications/threads/1/subscription
          format: uri
          type: string
      required:
        - created_at
        - ignored
        - reason
        - url
        - subscribed
      title: Thread Subscription
      type: object
    topic:
      description: A topic aggregates entities that are related to a subject.
      properties:
        names:
          items:
            type: string
          type: array
      required:
        - names
      title: Topic
      type: object
    topic-search-result-item:
      description: Topic Search Result Item
      properties:
        aliases:
          items:
            properties:
              topic_relation:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  relation_type:
                    type: string
                  topic_id:
                    type: integer
                type: object
            type: object
          nullable: true
          type: array
        created_at:
          format: date-time
          type: string
        created_by:
          nullable: true
          type: string
        curated:
          type: boolean
        description:
          nullable: true
          type: string
        display_name:
          nullable: true
          type: string
        featured:
          type: boolean
        logo_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        related:
          items:
            properties:
              topic_relation:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  relation_type:
                    type: string
                  topic_id:
                    type: integer
                type: object
            type: object
          nullable: true
          type: array
        released:
          nullable: true
          type: string
        repository_count:
          nullable: true
          type: integer
        score:
          type: number
        short_description:
          nullable: true
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        updated_at:
          format: date-time
          type: string
      required:
        - name
        - display_name
        - short_description
        - description
        - created_by
        - released
        - created_at
        - updated_at
        - featured
        - curated
        - score
      title: Topic Search Result Item
      type: object
    user-search-result-item:
      description: User Search Result Item
      properties:
        avatar_url:
          format: uri
          type: string
        bio:
          nullable: true
          type: string
        blog:
          nullable: true
          type: string
        company:
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        email:
          format: email
          nullable: true
          type: string
        events_url:
          type: string
        followers:
          type: integer
        followers_url:
          format: uri
          type: string
        following:
          type: integer
        following_url:
          type: string
        gists_url:
          type: string
        gravatar_id:
          nullable: true
          type: string
        hireable:
          nullable: true
          type: boolean
        html_url:
          format: uri
          type: string
        id:
          type: integer
        location:
          nullable: true
          type: string
        login:
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
        organizations_url:
          format: uri
          type: string
        public_gists:
          type: integer
        public_repos:
          type: integer
        received_events_url:
          format: uri
          type: string
        repos_url:
          format: uri
          type: string
        score:
          type: number
        site_admin:
          type: boolean
        starred_url:
          type: string
        subscriptions_url:
          format: uri
          type: string
        suspended_at:
          format: date-time
          nullable: true
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        type:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - score
      title: User Search Result Item
      type: object
    validation-error:
      description: Validation Error
      properties:
        documentation_url:
          type: string
        errors:
          items:
            properties:
              code:
                type: string
              field:
                type: string
              index:
                type: integer
              message:
                type: string
              resource:
                type: string
              value:
                oneOf:
                  - nullable: true
                    type: string
                  - nullable: true
                    type: integer
                  - items:
                      type: string
                    nullable: true
                    type: array
            required:
              - code
            type: object
          type: array
        message:
          type: string
      required:
        - message
        - documentation_url
      title: Validation Error
      type: object
    validation-error-simple:
      description: Validation Error Simple
      properties:
        documentation_url:
          type: string
        errors:
          items:
            type: string
          type: array
        message:
          type: string
      required:
        - message
        - documentation_url
      title: Validation Error Simple
      type: object
    verification:
      properties:
        payload:
          nullable: true
          type: string
        reason:
          type: string
        signature:
          nullable: true
          type: string
        verified:
          type: boolean
      required:
        - verified
        - reason
        - payload
        - signature
      title: Verification
      type: object
    webhook-config-content-type:
      description: The media type used to serialize the payloads. Supported values
        include `json` and `form`. The default is `form`.
      example: '"json"'
      type: string
    webhook-config-insecure-ssl:
      oneOf:
        - description: Determines whether the SSL certificate of the host for `url` will
            be verified when delivering payloads. Supported values include `0`
            (verification is performed) and `1` (verification is not performed).
            The default is `0`. **We strongly recommend not setting this to `1`
            as you are subject to man-in-the-middle and other attacks.**
          example: '"0"'
          type: string
        - type: number
    webhook-config-secret:
      description: If provided, the `secret` will be used as the `key` to generate the
        HMAC hex digest value for [delivery signature
        headers](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#delivery-headers).
      example: '"********"'
      type: string
    webhook-config-url:
      description: The URL to which the payloads will be delivered.
      example: https://example.com/webhook
      format: uri
      type: string
