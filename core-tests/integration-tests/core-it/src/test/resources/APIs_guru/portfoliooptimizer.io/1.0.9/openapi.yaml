openapi: 3.0.1
servers:
  - url: https://api.portfoliooptimizer.io/v1
  - url: https://eu-west-1.api.portfoliooptimizer.io/v1
info:
  contact:
    email: contact@portfoliooptimizer.io
    name: Support
    url: https://portfoliooptimizer.io/
  description: |
    Portfolio Optimizer is a [Web API](https://en.wikipedia.org/wiki/Web_API) to optimize the composition of investment portfolios (collection of financial assets such as stocks, bonds, ETFs, crypto-currencies) using modern portfolio theory-like algorithms (mean-variance, etc.).

    # API General Information

    Portfolio Optimizer is based on [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) for easy integration, uses [JSON](https://en.wikipedia.org/wiki/JSON) for the exchange of data and uses the two most common [HTTP verbs](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods) (`GET`, `POST`) to represent the actions.

    Portfolio Optimizer is also as secured as a Web API could be: 
    * [256-bit HTTPS Encryption](https://en.wikipedia.org/wiki/HTTPS)
    * No usage of cookies
    * No usage of personal data  

    ## API Headers 
    The following HTTP header(s) are required when calling Portfolio Optimizer endpoints:
    * `Content-type: application/json`  
      This header specifies that the data provided in input to the endpoint is in JSON format

    The following HTTP header(s) are optional when calling Portfolio Optimizer endpoints:
    * `X-API-Key: <private API key>`  
      This header enables [authenticated users](#auth) to provide their private [API key](#overview--api-key) in order to [benefit from higher API limits](#overview--api-limits)

    ## API Key
    Portfolio Optimizer is free to use, but not free to run.

    In order to obtain an API key and benefit from [higher API limits](#overview--api-limits), a *small* participation to Portfolio Optimizer running costs is required.

    This participation takes the form of coffee(s), with one coffee = one month of usage.

    <p><a href="https://www.buymeacoffee.com/portfolioopt"><img alt='Buy a Coffee at buymeacoffee.com' src="https://img.buymeacoffee.com/button-api/?text=Buymeacoffee.com&emoji=&slug=portfolioopt&button_colour=000000&font_colour=ffffff&font_family=Cookie&outline_colour=ffffff&coffee_colour=FFDD00"></a></p>


    > **Notes:** 
    > * Please make sure not to expose your API key publicly!

    ## API Limits 

    Portfolio Optimizer comes with *fairly reasonable* API limits.

    For anonymous users:  
    * The API requests are restricted to a subset of all the available endpoints and/or endpoints features  
    * The API requests are limited to 1 request per second for all the anonymous users combined, with concurrent requests rejected 
    * The API requests are limited to 1 second of execution time
    * The API requests are limited to 20 assets, 100 portfolios, 500 series data points and 5 factors

    For authenticated users with an [API key](#overview--api-key):  
    * The API requests have access to all the available endpoints and endpoints features
    * The API requests are limited to 10000 requests per 24 hour per API key, with concurrent requests queued
    * The API requests are limited to 2.5 seconds of execution time
    * The API requests are limited to 100 assets, 500 portfolios, 2500 series data points and 25 factors

    > **Notes:** 
    > * It is possible to further relax the API limits, or to disable the API limits alltogether; please [contact the support](https://portfoliooptimizer.io/contact/) for more details.
    > * Information on the API rate limits are provided in response messages HTTP headers `x-ratelimit-*`:  
    >   * `x-ratelimit-limit-second`, the limit on the number of API requests per second
    >   * `x-ratelimit-remaining-second`, the number of remaining API requests in the current second    
    >   * `x-ratelimit-limit-minute`, the limit on the number of API requests per minute
    >   * ...

    ## API Regions
    Portfolio Optimizer servers are located in Western Europe.

    > **Notes:** 
    > * It is possible to deploy Portfolio Optimizer in other geographical regions, for example to improve the API latency; please [contact the support](https://portfoliooptimizer.io/contact/) for more details. 

    ## API Response Codes       

    Standard [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) are used by Portfolio Optimizer to provide details on the status of API requests.

    | HTTP Code | Description | Notes |
    | --------- | ----------- | ----- |
    | 200 | Request successfully processed | - |
    | 400 | Request failed to be processed because of incorrect content | The response message body contains information on the incorrect content |
    | 401 | Request failed to be processed because of invalid API key | - |
    | 404 | Request failed to be processed because of non existing endpoint | The requested endpoint might exist, but needs to be accessed with another HTTP method (e.g., `POST` instead of `GET`) |
    | 429 | Request failed to be processed because of API limits violated | The response message HTTP headers `x-ratelimit-*` contain information on the [API limits](#overview--api-limits) |
    | 500 | Request failed to be processed because of an internal error | Something went wrong on Portfolio Optimizer side, do not hesitate to [report the issue](#overview--support) |
    | 502 | Request failed to be processed because of a temporary connectivity error | Something went wrong on Portfolio Optimizer side, please check the [API status](#overview--api-status) and do not hesitate to [report the issue](#overview--support) |

    ## API Status  

    Portfolio Optimizer is monitored 24/7 by [UptimeRobot](https://stats.uptimerobot.com/wgW71SL1AW).

    # Support

    For any issue or question about Portfolio Optimizer, please do not hesitate to [contact the support](https://portfoliooptimizer.io/contact/).
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://portfoliooptimizer.io/terms-of-service
  title: Portfolio Optimizer
  version: 1.0.9
  x-apisguru-categories:
    - financial
  x-logo:
    url: https://portfoliooptimizer.io/assets/images/88x88.png
  x-origin:
    - format: openapi
      url: https://docs.portfoliooptimizer.io/openapi/portfoliooptimizer.yaml
      version: "3.0"
  x-providerName: portfoliooptimizer.io
externalDocs:
  description: External documentation
  url: https://docs.portfoliooptimizer.io/
security:
  - ApiKeyAuth: []
tags:
  - name: Assets Correlation Matrix
  - name: Assets Covariance Matrix
  - name: Assets Returns
  - name: Assets Variance
  - name: Assets Volatility
  - name: Factors
  - name: Portfolio Analysis
  - name: Portfolio Construction
  - name: Portfolio Generation
  - name: Portfolio Optimization
paths:
  /assets/correlation/matrix:
    post:
      description: |
        Compute the Pearson correlation matrix of assets from either:  
        * The assets returns
        * The assets covariance matrix

        References
        * [Wikipedia, Correlation and Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)
      requestBody:
        content:
          application/json:
            examples:
              From covariance matrix:
                description: Computes the correlation matrix of 2 assets based on their covariance matrix
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.01
                      - -0.0025
                    - - -0.0025
                      - 0.0025
              From returns:
                description: Computes the correlation matrix of 2 assets based on 4 returns per asset
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
            schema:
              oneOf:
                - properties:
                    assets:
                      items:
                        properties:
                          assetReturns:
                            description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - assetReturns
                        type: object
                      minItems: 2
                      type: array
                  required:
                    - assets
                  type: object
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 2
                      type: integer
                    assetsCovarianceMatrix:
                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                  required:
                    - assets
                    - assetsCovarianceMatrix
                  type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed correlation matrix
                  value:
                    assetsCorrelationMatrix:
                      - - 1
                        - 0.5
                      - - 0.5
                        - 1
              schema:
                properties:
                  assetsCorrelationMatrix:
                    description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 2
                    type: array
                required:
                  - assetsCorrelationMatrix
                type: object
          description: OK
      summary: Correlation Matrix
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/correlation/matrix/nearest:
    post:
      description: |
        Compute the _closest_ correlation matrix to an approximate assets correlation matrix, optionally keeping a selected number of correlations fixed, _closest_ being defined in terms of [the Frobenius norm](https://en.wikipedia.org/wiki/Matrix_norm#Frobenius_norm).

        References
        * [Nicholas J. Higham, Computing the Nearest Correlation Matrix—A Problem from Finance, IMA J. Numer. Anal. 22, 329–343, 2002.](http://www.maths.manchester.ac.uk/~higham/narep/narep369.pdf)
      requestBody:
        content:
          application/json:
            examples:
              Nearest correlation matrix:
                description: Compute the nearest correlation matrix to an approximate correlation matrix
                value:
                  assets: 3
                  assetsApproximateCorrelationMatrix:
                    - - 1
                      - 1
                      - 0
                    - - 1
                      - 1
                      - 1
                    - - 0
                      - 1
                      - 1
              Nearest correlation matrix with fixed a correlation:
                description: Compute the nearest correlation matrix to an approximate correlation matrix, keeping one correlation coefficient fixed
                value:
                  assets: 3
                  assetsApproximateCorrelationMatrix:
                    - - 1
                      - 0.5
                      - 0.9
                    - - 0.5
                      - 1
                      - -0.2
                    - - 0.9
                      - -0.2
                      - 1
                  assetsFixedCorrelations:
                    - - 2
                      - 3
            schema:
              properties:
                assets:
                  minimum: 2
                  type: integer
                assetsApproximateCorrelationMatrix:
                  description: assetsApproximateCorrelationMatrix[i][i] is the approximate correlation between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsFixedCorrelations:
                  description: assetsFixedCorrelations[k] is the couple of indices (i,j) of the assets i and j for which to keep the approximate correlation assetsApproximateCorrelationMatrix[i][j] fixed
                  items:
                    items:
                      type: integer
                    maxItems: 2
                    minItems: 2
                    type: array
                  type: array
              required:
                - assets
                - assetsApproximateCorrelationMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Nearest correlation matrix:
                  description: Computed nearest correlation matrix
                  value:
                    assetsCorrelationMatrix:
                      - - 1
                        - 0.7606306078350177
                        - 0.15733356650676536
                      - - 0.7606306078350177
                        - 1
                        - 0.7606306078350177
                      - - 0.15733356650676536
                        - 0.7606306078350177
                        - 1
                Nearest correlation matrix with fixed a correlation:
                  description: Computed nearest correlation matrix keeping one correlation coefficient fixed
                  value:
                    assetsCorrelationMatrix:
                      - - 1
                        - 0.4314569968899409
                        - 0.7974943959465133
                      - - 0.4314569968899409
                        - 1
                        - -0.2
                      - - 0.7974943959465133
                        - -0.2
                        - 1
              schema:
                properties:
                  assetsCorrelationMatrix:
                    description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 2
                    type: array
                required:
                  - assetsCorrelationMatrix
                type: object
          description: OK
      summary: Nearest Correlation Matrix
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/correlation/matrix/shrinkage:
    post:
      description: |
        Compute a correlation matrix as a weighted average of an assets correlation matrix and a target correlation matrix, the target correlation matrix being either:  
        * An equicorrelation matrix made of 1
        * An equicorrelation matrix made of 0
        * An equicorrelation matrix made of -1/(n-1), with n the number of assets
        * A provided correlation matrix

        References
        * [Steiner, Andreas, Manipulating Valid Correlation Matrices](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1878165)
      requestBody:
        content:
          application/json:
            examples:
              Shrinkage toward a provided correlation matrix:
                description: Shrinkage toward a provided correlation matrix, here the identity matrix
                value:
                  assets: 3
                  assetsCorrelationMatrix:
                    - - 1
                      - 0.5
                      - 0.9
                    - - 0.5
                      - 1
                      - 0.7
                    - - 0.9
                      - 0.7
                      - 1
                  shrinkageFactor: 0.5
                  shrinkageTargetCorrelationMatrix:
                    - - 1
                      - 0
                      - 0
                    - - 0
                      - 1
                      - 0
                    - - 0
                      - 0
                      - 1
              Shrinkage toward an equicorrelation matrix:
                description: Shrinkage toward the equicorrelation matrix made of 1
                value:
                  assets: 3
                  assetsCorrelationMatrix:
                    - - 1
                      - 0.5
                      - 0.9
                    - - 0.5
                      - 1
                      - 0.7
                    - - 0.9
                      - 0.7
                      - 1
                  shrinkageFactor: 0.5
                  shrinkageTarget: maximumEquicorrelationMatrix
            schema:
              oneOf:
                - properties:
                    assets:
                      minimum: 2
                      type: integer
                    assetsCorrelationMatrix:
                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                    shrinkageFactor:
                      maximum: 1
                      minimum: 0
                      type: number
                    shrinkageTarget:
                      enum:
                        - minimumEquicorrelationMatrix
                        - zeroEquicorrelationMatrix
                        - maximumEquicorrelationMatrix
                      type: string
                  required:
                    - assets
                    - assetsCorrelationMatrix
                    - shrinkageTarget
                    - shrinkageFactor
                  type: object
                - properties:
                    assets:
                      minimum: 2
                      type: integer
                    assetsCorrelationMatrix:
                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                    shrinkageFactor:
                      maximum: 1
                      minimum: 0
                      type: number
                    shrinkageTargetCorrelationMatrix:
                      description: shrinkageTargetCorrelationMatrix[i][j] is the target correlation between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                  required:
                    - assets
                    - assetsCorrelationMatrix
                    - shrinkageTargetCorrelationMatrix
                    - shrinkageFactor
                  type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Shrinkage:
                  description: Shrunk correlation matrix
                  value:
                    assetsCorrelationMatrix:
                      - - 1
                        - 0.75
                        - 0.95
                      - - 0.75
                        - 1
                        - 0.85
                      - - 0.95
                        - 0.85
                        - 1
              schema:
                properties:
                  assetsCorrelationMatrix:
                    description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 2
                    type: array
                required:
                  - assetsCorrelationMatrix
                type: object
          description: OK
      summary: Correlation Matrix Shrinkage
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/correlation/matrix/validation:
    post:
      description: |
        Validate whether a matrix is a correlation matrix.

        References
        * [Wikipedia, Correlation and Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Validate whether the provided matrix is a correlation matrix
                value:
                  assets: 2
                  assetsCorrelationMatrix:
                    - - 1
                      - -0.00035
                    - - -0.00035
                      - 1
            schema:
              properties:
                assets:
                  minimum: 2
                  type: integer
                assetsCorrelationMatrix:
                  description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
              required:
                - assets
                - assetsCorrelationMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Valid correlation matrix
                  value:
                    message: valid correlation matrix
              schema:
                properties:
                  message:
                    description: Indicates whether the matrix is a valid correlation matrix
                    enum:
                      - valid correlation matrix
                      - invalid correlation matrix - non symmetric matrix
                      - invalid correlation matrix - non positive diagonal elements
                      - invalid correlation matrix - non positive semi-definite matrix
                    type: string
                required:
                  - message
                type: object
          description: OK
      summary: Correlation Matrix Validation
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/covariance/matrix:
    post:
      description: |
        Compute the covariance matrix of assets from either:  
        * The assets correlation matrix and their volatilities (i.e., standard deviations)
        * The assets correlation matrix and their variances
        * The assets returns

        References
        * [Wikipedia, Covariance Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)
      requestBody:
        content:
          application/json:
            examples:
              From assets correlation matrix and standard deviations:
                description: Compute the covariance matrix of 2 assets based on their correlation matrix and their standard deviations
                value:
                  assets: 2
                  assetsCorrelationMatrix:
                    - - 1
                      - -0.5
                    - - -0.5
                      - 1
                  assetsVolatilities:
                    - 0.1
                    - 0.05
              From assets correlation matrix and variances:
                description: Compute the covariance matrix of 2 assets based on their correlation matrix and their variances
                value:
                  assets: 2
                  assetsCorrelationMatrix:
                    - - 1
                      - -0.5
                    - - -0.5
                      - 1
                  assetsVariances:
                    - 0.01
                    - 0.0025
              From assets returns:
                description: Compute the covariance matrix of 2 assets based on 4 returns per asset
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
            schema:
              oneOf:
                - properties:
                    assets:
                      items:
                        properties:
                          assetReturns:
                            description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - assetReturns
                        type: object
                      minItems: 2
                      type: array
                  required:
                    - assets
                  type: object
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 2
                      type: integer
                    assetsCorrelationMatrix:
                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                    assetsVariances:
                      description: assetsVariances[i] is the variance of the asset i
                      items:
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assets
                    - assetsCorrelationMatrix
                    - assetsVariances
                  type: object
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 2
                      type: integer
                    assetsCorrelationMatrix:
                      description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                    assetsVolatilities:
                      description: assetsVolatilities[i] is the volatility of the asset i
                      items:
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assets
                    - assetsCorrelationMatrix
                    - assetsVolatilities
                  type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                From correlation matrix and standard deviations:
                  description: Computed covariance matrix
                  value:
                    assetsCovarianceMatrix:
                      - - 0.010000000000000002
                        - -0.0025000000000000005
                      - - -0.0025000000000000005
                        - 0.0025000000000000005
                From correlation matrix and variances:
                  description: Computed covariance matrix
                  value:
                    assetsCovarianceMatrix:
                      - - 0.010000000000000002
                        - -0.0025000000000000005
                      - - -0.0025000000000000005
                        - 0.0025000000000000005
                From returns:
                  description: Computed covariance matrix
                  value:
                    assetsCovarianceMatrix:
                      - - 0.00035
                        - 0.00035
                      - - 0.00035
                        - 0.00035
              schema:
                properties:
                  assetsCovarianceMatrix:
                    description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 2
                    type: array
                required:
                  - assetsCovarianceMatrix
                type: object
          description: OK
      summary: Covariance Matrix
      tags:
        - Assets Covariance Matrix
      x-codegen-request-body-name: body
  /assets/covariance/matrix/sample:
    post:
      description: |
        Compute the sample covariance matrix of assets returns.

        > This endpoint is similar to the endpoint [`/assets/covariance/matrix`](#post-/assets/covariance/matrix), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the covariance matrix.

        References
        * [Wikipedia, Sample Mean and Covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Computes the sample covariance matrix of 2 assets based on 4 returns per asset
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0.01
                        - 0.02
                        - 0.01
                    - assetReturns:
                        - -0.02
                        - -0.02
                        - -0.04
                        - -0.02
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetReturns:
                        description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetReturns
                    type: object
                  minItems: 2
                  type: array
              required:
                - assets
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed sample covariance matrix
                  value:
                    assetsCovarianceMatrix:
                      - - 0.000025
                        - -0.00005
                      - - -0.00005
                        - 0.0001
              schema:
                properties:
                  assetsCovarianceMatrix:
                    description: assetsCovarianceMatrix[i][j] is the sample covariance between the asset i returns and the asset j returns
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 2
                    type: array
                required:
                  - assetsCovarianceMatrix
                type: object
          description: OK
      summary: Sample Covariance Matrix
      tags:
        - Assets Covariance Matrix
      x-codegen-request-body-name: body
  /assets/covariance/matrix/validation:
    post:
      description: |
        Validate whether a matrix is a covariance matrix.

        References
        * [Wikipedia, Covariance Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Validate whether the provided matrix is a covariance matrix
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.00035
                      - -0.00035
                    - - -0.00035
                      - 0.00035
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
              required:
                - assets
                - assetsCovarianceMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Valid covariance matrix
                  value:
                    message: valid covariance matrix
              schema:
                properties:
                  message:
                    description: Indicates whether the matrix is a valid covariance matrix
                    enum:
                      - valid covariance matrix
                      - invalid covariance matrix - non symmetric matrix
                      - invalid covariance matrix - non positive diagonal elements
                      - invalid covariance matrix - non positive semi-definite matrix
                    type: string
                required:
                  - message
                type: object
          description: OK
      summary: Covariance Matrix Validation
      tags:
        - Assets Covariance Matrix
      x-codegen-request-body-name: body
  /assets/returns:
    post:
      description: |
        Compute the arithmetic return(s) of one or several asset(s) for one or several time period(s).

        References
        * [Wikipedia, Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the arithmetic returns of 2 assets, one with prices 1,2 and the other with prices 2,3,6
                value:
                  assets:
                    - assetPrices:
                        - 1
                        - 2
                    - assetPrices:
                        - 2
                        - 3
                        - 6
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetPrices:
                        description: assetPrices[t] is the price of the asset at the time t
                        items:
                          exclusiveMinimum: true
                          minimum: 0
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetPrices
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed an arithmetic return of 100% for the first asset and arithmetic returns of respectively 50% and 100% for the second asset
                  value:
                    assets:
                      - assetReturns:
                          - 1
                      - assetReturns:
                          - 0.5
                          - 1
              schema:
                properties:
                  assets:
                    items:
                      properties:
                        assetReturns:
                          description: assetReturns[t] is the arithmetic return of the asset from the time t-1 to the time t, in percentage
                          items:
                            type: number
                          type: array
                      required:
                        - assetReturns
                      type: object
                    type: array
                required:
                  - assets
                type: object
          description: OK
      summary: Arithmetic Returns
      tags:
        - Assets Returns
      x-codegen-request-body-name: body
  /assets/returns/average:
    post:
      description: |
        Compute the arithmetic average of the return(s) of one or several asset(s).

        References
        * [Wikipedia, Arithmetic Average Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the arithmetic average return of 2 assets, one with returns 10%, -5% and the other with returns 0%,-1%,1%
                value:
                  assets:
                    - assetReturns:
                        - 0.1
                        - -0.05
                    - assetReturns:
                        - 0
                        - -0.01
                        - 0.01
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetReturns:
                        description: assetReturns[t] is the return of the asset at the time t, in percentage
                        items:
                          type: number
                        minItems: 1
                        type: array
                    required:
                      - assetReturns
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed average arithmetic return of 2.5% for the first asset, and average arithmetic return of 0% for the second asset
                  value:
                    assets:
                      - assetAverageReturn: 0.025
                      - assetAverageReturn: 0
              schema:
                properties:
                  assets:
                    items:
                      properties:
                        assetAverageReturn:
                          description: The arithmetic average return of the asset
                          type: number
                      required:
                        - assetAverageReturn
                      type: object
                    type: array
                required:
                  - assets
                type: object
          description: OK
      summary: Arithmetic Average Return
      tags:
        - Assets Returns
      x-codegen-request-body-name: body
  /assets/variance:
    post:
      description: |
        Compute the variance of one or several asset(s) from either:  
        * The asset(s) returns
        * The assets covariance matrix
        * The asset(s) volatility

        References
        * [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        
      requestBody:
        content:
          application/json:
            examples:
              From assets covariance matrix:
                description: Compute the variance of 2 assets based on their covariance matrix
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.01
                      - -0.0025
                    - - -0.0025
                      - 0.0025
              From assets returns:
                description: Compute the variance of 2 assets based on 4 returns per asset
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
              From assets volatility:
                description: Compute the variance of 2 assets based on their volatility
                value:
                  assets:
                    - assetVolatility: 1
                    - assetVolatility: 0.05
            schema:
              oneOf:
                - properties:
                    assets:
                      items:
                        properties:
                          assetReturns:
                            description: assetReturns[t] is the return of the asset at the time t, in percentage
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - assetReturns
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - assets
                  type: object
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 2
                      type: integer
                    assetsCovarianceMatrix:
                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                  required:
                    - assets
                    - assetsCovarianceMatrix
                  type: object
                - properties:
                    assets:
                      items:
                        properties:
                          assetVolatility:
                            description: The asset volatility
                            minimum: 0
                            type: number
                        required:
                          - assetVolatility
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - assets
                  type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                From covariance matrix:
                  description: Computed variance of 2 assets
                  value:
                    assets:
                      - assetVariance: 0.01
                      - assetVariance: 0.0025
                From returns:
                  description: Computed variance of 2 assets
                  value:
                    assets:
                      - assetVariance: 0.00035
                      - assetVariance: 0.00035
                From volatilities:
                  description: Computed variance of 2 assets
                  value:
                    assets:
                      - assetVariance: 0.010000000000000002
                      - assetVariance: 0.0025000000000000005
              schema:
                properties:
                  assets:
                    items:
                      properties:
                        assetVariance:
                          description: The variance of the asset
                          minimum: 0
                          type: number
                      required:
                        - assetVariance
                      type: object
                    type: array
                required:
                  - assets
                type: object
          description: OK
      summary: Variance
      tags:
        - Assets Variance
      x-codegen-request-body-name: body
  /assets/variance/sample:
    post:
      description: |
        Compute the sample variance of one or several asset(s) from the asset(s) returns.
                
        > This endpoint is similar to the endpoint [`/assets/variance`](#post-/assets/variance), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the variance.

        References
        * [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the sample variance of 2 assets based on 4 and 3 returns
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0.01
                        - 0.02
                        - 0.01
                    - assetReturns:
                        - -0.02
                        - -0.02
                        - -0.04
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetReturns:
                        description: assetReturns[t] is the return of the asset at the time t, in percentage
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetReturns
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed sample variances of 2 assets
                  value:
                    assets:
                      - assetVariance: 0.000025
                      - assetVariance: 0.0001
              schema:
                properties:
                  assets:
                    items:
                      properties:
                        assetVariance:
                          description: The sample variance of the asset
                          minimum: 0
                          type: number
                      required:
                        - assetVariance
                      type: object
                    type: array
                required:
                  - assets
                type: object
          description: OK
      summary: Sample variance
      tags:
        - Assets Variance
      x-codegen-request-body-name: body
  /assets/volatility:
    post:
      description: |
        Compute the volatility (i.e., standard deviation) of one or several asset(s) from either:  
        * The asset(s) returns
        * The assets covariance matrix
        * The asset(s) variance

        References
        * [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation)
      requestBody:
        content:
          application/json:
            examples:
              From assets covariance matrix:
                description: Compute the volatility of 2 assets based on their covariance matrix
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.01
                      - -0.0025
                    - - -0.0025
                      - 0.0025
              From assets variance:
                description: Compute the volatility of 2 assets based on their variance
                value:
                  assets:
                    - assetVariance: 0.01
                    - assetVariance: 0.0025
              From returns:
                description: Compute the volatility of 2 assets based on 4 returns per asset
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
                    - assetReturns:
                        - 0.01
                        - 0
                        - 0.02
                        - -0.03
            schema:
              oneOf:
                - properties:
                    assets:
                      items:
                        properties:
                          assetReturns:
                            description: assetReturns[t] is the return of the asset at the time t, in percentage
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - assetReturns
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - assets
                  type: object
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 2
                      type: integer
                    assetsCovarianceMatrix:
                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                  required:
                    - assets
                    - assetsCovarianceMatrix
                  type: object
                - properties:
                    assets:
                      items:
                        properties:
                          assetVariance:
                            description: The asset variance
                            minimum: 0
                            type: number
                        required:
                          - assetVariance
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - assets
                  type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                From covariance matrix:
                  description: Computed volatility of 2 assets
                  value:
                    assets:
                      - assetVolatility: 0.1
                      - assetVolatility: 0.05
                From returns:
                  description: Computed volatility of 2 assets
                  value:
                    assets:
                      - assetVolatility: 0.01870828693386971
                      - assetVolatility: 0.01870828693386971
                From variances:
                  description: Computed volatility of 2 assets
                  value:
                    assets:
                      - assetVolatility: 0.1
                      - assetVolatility: 0.05
              schema:
                properties:
                  assets:
                    items:
                      properties:
                        assetVolatility:
                          description: The volatility of the asset
                          minimum: 0
                          type: number
                      required:
                        - assetVolatility
                      type: object
                    type: array
                required:
                  - assets
                type: object
          description: OK
      summary: Volatility
      tags:
        - Assets Volatility
      x-codegen-request-body-name: body
  /assets/volatility/sample:
    post:
      description: |
        Compute the sample volatility (i.e., sample standard deviation) of one or several asset(s) from the asset(s) returns.

        > This endpoint is similar to the endpoint [`/assets/volatility`](#post-/assets/volatility), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the volatility.

        References
        * [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the sample volatility of 2 assets based on 4 and 3 returns
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0.01
                        - 0.02
                        - 0.01
                    - assetReturns:
                        - -0.02
                        - -0.02
                        - -0.04
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetReturns:
                        description: assetReturns[t] is the return of the asset at the time t, in percentage
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetReturns
                    type: object
                  minItems: 2
                  type: array
              required:
                - assets
                - assetsReturns
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed sample volatility of 2 assets
                  value:
                    assets:
                      - assetVolatility: 0.005
                      - assetVolatility: 0.01
              schema:
                properties:
                  assets:
                    items:
                      properties:
                        assetVolatility:
                          description: The sample volatility of the asset
                          minimum: 0
                          type: number
                      required:
                        - assetVolatility
                      type: object
                    type: array
                required:
                  - assets
                type: object
          description: OK
      summary: Sample volatility
      tags:
        - Assets Volatility
      x-codegen-request-body-name: body
  /factors/residualization:
    post:
      description: |
        Compute the residuals of a factor against a set of factors, using a returns-based linear regression analysis.

        References
        * [Factor Research, Factor Exposure Analysis: Exploring Residualization](https://insights.factorresearch.com/research-factor-exposure-analysis-exploring-residualization/)
        * [Catalina B. Garcia, Román Salmeron, Claudia Garcia & Jose Garcia (2019): Residualization: justification, properties and application, Journal of Applied Statistics](https://doi.org/10.1080/02664763.2019.1701638)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Residualize the returns of the first factor among a set of 2 factors, observed during 3 time periods
                value:
                  factors:
                    - factorReturns:
                        - 0.01
                        - 0.02
                        - -0.01
                    - factorReturns:
                        - 0.025
                        - 0.005
                        - -0.02
                  residualizedFactor: 1
            schema:
              properties:
                factors:
                  items:
                    properties:
                      factorReturns:
                        description: factorReturns[t] is the return of the factor at the time t; all the factorReturns arrays must have the same length
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - factorReturns
                    type: object
                  minItems: 2
                  type: array
                residualizedFactor:
                  description: The index of the factor to residualize
                  minimum: 1
                  type: integer
              required:
                - factors
                - residualizedFactor
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed returns of a residualized factor, observed during 3 time periods
                  value:
                    residualizedFactorReturns:
                      - -0.001885245901639342
                      - 0.017622950819672134
                      - -0.0004918032786885261
              schema:
                properties:
                  residualizedFactorReturns:
                    description: residualizedFactorReturns[t] is the return of the residualized factor at the time t
                    items:
                      type: number
                    type: array
                required:
                  - residualizedFactorReturns
                type: object
          description: OK
      summary: Residualization
      tags:
        - Factors
      x-codegen-request-body-name: body
  /portfolio/analysis/alpha:
    post:
      description: |
        Compute the Jensen’s alpha of one or several portfolio(s) in the Capital Asset Pricing Model (CAPM).

        References
        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution  
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the Jensen’s alpha of one portfolio
                value:
                  benchmarkReturns:
                    - 0.002
                    - 0.025
                    - 0.018
                    - -0.011
                    - 0.014
                  portfolios:
                    - portfolioReturns:
                        - 0.003
                        - 0.026
                        - 0.011
                        - -0.01
                        - 0.015
                  riskFreeRate: 0.01
            schema:
              oneOf:
                - properties:
                    benchmarkReturns:
                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                    portfolios:
                      items:
                        properties:
                          portfolioReturns:
                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - portfolioReturns
                        type: object
                      minItems: 1
                      type: array
                    riskFreeRate:
                      description: The risk free rate, assumed to be constant for any time t
                      type: number
                  required:
                    - benchmarkReturns
                    - portfolios
                  type: object
                - properties:
                    benchmarkReturns:
                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                    portfolios:
                      items:
                        properties:
                          portfolioReturns:
                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - portfolioReturns
                        type: object
                      minItems: 1
                      type: array
                    riskFreeReturns:
                      description: riskFreeReturns[t] is the risk free return at the time t; the riskFreeReturns array must have the same length as all the portfolioReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - benchmarkReturns
                    - portfolios
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed Jensen's alpha of one portfolio
                  value:
                    portfolios:
                      - portfolioAlpha: -0.0006332179930795853
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioAlpha:
                          description: The portfolio Jensen's alpha, which correponds to the portfolio excess return adjusted for the systematic risk in the Capital Asset Pricing Model (CAPM)
                          type: number
                      required:
                        - portfolioAlpha
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Alpha
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/beta:
    post:
      description: |
        Compute the beta of one or several portfolio(s) in the Capital Asset Pricing Model (CAPM)..

        References
        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution  
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the beta of one portfolio
                value:
                  benchmarkReturns:
                    - 0.002
                    - 0.025
                    - 0.018
                    - -0.011
                    - 0.014
                  portfolios:
                    - portfolioReturns:
                        - 0.003
                        - 0.026
                        - 0.011
                        - -0.01
                        - 0.015
                  riskFreeRate: 0.01
            schema:
              oneOf:
                - properties:
                    benchmarkReturns:
                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                    portfolios:
                      items:
                        properties:
                          portfolioReturns:
                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - portfolioReturns
                        type: object
                      minItems: 1
                      type: array
                    riskFreeRate:
                      description: The risk free rate, assumed to be constant for any time t
                      type: number
                  required:
                    - benchmarkReturns
                    - portfolios
                  type: object
                - properties:
                    benchmarkReturns:
                      description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                    portfolios:
                      items:
                        properties:
                          portfolioReturns:
                            description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array
                            items:
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - portfolioReturns
                        type: object
                      minItems: 1
                      type: array
                    riskFreeReturns:
                      description: riskFreeReturns[t] is the risk free return at the time t; the riskFreeReturns array must have the same length as all the portfolioReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - benchmarkReturns
                    - portfolios
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed beta of one portfolio
                  value:
                    portfolios:
                      - portfolioBeta: 0.9169550173010382
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioBeta:
                          description: The portfolio beta, which correponds to the portfolio systematic risk in the Capital Asset Pricing Model (CAPM)
                          type: number
                      required:
                        - portfolioBeta
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Beta
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/contributions/return:
    post:
      description: |
        Perform a return contribution analysis of one or several portfolio(s), optionally using groups of assets.

        References
        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Perform a return contributions analysis of a portfolio made of 3 assets with the first 2 assets grouped together
                value:
                  assets: 3
                  assetsGroups:
                    - - 1
                      - 2
                  assetsReturns:
                    - 0.01
                    - -0.01
                    - 0.025
                  portfolios:
                    - assetsWeights:
                        - 0.5
                        - 0.25
                        - 0.25
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 1
                  type: integer
                assetsGroups:
                  items:
                    description: assetsGroups[k] is the indexes of the assets belonging to the assets group k
                    items:
                      minimum: 1
                      type: integer
                    minItems: 2
                    type: array
                    uniqueItems: true
                  minItems: 1
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                portfolios:
                  items:
                    properties:
                      assetsWeights:
                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                        items:
                          maximum: 1
                          minimum: 0
                          type: number
                        minItems: 1
                        type: array
                    required:
                      - assetsWeights
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
                - assetsReturns
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed the return contributions of 3 assets and 2 groups of assets
                  value:
                    portfolios:
                      - assetsGroupsReturnContributions:
                          - 0.0025
                          - 0.00625
                        assetsReturnContributions:
                          - 0.005
                          - -0.0025
                          - 0.00625
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        assetsGroupsReturnContributions:
                          description: assetsGroupsReturnContributions[k] is the return contribution of the group of assets k to the return of the portfolio
                          items:
                            type: number
                          minItems: 1
                          type: array
                        assetsReturnContributions:
                          description: assetsReturnContributions[i] is the return contribution of the asset i to the return of the portfolio
                          items:
                            type: number
                          minItems: 1
                          type: array
                      required:
                        - assetsReturnContributions
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Return Contributions
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/contributions/risk:
    post:
      description: |
        Perform a risk contribution analysis of one or several portfolio(s), optionally using groups of assets.

        References
        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Perform a risk contributions analysis of a portfolio made of 3 assets
                value:
                  assets: 3
                  assetsCovarianceMatrix:
                    - - 0.0001
                      - 0
                      - 0
                    - - 0
                      - 0.0001
                      - 0
                    - - 0
                      - 0
                      - 0.04
                  portfolios:
                    - assetsWeights:
                        - 0.5
                        - 0.25
                        - 0.25
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 1
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsGroups:
                  items:
                    description: assetsGroups[k] is the indexes of the assets belonging to the assets group k
                    items:
                      minimum: 1
                      type: integer
                    minItems: 2
                    type: array
                    uniqueItems: true
                  minItems: 1
                  type: array
                portfolios:
                  items:
                    properties:
                      assetsWeights:
                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                        items:
                          maximum: 1
                          minimum: 0
                          type: number
                        minItems: 1
                        type: array
                    required:
                      - assetsWeights
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
                - assetsCovarianceMatrix
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed the risk contributions of 3 assets
                  value:
                    portfolios:
                      - assetsRiskContributions:
                          - 0.0004969039949999533
                          - 0.00012422599874998834
                          - 0.049690399499995326
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        assetsGroupsRiskContributions:
                          description: assetsGroupsRiskContributions[k] is the risk contribution of the group of assets k to the risk of the portfolio
                          items:
                            type: number
                          minItems: 1
                          type: array
                        assetsRiskContributions:
                          description: assetsRiskContributions[i] is the risk contribution of the asset i to the risk of the portfolio
                          items:
                            type: number
                          minItems: 1
                          type: array
                      required:
                        - assetsRiskContributions
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Risk Contributions
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/diversification-ratio:
    post:
      description: |
        Compute the diversification ratio of one or several portfolio(s).

        References
        * [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification, The Journal of Portfolio Management Fall 2008, 35 (1) 40-51](https://doi.org/10.3905/JPM.2008.35.1.40)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the diversification ratio of 1 portfolio
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.0025
                      - 0.0005
                    - - 0.0005
                      - 0.01
                  portfolios:
                    - assetsWeights:
                        - 0.5
                        - 0.5
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                portfolios:
                  items:
                    properties:
                      assetsWeights:
                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                        items:
                          maximum: 1
                          minimum: 0
                          type: number
                        minItems: 1
                        type: array
                    required:
                      - assetsWeights
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
                - assetsCovarianceMatrix
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed diversification ratio of 1 portfolio
                  value:
                    portfolios:
                      - portfolioDiversificationRatio: 1.2909944487358058
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioDiversificationRatio:
                          description: The diversification ratio of the portfolio
                          minimum: 0
                          type: number
                      required:
                        - portfolioDiversificationRatio
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Diversification Ratio
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/drawdowns:
    post:
      description: |
        Compute the drawdown function - also called the underwater equity curve -, as well as the worst 10 drawdowns of one or several portfolio(s).

        References
        * [Wikipedia, Drawdown](https://en.wikipedia.org/wiki/Drawdown_(economics))        
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Computes the drawdown (underwater) curve and the worst 10 drawdowns of 1 portfolio
                value:
                  portfolios:
                    - portfolioValues:
                        - 100
                        - 95
                        - 100
                        - 90
                        - 85
                        - 70
            schema:
              properties:
                portfolios:
                  items:
                    properties:
                      portfolioValues:
                        description: portfolioValues[t] is the value of the portfolio at the time t
                        items:
                          exclusiveMinimum: true
                          minimum: 0
                          type: number
                        type: array
                    required:
                      - portfolioValues
                    type: object
                  minItems: 1
                  type: array
              required:
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed a maximum drawdown of 30%, which began in the third period, which reached its bottom in the sixth period, and which is not ended yet
                  value:
                    portfolios:
                      - portfolioDrawdowns:
                          - 0
                          - 0.05
                          - 0
                          - 0.1
                          - 0.15
                          - 0.3
                        portfolioWorstDrawdowns:
                          - drawdownBottom: 6
                            drawdownDepth: 0.3
                            drawdownEnd: 0
                            drawdownStart: 3
                          - drawdownBottom: 2
                            drawdownDepth: 0.05
                            drawdownEnd: 3
                            drawdownStart: 1
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioDrawdowns:
                          description: portfolioDrawdowns[t] is the value of the drawdown function at the time t
                          items:
                            minimum: 0
                            type: number
                          minItems: 1
                          type: array
                        portfolioWorstDrawdowns:
                          items:
                            properties:
                              drawdownBottom:
                                minimum: 0
                                type: integer
                              drawdownDepth:
                                minimum: 0
                                type: number
                              drawdownEnd:
                                minimum: 0
                                type: integer
                              drawdownStart:
                                minimum: 0
                                type: integer
                            required:
                              - drawdownDepth
                              - drawdownStart
                              - drawdownBottom
                              - drawdownEnd
                            type: object
                          minItems: 1
                          type: array
                      required:
                        - portfolioDrawdowns
                        - portfolioWorstDrawdowns
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Drawdowns
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/factor/exposures:
    post:
      description: |
        Compute the exposures of one or several portfolio(s) to a set of factors, using a returns-based linear regression analysis.

        References
        * [Measuring Factor Exposures: Uses and Abuses, Ronen Israel and Adrienne Ross, The Journal of Alternative Investments Summer 2017, 20 (1) 10-25](https://jai.pm-research.com/content/20/1/10.short) 
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the exposures of one portfolio to two factors
                value:
                  factors:
                    - factorReturns:
                        - -0.00414169934
                        - 0.01201656108
                        - 0.0087181369
                    - factorReturns:
                        - -0.01387258782
                        - -0.01097961581
                        - 0.01742002062
                  portfolios:
                    - portfolioReturns:
                        - -0.04302
                        - 0.01310372213
                        - 0.06482589323
            schema:
              properties:
                factors:
                  items:
                    properties:
                      factorReturns:
                        description: factorReturns[t] is the return of the factor at the time t; all the factorReturns arrays must have the same length, equal to the common length of the portfolioReturns arrays
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - factorReturns
                    type: object
                  minItems: 1
                  type: array
                portfolios:
                  items:
                    properties:
                      portfolioReturns:
                        description: portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the common length of the factorReturns arrays
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - portfolioReturns
                    type: object
                  minItems: 1
                  type: array
              required:
                - factorReturns
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed exposures of one portfolio to two factors
                  value:
                    portfolios:
                      - portfolioAlpha: -0.000017563172006410804
                        portfolioBetas:
                          - 3.083191766752847
                          - 2.17931822921701
                        portfolioRSquared: 1
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioAlpha:
                          description: The portfolio alpha, which correponds to the portion of the portfolio returns that cannot be explained by the portfolio factor exposures
                          type: number
                        portfolioBetas:
                          description: The portfolio betas, which correspond to the portfolio factor exposures
                          items:
                            type: number
                          minItems: 1
                          type: array
                        portfolioRSquared:
                          description: The portfolio R^2, which indicates how much of the variability in the portfolio returns can be explained by the portfolio factor exposures; generally, the higher the R^2 the better the portfolio factor exposures explain the portfolio returns
                          type: number
                      required:
                        - portfolioAlpha
                        - portfolioBetas
                        - portfolioRSquared
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Factor Exposures
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/mean-variance/efficient-frontier:
    post:
      description: |
        Compute the discretized mean-variance efficient frontier associated to a list of assets, optionally subject to:
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraint

        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute 3 portfolios belonging to the mean-variance efficient frontier
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.0025
                      - 0.0005
                    - - 0.0005
                      - 0.01
                  assetsReturns:
                    - 0.01
                    - 0.05
                  constraints:
                    minimumAssetsWeights:
                      - 0.2
                      - 0
                  portfolios: 3
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
                portfolios:
                  default: 25
                  description: The number of portfolios to compute on the mean-variance efficient frontier
                  minimum: 2
                  type: integer
              required:
                - assets
                - assetsReturns
                - assetsCovarianceMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed 3 mean-variance efficient portfolios
                  value:
                    portfolios:
                      - assetsWeights:
                          - 0.8260869565217391
                          - 0.17391304347826086
                        portfolioReturn: 0.016956521739130433
                        portfolioVolatility: 0.0463915284620315
                      - assetsWeights:
                          - 0.5130434782608696
                          - 0.48695652173913045
                        portfolioReturn: 0.02947826086956522
                        portfolioVolatility: 0.05726369211623199
                      - assetsWeights:
                          - 0.2
                          - 0.8
                        portfolioReturn: 0.04200000000000001
                        portfolioVolatility: 0.08160882305241265
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        assetsWeights:
                          description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                          items:
                            maximum: 1
                            minimum: 0
                            type: number
                          minItems: 2
                          type: array
                        portfolioReturn:
                          description: The arithmetic return of the portfolio
                          type: number
                        portfolioVolatility:
                          description: The volatility of the portfolio
                          minimum: 0
                          type: number
                      required:
                        - assetsWeights
                        - portfolioReturn
                        - portfolioVolatility
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Mean-Variance Efficient Frontier
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/mean-variance/minimum-variance-frontier:
    post:
      description: |
        Compute the discretized mean-variance minimum variance frontier associated to a list of assets, optionally subject to:
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraint

        > This endpoint is similar to the endpoint [`/portfolio/analysis/mean-variance/efficient-frontier`](#post-/portfolio/analysis/mean-variance/efficient-frontier), because the mean-variance efficient frontier is the "top" portion of the mean-variance minimum variance frontier.

        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute 4 portfolios belonging to the mean-variance minimum variance frontier
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.0025
                      - 0.0005
                    - - 0.0005
                      - 0.01
                  assetsReturns:
                    - 0.01
                    - 0.05
                  constraints:
                    minimumAssetsWeights:
                      - 0.2
                      - 0
                  portfolios: 4
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
                portfolios:
                  default: 25
                  description: The number of portfolios to compute on the mean-variance minimum variance frontier
                  minimum: 2
                  type: integer
              required:
                - assets
                - assetsReturns
                - assetsCovarianceMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed 4 mean-variance minimum variance portfolios
                  value:
                    portfolios:
                      - assetsWeights:
                          - 1
                          - 0
                        portfolioReturn: 0.01
                        portfolioVolatility: 0.05
                      - assetsWeights:
                          - 0.7333333333333333
                          - 0.2666666666666667
                        portfolioReturn: 0.02066666666666667
                        portfolioVolatility: 0.04744587559642156
                      - assetsWeights:
                          - 0.4666666666666667
                          - 0.5333333333333333
                        portfolioReturn: 0.03133333333333334
                        portfolioVolatility: 0.06031399321697891
                      - assetsWeights:
                          - 0.2
                          - 0.8
                        portfolioReturn: 0.04200000000000001
                        portfolioVolatility: 0.08160882305241265
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        assetsWeights:
                          description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                          items:
                            maximum: 1
                            minimum: 0
                            type: number
                          minItems: 2
                          type: array
                        portfolioReturn:
                          description: The arithmetic return of the portfolio
                          type: number
                        portfolioVolatility:
                          description: The volatility of the portfolio
                          minimum: 0
                          type: number
                      required:
                        - assetsWeights
                        - portfolioReturn
                        - portfolioVolatility
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Mean-Variance Minimum Variance Frontier
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/return:
    post:
      description: |
        Compute the arithmetic return of one or several portfolio(s) from either:  
        * Portfolio assets arithmetic returns
        * Portfolio values

        References
        * [Wikipedia, Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)
        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              From assets arithmetic returns:
                description: Compute the arithmetic return of 2 portfolios based on the assets arithmetic returns
                value:
                  assets: 2
                  assetsReturns:
                    - 0.01
                    - 0.05
                  portfolios:
                    - assetsWeights:
                        - 1
                        - 0
                    - assetsWeights:
                        - 0
                        - 1
              From portfolio values:
                description: Compute the arithmetic return of 1 portfolio based on portfolio values
                value:
                  portfolios:
                    - portfolioValues:
                        - 100
                        - 95
                        - 100
                        - 90
                        - 85
                        - 70
            schema:
              oneOf:
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 1
                      type: integer
                    assetsReturns:
                      description: assetsReturns[i] is the arithmetic return of asset i
                      items:
                        type: number
                      minItems: 1
                      type: array
                    portfolios:
                      items:
                        properties:
                          assetsWeights:
                            description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                            items:
                              maximum: 1
                              minimum: 0
                              type: number
                            minItems: 1
                            type: array
                        required:
                          - assetsWeights
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - portfolios
                    - assets
                    - assetsReturns
                  type: object
                - properties:
                    portfolios:
                      items:
                        properties:
                          portfolioValues:
                            description: portfolioValues[t] is the value of the portfolio at the time t
                            items:
                              exclusiveMinimum: true
                              minimum: 0
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - portfolioValues
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - portfolios
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed arithmetic return of 2 portfolios
                  value:
                    portfolios:
                      - portfolioReturn: 0.01
                      - portfolioReturn: 0.05
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioReturn:
                          description: The arithmetic return of the portfolio
                          type: number
                      required:
                        - portfolioReturn
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Arithmetic Return
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/returns/average:
    post:
      description: |
        Compute the arithmetic average of the arithmetic return(s) of one or several portfolio(s).

        References
        * [Wikipedia, Arithmetic Average Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)
      requestBody:
        content:
          application/json:
            examples:
              From portfolio values:
                description: Compute the arithmetic average return of 1 portfolio
                value:
                  portfolios:
                    - portfolioValues:
                        - 100
                        - 95
                        - 100
                        - 90
                        - 85
                        - 70
            schema:
              properties:
                portfolios:
                  items:
                    properties:
                      portfolioValues:
                        description: portfolioValues[t] is the value of the portfolio at the time t
                        items:
                          exclusiveMinimum: true
                          minimum: 0
                          type: number
                        type: array
                    required:
                      - portfolioValues
                    type: object
                  minItems: 1
                  type: array
              required:
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed average arithmetic return of 1% for the first portfolio
                  value:
                    portfolios:
                      - portfolioAverageReturn: 0.01
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioAverageReturn:
                          description: The arithmetic average return of the portfolio
                          type: number
                      required:
                        - portfolioAverageReturn
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Arithmetic Average Return
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/sharpe-ratio:
    post:
      description: |
        Compute the Sharpe ratio of one or several portfolio(s) from either:
        * Portfolio assets arithmetic returns and assets covariance matrix
        * Portfolio values

        References
        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution
        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              From assets arithmetic returns and assets covariance matrix:
                description: Compute the Sharpe ratio of 2 portfolios based on the assets arithmetic returns and covariance matrix
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.0025
                      - 0.0005
                    - - 0.0005
                      - 0.01
                  assetsReturns:
                    - 0.01
                    - 0.05
                  portfolios:
                    - assetsWeights:
                        - 1
                        - 0
                    - assetsWeights:
                        - 0
                        - 1
                  riskFreeRate: 0
              From portfolio values:
                description: Compute the Sharpe ratio of 1 portfolio based on portfolio values
                value:
                  portfolios:
                    - portfolioValues:
                        - 100
                        - 95
                        - 100
                        - 90
                        - 85
                        - 70
                  riskFreeRate: 0
            schema:
              oneOf:
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 2
                      type: integer
                    assetsCovarianceMatrix:
                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                    assetsReturns:
                      description: assetsReturns[i] is the arithmetic return of asset i
                      items:
                        type: number
                      minItems: 2
                      type: array
                    portfolios:
                      items:
                        properties:
                          assetsWeights:
                            description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                            items:
                              maximum: 1
                              minimum: 0
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - assetsWeights
                        type: object
                      minItems: 1
                      type: array
                    riskFreeRate:
                      description: The risk free rate
                      type: number
                  required:
                    - portfolios
                    - riskFreeRate
                    - assets
                    - assetsReturns
                    - assetsCovarianceMatrix
                  type: object
                - properties:
                    portfolios:
                      items:
                        properties:
                          portfolioValues:
                            description: portfolioValues[t] is the value of the portfolio at the time t
                            items:
                              exclusiveMinimum: true
                              minimum: 0
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - portfolioValues
                        type: object
                      minItems: 1
                      type: array
                    riskFreeRate:
                      description: The risk free rate
                      type: number
                  required:
                    - portfolios
                    - riskFreeRate
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed Sharpe ratio of 1 portfolio
                  value:
                    portfolios:
                      - portfolioSharpeRatio: -0.8835333925060923
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioSharpeRatio:
                          description: The Sharpe ratio of the portfolio
                          type: number
                      required:
                        - portfolioSharpeRatio
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Sharpe Ratio
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/tracking-error:
    post:
      description: |
        Compute the tracking error between a benchmark and one or several portfolio(s).

        References
        * [Wikipedia, Tracking error](https://en.wikipedia.org/wiki/Tracking_error) 
        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution 
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Computes the tracking error using the example in Bacon's book
                value:
                  benchmarkReturns:
                    - 0.002
                    - 0.025
                    - 0.018
                    - -0.011
                    - 0.014
                    - 0.018
                    - 0.014
                    - 0.065
                    - -0.015
                    - 0.042
                    - -0.006
                    - 0.083
                    - 0.039
                    - -0.038
                    - -0.062
                    - 0.015
                    - -0.048
                    - 0.021
                    - 0.06
                    - 0.056
                    - -0.067
                    - 0.019
                    - -0.003
                    - 0
                  portfolios:
                    - portfolioReturns:
                        - 0.003
                        - 0.026
                        - 0.011
                        - -0.01
                        - 0.015
                        - 0.025
                        - 0.016
                        - 0.067
                        - -0.014
                        - 0.04
                        - -0.005
                        - 0.081
                        - 0.04
                        - -0.037
                        - -0.061
                        - 0.017
                        - -0.049
                        - -0.022
                        - 0.07
                        - 0.058
                        - -0.065
                        - 0.024
                        - -0.005
                        - -0.009
            schema:
              properties:
                benchmarkReturns:
                  description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays
                  items:
                    type: number
                  minItems: 2
                  type: array
                portfolios:
                  items:
                    properties:
                      portfolioReturns:
                        description: portfolioReturns[t] is the return of the portfolio at the time t, the portfolioReturns must have the same length as the benchmarkReturns array
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - portfolioReturns
                    type: object
                  minItems: 1
                  type: array
              required:
                - benchmarkReturns
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: The computed tracking error using the example in Bacon's book
                  value:
                    portfolios:
                      - portfolioTrackingError: 0.00950648535942116
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioTrackingError:
                          description: The tracking error of the portfolio
                          minimum: 0
                          type: number
                      required:
                        - portfolioTrackingError
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Tracking Error
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/volatility:
    post:
      description: |
        Compute the volatility (i.e., standard deviation) of one or several portfolio(s) from either:  
        * Portfolio assets covariance matrix
        * Portfolio values

        References
        * [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation#Finance)
        * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution
        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              From assets covariance matrix:
                description: Compute the volatility of 2 portfolios based on the assets covariance matrix
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.0025
                      - 0.0005
                    - - 0.0005
                      - 0.01
                  portfolios:
                    - assetsWeights:
                        - 1
                        - 0
                    - assetsWeights:
                        - 0
                        - 1
              From portfolio values:
                description: Compute the volatility of 1 portfolio based on portfolio values
                value:
                  portfolios:
                    - portfolioValues:
                        - 100
                        - 95
                        - 100
                        - 90
                        - 85
                        - 70
            schema:
              oneOf:
                - properties:
                    assets:
                      description: The number of assets
                      minimum: 2
                      type: integer
                    assetsCovarianceMatrix:
                      description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 2
                      type: array
                    portfolios:
                      items:
                        properties:
                          assetsWeights:
                            description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                            items:
                              maximum: 1
                              minimum: 0
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - assetsWeights
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - portfolios
                    - assets
                    - assetsCovarianceMatrix
                  type: object
                - properties:
                    portfolios:
                      items:
                        properties:
                          portfolioValues:
                            description: portfolioValues[t] is the value of the portfolio at the time t
                            items:
                              exclusiveMinimum: true
                              minimum: 0
                              type: number
                            minItems: 2
                            type: array
                        required:
                          - portfolioValues
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - portfolios
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed volatility of 2 portfolios
                  value:
                    portfolios:
                      - portfolioVolatility: 0.05
                      - portfolioVolatility: 0.1
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioVolatility:
                          description: The volatility of the portfolio
                          minimum: 0
                          type: number
                      required:
                        - portfolioVolatility
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Volatility
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/construction/investable:
    post:
      description: |
        Compute an investable portfolio as close as possible, in terms of assets weights, to a desired portfolio, taking into account:
        * The desired assets weights
        * The desired assets groups weights
        * The desired maximum assets groups weights
        * The prices of the assets
        * The portfolio value
        * The requirement to purchase some assets by round lots or by odd lots
        * The possibility to purchase some assets by a fractional quantity of shares
        * The requirement to purchase a minimum number of shares, or a minimum monetary value, for some assets

        References
        * [Steiner, Andreas, Accuracy and Rounding in Portfolio Construction](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2261131)
      requestBody:
        content:
          application/json:
            examples:
              Example (groups weights):
                description: Construct an investable portfolio of 10,000$ made of 4 assets with assets groups weights
                value:
                  assets: 4
                  assetsGroups:
                    - - 1
                      - 2
                    - - 3
                      - 4
                  assetsGroupsWeights:
                    - 0.4
                    - 0.4
                  assetsPrices:
                    - 10
                    - 25
                    - 100
                    - 500
                  assetsWeights:
                    - 0.2
                    - null
                    - null
                    - null
                  portfolioValue: 10000
              Example (no groups weights):
                description: Construct an investable portfolio of 10,000$ made of 3 assets
                value:
                  assets: 3
                  assetsPrices:
                    - 10
                    - 25
                    - 500
                  assetsWeights:
                    - 0.05
                    - 0.6
                    - 0.35
                  portfolioValue: 10000
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsGroups:
                  items:
                    description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; requires either assetsGroupsWeights or maximumAssetsGroupsWeights to be present
                    items:
                      minimum: 1
                      type: integer
                    minItems: 2
                    type: array
                    uniqueItems: true
                  minItems: 1
                  type: array
                assetsGroupsWeights:
                  description: assetsGroupsWeights[i] is the desired weight of the assets group k in the portfolio, in percentage (can be null to indicate no specific desire); requires assetsGroups to be present
                  items:
                    maximum: 1
                    minimum: 0
                    type: number
                  minItems: 1
                  type: array
                assetsMinimumNotionalValues:
                  description: assetsMinimumNotionalValues[i] is the minimum monetary value that the position in the asset i is required to represent when the asset i is included in the portfolio
                  items:
                    default: 0
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
                assetsMinimumPositions:
                  description: assetsMinimumPositions[i] is the minimum number of shares of the asset i that is required to purchase when the asset i is included in the portfolio (usual values are the same as for assetsSizeLots)
                  items:
                    default: 1
                    exclusiveMinimum: true
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
                assetsPrices:
                  description: assetsPrices[i] is the price of the asset i
                  items:
                    exclusiveMinimum: true
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
                assetsSizeLots:
                  description: assetsSizeLots[i] is the number of shares by which it is required to purchase the asset i (usual values are 1 if the asset needs to be purchased share by share, 100 if the asset needs to be purchased by an integer multiple of 100 shares, and 1/1000000 - e.g. for Robinhood broker - if the asset can be purchased by fractional shares)
                  items:
                    default: 1
                    exclusiveMinimum: true
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
                assetsWeights:
                  description: assetsWeights[i] is the desired weight of the asset i in the portfolio, in percentage (can be null to indicate no specific desire)
                  items:
                    maximum: 1
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
                maximumAssetsGroupsWeights:
                  description: maximumAssetsGroupsWeights[k] is the maximum desired weight of the assets group k in the portfolio, in percentage (can be null to indicate no specific desire); requires assetsGroups to be present
                  items:
                    maximum: 1
                    minimum: 0
                    type: number
                  minItems: 1
                  type: array
                portfolioValue:
                  description: The monetary value of the portfolio
                  exclusiveMinimum: true
                  minimum: 0
                  type: number
              required:
                - assets
                - assetsPrices
                - portfolioValue
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example (groups weights):
                  description: Computed investable portfolio with 4 assets not fully invested
                  value:
                    assetsPositions:
                      - 200
                      - 80
                      - 20
                      - 4
                    assetsWeights:
                      - 0.2
                      - 0.2
                      - 0.2
                      - 0.2
                Example (no groups weights):
                  description: Computed investable portfolio with 3 assets fully invested
                  value:
                    assetsPositions:
                      - 50
                      - 240
                      - 7
                    assetsWeights:
                      - 0.05
                      - 0.6
                      - 0.35
              schema:
                properties:
                  assetsPositions:
                    description: assetsPositions[i] is the number of shares of the asset i in the portfolio
                    items:
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsPositions
                  - assetsWeights
                type: object
          description: OK
      summary: Investable Portfolio
      tags:
        - Portfolio Construction
      x-codegen-request-body-name: body
  /portfolio/construction/mimicking:
    post:
      description: |
        Construct a portfolio as close as possible, in terms of returns, to a benchmark, optionally subject to:
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraints

        References 
        * Konstantinos Benidis, Yiyong Feng, Daniel P. Palomar, Optimization Methods for Financial Index Tracking: From Theory to Practice, now publishers Inc (7 juin 2018)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Construct a portfolio mimicking a benchmark with null returns, using 2 assets with opposite returns
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0.02
                        - 0.03
                    - assetReturns:
                        - -0.01
                        - -0.02
                        - -0.03
                  benchmarkReturns:
                    - 0
                    - 0
                    - 0
              Example with group constraints:
                description: Construct a portfolio mimicking a benchmark using 3 assets and the constraint that the first two assets taken together cannot represent more than 35% of the portfolio
                value:
                  assets:
                    - assetReturns:
                        - 0.01
                        - 0.02
                        - 0.03
                    - assetReturns:
                        - -0.01
                        - 0.04
                        - 0.01
                    - assetReturns:
                        - 0.05
                        - -0.01
                        - 0
                  benchmarkReturns:
                    - 0.02
                    - 0.01
                    - 0.06
                  constraints:
                    assetsGroups:
                      - - 1
                        - 2
                    maximumAssetsGroupsWeights:
                      - 0.35
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetReturns:
                        description: assetReturns[t] is the return of the asset at the time t, in percentage; all the assetReturns arrays must have the same length
                        items:
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetReturns
                    type: object
                  minItems: 2
                  type: array
                benchmarkReturns:
                  description: benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the assetReturns arrays
                  items:
                    type: number
                  minItems: 2
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
              required:
                - assets
                - benchmarkReturns
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Constructed mimicking portfolio is invested equally in the 2 assets
                  value:
                    assetsWeights:
                      - 0.5
                      - 0.5
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Mimicking Portfolio
      tags:
        - Portfolio Construction
      x-codegen-request-body-name: body
  /portfolio/construction/random:
    post:
      description: |
        Construct one or several random portfolio(s), optionally subject to:       
        * Minimum and maximum weights constraints
        * Minimum and maximum portfolio exposure constraints

        > Because of the nature of the endpoint, subsequent calls with the same input data will result in different output data.

        References
        * [William Thornton Shaw, Monte Carlo Portfolio Optimization for General Investor Risk-Return Objectives and Arbitrary Return Distributions: A Solution for Long-Only Portfolios](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1680224)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Construct 2 random portfolios, each made of 3 assets
                value:
                  assets: 3
                  portfolios: 2
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 1
                  type: integer
                constraints:
                  properties:
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
                portfolios:
                  default: 25
                  description: The number of portfolios to construct
                  minimum: 1
                  type: integer
              required:
                - assets
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Constructed 2 random portfolios, each made of 3 assets
                  value:
                    portfolios:
                      - assetsWeights:
                          - 0.11429744284625785
                          - 0.0038592674702259393
                          - 0.8818432896835162
                      - assetsWeights:
                          - 0.546026607601722
                          - 0.07707923859010406
                          - 0.376894153808174
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        assetsWeights:
                          description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                          items:
                            maximum: 1
                            minimum: 0
                            type: number
                          minItems: 1
                          type: array
                      required:
                        - assetsWeights
                      type: object
                    minItems: 1
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Random Portfolio
      tags:
        - Portfolio Construction
      x-codegen-request-body-name: body
  /portfolio/optimization/equal-risk-contributions:
    post:
      description: |
        Compute the assets weights of the equal risk contributions portfolio, optionally subject to:  
        * Minimum and maximum weights constraints  

        References
         * [Richard, Jean-Charles and Roncalli, Thierry, Constrained Risk Budgeting Portfolios: Theory, Algorithms, Applications & Puzzles](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3331184)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets, with maximum assets weights constraints
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.0025
                      - 0.0005
                    - - 0.0005
                      - 0.01
                  constraints:
                    maximumAssetsWeights:
                      - 0.4
                      - 1
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                constraints:
                  properties:
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                  type: object
              required:
                - assets
                - assetsCovarianceMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed equal risk contributions portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.4
                      - 0.5999975015091795
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Equal Risk Contributions Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/equal-sharpe-ratio-contributions:
    post:
      description: |
        Compute the assets weights of the equal Sharpe Ratio contributions portfolio.

        References
         * [Andreas Steiner, Sharpe Ratio Contribution and Attribution Analysis](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1839166")
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.05
                      - 0.02
                    - - 0.02
                      - 0.07
                  assetsReturns:
                    - 0.05
                    - 0.1
                  riskFreeRate: 0
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 2
                  type: array
                riskFreeRate:
                  description: The risk free rate
                  type: number
              required:
                - assets
                - assetsReturns
                - riskFreeRate
                - assetsCovarianceMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed portfolio weights for 2 assets
                  value:
                    assetsWeights:
                      - 0.6666666666666666
                      - 0.3333333333333333
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Equal Sharpe Ratio Contributions Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/equal-weighted:
    post:
      description: |
        Compute the assets weights of the equal-weighted portfolio.

        References
         * [Victor DeMiguel and al., Optimal Versus Naive Diversification: How Inefficient is the 1/N Portfolio Strategy?](https://academic.oup.com/rfs/article-abstract/22/5/1915/1592901?redirectedFrom=fulltext)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets
                value:
                  assets: 2
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
              required:
                - assets
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed equal-weighted portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.5
                      - 0.5
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Equal Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/inverse-variance-weighted:
    post:
      description: |
        Compute the assets weights of the inverse variance-weighted portfolio.

        References
         * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets with variances equal to 1 and 0.5
                value:
                  assets: 2
                  assetsVariances:
                    - 1
                    - 0.5
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsVariances:
                  description: assetsVariances[i] is the variance of the asset i
                  items:
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
              required:
                - assets
                - assetsVariances
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed inverse variance-weighted portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.3333333333333333
                      - 0.6666666666666666
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Inverse Variance Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/inverse-volatility-weighted:
    post:
      description: |
        Compute the assets weights of the inverse volatility-weighted portfolio, also known as the naive-risk parity portfolio.

        References
         * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets with volatilities equal to 0.05 and 0.1
                value:
                  assets: 2
                  assetsVolatilities:
                    - 0.05
                    - 0.1
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsVolatilities:
                  description: assetsVolatilities[i] is the volatility of the asset i
                  items:
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
              required:
                - assets
                - assetsVolatilities
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed inverse volatility-weighted portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.6666666666666666
                      - 0.3333333333333333
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Inverse Volatility Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/market-capitalization-weighted:
    post:
      description: |
        Compute the assets weights of the market capitalization-weighted portfolio.

        References
         * [Wikipedia, Capitalization-weighted Index](https://en.wikipedia.org/wiki/Capitalization-weighted_index)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets with market capitalizations equal to 1 and 2
                value:
                  assets: 2
                  assetsMarketCapitalizations:
                    - 1
                    - 2
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsMarketCapitalizations:
                  description: assetsMarketCapitalizations[i] is the market capitalization of the asset i
                  items:
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
              required:
                - assets
                - assetsMarketCapitalizations
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed market capitalization-weighted portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.3333333333333333
                      - 0.6666666666666666
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Market Capitalization Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/maximum-decorrelation:
    post:
      description: |
        Compute the assets weights of the maximum decorrelation portfolio, optionally subject to:  
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraints

        References
         * [F. Goltz, S. Sivasubramanian, Scientific Beta Maximum Decorrelation Indices](http://www.scientificbeta.com/download/file/scientific-beta-max-decorrelation-indices)
      externalDocs:
        url: https://docs.portfoliooptimizer.io/#maximum-decorrelation-portfolio
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 3 assets
                value:
                  assets: 3
                  assetsCorrelationMatrix:
                    - - 1
                      - 0.9
                      - 0.85
                    - - 0.9
                      - 1
                      - 0.7
                    - - 0.85
                      - 0.7
                      - 1
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCorrelationMatrix:
                  description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
              required:
                - assets
                - assetsCorrelationMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed maximum decorrelation portfolio of 3 assets
                  value:
                    assetsWeights:
                      - 0
                      - 0.5
                      - 0.5
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Maximum Decorrelation Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/maximum-return:
    post:
      description: |
        Compute the assets weights of the maximum return portfolio, optionally subject to:  
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraints

        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets, with maximum assets weights constraints
                value:
                  assets: 2
                  assetsReturns:
                    - 0.02
                    - 0.01
                  constraints:
                    maximumAssetsWeights:
                      - 0.4
                      - 1
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
              required:
                - assets
                - assetsReturns
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed maximum return portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.4
                      - 0.6
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Maximum Return Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/maximum-sharpe-ratio:
    post:
      description: |
        Compute the assets weights of the maximum Sharpe ratio portfolio, optionally subject to:  
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraints

        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets with a risk free rate of 0%
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.05
                      - 0.02
                    - - 0.02
                      - 0.07
                  assetsReturns:
                    - 0.05
                    - 0.1
                  riskFreeRate: 0
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
                riskFreeRate:
                  description: The risk free rate
                  type: number
              required:
                - assets
                - assetsReturns
                - assetsCovarianceMatrix
                - riskFreeRate
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed portfolio weights for 2 assets
                  value:
                    assetsWeights:
                      - 0.27272727272727276
                      - 0.7272727272727273
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Maximum Sharpe Ratio Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/mean-variance-efficient:
    post:
      description: |
        Compute the assets weights of a mean-variance efficient portfolio, optionally subject to:  
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraints

        > A mean-variance efficient portfolio is a portfolio belonging to [the mean-variance efficient frontier](#post-/portfolio/analysis/mean-variance/efficient-frontier).

        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets with a portfolio return constraint of 15%
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 1
                      - 0.3
                    - - 0.3
                      - 1
                  assetsReturns:
                    - 0.1
                    - 0.2
                  constraints:
                    portfolioReturn: 0.15
              Example with group constraints:
                description: Compute the portfolio weights for 3 assets with a maximum group weights constraint and a portfolio return constraint of 15%
                value:
                  assets: 3
                  assetsCovarianceMatrix:
                    - - 1
                      - 0.3
                      - -0.2
                    - - 0.3
                      - 1
                      - 0.2
                    - - -0.2
                      - 0.2
                      - 1
                  assetsReturns:
                    - 0.1
                    - 0.2
                    - 0.15
                  constraints:
                    assetsGroups:
                      - - 1
                        - 2
                    maximumAssetsGroupsWeights:
                      - 0.5
                    portfolioReturn: 0.15
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    portfolioReturn:
                      description: The portfolio return; exclusive with portfolioVolatility and riskTolerance
                      type: number
                    portfolioVolatility:
                      description: The portfolio volatility; exclusive with portfolioReturn and riskTolerance
                      minimum: 0
                      type: number
                    riskTolerance:
                      description: The portfolio risk tolerance; exclusive with portfolioReturn and portfolioVolatility
                      minimum: 0
                      type: number
                  type: object
              required:
                - assets
                - assetsReturns
                - assetsCovarianceMatrix
                - constraints
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed mean-variance efficient portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.5
                      - 0.5
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Mean-Variance Efficient Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/minimum-correlation:
    post:
      description: |
        Compute the assets weights of the (heuristic) minimum correlation portfolio, which is a portfolio built using the Minimum Correlation Algorithm discovered by [David Varadi](https://cssanalytics.wordpress.com/).

        References
         * [CSSA, Minimum Correlation Algorithm Paper Release](https://cssanalytics.wordpress.com/2012/09/21/minimum-correlation-algorithm-paper-release/)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 3 assets
                value:
                  assets: 3
                  assetsCorrelationMatrix:
                    - - 1
                      - 0.9
                      - 0.85
                    - - 0.9
                      - 1
                      - 0.7
                    - - 0.85
                      - 0.7
                      - 1
                  assetsVolatilities:
                    - 0.14
                    - 0.18
                    - 0.22
            schema:
              properties:
                assets:
                  minimum: 2
                  type: integer
                assetsCorrelationMatrix:
                  description: assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j; required if assetsReturns is not provided
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsVolatilities:
                  description: assetsVariances[i] is the volatility of the asset i; required if assetsCorrelationMatrix is provided and assetsVariances is not provided
                  items:
                    minimum: 0
                    type: number
                  minItems: 2
                  type: array
              required:
                - assets
                - assetsCorrelationMatrix
                - assetsVolatilities
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed minimum correlation portfolio portfolio of 3 assets
                  value:
                    assetsWeights:
                      - 0.21059806981924115
                      - 0.3087866303991204
                      - 0.48061529978163836
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Minimum Correlation Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/minimum-variance:
    post:
      description: |
        Compute the assets weights of the minimum variance portfolio, optionally subject to:  
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraints

        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets, with maximum assets weights and portfolio exposure constraints
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.0025
                      - 0.0005
                    - - 0.0005
                      - 0.01
                  constraints:
                    maximumAssetsWeights:
                      - 0.4
                      - 1
                    maximumPortfolioExposure: 0.5
                    minimumPortfolioExposure: 0.5
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                assetsReturns:
                  description: assetsReturns[i] is the arithmetic return of asset i
                  items:
                    type: number
                  minItems: 1
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
              required:
                - assets
                - assetsCovarianceMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed minimum variance portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.4
                      - 0.09999999999998999
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Minimum Variance Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/most-diversified:
    post:
      description: |
        Compute the assets weights of the most diversified portfolio, optionally subject to:  
        * Minimum and maximum weights constraints
        * Maximum group weights constraints
        * Minimum and maximum portfolio exposure constraints

        References
         * [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification, The Journal of Portfolio Management Fall 2008, 35 (1) 40-51](https://doi.org/10.3905/JPM.2008.35.1.40)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Compute the portfolio weights for 2 assets
                value:
                  assets: 2
                  assetsCovarianceMatrix:
                    - - 0.04
                      - 0.01
                    - - 0.01
                      - 0.01
            schema:
              properties:
                assets:
                  description: The number of assets
                  minimum: 2
                  type: integer
                assetsCovarianceMatrix:
                  description: assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 2
                  type: array
                constraints:
                  properties:
                    assetsGroups:
                      items:
                        description: assetsGroups[k] is the indexes of the assets belonging to the assets group k in the portfolio; exclusive with assetsGroupsMatrix
                        items:
                          minimum: 1
                          type: integer
                        minItems: 2
                        type: array
                        uniqueItems: true
                      minItems: 1
                      type: array
                    assetsGroupsMatrix:
                      description: assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
                      items:
                        items:
                          type: number
                        minItems: 2
                        type: array
                      minItems: 1
                      type: array
                    maximumAssetsGroupsWeights:
                      description: maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
                      items:
                        type: number
                      type: array
                    maximumAssetsWeights:
                      description: maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    maximumPortfolioExposure:
                      default: 1
                      description: The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                    minimumAssetsWeights:
                      description: minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      type: array
                    minimumPortfolioExposure:
                      default: 1
                      description: The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
                      maximum: 1
                      minimum: 0
                      type: number
                  type: object
              required:
                - assets
                - assetsCovarianceMatrix
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Computed most diversified portfolio of 2 assets
                  value:
                    assetsWeights:
                      - 0.33333333333333337
                      - 0.6666666666666666
              schema:
                properties:
                  assetsWeights:
                    description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    minItems: 2
                    type: array
                required:
                  - assetsWeights
                type: object
          description: OK
      summary: Most Diversified Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/simulation/rebalancing/drift-weight:
    post:
      description: |
        Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being never rebalanced (a.k.a. buy and hold).

        References
        * [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016). INSEAD Working Paper No. 2016/15/FIN](https://ssrn.com/abstract=2746471)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Simulate 3 buy and hold portfolios, each made of 3 assets with only one asset invested
                value:
                  assets:
                    - assetPrices:
                        - 100
                        - 105
                        - 110
                    - assetPrices:
                        - 15
                        - 12.5
                        - 11.25
                    - assetPrices:
                        - 0.5
                        - 0.51
                        - 0.49
                  portfolios:
                    - assetsWeights:
                        - 1
                        - 0
                        - 0
                    - assetsWeights:
                        - 0
                        - 1
                        - 0
                    - assetsWeights:
                        - 0
                        - 0
                        - 1
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetPrices:
                        description: assetPrices[t] is the price of the asset at the time t
                        items:
                          exclusiveMinimum: true
                          minimum: 0
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetPrices
                    type: object
                  minItems: 1
                  type: array
                portfolios:
                  items:
                    properties:
                      assetsWeights:
                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                        items:
                          maximum: 1
                          minimum: 0
                          type: number
                        minItems: 1
                        type: array
                    required:
                      - assetsWeights
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
                - assetsPrices
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Simulated portfolios over 2 time periods
                  value:
                    portfolios:
                      - portfolioValues:
                          - 100
                          - 105
                          - 110
                      - portfolioValues:
                          - 100
                          - 83.33333333333334
                          - 75
                      - portfolioValues:
                          - 100
                          - 102
                          - 98
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioValues:
                          description: portfolioValues[t] is the value of the portfolio at the time t
                          items:
                            minimum: 0
                            type: number
                          type: array
                      required:
                        - portfolioValues
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Drift-weight Portfolio Rebalancing
      tags:
        - Portfolio Simulation
      x-codegen-request-body-name: body
  /portfolio/simulation/rebalancing/fixed-weight:
    post:
      description: |
        Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being rebalanced toward fixed weights at the beginning of each time period.

        References
        * [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016). INSEAD Working Paper No. 2016/15/FIN](https://ssrn.com/abstract=2746471)        
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Simulate 3 portfolios, each rebalanced toward the provided assets weights at the beginning of each of the 2 time periods
                value:
                  assets:
                    - assetPrices:
                        - 100
                        - 105
                        - 110
                    - assetPrices:
                        - 15
                        - 12.5
                        - 11.25
                    - assetPrices:
                        - 0.5
                        - 0.51
                        - 0.49
                  portfolios:
                    - assetsWeights:
                        - 0.5
                        - 0.5
                        - 0
                    - assetsWeights:
                        - 0
                        - 0.5
                        - 0.5
                    - assetsWeights:
                        - 0.5
                        - 0
                        - 0.5
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetPrices:
                        description: assetPrices[t] is the price of the asset at the time t
                        items:
                          exclusiveMinimum: true
                          minimum: 0
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetPrices
                    type: object
                  minItems: 1
                  type: array
                portfolios:
                  items:
                    properties:
                      assetsWeights:
                        description: assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
                        items:
                          maximum: 1
                          minimum: 0
                          type: number
                        minItems: 1
                        type: array
                    required:
                      - assetsWeights
                    type: object
                  minItems: 1
                  type: array
              required:
                - assets
                - assetsPrices
                - portfolios
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Simulated portfolios over 2 time periods
                  value:
                    portfolios:
                      - portfolioValues:
                          - 100
                          - 94.16666666666667
                          - 91.70039682539684
                      - portfolioValues:
                          - 100
                          - 92.66666666666667
                          - 86.21633986928106
                      - portfolioValues:
                          - 100
                          - 103.5
                          - 103.93487394957984
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioValues:
                          description: portfolioValues[t] is the value of the portfolio at the time t
                          items:
                            minimum: 0
                            type: number
                          type: array
                      required:
                        - portfolioValues
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Fixed-weight Portfolio Rebalancing
      tags:
        - Portfolio Simulation
      x-codegen-request-body-name: body
  /portfolio/simulation/rebalancing/random-weight:
    post:
      description: |
        Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being rebalanced toward random weights at the beginning of each time period.

        References
        * [R Stein, Not fooled by randomness: Using random portfolios to analyse investment funds, Investment Analysts Journal, 43:79, 1-15, DOI: 10.1080/10293523.2014.11082564](https://www.tandfonline.com/doi/abs/10.1080/10293523.2014.11082564)
      requestBody:
        content:
          application/json:
            examples:
              Example:
                description: Simulate 2 portfolios each rebalanced toward random assets weights at the beginning of each of the 2 time periods
                value:
                  assets:
                    - assetPrices:
                        - 100
                        - 105
                        - 110
                    - assetPrices:
                        - 15
                        - 12.5
                        - 11.25
                    - assetPrices:
                        - 0.5
                        - 0.51
                        - 0.49
                  portfolios: 2
            schema:
              properties:
                assets:
                  items:
                    properties:
                      assetPrices:
                        description: assetPrices[t] is the price of the asset at the time t
                        items:
                          exclusiveMinimum: true
                          minimum: 0
                          type: number
                        minItems: 2
                        type: array
                    required:
                      - assetPrices
                    type: object
                  minItems: 1
                  type: array
                portfolios:
                  default: 25
                  description: The number of portfolios to simulate
                  minimum: 1
                  type: integer
              required:
                - assets
                - assetsPrices
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: Simulated portfolios over 2 time periods
                  value:
                    portfolios:
                      - portfolioValues:
                          - 100
                          - 90.8178403620342
                          - 84.65407625993741
                      - portfolioValues:
                          - 100
                          - 102.43258698946813
                          - 101.32419718013273
              schema:
                properties:
                  portfolios:
                    items:
                      properties:
                        portfolioValues:
                          description: portfolioValues[t] is the value of the portfolio at the time t
                          items:
                            minimum: 0
                            type: number
                          type: array
                      required:
                        - portfolioValues
                      type: object
                    type: array
                required:
                  - portfolios
                type: object
          description: OK
      summary: Random-weight Portfolio Rebalancing
      tags:
        - Portfolio Simulation
      x-codegen-request-body-name: body
components:
  securitySchemes:
    ApiKeyAuth:
      description: |
        An [API key](#overview--api-key) is required to benefit from [higher API limits](#overview--api-limits).
      in: header
      name: X-API-Key
      type: apiKey
