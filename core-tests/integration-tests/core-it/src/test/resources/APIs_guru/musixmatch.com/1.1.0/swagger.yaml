swagger: "2.0"
schemes:
  - https
host: api.musixmatch.com
basePath: /ws/1.1
info:
  contact:
    email: info@musixmatch.com
    name: Musixmatch
    url: https://musixmatch.com
    x-twitter: Musixmatch
  description: |
    Musixmatch lyrics API is a robust service that permits you to search and retrieve lyrics in the simplest possible way. It just works.

    Include millions of licensed lyrics on your website or in your application legally.

    The fastest, most powerful and legal way to display lyrics on your website or in your application.

    #### Read musixmatch API Terms & Conditions and the Privacy Policy:
    Before getting started, you must take a look at the [API Terms & Conditions](http://musixmatch.com/apiterms/) and the [Privacy Policy](https://developer.musixmatch.com/privacy). We’ve worked hard to make this service completely legal so that we are all protected from any foreseeable liability. Take the time to read this stuff.

    #### Register for an API key:
    All you need to do is [register](https://developer.musixmatch.com/signup) in order to get your API key, a mandatory parameter for most of our API calls. It’s your personal identifier and should be kept secret:

    ```
      https://api.musixmatch.com/ws/v1.1/track.get?apikey=YOUR_API_KEY
    ```
    #### Integrate the musixmatch service with your web site or application
    In the most common scenario you only need to implement two API calls: 
    The first call is to match your catalog to ours using the [track.search](#!/Track/get_track_search) function and the second is to get the lyrics using the [track.lyrics.get](#!/Lyrics/get_track_lyrics_get) api. That’s it!

    ## API Methods
    What does the musiXmatch API do?

    The musiXmatch API allows you to read objects from our huge 100% licensed lyrics database.

    To make your life easier we are providing you with one or more examples to show you how it could work in the wild. You’ll find both the API request and API response in all the available output formats for each API call. Follow the links below for the details.

    The current API version is 1.1, the root URL is located at https://api.musixmatch.com/ws/1.1/

    Supported input parameters can be found on the page [Input Parameters](https://developer.musixmatch.com/documentation/input-parameters). Use UTF-8 to encode arguments when calling API methods.

    Every response includes a status_code. A list of all status codes can be consulted at [Status Codes](https://developer.musixmatch.com/documentation/status-codes).

    ## Music meta data
    The musiXmatch api is built around lyrics, but there are many other data we provide through the api that can be used to improve every existent music service.

    ## Track
    Inside the track object you can get the following extra information:

    ### TRACK RATING

    The track rating is a score 0-100 identifying how popular is a song in musixmatch.

    You can use this information to sort search results, like the most popular songs of an artist, of a music genre, of a lyrics language.

    ### INSTRUMENTAL AND EXPLICIT FLAGS

    The instrumental flag identifies songs with music only, no lyrics.

    The explicit flag identifies songs with explicit lyrics or explicit title. We're able to identify explicit words and set the flag for the most common languages.

    ### FAVOURITES

    How many users have this song in their list of favourites.

    Can be used to sort tracks by num favourite to identify more popular tracks within a set.

    ### MUSIC GENRE

    The music genere of the song.

    Can be used to group songs by genre, as input for similarity alghorithms, artist genre identification, navigate songs by genere, etc.

    ### SONG TITLES TRANSLATIONS

    The track title, as translated in different lanauages, can be used to display the right writing for a given user, example:

    LIES (Bigbang) becomes 在光化門 in chinese
    HALLELUJAH (Bigbang) becomes ハレルヤ in japanese


    ## Artist
    Inside the artist object you can get the following nice extra information:

    ### COMMENTS AND COUNTRY

    An artist comment is a short snippet of text which can be mainly used for disambiguation.

    The artist country is the born country of the artist/group

    There are two perfect search result if you search by artist with the keyword "U2". Indeed there are two distinct music groups with this same name, one is the most known irish group of Bono Vox, the other is a less popular (world wide speaking) group from Japan.

    Here's how you can made use of the artist comment in your search result page:

    U2 (Irish rock band)
    U2 (あきやまうに)
    You can also show the artist country for even better disambiguation:

    U2 (Irish rock band) from Ireland
    U2 (あきやまうに) from Japan
    ARTIST TRANSLATIONS

    When you create a world wide music related service you have to take into consideration to display the artist name in the user's local language. These translation are also used as aliases to improve the search results.

    Let's use PSY for this example.

    Western people know him as PSY but korean want to see the original name 싸이.

    Using the name translations provided by our api you can show to every user the writing they expect to see.

    Furthermore, when you search for "psy gangnam style" or "싸이 gangnam style" with our search/match api you will still be able to find the song.

    ### ARTIST RATING

    The artist rating is a score 0-100 identifying how popular is an artist in musixmatch.

    You can use this information to build charts, for suggestions, to sort search results. In the example above about U2, we use the artist rating to show the irish band before the japanese one in our serp.

    ### ARTIST MUSIC GENRE

    We provide one or more main artist genre, this information can be used to calculate similar artist, suggestions, or the filter a search by artist genre.



    ## Album
    Inside the album object you can get the following nice extra information:

    ### ALBUM RATING

    The album rating is a score 0-100 identifying how popular is an album in musixmatch.

    You can use this information to sort search results, like the most popular albums of an artist.

    ### ALBUM RATING

    The album rating is a score 0-100 identifying how popular is an album in musixmatch.

    You can use this information to sort search results, like the most popular albums of an artist.

    ### ALBUM COPYRIGHT AND LABEL

    For most of our albums we can provide extra information like for example:

    Label: Universal-Island Records Ltd.
    Copyright: (P) 2013 Rubyworks, under license to Columbia Records, a Division of Sony Music Entertainment.
    ALBUM TYPE AND RELEASE DATE

    The album official release date can be used to sort an artist's albums view starting by the most recent one.

    Album can also be filtered or grouped by type: Single, Album, Compilation, Remix, Live. This can help to build an artist page with a more organized structure.

    ### ALBUM MUSIC GENRE

    For most of the albums we provide two groups of music genres. Primary and secondary. This information can be used to help user navigate albums by genre.

    An example could be:

    Primary genere: POP
    Secondary genre: K-POP or Mandopop
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: http://musixmatch.com/apiterms/
  title: Musixmatch API
  version: 1.1.0
  x-apisguru-categories:
    - media
  x-logo:
    url: https://twitter.com/Musixmatch/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/musixmatch/musixmatch-sdk/master/swagger/swagger.yaml
      version: "2.0"
  x-providerName: musixmatch.com
externalDocs:
  description: Find out more about Musixmatch API
  url: https://developer.musixmatch.com/
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  key:
    in: query
    name: apikey
    type: apiKey
security:
  - key: []
tags:
  - description: ""
    name: Track
  - description: ""
    name: Artist
  - description: ""
    name: Album
  - description: ""
    name: Lyrics
  - description: ""
    name: Subtitle
  - description: ""
    name: Snippet
paths:
  /album.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch album id
          in: query
          name: album_id
          required: true
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      album:
                        $ref: "#/definitions/Album"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Album
  /album.tracks.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch album id
          in: query
          name: album_id
          required: true
          type: string
        - description: When set, filter only contents with lyrics
          in: query
          name: f_has_lyrics
          required: false
          type: string
        - description: Define the page number for paginated results
          in: query
          name: page
          required: false
          type: number
        - description: Define the page size for paginated results.Range is 1 to 100.
          in: query
          name: page_size
          required: false
          type: number
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track_list:
                        description: A list of tracks
                        items:
                          $ref: "#/definitions/Track"
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Track
  /artist.albums.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch artist id
          in: query
          name: artist_id
          required: true
          type: string
        - description: Sort by release date (asc|desc)
          in: query
          name: s_release_date
          required: false
          type: string
        - description: Group by Album Name
          in: query
          name: g_album_name
          required: false
          type: string
        - description: Define the page size for paginated results.Range is 1 to 100.
          in: query
          name: page_size
          required: false
          type: number
        - description: Define the page number for paginated results
          in: query
          name: page
          required: false
          type: number
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      album_list:
                        description: A list of albums
                        items:
                          properties:
                            album:
                              $ref: "#/definitions/Album"
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Album
  /artist.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: "\tThe musiXmatch artist id"
          in: query
          name: artist_id
          required: true
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist:
                        $ref: "#/definitions/Artist"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Artist
  /artist.related.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch artist id
          in: query
          name: artist_id
          required: true
          type: string
        - description: Define the page size for paginated results.Range is 1 to 100.
          in: query
          name: page_size
          required: false
          type: number
        - description: Define the page number for paginated results
          in: query
          name: page
          required: false
          type: number
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist_list:
                        description: A list of artists
                        items:
                          properties:
                            artist:
                              $ref: "#/definitions/Artist"
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Artist
  /artist.search:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The song artist
          in: query
          name: q_artist
          required: false
          type: string
        - description: When set, filter by this artist id
          in: query
          name: f_artist_id
          required: false
          type: number
        - description: Define the page number for paginated results
          in: query
          name: page
          required: false
          type: number
        - description: Define the page size for paginated results.Range is 1 to 100.
          in: query
          name: page_size
          required: false
          type: number
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist_list:
                        description: A list of artists
                        items:
                          properties:
                            artist:
                              $ref: "#/definitions/Artist"
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        description: ""
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Artist
  /chart.artists.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: Define the page number for paginated results
          in: query
          name: page
          required: false
          type: number
        - description: Define the page size for paginated results.Range is 1 to 100.
          in: query
          name: page_size
          required: false
          type: number
        - default: us
          description: A valid ISO 3166 country code
          in: query
          name: country
          required: false
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      artist_list:
                        description: A list of artists
                        items:
                          properties:
                            artist:
                              $ref: "#/definitions/Artist"
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Artist
  /chart.tracks.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: Define the page number for paginated results
          in: query
          name: page
          required: false
          type: number
        - description: Define the page size for paginated results.Range is 1 to 100.
          in: query
          name: page_size
          required: false
          type: number
        - default: us
          description: A valid ISO 3166 country code
          in: query
          name: country
          required: false
          type: string
        - description: When set, filter only contents with lyrics
          in: query
          name: f_has_lyrics
          required: false
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track_list:
                        description: A list of tracks
                        items:
                          properties:
                            track:
                              $ref: "#/definitions/Track"
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Track
  /matcher.lyrics.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The song title
          in: query
          name: q_track
          required: false
          type: string
        - description: The song artist
          in: query
          name: q_artist
          required: false
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      lyrics:
                        $ref: "#/definitions/Lyrics"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Lyrics
  /matcher.subtitle.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The song title
          in: query
          name: q_track
          required: false
          type: string
        - description: "\tThe song artist"
          in: query
          name: q_artist
          required: false
          type: string
        - description: Filter by subtitle length in seconds
          in: query
          name: f_subtitle_length
          required: false
          type: number
        - description: Max deviation for a subtitle length in seconds
          in: query
          name: f_subtitle_length_max_deviation
          required: false
          type: number
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      subtitle:
                        $ref: "#/definitions/Subtitle"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Subtitle
  /matcher.track.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The song artist
          in: query
          name: q_artist
          required: false
          type: string
        - description: The song title
          in: query
          name: q_track
          required: false
          type: string
        - description: When set, filter only contents with lyrics
          in: query
          name: f_has_lyrics
          required: false
          type: number
        - description: When set, filter only contents with subtitles
          in: query
          name: f_has_subtitle
          required: false
          type: number
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track:
                        $ref: "#/definitions/Track"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Track
  /track.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch track id
          in: query
          name: track_id
          required: true
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track:
                        $ref: "#/definitions/Track"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Track
  /track.lyrics.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch track id
          in: query
          name: track_id
          required: true
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      lyrics:
                        $ref: "#/definitions/Lyrics"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Lyrics
  /track.search:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The song title
          in: query
          name: q_track
          required: false
          type: string
        - description: The song artist
          in: query
          name: q_artist
          required: false
          type: string
        - description: Any word in the lyrics
          in: query
          name: q_lyrics
          required: false
          type: string
        - description: When set, filter by this artist id
          in: query
          name: f_artist_id
          required: false
          type: number
        - description: When set, filter by this music category id
          in: query
          name: f_music_genre_id
          required: false
          type: number
        - description: Filter by the lyrics language (en,it,..)
          in: query
          name: f_lyrics_language
          required: false
          type: number
        - description: When set, filter only contents with lyrics
          in: query
          name: f_has_lyrics
          required: false
          type: number
        - description: Sort by our popularity index for artists (asc|desc)
          in: query
          name: s_artist_rating
          required: false
          type: string
        - description: Sort by our popularity index for tracks (asc|desc)
          in: query
          name: s_track_rating
          required: false
          type: string
        - default: 1
          description: Search only a part of the given query string.Allowed range is (0.1 – 0.9)
          in: query
          name: quorum_factor
          required: false
          type: number
        - description: Define the page size for paginated results.Range is 1 to 100.
          in: query
          name: page_size
          required: false
          type: number
        - description: Define the page number for paginated results
          in: query
          name: page
          required: false
          type: number
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      track_list:
                        description: A list of tracks
                        items:
                          properties:
                            track:
                              $ref: "#/definitions/Track"
                          type: object
                        type: array
                    type: object
                  header:
                    properties:
                      available:
                        type: number
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Track
  /track.snippet.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch track id
          in: query
          name: track_id
          required: true
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      snippet:
                        $ref: "#/definitions/Snippet"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Snippet
  /track.subtitle.get:
    get:
      description: ""
      parameters:
        - default: json
          description: "output format: json, jsonp, xml."
          in: query
          name: format
          required: false
          type: string
        - description: jsonp callback
          in: query
          name: callback
          required: false
          type: string
        - description: The musiXmatch track id
          in: query
          name: track_id
          required: true
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            properties:
              message:
                properties:
                  body:
                    properties:
                      subtitle:
                        $ref: "#/definitions/Subtitle"
                    type: object
                  header:
                    properties:
                      execute_time:
                        description: ""
                        type: number
                      status_code:
                        description: ""
                        type: number
                    type: object
                type: object
            type: object
      security:
        - key: []
      summary: ""
      tags:
        - Subtitle
definitions:
  Album:
    description: a album of songs in the Musixmatch database.
    properties:
      album_copyright:
        description: ""
        type: string
      album_coverart_100x100:
        description: ""
        type: string
      album_coverart_350x350:
        description: ""
        type: string
      album_coverart_500x500:
        description: ""
        type: string
      album_coverart_800x800:
        description: ""
        type: string
      album_edit_url:
        description: ""
        type: string
      album_id:
        description: ""
        type: number
      album_label:
        description: ""
        type: string
      album_mbid:
        description: ""
        type: string
      album_name:
        description: ""
        type: string
      album_pline:
        description: ""
        type: string
      album_rating:
        description: ""
        type: number
      album_release_date:
        description: ""
        type: string
      album_release_type:
        description: ""
        type: string
      album_track_count:
        description: ""
        type: number
      album_vanity_id:
        description: ""
        type: string
      artist_id:
        description: ""
        type: number
      artist_name:
        description: ""
        type: string
      primary_genres:
        properties:
          music_genre_list:
            items:
              properties:
                music_genre:
                  properties:
                    music_genre_id:
                      description: ""
                      type: number
                    music_genre_name:
                      description: ""
                      type: string
                    music_genre_name_extended:
                      description: ""
                      type: string
                    music_genre_parent_id:
                      description: ""
                      type: number
                    music_genre_vanity:
                      description: ""
                      type: string
                  type: object
              type: object
            type: array
        type: object
      restricted:
        description: ""
        type: number
      secondary_genres:
        properties:
          music_genre_list:
            items:
              description: ""
              type: string
            type: array
        type: object
      updated_time:
        description: ""
        type: string
    title: a Album object
  Artist:
    description: a artist in the Musixmatch database.
    properties:
      artist_alias_list:
        items:
          properties:
            artist_alias:
              description: ""
              type: string
          type: object
        type: array
      artist_comment:
        description: ""
        type: string
      artist_country:
        description: ""
        type: string
      artist_credits:
        properties:
          artist_list:
            items:
              description: ""
              type: string
            type: array
        type: object
      artist_edit_url:
        description: ""
        type: string
      artist_id:
        description: ""
        type: number
      artist_mbid:
        description: ""
        type: string
      artist_name:
        description: ""
        type: string
      artist_name_translation_list:
        items:
          properties:
            artist_name_translation:
              properties:
                language:
                  description: ""
                  type: string
                translation:
                  description: ""
                  type: string
              type: object
          type: object
        type: array
      artist_rating:
        description: ""
        type: number
      artist_share_url:
        description: ""
        type: string
      artist_twitter_url:
        description: ""
        type: string
      artist_vanity_id:
        description: ""
        type: string
      managed:
        description: ""
        type: number
      primary_genres:
        properties:
          music_genre_list:
            items:
              properties:
                music_genre:
                  properties:
                    music_genre_id:
                      description: ""
                      type: number
                    music_genre_name:
                      description: ""
                      type: string
                    music_genre_name_extended:
                      description: ""
                      type: string
                    music_genre_parent_id:
                      description: ""
                      type: number
                    music_genre_vanity:
                      description: ""
                      type: string
                  type: object
              type: object
            type: array
        type: object
      restricted:
        description: ""
        type: number
      secondary_genres:
        properties:
          music_genre_list:
            items:
              description: ""
              type: string
            type: array
        type: object
      updated_time:
        description: ""
        type: string
    title: a Artist object
  Lyrics:
    description: a Lyrics in the Musixmatch database.
    properties:
      action_requested:
        description: ""
        type: string
      can_edit:
        description: ""
        type: number
      explicit:
        description: ""
        type: number
      html_tracking_url:
        description: ""
        type: string
      instrumental:
        description: ""
        type: number
      locked:
        description: ""
        type: number
      lyrics_body:
        description: ""
        type: string
      lyrics_copyright:
        description: ""
        type: string
      lyrics_id:
        description: ""
        type: number
      lyrics_language:
        description: ""
        type: string
      lyrics_language_description:
        description: ""
        type: string
      pixel_tracking_url:
        description: ""
        type: string
      publisher_list:
        items:
          description: ""
          type: string
        type: array
      restricted:
        description: ""
        type: number
      script_tracking_url:
        description: ""
        type: string
      updated_time:
        description: ""
        type: string
      verified:
        description: ""
        type: number
      writer_list:
        items:
          description: ""
          type: string
        type: array
    title: a Lyrics object
    type: object
  Snippet:
    description: Snippet of lyrics text in the Musixmatch database.
    properties:
      html_tracking_url:
        description: ""
        type: string
      instrumental:
        description: ""
        type: number
      pixel_tracking_url:
        description: ""
        type: string
      restricted:
        description: ""
        type: number
      script_tracking_url:
        description: ""
        type: string
      snippet_body:
        description: ""
        type: string
      snippet_id:
        description: ""
        type: number
      snippet_language:
        description: ""
        type: string
      updated_time:
        description: ""
        type: string
    title: a Snippet object
    type: object
  Subtitle:
    description: a synchronized lyrics subtitle in the Musixmatch database.
    properties:
      html_tracking_url:
        description: ""
        type: string
      lyrics_copyright:
        description: ""
        type: string
      pixel_tracking_url:
        description: ""
        type: string
      publisher_list:
        items:
          description: ""
          type: string
        type: array
      restricted:
        description: ""
        type: number
      script_tracking_url:
        description: ""
        type: string
      subtitle_body:
        description: ""
        type: string
      subtitle_id:
        description: ""
        type: number
      subtitle_language:
        description: ""
        type: string
      subtitle_language_description:
        description: ""
        type: string
      subtitle_length:
        description: ""
        type: number
      updated_time:
        description: ""
        type: string
      writer_list:
        items:
          description: ""
          type: string
        type: array
    title: a Subtitle object
  Track:
    description: a song in the Musixmatch database
    properties:
      album_coverart_100x100:
        description: ""
        type: string
      album_coverart_350x350:
        description: ""
        type: string
      album_coverart_500x500:
        description: ""
        type: string
      album_coverart_800x800:
        description: ""
        type: string
      album_id:
        description: ""
        type: number
      album_name:
        description: ""
        type: string
      artist_id:
        description: ""
        type: number
      artist_mbid:
        description: ""
        type: string
      artist_name:
        description: ""
        type: string
      commontrack_id:
        description: ""
        type: number
      commontrack_vanity_id:
        description: ""
        type: string
      explicit:
        description: ""
        type: number
      first_release_date:
        description: ""
        type: string
      has_lyrics:
        description: ""
        type: number
      has_subtitles:
        description: ""
        type: number
      instrumental:
        description: ""
        type: number
      lyrics_id:
        description: ""
        type: number
      num_favourite:
        description: ""
        type: number
      primary_genres:
        properties:
          music_genre_list:
            items:
              properties:
                music_genre:
                  properties:
                    music_genre_id:
                      description: ""
                      type: number
                    music_genre_name:
                      description: ""
                      type: string
                    music_genre_name_extended:
                      description: ""
                      type: string
                    music_genre_parent_id:
                      description: ""
                      type: number
                    music_genre_vanity:
                      description: ""
                      type: string
                  type: object
              type: object
            type: array
        type: object
      restricted:
        description: ""
        type: number
      secondary_genres:
        properties:
          music_genre_list:
            items:
              properties:
                music_genre:
                  properties:
                    music_genre_id:
                      description: ""
                      type: number
                    music_genre_name:
                      description: ""
                      type: string
                    music_genre_name_extended:
                      description: ""
                      type: string
                    music_genre_parent_id:
                      description: ""
                      type: number
                    music_genre_vanity:
                      description: ""
                      type: string
                  type: object
              type: object
            type: array
        type: object
      subtitle_id:
        description: ""
        type: number
      track_edit_url:
        description: ""
        type: string
      track_id:
        description: ""
        type: number
      track_isrc:
        description: ""
        type: string
      track_length:
        description: ""
        type: number
      track_mbid:
        description: ""
        type: string
      track_name:
        description: ""
        type: string
      track_name_translation_list:
        items:
          description: ""
          type: string
        type: array
      track_rating:
        description: ""
        type: number
      track_share_url:
        description: ""
        type: string
      track_soundcloud_id:
        description: ""
        type: number
      track_spotify_id:
        description: ""
        type: string
      track_xboxmusic_id:
        description: ""
        type: string
      updated_time:
        description: ""
        type: string
    title: a Track object
    type: object
