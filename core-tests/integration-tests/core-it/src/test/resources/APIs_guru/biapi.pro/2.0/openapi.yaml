openapi: 3.0.0
servers:
  - url: //budgea.biapi.pro/2.0
info:
  description: |
    # Budgea Development Guides

    Welcome to **Budgea**'s documentation.

    This documentation is intended to get you up-and-running with our APIs and advise on the implementation of some regulatory aspects of your application, following the DSP2's guidelines.

    ## Getting Started
    **IMPORTANT**
    Depending on your status with regard of the DSP2 regulation, **agent** or **partner**, you may call our APIs or simply use our Webview and callbacks to get the financial data of your users.
    As an **agent**, you are allowed to call directly our APIs and implement your own form to get the user's credentials.
    As a **partner**, you cannot manipulate the credentials, and have to delegate this step to us through our webview.

    The sections below will document how to use our APIs, make sure you have the **agent** status to do so.
    For the **partner**, please refer to the section *Webview* and *Callbacks* of this documentation.

    ### Overview
    Your API is a REST API which requires a communication through https to send and receive JSON documents.
    During your tests, we recommend to make calls to the API with curl or any other HTTP client of your choice.
    You can watch a video demonstration on this [URL](https://asciinema.org/a/FsaFyt3WAPyDm7sfaZPkwal3V).
    For the examples we'll use the demo API with address `https://demo.biapi.pro`, you should change that name to your API's name.

    ### Hello World
    Let's start by calling the service `/banks` which lists all available banks.
    ```
    curl https://demo.biapi.pro/2.0/banks/
    ```
    To log in to a bank webpage, you'll need to know for a given bank, the fields your user should fill in the form.
    Let's call a  specific bank and ask for an additional resource *fields*.
    ```
    curl https://demo.biapi.pro/2.0/banks/59?expand=fields
    ```
    The response here concerns only 1 bank (since we specified an id) and the resource _Fields_ is added to the response thanks to the query parameter `expand`.

    To get more interesting things done, you'll need to send authenticated requests.

    ### Authentication
    The way to authenticate is by passing the `Authorization: Bearer <token>` header in your request.
    At the setup a _manage token_ have been generated, you can use this token for now, when creating your user we'll see how to generate a user's token.
    ```
    curl https://demo.biapi.pro/2.0/config \
      -H 'Authorization: Bearer <token>'
    ```
    This endpoint will list all the parameters you can change to adapt Budgea to your needs.

    We've covered the very first calls. Before diving deeper, let's see some general information about the APIs.

    ## Abstract

    ### API URL
    `https://demo.biapi.pro/2.0`

    ### Requests format
    Data format: **application/x-www-form-urlencoded** or **application/json** (suggested)

    Additional headers: Authorization: User's token (private)

    ### Responses format
    Data format: **application/json** ([http://www.json.org](http://www.json.org/))
    Charset: **UTF-8**

    ### Resources
    Each call on an endpoint will return resources. The main resources are:
    | Resource            | Description                                                                                                           |
    | ---------------------|:------------------------------------------------------------------------------------------------------------------   |
    |Users                 |Represent a user                                                                                                      |
    |Connection            |A set of data used to authenticate on a website (usually a login and password). There is 1 connection for each website|
    |Account               |A bank account contained in a connection                                                                              |
    |Transaction           |An entry in a bank account                                                                                            |
    |Investment            |An asset in a bank account                                                                                            |

    The chain of resources is as follow: **Users ∈ Connections ∈ Accounts ∈ Transactions or Investments**

    ### RESTful API

    This API is RESTful, which means it is stateless and each resource is accessed with an unique URI.

    Several HTTP methods are available:

    | Method                  | Description                    |
    | ------------------------|:-------------------------------|
    | GET /resources          | List resources                 |
    | GET /resources/{ID}     | Get a resource from its ID     |
    | POST /resources         | Create a new resource          |
    | POST /resources/{ID}    | Update a resource              |
    | PUT /resources  /{ID}   | Update a resource              |
    | DELETE /resources       | Remove every resources         |
    | DELETE /resources/{ID}  | Delete a resource              |


    Each resource can contain sub-resources, for example:
    `/users/me/connections/2/accounts/23/transactions/48`

    ### HTTP response codes

    | Code        | Message               | Description                                                                                   |
    | ----------- |:---------------------:|-----------------------------------------------------------------------------------------------|
    | 200         | OK                    |Default response when a GET or POST request has succeed                                        |
    | 202         | Accepted              |For a new connection this code means it is necessary to provide complementary information (2FA)|
    | 204         | No content            |Default response when a POST request succeed without content                                   |
    | 400         | Bad request           |Supplied parameters are incorrect                                                              |
    | 403         | Forbidden             |Invalid token                                                                                  |
    | 500         | Internal Servor Error |Server error                                                                                   |
    | 503         | Service Unavailable   |Service is temporarily unavailable                                                             |

    ### Errors management
    In case an error occurs (code 4xx or 5xx), the response can contain a JSON object describing this error:
    ```json
    {
       "code": "authFailure",
       "message": "Wrong password"  // Optional
    }
    ```
    If an error is displayed on the website, Its content is returned in error_message field.
    The list of all possible errors is listed further down this page.

    ### Authentication
    A user is authenticated by an access_token which is sent by the API during a call on one of the authentication services, and can be supplied with this header:
    `Authorization: Bearer YYYYYYYYYYYYYYYYYYYYYYYYYYY`

     There are two user levels:

        - Normal user, which can only access to his own accounts
        - Administrator, with extended rights

    ### Default filters
    During a call to an URI which lists resources, some filters can be passed as query parameters:

    | Parameter   | Type      | Description                                               |
    | ----------- |:---------:|-----------------------------------------------------------|
    | offset      | Integer   |Offset of the first returned resource                      |
    | limit       | Integer   |Limit number of results                                    |
    | min_date    | Date      |Minimal date (if supported by service), format: YYYY-MM-DD |
    | max_date    | Date      |Maximal date (if supported by service), format: YYYY-MM-DD |

    ### Extend requests
    During a GET on a set of resources or on a unique resource, it is possible to add a parameter expand to the request to extend relations with other resources:

    `GET /2.0/users/me/accounts/123?expand=transactions[category],connection`

    ```json
    {
       "id" : 123
       "name" : "Compte chèque"
       "balance" : 1561.15
       "transactions" : [
          {
             "id" : 9849,
             "simplified_wording" : "HALL'S BEER",
             "value" : -513.20,
             ...
             "category" : {
                "id" : 561,
                "name" : "Sorties / Bar",
                ...
             }
           },
           ...
       ],
       "id_user" : 1,
       "connection" : {
          "id" : 1518,
          "id_bank" : 41,
          "id_user" : 1,
          "error" : null,
          ...
       }
    }
    ```

    ### Request example
    ```http
    GET /2.0/banks?offset=0&limit=10&expand=fields
    Host: demo.biapi.pro
    Accept: application/json
    Authorization: Bearer <token>
    ```
    ```http
    HTTP/1.1 200 OK
    Content-Type: application/json
    Content-Length: 3026
    Server: Apache
    Date: Fri, 14 Mar 2014 08:24:02 GMT

    {
       "banks" : [
          {
             "id_weboob" : "bnp",
             "name" : "BNP Paribas",
             "id" : 3,
             "hidden" : false,
             "fields" : [
                {
                   "id" : 1,
                   "id_bank" : 3,
                   "regex" : "^[0-9]{5,10}$",
                   "name" : "login",
                   "type" : "text",
                   "label" : "Numéro client"
                },
                {
                   "id" : 2,
                   "id_bank" : 3,
                   "regex" : "^[0-9]{6}$",
                   "name" : "password",
                   "type" : "password",
                   "label" : "Code secret"
                }
             ]
          },
          ...
       ]
       "total" : 41
    }
    ```

    ### Constants
    #### List of bank account types
    | Type          |Description                        |
    | -----------   |-----------------------------------|
    | checking      |Checking account                   |
    | savings       |Savings account                    |
    | deposit       |Deposit accounts                   |
    | loan          |Loan                               |
    | market        | Market accounts                   |
    | joint         |Joint account                      |
    | card          |Card                               |
    | lifeinsurance |Life insurance accounts            |
    | pee           |Plan Épargne Entreprise            |
    | perco         |Plan Épargne Retraite              |
    | article83     |Article 83                         |
    | rsp           |Réserve spéciale de participation  |
    | pea           |Plan d'épargne en actions          |
    | capitalisation|Contrat de capitalisation          |
    | perp          |Plan d'épargne retraite populaire  |
    | madelin       |Contrat retraite Madelin           |
    | unknown       |Inconnu                            |

    #### List of transaction types

    | Type         |Description                        |
    | -----------  |-----------------------------------|
    |transfer      |Transfers                          |
    |order         |Orders                             |
    |check         |Checks                             |
    |deposit       |Cash deposit                       |
    |payback       |Payback                            |
    |withdrawal    |Withdrawal                         |
    |loan_payment  |Loan payment                       |
    |bank          |Bank fees                          |
    |card          |Card operation                     |
    |deferred_card |Deferred card operation            |
    |card_summary  |Mensual debit of a deferred card   |

    #### List of synchronization errors
    ##### Error on Connection object
    The error field may take one of the below values in case of error when accessing the user space.

    | Error                      |Description                                                                                       |
    | -----------------------    |--------------------------------------------------------------------------------------------------|
    |wrongpass                   |The authentication on website has failed                                                          |
    |additionalInformationNeeded |Additional information is needed such as an OTP                                                  |
    |websiteUnavailable          |The website is unavailable, for instance we get a HTTP 503 response when requesting the website   |
    |actionNeeded                |An action is needed on the website by the user, scraping is blocked                               |
    |SCARequired                |An SCA process must be done by updating the connection                               |
    |decoupled                  |Requires a user validation (ex: digital key)|
    |passwordExpired                   |The password has expired and needs to be changed on the website.                                                         |
    |webauthRequired                |A complete authentication process is required by update the connection via redirect                            |
    |bug                         |A bug has occurred during the synchronization. An alert has been sent to Budget Insight           |

    #### Error on Account object
    Errors can be filled at the account level in case we access the user's dashboard but some account related data cannot be retrieved.
    For instance, we may not access the transactions or investments for a specific account.
    Getting an error during an account synchronization does not impact the scraping of other acccounts.

    | Error                      |Description                                                                                       |
    | -----------------------    |--------------------------------------------------------------------------------------------------|
    |websiteUnavailable          |The website or a page is unavailable                                                              |
    |actionNeeded                |An action is needed on the website by the user, scraping is blocked                               |
    |bug                         |A bug has occurred during the synchronization. An alert has been sent to Budget Insight           |

    Now you know the basics of Budgea API
    - Basic call to retrieve resources
    - Add query parameters to aplly filters
    - Expand resources
    - Authenticated calls

    We're good for the basics! Now let's see how to integrate Budgea in your app and create your first user.

    ## Integrate Budgea *(protocol or Webview)*
    ### The workflow
    Users of your application exist in the Budgea API.
    Every User is identified by an access_token which is the shared secret between your application and our API.

    The workflow is as below:
    1. The user is on your application and wants to share his bank accounts or invoices.
    2. A call is made **client side** (browser's javascript or desktop application) to create a temporarily token which will be used to make API calls.
    3. A form is built, allowing the user to select the connector to use (bank or provider, depending on context). Every connector requires different kind of credentials.
    4. A call on the API is made with the temporarily token to add a **Connection** with the credentials supplied by user.
    5. In case of success, the user chooses what bank accounts (**Account**) or subscriptions (**Subscription**) he wants to share with your application.
    6. When he validates the share, the temporarily token is transmitted to your server. This one will call the Budgea API with this token to get a permanent token.

    **Note**
    In case your application works without a server (for example a desktop application), the permanent token can be obtained on the 1st step, by supplying a client_secret to /auth/init and the step 6 is omitted. To get more information, read the protocol.

    There are 3 steps to integrate Budgea in your application:
    1. Provide a way for your users to share their credentials with you
    2. Get the data scraped from Budgea
    3. Be sure to follow the good practices before going into production

    ### Get credentials from users
    You have 2 options here:
    - Integrate the Budget Insight's Webview, a turnkey solution to get user's credentials
    - Create your own form following the protocol (must have the *agent* status)

    ### Budgea webview

    The Budgea webview complements REST API endpoints with web-based services to handle sensitive or complex operations:
    - add a connection (to a bank or a provider), or edit/repare access to a connection;
    - manage connections (add/remove/edit);
    - edit and validate bank transfers (alpha preview).

    Usage of the webview is mandatory if you don't hold an Agent status, since you are not allowed to use API endpoints carrying user credentials, and optional otherwise.

    #### Implementation guidelines

    ##### Base URL

    The base URL of all services must be customized:  
    `https://{{domain}}.biapi.pro/2.0/auth/webview/`  
    `https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/`  
    - `{{domain}}`: substitute with you API domain;
    - `{{lang}}`: optionally specify the language of the webview, `en` or `fr` (if not specified, an automatic redirection will be performed following the language of the browser).

    ##### Browser integration

    Services available as part of the webview are designed as parameterized URLs intended to be opened in a web browser. A callback URI must be specified by callers to be notified at the end of the operation flow, similar to OAuth 2 specification.

    You are encouraged to integrate web-based steps in your product following UX best practices:
    - in a web environment, perform a full-page redirect to the URL (using either [HTTP redirect](https://developer.mozilla.org/fr/docs/Web/HTTP/Status/302) or [scripting](https://developer.mozilla.org/fr/docs/Web/API/Location)), and avoid new tabs or popups;
    - in a native Android app, prefer opening the default browser or relying on [Chrome Custom Tabs](https://developer.chrome.com/multidevice/android/customtabs) to integrating a WebView;
    - in a native iOS app, prefer using a [SFSafariViewController](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller) to integrating a WKWebView.

    ##### Callback handling

    Most flows redirect to a callback URI at the end of the process. Query parameters are added to the URI to identify successful or failed operations.

    Successful parameters are specific to each flow. In case of an error, the following parameters are added:

    | Parameter | Description |
    | - | - |
    | `error` | An lowercase string error code identifying the kind of error that occurred. When the parameter is not present, the response is successful. |
    | `error_description` | A longer string description of the error (not intended for user display). |

    Common error codes include:

    | Code | Description |
    | - | - |
    | `access_denied` | The user explicitly cancelled the flow. |
    | `server_error` | Oops, a technical failure occurred during the process. |

    **Forward compatibility requirement**: Additional error codes may be added in the future to describe specific cases. When implementing error codes handling, always fallback to a generic case for unknown codes.

    ##### Browser compatibility

    The webview is designed and tested to work with browsers supported by the Angular framework:  
    https://angular.io/guide/browser-support

    ##### Privacy / GDPR status

    The webview itself does not use any kind of long-term data persistence mechanism such as cookies or local storage, but some authentication or authorization steps may delegate to third-party web services that may implement them.

    #### Configuration

    You can configure the appearance and behaviour of the webview by configuring the associated *Client Application* in the console:

    | Key | Format | Description |
    | - | - | - |
    | `primary_color` | String | Optional. An accent color (hexadecimal string without '#' prefix) to personalize the UI elements of the webview. If absent, the default color is grey. |
    | `redirect_uri` | String | Optional. A recommended security whitelist configuration. The `redirect_uri` parameter sent to any endpoint of the webview is checked against the configuration, if any. |
    | `config.disable_connector_hints` | Boolean | Optional. This flags hides the list of most-used entries in the connector selection step. The default is `false`, i.e. the list is shown. |
    | `config.use_app_layout` | Boolean | Optional. Use this flag to enable presenting your log as an app icon. The default value is ` false`, i.e. the logo is shown in the top bar of the UI. |
    | `config.disable_accounts_pre_check` | Boolean | Optional. An optional boolean flag to prevent bank accounts to be automatically pre-checked when the user enters the activation step. The default value is ` false`, i.e. the bank accounts are pre-checked. |

    #### Endpoints reference

    ##### Add connection flow
    ```
    https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/connect
    ```

    This flow allows an end-user to add a new connection to the API. The flow handles the following steps:
    - selecting a connector;
    - authenticating & authorizing with the connector, by collecting credentials or delegating;
    - managing consent to aggregate accounts/subscriptions;
    - collecting required information for professional accounts.

    ###### Endpoint parameters

    | Parameter | Description |
    | - | - |
    | `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |
    | `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |
    | `code` | Optional. A user-scoped temporary code to use with the Budgea API.<br>If you don't provide a code, a new anonymous user will be created before the connection is added, and you will be returned an access token code scoped to it with the success callback. |
    | `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set "as is" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |
    | `connector_ids` | Optional. A comma-separated list of connector IDs available to pick from.<br>If the parameter is omitted, all active connectors are available.<br>If you pass a single value, the user is not prompted to choose the connector.<br>This parameter is mutually exclusive with `connector_uuids`. |
    | `connector_uuids` | Optional. A comma-separated list of connector UUIDs available to pick from.<br>If the parameter is omitted, all active connectors are available.<br>If you pass a single value, the user is not prompted to choose the connector.<br>This parameter is mutually exclusive with `connector_ids`. |
    | `connector_capabilities` | Optional. A comma-separated list of capabilities to filter available connectors.<br>If the parameter is omitted, `bank` is inferred.<br>If multiple values are provided, only connectors that expose all the requested capabilities are available.<br>To request a bank connection, use `bank`.<br>To request a provider connection, use `document`. |
    | `account_ibans` | Optional. A comma-separated list of IBANs to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |
    | `account_types` | Optional. A comma-separated list of account types to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |
    | `account_usages` | Optional. A comma-separated list of account usages to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |

    ###### Successful callback parameters

    | Parameter | Description |
    | - | - |
    | `connection_id` | The id of the newly created connection. Please note that when redirecting to the callback URI, the accounts and/or subscriptions are available in the API, but bank transactions or documents may still be syncing in background. |
    | `code` | Optional. If a `code` was *not* initially specified, an API code that you must exchange to obtain a permanent access token associated with the newly-created anonymous user holding the connection. The parameter is URL-encoded, make sure to handle it accordingly. |
    | `state` | Optional. Identical to the `state` parameter that was initially specified. |

    ###### Additional error codes

    | Code | Description |
    | - | - |
    | `tos_declined` | The end-user refused to validate the terms of service. |

    ##### Re-auth / edit connection credentials flow

    ```
    https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/reconnect
    ```

    This flow allows an end-user to re-authenticate against a bank or a provider in order to recover an existing connection, or to completely reset credentials associated with a connection.

    ###### Endpoint parameters

    | Parameter | Description |
    | - | - |
    | `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |
    | `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |
    | `code` | Required. A user-scoped temporary code to use with the Budgea API. |
    | `connection_id` | Required. The id of the existing connection. |
    | `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set "as is" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |
    | `reset_credentials` | Optional. In the default mode (`false`), the service will try to recover the connection and prompt the user only with outdated or transient information (new password, OTP...).<br>Set the parameter to `true` to force resetting all the credentials associated with the connection. This parameter may not apply to all connectors. |

    ###### Successful callback parameters

    This flow adds no parameter to the callback URI in case of success, except from `state`.

    ##### Manage connections

    ```
    https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/manage
    ```
    This flow allows an end-user to manage the connections associated with his account in the API. The user can add new connections, remove existing ones, fix connection errors, reset credentials or activate/deactivate bank accounts.

    Support of `redirect_uri` in this flow is optional, as it can be integrated or presented as a terminal step, without relying on a final redirection.

    ###### Endpoint parameters

    | Parameter | Description |
    | - | - |
    | `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |
    | `code` | Required. A user-scoped temporary code to use with the Budgea API. |
    | `redirect_uri` | Optional. An absolute callback URI. When provided, the webview will display a close button that redirects to it. |
    | `state` | Optional. An opaque string parameter that you can use to carry state across the flow when providing a `redirect_uri`. The parameter will be set "as is" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |
    | `connector_capabilities` | Optional. A comma-separated list of capabilities to filter available connectors when adding a new connection.<br>If the parameter is omitted, `bank` is inferred.<br>If multiple values are provided, only connectors that expose all the requested capabilities are available.<br>To request a bank connection, use `bank`.<br>To request a provider connection, use `document`. |
    | `account_types` | Optional. A comma-separated list of account types to filter accounts available for activation on adding a new bank connection or updating existing connections. Other accounts will not be selectable. |
    | `account_usages` | Optional. A comma-separated list of account usages to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |

    ###### Callback parameters

    This flow adds no parameter to the callback URI, except from `state`.

    ##### Execute a bank transfer (preview)

    **Disclaimer**: Transfer or payment services are available as a preview, protocols and parameters are subject to change in upcoming beta/final releases.

    ```
    https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/transfer
    ```
    This flow allows an end-user to execute a bank transfer. The flow handles the following steps:
    - if the transfer is not already created, all steps to authenticate with a bank, select the recipient, the emitter account, the amount and label;
    - executing the transfer, including managing SCAs for recipient registration and/or transfer validation.

    ###### Endpoint parameters

    | Parameter | Description |
    | - | - |
    | `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |
    | `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |
    | `code` | Required. A user-scoped temporary code to use with the Budgea API.<br>If you don't provide a code, a new anonymous user will be created before a connection is added and the transfer is executed, and you will be returned an access token code scoped to it with the success callback. |
    | `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set "as is" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |
    | `transfer_id`| Optional. The ID of an prepared transfer to be validated in the webview. The user cannot edit anything on the transfer before validation. |

    ###### Successfull callback parameters

    | Parameter | Description |
    | - | - |
    | `transfer_id` | The ID of the transfer that was created and executed. |
    | `code` | Optional. If a `code` was *not* initially specified, an API code that you can exchange to obtain a permanent access token associated with the newly-created anonymous user holding the transfer. The parameter is URL-encoded, make sure to handle it accordingly. |
    | `state` | Optional. Identical to the `state` parameter that was initially specified. |

    ###### Additional error codes

    | Code | Description |
    | - | - |
    | `tos_declined` | The end-user refused to validate the terms of service. |

    #### Migrating from v3

    We provide a full backward compatibility layer with current implementations of the webview v3 to ease the transition. All endpoints remains accessible, with the same parameters and callback behaviour. Migration instructions are provided below.

    *The v3 compatibility mode is expected to be removed on 31 December 2019.* You should migrate your implementation a soon as possible to new endpoints and parameters.

    ##### Add connection flow / Edit connection credentials  
    ```
    /connect/select
    ```

    This endpoint has been superseded by `/connect` (no suffix) for adding a new connection, and `/reconnect` for resetting or updating an existing connection.

    | Endpoint parameter | Migration instructions |
    | - | - |
    | `client_id` | No change. |
    | `redirect_uri`, `state` | No change. |
    | `response_type` | This parameter is not used anymore. |
    | `id_connector`, `connectors` | Superseded by `connector_ids` sent to the `/connect` endpoint. |
    | `types` | Superseded by `connector_capabilities` sent to the `/connect` endpoint.<br>Use`connector_capabilities=bank` (bank connection) or `connector_capabilities=document` (provider connection). |
    | `id_connection` | Superseded by `connection_id` sent to the `/reconnect` endpoint. |

    Passing the code or access token as an URL fragment is no longer supported, use the `code` query parameter.

    | Callback parameter | Migration instructions |
    | - | - |
    | `id_connection` | Superseded by `connection_id`.<br>In the `/reconnect` flow, this parameter is not returned anymore. |
    | `code` | Still named `code`, but in the `/connect` flow the parameter is now **only** added if an anonymous user was created, i.e. the `code` parameter was **not** provided as a query parameter or fragment.<br>In the `/reconnect` flow, this parameter is not returned anymore. |
    | `state` | No change. |

    ##### Manage connections

    ```
    /accounts
    ```

    This endpoint has been superseded by `/manage`, that now fully allows users to add/remove connections, reset their credentials or recover from error states.

    | Endpoint parameter | Migration instructions |
    | - | - |
    | `client_id` | No change. |
    | `redirect_uri`, `state` | No change, these parameters are now optional. |
    | `response_type` | This parameter is not used anymore. |
    | `types` | Superseded by `connector_capabilities`.<br>Use`connector_capabilities=bank` (bank connection) or `connector_capabilities=document` (provider connection). |

    Passing the code or access token as an URL fragment is no longer supported, use the `code` query parameter.

    | Callback parameter | Migration instructions |
    | - | - |
    | `code` | This parameter is not returned anymore. |
    | `state` | No change. |

    ##### Behaviour change

    In v3, the `/accounts` flow used to redirect to the `redirect_uri` after a connection addition. This is no longer the case in v4, where redirection is only performed when the user explicitly closes the flow. If you need to perform actions when a connection is added or removed, you should rely on webhooks.

    #### Protocol
    This section describes the protocol used to set bank and provider accounts of a user, in case you don't want to use the webview.

    The idea is to call the following services client-side (with AJAX in case of a web application), to ensure the bank and providers credentials will not be sent to your servers.

    1. /auth/init
    ```http
    POST /auth/init
    ```
    ```json
    {
       "auth_token" : "fBqjMZbYddebUGlkR445JKPA6pCoRaGb",
       "type" : "temporary",
       "expires_in" : 1800,
       "id_user": 1
    }
    ```
    This service creates a temporarily token, to use in the "Authorization" header in next calls to the API

    The returned token has a life-time of 30 minutes, and should be transfered to the API then (cf Permanent Token), so that your server can get a permanent access_token.

    It is possible to generate a permanent token immediately, by calling the service with the manage_token, or by supply parameters client_id and client_secret.

    2. /banks or /providers
    ```http
    GET /banks?expand=fields
    Authorization: Bearer <token>
    ```
    ```json
    {
       "hidden" : false,
             "charged" : true,
             "name" : "American Express",
             "id" : 30,
             "fields" : [
                {
                   "values" : [
                      {
                         "label" : "Particuliers/Professionnels",
                         "value" : "pp"
                      },
                      {
                         "value" : "ent",
                         "label" : "Entreprises"
                      }
                   ],
                   "label" : "Type de compte",
                   "regex" : null,
                   "name" : "website",
                   "type" : "list"
                },
                {
                   "type" : "password",
                   "label" : "Code secret",
                   "name" : "password",
                   "regex" : "^[0-9]{6}$"
                }
             ],
          },
          ...
       ],
       "total" : 44,
    }
    ```
    You get a list of connectors, and all associated fields needed to build the form at step 3.
    You can also use that list to show to your user, all available banks.

    3. /users/me/connections
    Make a POST request and supply the id_bank (ID of the chosen bank) or id_provider (ID of provider), and all requested fields as key/value parameters.
    For example:
    ```http
    POST /users/me/connections
    Authorization: Bearer <token>
    -F login=12345678
    -F password=123456
    -F id_bank=59
    ```
    You can get the following return codes:

    |Code           |Description                                                  |
    |---------------|------------------------------------------------------------ |
    |200            |The connection has succeed and has been created              |
    |202            |It is necessary to provide complementary information. This occurs on the first connection on some kind of Boursorama accounts for example, where a SMS is sent to the customer. It is necessary to ask the user to fill fields requested in the fields, and do a POST again on /users/me/connections/ID, with the connection ID in id_connection. |
    |400            |Unable to connect to the website, the field error in the JSON can be **websiteUnavailable** or **wrongpass**  |
    |403            |Invalid token                                                |

    4. Activate accounts
    The accounts the user wants to aggregate must be activated before any transaction or investment is retrieved.
    Several accounts can be activated in 1 request by separating the account ids with commas.
    ```http
    PUT /users/me/connections/<id_connection>/accounts/<id_account>?all
    ```

    5. Permanent token
    If the user validates the share of his accounts, it is necessary to transform the temporary code to a permanent access_token (so that the user won't expire).

    To do that, make a POST request on /auth/token/access with the following parameters:
    |Parameter            |Description                                                     |
    |---------------------|----------------------------------------------------------------|
    |code                 |The temporarily token which will let you get the access_token   |
    |client_id            |The ID of your client application                               |
    |client_secret        |The secret of your client application                           |

    ```json
    POST /auth/token/access

    {
       "client_id" : 17473055,
       "client_secret" : "54tHJHjvodbANVzaRtcLzlHGXQiOgw80",
       "code" : "fBqjMZbYddebUGlkR445JKPA6pCoRaGb"
    }
    ```
    ```http
    HTTP/1.1 200 OK

    {
       "access_token" : "7wBPuFfb1Hod82f1+KNa0AmrkIuQ3h1G",
       "token_type":"Bearer"
    }
    ```

    ### Update accounts
    Another important call is when a user wants to add/remove connections to banks or providers, or to change the password on one of them, it is advised to give him a temporarily code from the permanent access_token, with the following call (using the access_token as bearer):
    ```http
    POST /auth/token/code
    Authorization: Bearer <token>
    ```
    ```json
    {
       "code" : "/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z",
       "type" : "temporary",
       "expires_in" : 1800,
    }
    ```
    Its life-time is 30 minutes, and let the browser to list connections and accounts, via `GET /users/me/connections?expand=accounts` for example.

     To update the password of a connection, you can do a POST on the *connection* resource, with the field *password* in the data. The new credentials are checked to make sure they are valid, and the return codes are the same as when adding a connection.

    ## Getting the data (Webhooks)
    You have created your users and their connections, now it's time to get the data.
    There are 2 ways to retrieve it, the 2 can be complementary:
    - make regular calls to the API
    - use the webhooks (recommended)

    ### Manual Synchronization
    It is possible to do a manual synchronization of a user. We recommend to use this method in case the user wants fresh data after logging in.

    To trigger the synchronization, call the API as below:
    `PUT /users/ID/connections`
    The following call is blocking until the synchronization is terminated.

    Even if it is not recommended, it's possible to fetch synchronously new data. To do that, you can use the *expand* parameter:
    ` /users/ID/connections?expand=accounts[transactions,investments[type]],subscriptions`
    ```json
    {
       "connections" : [
          {
             "accounts" : [
                {
                   "balance" : 7481.01,
                   "currency" : {
                      "symbol" : "€",
                      "id" : "EUR",
                      "prefix" : false
                   },
                   "deleted" : null,
                   "display" : true,
                   "formatted_balance" : "7 481,01 €",
                   "iban" : "FR76131048379405300290000016",
                   "id" : 17,
                   "id_connection" : 7,
                   "investments" : [
                      {
                         "code" : "FR0010330902",
                         "description" : "",
                         "diff" : -67.86,
                         "id" : 55,
                         "id_account" : 19,
                         "id_type" : 1,
                         "label" : "Agressor PEA",
                         "portfolio_share" : 0.48,
                         "prev_diff" : 2019.57,
                         "quantity" : 7.338,
                         "type" : {
                            "color" : "AABBCC",
                            "id" : 1,
                            "name" : "Fonds action"
                         },
                         "unitprice" : 488.98,
                         "unitvalue" : 479.73,
                         "valuation" : 3520.28
                      }
                   ],
                   "last_update" : "2015-07-04 15:17:30",
                   "name" : "Compte chèque",
                   "number" : "3002900000",
                   "transactions" : [
                      {
                         "active" : true,
                         "application_date" : "2015-06-17",
                         "coming" : false,
                         "comment" : null,
                         "commission" : null,
                         "country" : null,
                         "date" : "2015-06-18",
                         "date_scraped" : "2015-07-04 15:17:30",
                         "deleted" : null,
                         "documents_count" : 0,
                         "formatted_value" : "-16,22 €",
                         "id" : 309,
                         "id_account" : 17,
                         "id_category" : 9998,
                         "id_cluster" : null,
                         "last_update" : "2015-07-04 15:17:30",
                         "new" : true,
                         "original_currency" : null,
                         "original_value" : null,
                         "original_wording" : "FACTURE CB HALL'S BEER",
                         "rdate" : "2015-06-17",
                         "simplified_wording" : "HALL'S BEER",
                         "state" : "parsed",
                         "stemmed_wording" : "HALL'S BEER",
                         "type" : "card",
                         "value" : -16.22,
                         "wording" : "HALL'S BEER"
                      }
                   ],
                   "type" : "checking"
                }
             ],
             "error" : null,
             "expire" : null,
             "id" : 7,
             "id_user" : 7,
             "id_bank" : 41,
             "last_update" : "2015-07-04 15:17:31"
          }
       ],
       "total" : 1,
    }
    ```

    ### Background synchronizations & Webhooks
    Webhooks are callbacks sent to your server, when an event is triggered during a synchronization.
    Synchronizations are automatic, the frequency can be set using the configuration key `autosync.frequency`.
    Using webhooks allows you to get the most up-to-date data of your users, after each synchronization.

    The automatic synchronization makes it possible to recover new bank entries, or new invoices, at a given frequency.
    You have the possibility to add webhooks on several events, and choose to receive each one on a distinct URL.
    To see the list of available webhooks you can call the endpoint hereunder:
    ```
    curl https://demo.biapi.pro/2.0/webhooks_events \
      -H 'Authorization: Bearer <token>'
    ```

    The background synchronizations for each user are independent, and their plannings are spread over the day so that they do not overload any website.

    Once the synchronization of a user is over, a POST request is sent on the callback URL you have defined, including all webhook data.
    A typical json sent to your server is as below:
    ```http
    POST /callback HTTP/1.1
    Host: example.org
    Content-Length: 959
    Accept-Encoding: gzip, deflate, compress
    Accept: */*
    User-Agent: Budgea API/2.0
    Content-Type: application/json; charset=utf-8
    Authorization: Bearer sl/wuqgD2eOo+4Zf9FjvAz3YJgU+JKsJ

    {
       "connections" : [
          {
             "accounts" : [
                {
                   "balance" : 7481.01,
                   "currency" : {
                      "symbol" : "€",
                      "id" : "EUR",
                      "prefix" : false
                   },
                   "deleted" : null,
                   "display" : true,
                   "formatted_balance" : "7 481,01 €",
                   "iban" : "FR76131048379405300290000016",
                   "id" : 17,
                   "id_connection" : 7,
                   "investments" : [
                      {
                         "code" : "FR0010330902",
                         "description" : "",
                         "diff" : -67.86,
                         "id" : 55,
                         "id_account" : 19,
                         "id_type" : 1,
                         "label" : "Agressor PEA",
                         "portfolio_share" : 0.48,
                         "prev_diff" : 2019.57,
                         "quantity" : 7.338,
                         "type" : {
                            "color" : "AABBCC",
                            "id" : 1,
                            "name" : "Fonds action"
                         },
                         "unitprice" : 488.98,
                         "unitvalue" : 479.73,
                         "valuation" : 3520.28
                      }
                   ],
                   "last_update" : "2015-07-04 15:17:30",
                   "name" : "Compte chèque",
                   "number" : "3002900000",
                   "transactions" : [
                      {
                         "active" : true,
                         "application_date" : "2015-06-17",
                         "coming" : false,
                         "comment" : null,
                         "commission" : null,
                         "country" : null,
                         "date" : "2015-06-18",
                         "date_scraped" : "2015-07-04 15:17:30",
                         "deleted" : null,
                         "documents_count" : 0,
                         "formatted_value" : "-16,22 €",
                         "id" : 309,
                         "id_account" : 17,
                         "id_category" : 9998,
                         "id_cluster" : null,
                         "last_update" : "2015-07-04 15:17:30",
                         "new" : true,
                         "original_currency" : null,
                         "original_value" : null,
                         "original_wording" : "FACTURE CB HALL'S BEER",
                         "rdate" : "2015-06-17",
                         "simplified_wording" : "HALL'S BEER",
                         "state" : "parsed",
                         "stemmed_wording" : "HALL'S BEER",
                         "type" : "card",
                         "value" : -16.22,
                         "wording" : "HALL'S BEER"
                      }
                   ],
                   "type" : "checking"
                }
             ],
             "bank" : {
                "id_weboob" : "ing",
                "charged" : true,
                "name" : "ING Direct",
                "id" : 7,
                "hidden" : false
             },
             "error" : null,
             "expire" : null,
             "id" : 7,
             "id_user" : 7,
             "id_bank" : 41,
             "last_update" : "2015-07-04 15:17:31"
          }
       ],
       "total" : 1,
       "user" : {
          "signin" : "2015-07-04 15:17:29",
          "id" : 7,
          "platform" : "sharedAccess"
       }
    }
    ```
    The authentication on the callback is made with the access_token of the user (which is a shared secret between your server and the Budgea API).

    When you are in production, it is needed to define a HTTPS URL using a valid certificate, delivered by a recognized authority. If this is not the case, you can contact us to add your CA (Certificate Authority) to our PKI (Public Key Infrastructure).

    Important: it is necessary to send back a HTTP 200 code, without what we consider that data is not correctly taken into account on your system, and it will be sent again at the next user synchronization.

    ## Guidelines for production
    Now you should have integrated the API inside your application. Make sure your Webhooks URLs are in HTTPS, if so you can enable the production state of the API.

    To make things great, here are some good practices, please check you have respected them:
    - You have provided to your users a way to configure their accounts
    - You have provided to your users a way to change their account passwords
    - You consider the **error** field of Connections, to alert the user in case the state is **wrongpass**
    - You map IDs of Accounts, Subscriptions, Transactions and Documents in your application, to be sure to correctly match them
    - When the deleted field is set on a bank transaction, you delete it in your database
    - You don't loop on all users to launch synchronizations, this might saturate the service

    If you have questions about above points, please contact us. Otherwise, you can put into production!

    ### Going further
    If you want to raise the bar for your app and add features such as the ability to do transfers, get invoices, aggregate patrimony and more, please refer to the sections below.
    We'll discuss complementary APIs building upon the aggregation, allowing for the best of financial apps.

    ## Budgea API Pay
    This API allows for the emition of transfers between the aggregated accounts.
    Just like the simple aggregation, BI provides a webview or a protocol to follow, to implement this feature.

    ### API pay protocol
    This section describes how the transfer and recipient protocol work, in case you don't want to integrate the webview.
    The idea is to do following calls client side (with AJAX in case of a web application), so that the interaction with the Budgea API is transparent.

    #### Executing a transfer
    1. /auth/token/code
    If you do calls client side, get a new temporary code for the user, from the access_token. This will prevent security issues.
    ```
    curl -d '' \
      https://demo.biapi.pro/2.0/auth/token/code \
      -H 'Authorization: Bearer <token>'
    ```
    ```json
    {
       "code": "/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z",
       "type": "temporary",
       "expires_in": 1800
    }
    ```
    The returned token has a life-time of 30 minutes.

    2. /users/me/accounts?able_to_transfer=1
    List all the accounts that can do transfers. Authenticate the call with the code you got at step 1.
    ```
    curl https://demo.biapi.pro/2.0/users/me/accounts?able_to_transfer=1 \
      -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'
    ```
    ```json
    {
      "accounts" : [
          {
             "display" : true,
             "balance" : 2893.36,
             "id_type" : 2,
             "number" : "****1572",
             "type" : "checking",
             "deleted" : null,
             "bic" : "BNPAFRPPXXX",
             "bookmarked" : false,
             "coming" : -2702.74,
             "id_user" : 1,
             "original_name" : "Compte de chèques",
             "currency" : {
                "symbol" : "€",
                "id" : "EUR",
                "prefix" : false
             },
             "name" : "lol",
             "iban" : "FR7630004012550000041157244",
             "last_update" : "2016-12-28 12:31:04",
             "id" : 723,
             "formatted_balance" : "2893,36 €",
             "able_to_transfer" : true,
             "id_connection" : 202
          }
       ],
       "total" : 1
    }
    ```

    3. /users/me/accounts/ID/recipients
    List all available recipients for a given account.
    ```
    curl https://demo.biapi.pro/2.0/users/me/accounts/723/recipients?limit=1 \
      -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'
    ```
    ```json
    {
      "total" : 27,
       "recipients" : [
          {
             "bank_name" : "BNP PARIBAS",
             "bic" : "BNPAFRPPXXX",
             "category" : "Interne",
             "deleted" : null,
             "enabled_at" : "2016-10-31 18:52:53",
             "expire" : null,
             "iban" : "FR7630004012550003027641744",
             "id" : 1,
             "id_account" : 1,
             "id_target_account" : 2,
             "label" : "Livret A",
             "last_update" : "2016-12-05 12:07:24",
             "time_scraped" : "2016-10-31 18:52:54",
             "webid" : "2741588268268091098819849694548441184167285851255682796371"
          }
       ]
    }
    ```

    4. /users/me/accounts/ID/recipients/ID/transfers
    Create the transfer
    ```
    curl \
      https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/1/transfers \
      -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \
      -F amount=10, \
      -F label="Test virement", \
      -F exec_date="2018-09-12" // optional
    ```
    ```json
    {
       "account_iban" : "FR7630004012550000041157244",
       "amount" : 10,
       "currency" : {
          "id" : "EUR",
          "prefix" : false,
          "symbol" : "€"
       },
       "exec_date" : "2018-09-12",
       "fees" : null
       "formatted_amount" : "10,00 €",
       "id" : 22,
       "id_account" : 1,,
       "id_recipient" : 1,
       "label" : "Test virement",
       "recipient_iban" : "FR7630004012550003027641744",
       "register_date" : "2018-09-12 10:34:59",
       "state" : "created",
       "webid" : null
    }
    ```

    5. /users/me/transfers/ID
    Execute the transfer
    ```
    curl \
      https://demo.biapi.pro/2.0/users/me/transfers/22 \
      -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \
      -F validated=true
    ```
    ```json
    {
       "account_iban" : "FR7630004012550000041157244",
       "amount" : 10,
       "currency" : {
          "id" : "EUR",
          "prefix" : false,
          "symbol" : "€"
       },
       "exec_date" : "2016-12-19",
       "fees" : null,
       "fields" : [
          {
             "label" : "Code secret BNP Paribas",
             "type" : "password",
             "regex" : "^[0-9]{6}$",
             "name" : "password"
          }
       ],
       "formatted_amount" : "10,00 €",
       "id" : 22,
       "id_account" : 1,
       "id_recipient" : 1,
       "label" : "Test virement",
       "recipient_iban" : "FR7630004012550003027641744",
       "register_date" : "2016-12-19 10:34:59",
       "state" : "created",
       "webid" : null
    }
    ```
    Here, an authentication step asks user to enter his bank password. The transfer can be validated with:

    ```
    curl \
      https://demo.biapi.pro/2.0/users/me/transfers/22 \
      -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \
      -F validated=true \
      -F password="123456"
    ```
    ```json
    {
       "account_iban" : "FR7630004012550000041157244",
       "currency" : {
          "id" : "EUR",
          "prefix" : false,
          "symbol" : "€"
       },
       "amount" : 10,
       "exec_date" : "2016-12-19",
       "fees" : 0,
       "formatted_amount" : "10,00 €",
       "id" : 22,
       "id_account" : 1,
       "id_recipient" : 1,
       "label" : "Test virement",
       "recipient_iban" : "FR7630004012550003027641744",
       "register_date" : "2016-12-19 10:34:59",
       "state" : "pending",
       "webid" : "ZZ10C4FKSNP05TK95"
    }
    ```
    The field state is changed to *pending*, telling that the transfer has been correctly executed on the bank. A connection synchronization is then launched, to find the bank transaction in the movements history. In this case, the transfer state will be changed to *done*.

    #### Adding a recipient
    1. /auth/token/code
    Get a temporary token for the user. Same procedure than step 1 for a transfer.

    2. /users/me/accounts?able_to_transfer=1
    List accounts allowing transfers. Same procedure than step 2 for a transfer.

    3. /users/me/accounts/ID/recipients/
    Add a new recipient.
    ```
    curl \
      https://demo.biapi.pro/2.0/users/me/accounts/1/recipients \
      -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \
      -F iban=FR7613048379405300290000355 \
      -F label="Papa", \
      -F category="Famille" // optional
    ```
    ```json
    {
       "bank_name" : "BNP PARIBAS",
       "bic" : "BNPAFRPPXXX",
       "category" : "Famille",
       "deleted" : null,
       "enabled_at" : null,
       "expire" : "2017-04-29 16:56:20",
       "fields" : [
          {
             "label" : "Veuillez entrer le code reçu par SMS",
             "type" : "password",
             "regex" : "^[0-9]{6}$",
             "name" : "sms"
          }
       ],
       "iban" : "FR7613048379405300290000355",
       "id" : 2,
       "id_account" : 1,
       "id_target_account" : null,
       "label" : "Papa",
       "last_update" : "2017-04-29 16:26:20",
       "time_scraped" : null,
       "webid" : null
    }
    ```
    It is necessary to post on the object Recipient with the requested fields (here sms), until the add is validated:
    ```
    curl \
      https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/2 \
      -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \
      -F sms="123456"
    ```
    ```json
    {
       "bank_name" : "BNP PARIBAS",
       "bic" : "BNPAFRPPXXX",
       "category" : "Famille",
       "deleted" : null,
       "enabled_at" : "2017-05-01 00:00:00",
       "expire" : null,
       "iban" : "FR7613048379405300290000355",
       "id" : 2,
       "id_account" : 1,
       "id_target_account" : null,
       "label" : "Papa",
       "last_update" : "2017-04-29 16:26:20",
       "time_scraped" : null,
       "webid" : "2741588268268091098819849694548441184167285851255682796371"
    }
    ```
    If the field enabled_at is in the future, it means that it isn't possible yet to execute a transfer, as the bank requires to wait a validation period.

    ### API Pay Webview
    This section describes how to integrate the webview of the Budgea Pay API inside your application, to let your users do transfers to their recipients.

    #### User redirection
    To redirect the user to the webview, it is necessary to build a URI authenticated with a temporary token.
    This can be done from our library, or by calling the endpoint `/auth/token/code` (see the protocol section for an example).
    If the parameter **redirect_uri** is supplied, the user will be redirected to that page once the transfer is done.

    #### List of pages
    Here are a list a pages you may call to redirect your user directly on a page of the process:
    |Path                                 |Description of the page                                                           |
    |-------------------------------------|----------------------------------------------------------------------------------|
    |/transfers                           |List Transfers                                                                    |
    |/transfers/accounts                  |List emitter accounts                                                             |
    |/transfers/accounts/id/recipients    |List recipients                                                                   |
    |/transfers/accounts/id/recipients/id |Initialization of a transfer between the account and the recipient                |
    |/transfers/id                        |Detail of a given transfer                                                        |

    ## Deprecated

    This section lists all the deprecated features in Budgea API. The associated date is the date of its removal.
    **Do not use them**.

    ### Key Investments (**2019-06-24**)

    Adding a temporary new key "all_investments" that will include deleted investments in the **webhooks**.

    ### No automatic expand on User objects (**2019-07-30**)
    In the API responses, by default, User objects won't display the keys "config", "alert_settings" and "invites" anymore.
    You will still be able to access this data by expanding the request.
    Example: GET /users/me/?expand=alert_settings,config

    ### Renaming of "type" field for jwt tokens (**2019-07-30**)
    For user's tokens in the jwt format, the "type" field will be renamed from "shared_access" to "sharedAccess".
  title: Budgea API Documentation
  version: "2.0"
  x-apisguru-categories:
    - financial
  x-origin:
    - format: swagger
      url: https://budgea.biapi.pro/2.0/doc/
      version: "2.0"
  x-providerName: biapi.pro
tags:
  - name: Administration
  - name: Authentication
  - name: Banks
  - name: Connections
  - name: Documents
  - name: OIDC
  - name: PFM
  - name: Payments
  - name: Providers
  - name: Recipients
  - name: Service
  - name: Terms
  - name: Timeline
  - name: Transfer
  - name: Transfers
  - name: Users management
  - name: Wealth
paths:
  /account_types:
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  accounttypes:
                    items:
                      $ref: "#/components/schemas/AccountType"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - accounttypes
                type: object
          description: accounttypes
      summary: Get account types
      tags:
        - Banks
  "/account_types/{id_account_type}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_account_type
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountType"
          description: Successful GET on AccountType resource
      summary: Get an account type
      tags:
        - Banks
  /admin/jwt:
    post:
      description: This endpoint generates a new jwt manage token. It requires an admin manage token to be used<br><br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                duration:
                  description: "number of minute before the token expiration (0 for token that won't expire unless the client application is deleted) (default: 1)"
                  type: integer
                scope:
                  description: "scope requested for the token (default: config)"
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                required:
                  - jwt_token
                  - payload
                type: object
            jwt_token:
              examples:
                response:
                  value: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1Mzg1OTUwODYsInR5cGUiOiJtYW5hZ2VfdG9rZW4iLCJhdWQiOiJsb2NhbGhvc3Q6MzE1OCIsImV4cCI6MTUzODU5NTE0Niwic2NvcGUiOiJjb25maWcifQ.Z-ygtorGB3yitd2MNias9r3dPojPh4yxFKO5uVM0NhEty5UhnwkqSZA29JKZKmTc7mUSDc30THFIL-VkHBOu2gfxv3fjrZ9R35jo29H_TEYpxiOxxl0m5jLxDn4KEoWpDCiuwkoEdklVJCOMFGC_Sp3uZ89C82OZ_-7CDExnA99FPKbJpVVHaIQdlmOAATHG-KvRJKJu7j2wIUSpIZ3flIqav9dBtaHbjaI-K0WTSC-a13gdzHJKhHmReKWNL8cOMIziPrUx4zv57_DSLWSI2e2FJ_SKbiEAgHcfEmnwktPwTeAdJhgUq5UVH1EP71NkpTQQL4SzHi3tlKmsG3SCbg
            payload:
              examples:
                response:
                  value:
                    aud: localhost:3158
                    exp: 1538595146
                    iat: 1538595086
                    scope: config
                    type: manage_token
          description: ""
      summary: Generate a jwt manage token
      tags:
        - Authentication
  /auth/init:
    post:
      description: "This endpoint creates a new temporary token related to a new anonymous user.<br><br>It will expire 30 minutes after.<br><br>Note: if you supply client_id and client_secret, or if you call this endpoint with the manage_token, the token will be permanent.<br><br>"
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: ID of the client
                  type: string
                client_secret:
                  description: secret of the client
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  auth_token:
                    description: new token created for the new anonymous user
                    type: string
                  expires_in:
                    description: duration in seconds of the token validity
                    type: integer
                  type:
                    description: type of the token
                    type: string
                required:
                  - auth_token
                  - type
                type: object
            auth_token:
              examples:
                response:
                  value: A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n
            expires_in:
              examples:
                response:
                  value: 1800
            type:
              examples:
                response:
                  value: temporary
          description: ""
      summary: Create a new anonymous user
      tags:
        - Authentication
  /auth/jwt:
    post:
      description: This endpoint generates a new jwt token for the user. This token will last the time in minutes given by the config key auth.default_token_expire (permanent if this the parameter expire=False is given)<br><br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: id of the client
                  type: string
                client_secret:
                  description: secret for the client
                  type: string
                expire:
                  description: "if set to True, the token will expire n minutes after its creation, n being the value of configuration key auth.default_token_expire (default: True)"
                  type: boolean
                id_user:
                  description: user for whom the token has to be generated. If not supplied, a user will be created
                  type: integer
                scope:
                  description: scope requested for the token
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  jwt_token:
                    description: the jwt token
                    type: string
                  payload:
                    description: the payload contained in the jwt token
                    type: object
                required:
                  - jwt_token
                  - payload
                type: object
            jwt_token:
              examples:
                response:
                  value: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZF91c2VyIjozMywiYXVkIjoibG9jYWxob3N0OjMxNTgiLCJpc3MiOjE5ODM4OTgyLCJleHAiOjE1Mzg1OTY2OTcsInNjb3BlIjoiIiwiaWF0IjoxNTM4NTk0ODk3LCJ0eXBlIjoic2hhcmVkX2FjY2VzcyJ9.Tesc90tQ35Fk2SbRXw_Da1Ec-AwAzi104N-hrZWyBeXYkoao6512Ym8v_3207zm-bE1mRDjmQJQN0bbvImZlNGKA8JqoxbXF5l8eetXnv-U9yZXp9ScpUoNWxrRbtyyiwIGWDsRjCjOXcrVvzYd0oJ2RpUXR2NFyCCRjuMJFU87ojGj9eHo5e1B78vB1xZe3c3Yyx8bCvm0Qe2JjoSuhnXgMzAuLQm2KHha_9iHuQBC4zmmICOvNsQ5gBWAnf0W0IYHTZG1vioGNstX05nYiGSSlmzP6HgA5CmB2A57rBERFYB7V59wSQJzUyVOpCOuPCp7zPkRNfgFsZqqACg-DDg
            payload:
              examples:
                response:
                  value:
                    aud: localhost:3158
                    exp: 1538596697
                    iat: 1538594897
                    id_user: 33
                    iss: 19838982
                    scope: ""
                    type: sharedAccess
          description: ""
      summary: Generate a user jwt token
      tags:
        - Authentication
  /auth/renew:
    post:
      description: ""
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: ID of the client
                  type: string
                client_secret:
                  description: secret of the client
                  type: string
                grant_type:
                  description: default is "client_credentials"
                  type: string
                id_user:
                  description: id of the user to generate a token for
                  type: integer
                revoke_previous:
                  description: if true, all other permanent tokens for the user will be deleted
                  type: boolean
              required:
                - client_id
                - client_secret
                - id_user
              type: object
      responses:
        "200":
          content:
            access_token:
              examples:
                response:
                  value: A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n
            application/json:
              schema:
                properties:
                  access_token:
                    description: the access token transformed from the temporary one
                    type: string
                  token_type:
                    description: the access token type
                    type: string
                required:
                  - access_token
                  - token_type
                type: object
            token_type:
              examples:
                response:
                  value: Bearer
          description: ""
      summary: Get a new access token given an user id and client credentials
      tags:
        - Authentication
  /auth/token:
    delete:
      description: This endpoint removes the token in use.<br><br>
      responses:
        "200":
          description: standard HTTP response
      summary: Remove user access
      tags:
        - Authentication
        - PFM
    post:
      description: Request a new user token by giving an username and a password. Or a manage payment token by giving a client<br><br><br><br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: application name
                  type: string
                grant_type:
                  description: "password when requesting a user token and client_credentials for a payment manage token (default: password)"
                  type: string
                password:
                  description: password
                  type: string
                scope:
                  description: scope requested for the token
                  type: string
                username:
                  description: username
                  type: string
              required:
                - username
                - password
                - application
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  expires_in:
                    description: duration in seconds of the token validity
                    type: integer
                  scope:
                    description: the token scope
                    type: string
                  token:
                    description: the requested token
                    type: string
                required:
                  - token
                  - scope
                type: object
            profile:
              examples:
                response:
                  value: {}
            scope:
              examples:
                response:
                  value: ""
            token:
              examples:
                response:
                  value: A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n
            user:
              examples:
                response:
                  value: {}
          description: ""
      summary: Login to API with credentials
      tags:
        - PFM
  /auth/token/access:
    post:
      description: In order to register a new user with the OAuth 2 process, the client has to call this endpoint to request a granted access_token with the received temporary code.<br><br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: ID of the client
                  type: string
                client_secret:
                  description: secret of the client
                  type: string
                code:
                  description: user's temporary code
                  type: string
                grant_type:
                  description: default is "authorization_code"
                  type: string
                redirect_uri:
                  description: redirect uri used by user
                  type: string
              required:
                - client_id
                - client_secret
                - code
              type: object
      responses:
        "200":
          content:
            access_token:
              examples:
                response:
                  value: A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n
            application/json:
              schema:
                properties:
                  access_token:
                    description: the access token transformed from the temporary one
                    type: string
                  token_type:
                    description: the access token type
                    type: string
                required:
                  - access_token
                  - token_type
                type: object
            token_type:
              examples:
                response:
                  value: Bearer
          description: ""
      summary: Transform a temporary code to a access_token
      tags:
        - Authentication
  /auth/token/code:
    get:
      description: This endpoint generates a new temporary token for the user.<br><br>In case the access_token is used by a trusted device, and you want to let another one (for example a web browser) access to user resources, use this service to create a token which will expire in 30 minutes.<br><br>Additionally, you can also generate a temporary single-use token by specifying 'type=singleAccess' as query parameter. A single-use token can only be used once no matter the endpoint being accessed.<br><br>
      responses:
        "200":
          content:
            access:
              examples:
                response:
                  value: standard
            application/json:
              schema:
                properties:
                  access:
                    description: the reusability of a token (standard or single use)
                    type: string
                  code:
                    description: the temporary token
                    type: string
                  expires_in:
                    description: duration in seconds of the token validity
                    type: integer
                  type:
                    description: the token type
                    type: object
                required:
                  - code
                  - type
                  - access
                  - expires_in
                type: object
            code:
              examples:
                response:
                  value: A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n
            expires_in:
              examples:
                response:
                  value: 1800
            type:
              examples:
                response:
                  value: temporary
          description: ""
      summary: Generate a user temporary token
      tags:
        - Authentication
  /banks:
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  banks:
                    items:
                      $ref: "#/components/schemas/Connector"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - banks
                type: object
          description: banks
      summary: Get list of connectors
      tags:
        - Connections
        - Banks
        - Providers
  /banks/categories:
    post:
      description: It requires the name of the category to be created<br><br>
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  description: name of the category to be created
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorCategory"
          description: Successful POST on ConnectorCategory resource
      summary: Create bank categories
      tags:
        - Banks
  "/banks/categories/{id_category}":
    delete:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_category
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorCategory"
          description: Successful DELETE on ConnectorCategory resource
      summary: Delete the supplied category
      tags:
        - Banks
    post:
      description: Edit the name for the supplied category.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_category
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  description: new name for the supplied category
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorCategory"
          description: Successful POST on ConnectorCategory resource
      summary: Edit a bank categories
      tags:
        - Banks
  "/banks/{id_bank}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_bank
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connector"
          description: Successful GET on Connector resource
      summary: Get a connector
      tags:
        - Connections
        - Banks
        - Providers
  "/banks/{id_connector}/connections":
    get:
      description: By default, it selects a set of 3 connections with the 'diversity' method<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: methode of selection use between 'diversity' (default), 'cover' and 'type_select'
          in: query
          name: method
          required: false
          schema:
            type: string
        - description: the number of requested connections, if applicable by the method
          in: query
          name: n
          required: false
          schema:
            type: integer
        - description: for 'type_select' method. Specific account type id (weboob_type_id) to select
          in: query
          name: type
          required: false
          schema:
            type: integer
        - description: for 'type_select' method. Each connection requires at least N
          in: query
          name: occurences
          required: false
          schema:
            type: integer
        - description: specify a source name that should have a null state
          in: query
          name: source
          required: false
          schema:
            type: string
        - description: Ensure the connection will not have a sync happening for at
          in: query
          name: minutes_without_sync
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connections:
                    items:
                      $ref: "#/components/schemas/Connection"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connections
                type: object
          description: connections
      summary: Get a subset of id_connection for a given bank. Different selection methode are possible
      tags:
        - Banks
        - Connections
  "/banks/{id_connector}/logos":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/banks/{id_connector}/logos/main":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/banks/{id_connector}/logos/thumbnail":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/banks/{id_connector}/sources":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  sources:
                    items:
                      $ref: "#/components/schemas/ConnectorSource"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - sources
                type: object
          description: sources
      summary: Get list of connector sources
      tags:
        - Connections
        - Banks
        - Providers
  "/banks/{id_connector}/sources/{id_connector_source}/fields":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_connector_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  source_fields:
                    items:
                      $ref: "#/components/schemas/ConnectorSourceField"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - source_fields
                type: object
          description: source_fields
      summary: Get fields specific to a domain and a source
      tags:
        - Connections
        - Banks
  "/banks/{id_connector}/sources/{id_source}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorSource"
          description: Successful GET on ConnectorSource resource
      summary: Get the connector source
      tags:
        - Connections
        - Banks
        - Providers
  /categories:
    get:
      description: Ressource to get all existing categories<br><br>
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  categories:
                    items:
                      $ref: "#/components/schemas/Category"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - categories
                type: object
          description: categories
      summary: Get all categories
      tags:
        - Banks
  /categories/keywords:
    post:
      description: "If the keyword already exists the keyword is not added. Used for the categorization of transactions.<br><br>Form params: - id_category (integer): a reference towards the category associated with the keyword - keyword (string): the searched keyword - income (bool): 1 if the associated category represents an income else 0 - priority (integer): sets the priority for the keyword, used when categorizing<br><br>"
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Keyword"
          description: Successful POST on Keyword resource
      summary: Add a new keyword associated with a category in the database.
      tags:
        - Banks
  "/categories/keywords/{id_keyword}":
    delete:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_keyword
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Keyword"
          description: Successful DELETE on Keyword resource
      summary: Delete a particular key-value pair on a transaction.
      tags:
        - Banks
  /categorize:
    post:
      description: "It requires an array of transaction dictionaries. Any fields of transactions that are not required will be kept in the response. The response contains the list of transactions with two more fields: id_category and state (it indicates how the transaction has been categorized)<br><br>"
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                type:
                  description: "type of the transaction (default: unknown)"
                  type: string
                value:
                  description: value of the transaction
                  type: integer
                wording:
                  description: label of the transaction
                  type: string
              required:
                - wording
                - value
                - type
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                required:
                  - failed
                  - total
                  - transactions
                type: object
            failed:
              examples:
                response:
                  value: 1
            total:
              examples:
                response:
                  value: 2
            transactions:
              examples:
                response:
                  value:
                    - id_category: 84
                      state: categorized_by_keyword
                      type: card
                      value: -14
                      wording: "the great restaurant  "
                    - id_category: 9998
                      state: fail_categorizing
                      type: card
                      value: -14
                      wording: toto
          description: ""
      summary: categorize transactions without storing them
      tags:
        - Banks
  "/certificate/{type}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
          description: Successful GET on Certificate resource
      summary: Get the latest certificate of a type
      tags:
        - Authentication
  /clients:
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  clients:
                    items:
                      $ref: "#/components/schemas/Client"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - clients
                type: object
          description: clients
      summary: List clients
      tags:
        - Administration
    post:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: custom config about the client
                  type: string
                generate_keys:
                  description: "if True, generate a rsa pair of keys so the client can be used to generate jwt user tokens (default: False)"
                  type: boolean
                name:
                  description: name of client
                  type: string
                redirect_uris:
                  description: list of allowed redirect uris
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
          description: Successful POST on Client resource
      summary: Create a client
      tags:
        - Administration
  "/clients/{id_client}":
    delete:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_client
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
          description: Successful DELETE on Client resource
      summary: Delete a client
      tags:
        - Administration
    get:
      description: If you use the manage_token or a configuration token, you will get also the client secret.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_client
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
          description: Successful GET on Client resource
      summary: Get information about a client
      tags:
        - Administration
    put:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_client
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: custom config about the client
                  type: string
                description:
                  description: text to display as a default description
                  type: string
                description_banks:
                  description: text to display as a description for banks
                  type: string
                description_providers:
                  description: text to display as a description for providers
                  type: string
                generate_keys:
                  description: "set a rsa key pair for the client, which make it possible to generate a jwt user token using this client. No effect if the client already has a set of keys(default: False)"
                  type: boolean
                name:
                  description: name of client
                  type: string
                primary_color:
                  description: hexadecimal code of the client primary color (e.g F45B9A)
                  type: string
                pro:
                  description: Wether the client should display the company manager page
                  type: boolean
                redirect_uris:
                  description: list of allowed redirect uris
                  type: string
                secondary_color:
                  description: hexadecimal code of the client secondary color (e.g F45B9A)
                  type: string
                secret:
                  description: reset the secret
                  type: boolean
                update_config:
                  description: "update the custom information about the client instead of replacing the existing one (default: True)"
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
          description: Successful PUT on Client resource
      summary: Update a client
      tags:
        - Administration
  "/clients/{id_client}/logo":
    delete:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_client
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: Successful DELETE on File resource
      summary: Delete the client logo
      tags:
        - Administration
    post:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_client
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
          description: Successful POST on File resource
      summary: Update the client logo
      tags:
        - Administration
  /config:
    get:
      description: <br><br>
      parameters:
        - description: limit the results to keys matching the given value
          in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        "200":
          description: standard HTTP response
      summary: Get configuration of the API.
      tags:
        - Administration
    post:
      description: ""
      responses:
        "200":
          description: standard HTTP response
      summary: Insert/update configuration key(s)/value(s) on the API.
      tags:
        - Administration
  /config/logs:
    get:
      description: <br><br>
      parameters:
        - description: limit the results to keys matching the given value
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: type of change done on the configuration
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: minimal date of the change
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum date of the change
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  configlogs:
                    items:
                      $ref: "#/components/schemas/ConfigLog"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - configlogs
                type: object
          description: configlogs
      summary: Get configuration change history of the API.
      tags:
        - Administration
  /connections:
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connections:
                    items:
                      $ref: "#/components/schemas/Connection"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connections
                type: object
          description: connections
      summary: Get connections without a user
      tags:
        - Connections
        - Banks
        - Providers
  "/connections/{id_connection}/logs":
    get:
      description: Get logs about connections.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - description: period to group logs
          in: query
          name: period
          required: false
          schema:
            type: string
        - description: ID of a user
          in: query
          name: id_user
          required: false
          schema:
            type: integer
        - description: ID of a connection
          in: query
          name: id_connection
          required: false
          schema:
            type: integer
        - description: ID of a connector
          in: query
          name: id_connector
          required: false
          schema:
            type: integer
        - description: UUID of a connector
          in: query
          name: connector_uuid
          required: false
          schema:
            type: string
        - description: connections log error filter
          in: query
          name: error
          required: false
          schema:
            type: string
        - description: ID of a source
          in: query
          name: id_source
          required: false
          schema:
            type: integer
        - description: filter "id" of logs, maximum id to return
          in: query
          name: id_max
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectionlogs:
                    items:
                      $ref: "#/components/schemas/ConnectionLog"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectionlogs
                type: object
          description: connectionlogs
      summary: Get connection logs
      tags:
        - Connections
        - Banks
        - Providers
  "/connections/{id_connection}/sources":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  sources:
                    items:
                      $ref: "#/components/schemas/ConnectionSource"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - sources
                type: object
          description: sources
      summary: Get connection sources
      tags:
        - Connections
        - Banks
        - Providers
  "/connections/{id_connection}/sources/{id_source}":
    delete:
      description: This will make it so the specified source will not be synchronized anymore.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSource"
          description: Successful DELETE on ConnectionSource resource
      summary: Disable a connection source
      tags:
        - Connections
        - Banks
        - Providers
    post:
      description: This endpoint is used to enable a source or force a synchronization on it.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - description: do the synchronization in background (to use with the sysynchronizenc parameter)
          in: query
          name: background
          required: false
          schema:
            type: boolean
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/postConnections_idConnection_sources_idSource_"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSource"
          description: Successful POST on ConnectionSource resource
      summary: '"'
      tags:
        - Connections
        - Banks
        - Providers
    put:
      description: This endpoint is used to enable a source or force a synchronization on it.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - description: do the synchronization in background (to use with the synchronize parameter)
          in: query
          name: background
          required: false
          schema:
            type: boolean
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/putConnections_idConnection_sources_idSource_"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSource"
          description: Successful PUT on ConnectionSource resource
      summary: Update connection source
      tags:
        - Connections
        - Banks
        - Providers
  /connectors:
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectors:
                    items:
                      $ref: "#/components/schemas/Connector"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectors
                type: object
          description: connectors
      summary: Get list of connectors
      tags:
        - Connections
        - Banks
        - Providers
    post:
      description: Send a request to add a new connector<br><br>
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                comment:
                  description: Optionnal comment
                  type: string
                email:
                  description: Email of the user
                  type: string
                login:
                  description: Users login
                  type: string
                name:
                  description: Name of the bank or provider
                  type: string
                password:
                  description: Users password
                  type: string
                sendmail:
                  description: if set, send an email to user
                  type: boolean
                types:
                  description: Type of connector, eg. banks or providers
                  type: string
                url:
                  description: Url of the bank
                  type: string
              required:
                - name
                - login
                - password
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connector"
          description: Successful POST on Connector resource
      summary: Request a new connector
      tags:
        - Connections
        - Banks
        - Providers
    put:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                hidden:
                  description: to enable  or disable connector (bank or provider)
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connector"
          description: Successful PUT on Connector resource
      summary: Enable/disable several connectors
      tags:
        - Banks
  "/connectors/{id_connector}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connector"
          description: Successful GET on Connector resource
      summary: Get a connector
      tags:
        - Connections
        - Banks
        - Providers
    put:
      description: <br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                auth_mechanism:
                  description: the authentication mechanism to use for this connector
                  type: string
                hidden:
                  description: to enable  or disable connector (bank or provider)
                  type: boolean
                id_categories:
                  description: one or several comma separated categories to map to the given connector (or null to map no category)
                  type: string
                sync_frequency:
                  description: Allows you to overload global sync_frequency param
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connector"
            auth_mechanism:
              examples:
                response:
                  value: credentials
            beta:
              examples:
                response:
                  value: true
            capabilities:
              examples:
                response:
                  value:
                    - profile
                    - banktransferaddrecipient
                    - contact
                    - bank
                    - banktransfer
            categories:
              examples:
                response:
                  value:
                    - virtual
            charged:
              examples:
                response:
                  value: true
            code:
              examples:
                response:
                  value: "40618"
            color:
              examples:
                response:
                  value: f10389
            hidden:
              examples:
                response:
                  value: false
            id:
              examples:
                response:
                  value: 4
            name:
              examples:
                response:
                  value: Boursorama
            slug:
              examples:
                response:
                  value: BOU
            sync_frequency:
              examples:
                response:
                  value: null
          description: Successful PUT on Connector resource
      summary: Edit the provided connector
      tags:
        - Banks
  "/connectors/{id_connector}/logos":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
    post:
      description: "This endpoint creates a connector logo. You can either pass a file to as a parameter to insert and link it with the connector or pass an id_file to link a connector with an existing file. Will fail if the file is already linked with that connector.<br><br>Form params: - id_file (integer): The id of the file to link with that connector. - img (string): Path to the image to link with that connector.<br><br>"
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorLogo"
          description: Successful POST on ConnectorLogo resource
      summary: Create a connector Logo
      tags:
        - Banks
        - Providers
    put:
      description: "This endpoint creates or update a connector logo. This logo is a mapping between a file (/file route) and a connector (/connectors route) or a provider (/providers route).<br><br>Form params: - id_file (integer): The id of the file to link with that connector.<br><br>"
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorLogo"
          description: Successful PUT on ConnectorLogo resource
      summary: Create or Update a connector Logo
      tags:
        - Banks
        - Providers
  "/connectors/{id_connector}/logos/main":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/connectors/{id_connector}/logos/thumbnail":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/connectors/{id_connector}/logos/{id_logo}":
    delete:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_logo
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorLogo"
          description: Successful DELETE on ConnectorLogo resource
      summary: Delete a single Logo object.
      tags:
        - Banks
        - Providers
    put:
      description: "This endpoint creates or update a connector logo. This logo is a mapping between a file (/file route) and a connector (/connectors route) or a provider (/providers route).<br><br>Form params: - id_file (integer): The id of the file to link with that connector.<br><br>"
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_logo
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorLogo"
          description: Successful PUT on ConnectorLogo resource
      summary: Create or Update a connector Logo.
      tags:
        - Banks
        - Providers
  "/connectors/{id_connector}/sources":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  sources:
                    items:
                      $ref: "#/components/schemas/ConnectorSource"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - sources
                type: object
          description: sources
      summary: Get list of connector sources
      tags:
        - Connections
        - Banks
        - Providers
    put:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                disabled_capabilities:
                  description: list (json format) of capabilities the sources will be disabled for
                  type: string
                unavailable_capabilities:
                  description: list (json format) of capabilities the sources will be unavailable for
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorSource"
          description: Successful PUT on ConnectorSource resource
      summary: Edit several connector sources
      tags:
        - Connections
        - Banks
        - Providers
  "/connectors/{id_connector}/sources/{id_connector_source}/fields":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_connector_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  source_fields:
                    items:
                      $ref: "#/components/schemas/ConnectorSourceField"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - source_fields
                type: object
          description: source_fields
      summary: Get fields specific to a domain and a source
      tags:
        - Connections
        - Banks
  "/connectors/{id_connector}/sources/{id_source}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorSource"
          description: Successful GET on ConnectorSource resource
      summary: Get the connector source
      tags:
        - Connections
        - Banks
        - Providers
    put:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                auth_mechanism:
                  description: the authentication mechanism to use for this connector source
                  type: string
                disabled:
                  description: to enable or disable connector source
                  type: boolean
                disabled_capabilities:
                  description: list (json format) of capabilities this source will be disabled for
                  type: string
                unavailable:
                  description: to enable or disable the source (can only be edited by BI employees)
                  type: boolean
                unavailable_capabilities:
                  description: list (json format) of capabilities this source will be unavailable for
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorSource"
          description: Successful PUT on ConnectorSource resource
      summary: Edit the provided connector source
      tags:
        - Connections
        - Banks
        - Providers
  /incidents:
    get:
      description: By default, provide all incidents. Results are paginated. Some filters can be set via query parameters.<br><br>
      parameters:
        - description: comma separated list, filter incidents in the given states.
          in: query
          name: state
          required: false
          schema:
            type: string
        - description: give only the current state of the particular incidents.
          in: query
          name: id
          required: false
          schema:
            type: integer
        - description: comma_separated list, filter the incidents of the given weboob_id
          in: query
          name: weboob_id
          required: false
          schema:
            type: string
        - description: filter last_update date >= start_date. YYYY-MM-DD format.
          in: query
          name: start_date
          required: false
          schema:
            type: string
        - description: filter last_update date <= start_date. YYYY-MM-DD format.
          in: query
          name: end_date
          required: false
          schema:
            type: string
        - description: pagination option. Default to 1.
          in: query
          name: page
          required: false
          schema:
            type: integer
        - description: pagination option. Default to 30.
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: standard HTTP response
      summary: Get incidents logs.
      tags:
        - Timeline
  /invoicing:
    get:
      description: You can get all the invoicing data or just specific ones by using the available parameters.<br><br>If no parameters are specified, no invoicing data is returned.<br><br>
      parameters:
        - description: minimal date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - description: the number of user synchronized during the period
          in: query
          name: users_synced
          required: false
          schema:
            type: string
        - description: the number of user of the Bank API synchronized during the period
          in: query
          name: users_bank
          required: false
          schema:
            type: string
        - description: " the number of user of the Bill API synchronized during the period"
          in: query
          name: users_bill
          required: false
          schema:
            type: string
        - description: the number of accounts synchronized during the period
          in: query
          name: accounts_synced
          required: false
          schema:
            type: string
        - description: the number of subscriptions synchronized during the period
          in: query
          name: subscriptions_synced
          required: false
          schema:
            type: string
        - description: the number of connections synchronized during the period
          in: query
          name: connections_synced
          required: false
          schema:
            type: string
        - description: the number of Bank API connections synchronized during the period
          in: query
          name: connections_account
          required: false
          schema:
            type: string
        - description: the number of transfers done during the period
          in: query
          name: transfers_synced
          required: false
          schema:
            type: string
        - description: the number of payments done during the period
          in: query
          name: payments_synced
          required: false
          schema:
            type: string
        - description: get all the invoicing data at once
          in: query
          name: all
          required: false
          schema:
            type: string
        - description: get full ids list instead of numbers
          in: query
          name: detail
          required: false
          schema:
            type: string
      responses:
        "200":
          description: standard HTTP response
      summary: Get invoicing data for a given period (default is the current month).
      tags:
        - Banks
  /logs:
    get:
      description: Get logs about connections.<br><br>
      parameters:
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - description: period to group logs
          in: query
          name: period
          required: false
          schema:
            type: string
        - description: ID of a user
          in: query
          name: id_user
          required: false
          schema:
            type: integer
        - description: ID of a connection
          in: query
          name: id_connection
          required: false
          schema:
            type: integer
        - description: ID of a connector
          in: query
          name: id_connector
          required: false
          schema:
            type: integer
        - description: UUID of a connector
          in: query
          name: connector_uuid
          required: false
          schema:
            type: string
        - description: connections log error filter
          in: query
          name: error
          required: false
          schema:
            type: string
        - description: ID of a source
          in: query
          name: id_source
          required: false
          schema:
            type: integer
        - description: filter "id" of logs, maximum id to return
          in: query
          name: id_max
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectionlogs:
                    items:
                      $ref: "#/components/schemas/ConnectionLog"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectionlogs
                type: object
          description: connectionlogs
      summary: Get connection logs
      tags:
        - Connections
        - Banks
        - Providers
  /monitoring:
    get:
      description: ""
      parameters:
        - description: "number on days on which stats on synchronization have to be done per worker (Default: 1)"
          in: query
          name: period
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: standard HTTP response
      summary: get performances stats on this instance
      tags:
        - Administration
  /providers:
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  providers:
                    items:
                      $ref: "#/components/schemas/Connector"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - providers
                type: object
          description: providers
      summary: Get list of connectors
      tags:
        - Connections
        - Banks
        - Providers
  "/providers/{id_connector}/connections":
    get:
      description: By default, it selects a set of 3 connections.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: the length of the connection subset
          in: query
          name: range
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connections:
                    items:
                      $ref: "#/components/schemas/Connection"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connections
                type: object
          description: connections
      summary: Get a random subset of provider's id_connection
      tags:
        - Banks
        - Connections
  "/providers/{id_connector}/logos":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/providers/{id_connector}/logos/main":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/providers/{id_connector}/logos/thumbnail":
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectorlogos:
                    items:
                      $ref: "#/components/schemas/ConnectorLogo"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectorlogos
                type: object
          description: connectorlogos
      summary: Get all links to the files associated with this connector.
      tags:
        - Banks
        - Providers
  "/providers/{id_connector}/sources":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  sources:
                    items:
                      $ref: "#/components/schemas/ConnectorSource"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - sources
                type: object
          description: sources
      summary: Get list of connector sources
      tags:
        - Connections
        - Banks
        - Providers
  "/providers/{id_connector}/sources/{id_connector_source}/fields":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_connector_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  source_fields:
                    items:
                      $ref: "#/components/schemas/ConnectorSourceField"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - source_fields
                type: object
          description: source_fields
      summary: Get fields specific to a domain and a source
      tags:
        - Connections
        - Banks
  "/providers/{id_connector}/sources/{id_source}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_connector
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorSource"
          description: Successful GET on ConnectorSource resource
      summary: Get the connector source
      tags:
        - Connections
        - Banks
        - Providers
  "/providers/{id_provider}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_provider
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connector"
          description: Successful GET on Connector resource
      summary: Get a connector
      tags:
        - Connections
        - Banks
        - Providers
  /psd2-registrations:
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  psd2registrations:
                    items:
                      $ref: "#/components/schemas/Psd2Registration"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - psd2registrations
                type: object
          description: psd2registrations
      summary: Get details on all psd2 registrations
      tags:
        - Banks
  "/psd2-registrations/{id_psd2-registration}":
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_psd2-registration
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Psd2Registration"
          description: Successful GET on Psd2Registration resource
      summary: Get details for a given psd2 registration
      tags:
        - Banks
  "/psd2-registrations/{id_psd2registration}/logs":
    get:
      description: Get logs of psd2 registration. By default, it selects logs for the last month. You can use "min_date" and "max_date" to change boundary dates.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_psd2registration
          required: true
          schema:
            type: integer
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal (inclusive) date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum (inclusive) date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  psd2registrationlogs:
                    items:
                      $ref: "#/components/schemas/Psd2RegistrationLog"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - psd2registrationlogs
                type: object
          description: psd2registrationlogs
      summary: Get psd2 registration logs.
      tags:
        - Banks
  /publickey:
    get:
      description: ""
      responses:
        "200":
          description: standard HTTP response
      summary: Get public encryption key of the API.
      tags:
        - Administration
  /test/sync:
    post:
      description: It can be used to test receiving data on your webhooks.<br><br>
      responses:
        "200":
          description: standard HTTP response
      summary: Test synchronization on a random connection.
      tags:
        - Administration
  /test/webhooks:
    post:
      description: It can be used to test receiving data on your webhooks.<br><br>
      responses:
        "200":
          description: standard HTTP response
      summary: Test synchronization on a random connection.
      tags:
        - Administration
  /users:
    get:
      description: ""
      parameters:
        - description: searches a user by mail (if it contains no '@', '@biapi.pro' will be added at the end)
          in: query
          name: search
          required: false
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  users:
                    items:
                      $ref: "#/components/schemas/User"
                    type: array
                required:
                  - users
                type: object
          description: users
      summary: Get users
      tags:
        - Users management
  "/users/{id_user}":
    delete:
      description: This endpoint deletes the user.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful DELETE on User resource
      summary: Delete the user
      tags:
        - Authentication
        - Users management
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful GET on User resource
      summary: Get a user
      tags:
        - Users management
        - PFM
        - Authentication
  "/users/{id_user}/account_types":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  accounttypes:
                    items:
                      $ref: "#/components/schemas/AccountType"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - accounttypes
                type: object
          description: accounttypes
      summary: Get account types
      tags:
        - Banks
  "/users/{id_user}/account_types/{id_account_type}":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_account_type
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountType"
          description: Successful GET on AccountType resource
      summary: Get an account type
      tags:
        - Banks
  "/users/{id_user}/accounts/{id_account}/categories":
    get:
      description: Ressource to get categories for the user's transactions<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: standard HTTP response
      summary: Get the category
      tags:
        - Banks
  "/users/{id_user}/accounts/{id_account}/transactionsclusters":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  transactionsclusters:
                    items:
                      $ref: "#/components/schemas/TransactionsCluster"
                    type: array
                required:
                  - transactionsclusters
                type: object
          description: transactionsclusters
      summary: Get clustered transactions
      tags:
        - Banks
    post:
      description: "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful POST on TransactionsCluster resource
      summary: Create clustered transaction
      tags:
        - Banks
  "/users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful DELETE on TransactionsCluster resource
      summary: Delete a clustered transaction
      tags:
        - Banks
    put:
      description: "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful PUT on TransactionsCluster resource
      summary: Edit a clustered transaction
      tags:
        - Banks
  "/users/{id_user}/alerts":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  alerts:
                    items:
                      $ref: "#/components/schemas/Alert"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - alerts
                type: object
          description: alerts
      summary: Get alerts
      tags:
        - Banks
  "/users/{id_user}/categories":
    get:
      description: Ressource to get categories for the user's transactions<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: standard HTTP response
      summary: Get the category
      tags:
        - Banks
  "/users/{id_user}/categories/full":
    get:
      description: Ressource to get categories<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  categorys:
                    items:
                      $ref: "#/components/schemas/Category"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - categorys
                type: object
          description: categorys
      summary: Get the category
      tags:
        - Banks
    post:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                accountant_account:
                  description: Accountant account number.
                  type: string
                color:
                  description: Color of the category.
                  type: string
                id_parent_category:
                  description: ID of the parent category.
                  type: integer
                id_parent_category_in_menu:
                  description: ID of the parent category to be displayed.
                  type: integer
                income:
                  description: Is an income category. If null, this is both an income and an expense category.
                  type: boolean
                name:
                  description: Name of the category.
                  type: string
                refundable:
                  description: This category accepts opposite sign of transactions.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: Successful POST on Category resource
      summary: Create a new transaction category
      tags:
        - Banks
  "/users/{id_user}/categories/full/{id_full}":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_full
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: Successful DELETE on Category resource
      summary: Delete a user-created transaction category
      tags:
        - Banks
    put:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_full
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                accountant_account:
                  description: Accountant account number.
                  type: string
                hide:
                  description: Hide (but not delete) a category. Must be 0, 1 or toggle.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: Successful PUT on Category resource
      summary: Modify a user-created category
      tags:
        - Banks
  "/users/{id_user}/config":
    delete:
      description: "- keys (string): list of coma separated keys to be deleted.<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: standard HTTP response
      summary: Delete the given user configurations. deletions on keys prefixed by 'biapi.' (except callback_url) are ignored
      tags:
        - Users management
    get:
      description: <br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                required:
                  - biapi.last_push
                type: object
            biapi.last_push:
              examples:
                response:
                  value: 2016-12-18T12:31:15
          description: ""
      summary: Get configuration of a user.
      tags:
        - Users management
    post:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: standard HTTP response
      summary: Change configuration of a user. modifications on keys prefixed by 'biapi.' (except callback_url) are ignored
      tags:
        - Users management
  "/users/{id_user}/connections":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Successful DELETE on Connection resource
      summary: Delete all connections
      tags:
        - Connections
        - Banks
        - Providers
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connections:
                    items:
                      $ref: "#/components/schemas/Connection"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connections
                type: object
          description: connections
      summary: Get connections
      tags:
        - Connections
        - Banks
        - Providers
    post:
      description: Create a new connection to a given bank or provider. You have to give all needed parameters (use /banks/ID/fields or /providers/ID/fields to get them).<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: optional comma-separated list of sources to use for the connection synchronization
          in: query
          name: source
          required: false
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                connector_uuid:
                  description: optional uuid of the connector (replaces id_connector)
                  type: string
                id_connector:
                  description: ID of the connector
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Successful POST on Connection resource
      summary: Add a new connection.
      tags:
        - Connections
        - Banks
        - Providers
  "/users/{id_user}/connections/{id_connection}":
    delete:
      description: This endpoint deletes a connection and all related accounts and transactions.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Successful DELETE on Connection resource
      summary: Delete a connection.
      tags:
        - Connections
        - Banks
        - Providers
    post:
      description: Give new parameters to change on the configuration of this connection (for example "password").<br><br>It tests connection to website, and if it fails, a 400 response is given with the error code "wrongpass" or "websiteUnavailable".<br><br>You can also supply meta-parameters on connection, like 'active' or 'expire'.<br><br>It's possible to execute the update/synchronization in the background with a query parameter. If done in background this endpoint will respond with data that is not yet updated. To obtain updated data, polling is required as the the data will be filled in the background.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: Do the connection update/synchronization in background
          in: query
          name: background
          required: false
          schema:
            type: boolean
        - description: Whether the connection synchronization is asked by the PSU or not (default is true)
          in: query
          name: psu_requested
          required: false
          schema:
            type: boolean
        - description: Refresh the PSU's SCA for openapi source
          in: query
          name: refresh_psd2_auth
          required: false
          schema:
            type: boolean
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: Set if the connection synchronization is active
                  type: boolean
                decoupled:
                  description: Try to update a connection with the decoupled error
                  type: boolean
                expire:
                  description: Set expiration of the connection to this date
                  format: date-time
                  type: string
                login:
                  description: Set login to this new login
                  type: string
                password:
                  description: Set password to this new password
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Successful POST on Connection resource
      summary: Update a connection.
      tags:
        - Connections
        - Banks
        - Providers
    put:
      description: We suggest to pass parameter expand=accounts[transactions] to get all *new* and *updated* transactions.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: if supplied, get transactions inserted since this date
          in: query
          name: last_update
          required: false
          schema:
            format: date-time
            type: string
        - description: do the connection synchronization in background
          in: query
          name: background
          required: false
          schema:
            type: boolean
        - description: Whether the connection synchronization is asked by the PSU or not (default is true)
          in: query
          name: psu_requested
          required: false
          schema:
            type: boolean
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Successful PUT on Connection resource
      summary: Force synchronisation of a connection.
      tags:
        - Connections
        - Banks
        - Providers
  "/users/{id_user}/connections/{id_connection}/accounts":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful DELETE on Account resource
      summary: Delete all accounts
      tags:
        - Banks
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  accounts:
                    items:
                      $ref: "#/components/schemas/Account"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - accounts
                type: object
          description: accounts
      summary: Get accounts list.
      tags:
        - Banks
    post:
      description: This endpoint creates an account related to a connection or not.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                balance:
                  description: balance of account
                  format: float
                  type: number
                iban:
                  description: IBAN of account
                  type: string
                id_connection:
                  description: the connection to attach to the account
                  type: integer
                id_currency:
                  description: "the currency of the account (default: 'EUR')"
                  type: string
                name:
                  description: name of account
                  type: string
                number:
                  description: number of account
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful POST on Account resource
      summary: Create an account
      tags:
        - Banks
    put:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful PUT on Account resource
      summary: Update many accounts at once
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}":
    delete:
      description: It deletes a specific account.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful DELETE on Account resource
      summary: Delete an account.
      tags:
        - Banks
    put:
      description: It updates a specific account<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                balance:
                  description: Balance of the account
                  format: float
                  type: number
                bookmarked:
                  description: If the account is bookmarked
                  type: boolean
                disabled:
                  description: If the account is disabled (not synchronized)
                  type: boolean
                display:
                  description: If the account is displayed
                  type: boolean
                iban:
                  description: IBAN of the account
                  type: string
                name:
                  description: Label of the account
                  type: string
                usage:
                  description: "Usage of the account : PRIV, ORGA or ASSO"
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful PUT on Account resource
      summary: Update an account
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/categories":
    get:
      description: Ressource to get categories for the user's transactions<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: standard HTTP response
      summary: Get the category
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/delta":
    get:
      description: Get account delta between sums of transactions and difference of account balance for the given period.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: minimal date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - description: period to group logs
          in: query
          name: period
          required: false
          schema:
            type: string
      responses:
        "200":
          description: standard HTTP response
      summary: Get deltas of accounts
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/logs":
    get:
      description: Get logs of account. By default, it selects logs for the last month. You can use "min_date" and "max_date" to change boundary dates.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal (inclusive) date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum (inclusive) date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  accountlogs:
                    items:
                      $ref: "#/components/schemas/AccountLog"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - accountlogs
                type: object
          description: accountlogs
      summary: Get accounts logs.
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/sources":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  sources:
                    items:
                      $ref: "#/components/schemas/ConnectionSource"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - sources
                type: object
          description: sources
      summary: Get account sources
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
          description: Successful DELETE on Transaction resource
      summary: Delete transactions
      tags:
        - Banks
    get:
      description: Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use "min_date" and "max_date" to change boundary dates.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal (inclusive) date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum (inclusive) date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - description: filter on income or expenditures
          in: query
          name: income
          required: false
          schema:
            type: boolean
        - description: display only deleted transactions
          in: query
          name: deleted
          required: false
          schema:
            type: boolean
        - description: display all transactions, including deleted ones
          in: query
          name: all
          required: false
          schema:
            type: boolean
        - description: get only transactions updated after the specified datetime
          in: query
          name: last_update
          required: false
          schema:
            format: date-time
            type: string
        - description: filter transactions containing the given string
          in: query
          name: wording
          required: false
          schema:
            type: string
        - description: minimal (inclusive) value
          in: query
          name: min_value
          required: false
          schema:
            format: float
            type: number
        - description: maximum (inclusive) value
          in: query
          name: max_value
          required: false
          schema:
            format: float
            type: number
        - description: search in labels, dates, values and categories
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: '"XX|-XX" or "±XX"'
          in: query
          name: value
          required: false
          schema:
            type: string
        - description: filter on given category id(s) (comma separated) or "null"
          in: query
          name: id_category
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  transactions:
                    items:
                      $ref: "#/components/schemas/Transaction"
                    type: array
                required:
                  - transactions
                type: object
          description: transactions
      summary: Get transactions
      tags:
        - Banks
    post:
      description: Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: "1 if the transaction should be taken into account by pfm services (default: 1)"
                  type: boolean
                coming:
                  description: "1 if the transaction has already been debited (default: 0)"
                  type: boolean
                date:
                  description: date of the transaction
                  format: date
                  type: string
                date_scraped:
                  description: "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
                  format: date-time
                  type: string
                id_account:
                  description: account of the transaction. If not supplied, it has to be given in the route
                  type: integer
                original_wording:
                  description: label of the transaction
                  type: string
                rdate:
                  description: "realisation date of the transaction (default: value of date)"
                  format: date
                  type: string
                state:
                  description: "nature of the transaction (default: new)"
                  type: string
                type:
                  description: "type of the transaction (default: unknown)"
                  type: string
                value:
                  description: vallue of the transaction
                  type: integer
              required:
                - original_wording
                - value
                - date
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
          description: Successful POST on Transaction resource
      summary: Create transactions
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}":
    put:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transaction
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: if false, transaction isn't considered in analyzisis endpoints (like /balances)
                  type: boolean
                application_date:
                  description: change application date of the transaction
                  format: date
                  type: string
                comment:
                  description: change comment
                  type: string
                id_category:
                  description: ID of the associated category
                  type: integer
                wording:
                  description: user rewording of the transaction
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
          description: Successful PUT on Transaction resource
      summary: Edit a transaction meta-data
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transaction
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionInformation"
          description: Successful DELETE on TransactionInformation resource
      summary: Delete all arbitrary key-value pairs of a transaction
      tags:
        - Banks
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transaction
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  transactioninformations:
                    items:
                      $ref: "#/components/schemas/TransactionInformation"
                    type: array
                required:
                  - transactioninformations
                type: object
          description: transactioninformations
      summary: List all arbitrary key-value pairs on a transaction
      tags:
        - Banks
    put:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transaction
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionInformation"
          description: Successful PUT on TransactionInformation resource
      summary: Add or edit transaction arbitrary key-value pairs
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations/{id_information}":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transaction
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_information
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionInformation"
          description: Successful DELETE on TransactionInformation resource
      summary: Delete a particular key-value pair on a transaction.
      tags:
        - Banks
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transaction
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_information
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionInformation"
          description: Successful GET on TransactionInformation resource
      summary: Get a particular arbitrary key-value pair on a transaction
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  transactionsclusters:
                    items:
                      $ref: "#/components/schemas/TransactionsCluster"
                    type: array
                required:
                  - transactionsclusters
                type: object
          description: transactionsclusters
      summary: Get clustered transactions
      tags:
        - Banks
    post:
      description: "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful POST on TransactionsCluster resource
      summary: Create clustered transaction
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful DELETE on TransactionsCluster resource
      summary: Delete a clustered transaction
      tags:
        - Banks
    put:
      description: "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_account
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful PUT on TransactionsCluster resource
      summary: Edit a clustered transaction
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/informations":
    get:
      description: <br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connections:
                    items:
                      $ref: "#/components/schemas/Connection"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connections
                type: object
            compagny:
              examples:
                response:
                  value:
                    ...: ...
                    name: Roundcore
            owner:
              examples:
                response:
                  value:
                    ...: ...
                    name: Monsieur Honoré Émile
          description: connections
      summary: Get connection additionnal informations
      tags:
        - Connections
        - Banks
        - Providers
  "/users/{id_user}/connections/{id_connection}/logs":
    get:
      description: Get logs about connections.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - description: period to group logs
          in: query
          name: period
          required: false
          schema:
            type: string
        - description: ID of a user
          in: query
          name: id_user
          required: false
          schema:
            type: integer
        - description: ID of a connection
          in: query
          name: id_connection
          required: false
          schema:
            type: integer
        - description: ID of a connector
          in: query
          name: id_connector
          required: false
          schema:
            type: integer
        - description: UUID of a connector
          in: query
          name: connector_uuid
          required: false
          schema:
            type: string
        - description: connections log error filter
          in: query
          name: error
          required: false
          schema:
            type: string
        - description: ID of a source
          in: query
          name: id_source
          required: false
          schema:
            type: integer
        - description: filter "id" of logs, maximum id to return
          in: query
          name: id_max
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectionlogs:
                    items:
                      $ref: "#/components/schemas/ConnectionLog"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectionlogs
                type: object
          description: connectionlogs
      summary: Get connection logs
      tags:
        - Connections
        - Banks
        - Providers
  "/users/{id_user}/connections/{id_connection}/sources":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  sources:
                    items:
                      $ref: "#/components/schemas/ConnectionSource"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - sources
                type: object
          description: sources
      summary: Get connection sources
      tags:
        - Connections
        - Banks
        - Providers
  "/users/{id_user}/connections/{id_connection}/sources/{id_source}":
    delete:
      description: This will make it so the specified source will not be synchronized anymore.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSource"
          description: Successful DELETE on ConnectionSource resource
      summary: Disable a connection source
      tags:
        - Connections
        - Banks
        - Providers
    post:
      description: This endpoint is used to enable a source or force a synchronization on it.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - description: do the synchronization in background (to use with the sysynchronizenc parameter)
          in: query
          name: background
          required: false
          schema:
            type: boolean
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/postConnections_idConnection_sources_idSource_"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSource"
          description: Successful POST on ConnectionSource resource
      summary: '"'
      tags:
        - Connections
        - Banks
        - Providers
    put:
      description: This endpoint is used to enable a source or force a synchronization on it.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_source
          required: true
          schema:
            type: integer
        - description: do the synchronization in background (to use with the synchronize parameter)
          in: query
          name: background
          required: false
          schema:
            type: boolean
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/putConnections_idConnection_sources_idSource_"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionSource"
          description: Successful PUT on ConnectionSource resource
      summary: Update connection source
      tags:
        - Connections
        - Banks
        - Providers
  "/users/{id_user}/connections/{id_connection}/transactionsclusters":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  transactionsclusters:
                    items:
                      $ref: "#/components/schemas/TransactionsCluster"
                    type: array
                required:
                  - transactionsclusters
                type: object
          description: transactionsclusters
      summary: Get clustered transactions
      tags:
        - Banks
    post:
      description: "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful POST on TransactionsCluster resource
      summary: Create clustered transaction
      tags:
        - Banks
  "/users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactionscluster}":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful DELETE on TransactionsCluster resource
      summary: Delete a clustered transaction
      tags:
        - Banks
    put:
      description: "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_connection
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful PUT on TransactionsCluster resource
      summary: Edit a clustered transaction
      tags:
        - Banks
  "/users/{id_user}/forecast":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: standard HTTP response
      summary: Get forecast
      tags:
        - Banks
        - PFM
  "/users/{id_user}/logs":
    get:
      description: Get logs about connections.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - description: period to group logs
          in: query
          name: period
          required: false
          schema:
            type: string
        - description: ID of a user
          in: query
          name: id_user
          required: false
          schema:
            type: integer
        - description: ID of a connection
          in: query
          name: id_connection
          required: false
          schema:
            type: integer
        - description: ID of a connector
          in: query
          name: id_connector
          required: false
          schema:
            type: integer
        - description: UUID of a connector
          in: query
          name: connector_uuid
          required: false
          schema:
            type: string
        - description: connections log error filter
          in: query
          name: error
          required: false
          schema:
            type: string
        - description: ID of a source
          in: query
          name: id_source
          required: false
          schema:
            type: integer
        - description: filter "id" of logs, maximum id to return
          in: query
          name: id_max
          required: false
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connectionlogs:
                    items:
                      $ref: "#/components/schemas/ConnectionLog"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - connectionlogs
                type: object
          description: connectionlogs
      summary: Get connection logs
      tags:
        - Connections
        - Banks
        - Providers
  "/users/{id_user}/profiles":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  profiles:
                    items:
                      $ref: "#/components/schemas/Profile"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - profiles
                type: object
          description: profiles
      summary: Get profiles
      tags:
        - Users management
        - PFM
  "/users/{id_user}/profiles/main":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
          description: Successful GET on Profile resource
      summary: Get the main profile
      tags:
        - Users management
        - PFM
  "/users/{id_user}/profiles/{id_profile}":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_profile
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
          description: Successful GET on Profile resource
      summary: Get a profile
      tags:
        - Users management
        - PFM
  "/users/{id_user}/token":
    post:
      description: Create an access_token for this user and get it.<br><br>
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: application name
                  type: string
              required:
                - application
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                required:
                  - token
                type: object
            token:
              examples:
                response:
                  value: A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n
          description: ""
      summary: Create a token
      tags:
        - Users management
        - Authentication
  "/users/{id_user}/transactionsclusters":
    get:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  transactionsclusters:
                    items:
                      $ref: "#/components/schemas/TransactionsCluster"
                    type: array
                required:
                  - transactionsclusters
                type: object
          description: transactionsclusters
      summary: Get clustered transactions
      tags:
        - Banks
    post:
      description: "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful POST on TransactionsCluster resource
      summary: Create clustered transaction
      tags:
        - Banks
  "/users/{id_user}/transactionsclusters/{id_transactionscluster}":
    delete:
      description: ""
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful DELETE on TransactionsCluster resource
      summary: Delete a clustered transaction
      tags:
        - Banks
    put:
      description: "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>"
      parameters:
        - description: "Hint: you can use 'me' or 'all'"
          in: path
          name: id_user
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: id_transactionscluster
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsCluster"
          description: Successful PUT on TransactionsCluster resource
      summary: Edit a clustered transaction
      tags:
        - Banks
  /webauth:
    get:
      description: "The route encapsulate 2 functionalities: 1. Create or update a connection through oAuth2 session.<br><br>2. Execute a transfer through OAuth2 session."
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: Client Application ID
                  type: integer
                id_transfer:
                  description: ID of the transfer
                  type: integer
                redirect_uri:
                  description: Redirect URI
                  type: string
                state:
                  description: Optional state
                  type: string
              type: object
      responses:
        "200":
          description: standard HTTP response
      summary: First step to establish an oAuth2 connection.
      tags:
        - Authentication
        - Transfer
  /webhooks:
    delete:
      description: Updates the deleted field with the date of the deletion<br><br>
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful DELETE on Webhook resource
      summary: Deletes all webhooks
      tags:
        - Administration
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  webhooks:
                    items:
                      $ref: "#/components/schemas/Webhook"
                    type: array
                required:
                  - webhooks
                type: object
          description: webhooks
      summary: Get webhooks
      tags:
        - Administration
    post:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                event:
                  description: The webhook event
                  type: string
                id_auth:
                  description: The webhook authentication process to use (its ID or its name)
                  type: string
                id_service:
                  description: The service ID to associate with the webhook
                  type: integer
                id_user:
                  description: The user ID to associate with the webhook
                  type: integer
                params:
                  description: "The webhook parameters as an object with three keys: type, key and value"
                  type: string
                url:
                  description: The webhook callback url
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful POST on Webhook resource
      summary: Adds a new webhook
      tags:
        - Administration
  /webhooks/auth:
    delete:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthProvider"
          description: Successful DELETE on AuthProvider resource
      summary: Deletes all webhook authentication types
      tags:
        - Administration
    get:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  authproviders:
                    items:
                      $ref: "#/components/schemas/AuthProvider"
                    type: array
                  total:
                    description: total number of results
                    type: number
                required:
                  - authproviders
                type: object
          description: authproviders
      summary: Get webhooks authentication types
      tags:
        - Administration
    post:
      description: ""
      parameters:
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: The authentication process configuration. A dict contains either the certificate
                  type: string
                name:
                  description: The name of the authentication process to differentiate
                  type: string
                type:
                  description: The type of the authentication process (oauth, certificate, token, etc...)
                  type: integer
              required:
                - type
                - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthProvider"
          description: Successful POST on AuthProvider resource
      summary: Adds a new webhook authentication type
      tags:
        - Administration
  "/webhooks/auth/{id_auth}":
    delete:
      description: Updates the deleted field with the date of the deletion<br><br>
      parameters:
        - description: ""
          in: path
          name: id_auth
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthProvider"
          description: Successful DELETE on AuthProvider resource
      summary: Deletes the webhook authentication type
      tags:
        - Administration
    post:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_auth
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: The authentication process configuration. A dict containing either the certificate
                  type: string
                name:
                  description: The name of the authentication process to differentiate
                  type: string
                type:
                  description: The type of the authentication process (oauth, certificate, token, etc...)
                  type: integer
              required:
                - type
                - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthProvider"
          description: Successful POST on AuthProvider resource
      summary: Updates the webhook authentication type
      tags:
        - Administration
    put:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_auth
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: The authentication process configuration. A dict containt either the certificate
                  type: string
                name:
                  description: The name of the authentication process to differentiate
                  type: string
                type:
                  description: The type of the authentication process (oauth, certificate, token, etc...)
                  type: integer
              required:
                - type
                - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthProvider"
          description: Successful PUT on AuthProvider resource
      summary: Updates the webhook authentication type
      tags:
        - Administration
  "/webhooks/{id_webhook}":
    delete:
      description: Updates the deleted field with the date of the deletion<br><br>
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful DELETE on Webhook resource
      summary: Deletes a webhook
      tags:
        - Administration
    post:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/postWebhooks_idWebhook_"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful POST on Webhook resource
      summary: Updates a webhook
      tags:
        - Administration
    put:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/postWebhooks_idWebhook_"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful PUT on Webhook resource
      summary: Updates a webhook
      tags:
        - Administration
  "/webhooks/{id_webhook}/add_to_data":
    delete:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful DELETE on Webhook resource
      summary: delete all entries
      tags:
        - Administration
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  webhooks:
                    items:
                      $ref: "#/components/schemas/Webhook"
                    type: array
                required:
                  - webhooks
                type: object
          description: webhooks
      summary: retrieve the list of the value to add in webhooks when sending the requested webhook
      tags:
        - Administration
    post:
      description: For each parameter, a value will be added in the webhook data. Use the key to set the name of the field. The values that can be added are to be found in the user configuration.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful POST on Webhook resource
      summary: Setup a field to store in user config when calling the endpoint
      tags:
        - Administration
  "/webhooks/{id_webhook}/add_to_data/{key}":
    delete:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful DELETE on Webhook resource
      summary: delete the requested entry
      tags:
        - Administration
    get:
      description: ""
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful GET on Webhook resource
      summary: retrieve the value to add in the requested webhook for the requested name
      tags:
        - Administration
    post:
      description: For each parameter, a value will be added in the webhook data. Use the key to set the name of the field. The values that can be added are to be found in the user configuration.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
          description: Successful POST on Webhook resource
      summary: upate the requested field to store in user config when calling the endpoint
      tags:
        - Administration
  "/webhooks/{id_webhook}/logs":
    get:
      description: Get logs of the webhooks.<br><br>By default, it selects logs for the last month. You can use "min_date" and "max_date" to change boundary dates.<br><br>
      parameters:
        - description: ""
          in: path
          name: id_webhook
          required: true
          schema:
            type: integer
        - description: limit number of results to this user
          in: query
          name: id_user
          required: false
          schema:
            type: integer
        - description: limit number of results
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: offset of first result
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: minimal (inclusive) date
          in: query
          name: min_date
          required: false
          schema:
            format: date
            type: string
        - description: maximum (inclusive) date
          in: query
          name: max_date
          required: false
          schema:
            format: date
            type: string
        - in: query
          name: expand
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  total:
                    description: total number of results
                    type: number
                  webhooklogs:
                    items:
                      $ref: "#/components/schemas/WebhookLog"
                    type: array
                required:
                  - webhooklogs
                type: object
          description: webhooklogs
      summary: Get webhooks logs.
      tags:
        - Administration
components:
  requestBodies:
    postConnections_idConnection_sources_idSource_:
      content:
        multipart/form-data:
          schema:
            properties:
              disabled:
                description: to enable or disable connector source
                type: boolean
              synchronize:
                description: whether to force a synchronization on the source if it's not disabled
                type: boolean
            type: object
    postWebhooks_idWebhook_:
      content:
        multipart/form-data:
          schema:
            properties:
              deleted:
                description: a date to delete the webhook or 'null' to enable it
                type: string
              event:
                description: The webhook event
                type: string
              id_auth:
                description: The webhook authentication process to use
                type: integer
              id_service:
                description: The service ID to associate with the webhook
                type: integer
              id_user:
                description: The user ID to associate with the webhook
                type: integer
              url:
                description: The webhook callback url
                type: string
            type: object
    putConnections_idConnection_sources_idSource_:
      content:
        multipart/form-data:
          schema:
            properties:
              disabled:
                description: to enable or disable connector source
                type: boolean
              force:
                description: whether to force the synchronization on the source if it's in error
                type: boolean
              synchronize:
                description: whether to force a synchronization on the source if it's not disabled
                type: boolean
            type: object
  schemas:
    Access:
      example:
        email: ""
        id: 0
        id_profile: 0
        id_role: 0
        id_user: 0
      properties:
        email:
          type: string
        id:
          type: integer
        id_profile:
          type: integer
        id_role:
          type: integer
        id_user:
          type: integer
      required:
        - id
        - id_profile
      type: object
    Account:
      example:
        balance: 0
        bookmarked: false
        coming: 0
        company_name: ""
        currency: ""
        deleted: 2021-08-23 10:35:44.408402
        disabled: 2021-08-23 10:35:44.408472
        display: true
        error: ""
        iban: ""
        id: 0
        id_connection: 0
        id_parent: 0
        id_source: 0
        id_type: 0
        id_user: 0
        last_update: 2021-08-23 10:35:44.408324
        name: ""
        number: ""
        opening_date: 2021-08-23
        original_name: ""
        ownership: ""
        usage: ""
        webid: ""
      properties:
        balance:
          description: Balance of the account
          format: float
          type: number
        bookmarked:
          default: false
          description: This account has been bookmarked by user
          type: integer
        coming:
          default: 0
          description: Amount of coming operations not yet debited
          format: float
          type: number
        company_name:
          description: Name of the company holding the employee savings of the account
          type: string
        currency:
          description: Account currency
          type: object
        deleted:
          description: This account is not found on the website anymore
          format: date-time
          type: string
        disabled:
          description: This account has been deleted by user and will not be synchronized anymore
          format: date-time
          type: string
        display:
          default: true
          description: Display this account in accounts list
          type: boolean
        error:
          description: If the last update has failed, the error code
          type: string
        iban:
          description: Account IBAN
          type: string
        id:
          description: ID of the account
          type: integer
        id_connection:
          description: ID of the related connection
          type: integer
        id_parent:
          description: Id of the parent account
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_type:
          description: ID of the account type
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        last_update:
          description: Last successful update of the account
          format: date-time
          type: string
        name:
          description: Name of the account
          type: string
        number:
          description: Account number
          type: string
        opening_date:
          description: Opening date of the account
          format: date
          type: string
        original_name:
          description: Original name of the account on the bank
          type: string
        ownership:
          description: Relationship between the credentials owner and the account
          type: string
        usage:
          description: Account usage (if not set by the user, displays the value of original_usage)
          type: string
        webid:
          description: Account webid
          type: string
      required:
        - id
        - original_name
        - balance
        - display
        - bookmarked
      type: object
    AccountLog:
      example:
        balance: 0
        coming: 0
        error: ""
        error_message: ""
        id: 0
        id_account: 0
        id_connection_log: 0
        id_connector: 0
        timestamp: <function datetime.now at 0x7f5740ee1950>
      properties:
        balance:
          description: Balanced recorded
          format: float
          type: number
        coming:
          default: 0
          description: Coming debit recorded
          format: float
          type: number
        error:
          description: If fail, contains the error code
          type: string
        error_message:
          description: If fail, error message received from bank or provider
          type: string
        id:
          description: ID of the log
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_connection_log:
          description: ID of the related connection log
          type: integer
        id_connector:
          description: provider id
          type: integer
        timestamp:
          default: <function datetime.now at 0x7f5740ee1950>
          description: Timestamp of log
          format: date-time
          type: string
      required:
        - id
        - id_account
        - balance
        - timestamp
      type: object
    AccountType:
      example:
        color: ""
        display_name: ""
        display_name_p: ""
        id: 0
        id_parent: 0
        is_invest: false
        name: ""
        product: ""
        weboob_type_id: 0
      properties:
        color:
          description: Color of the account type (hexdecimal)
          type: string
        display_name:
          description: Name to display in singular
          type: string
        display_name_p:
          description: Name to display in plurial
          type: string
        id:
          description: ID of the account type
          type: integer
        id_parent:
          description: Id of the parent type
          type: integer
        is_invest:
          default: false
          description: Is it an investment account
          type: boolean
        name:
          description: Name of the account type
          type: string
        product:
          description: Product associated with the account
          type: string
        weboob_type_id:
          description: Map to the weboob_type_id
          type: integer
      required:
        - id
        - name
        - is_invest
        - weboob_type_id
        - display_name_p
        - display_name
      type: object
    Alert:
      example:
        id: 0
        id_account: 0
        id_investment: 0
        id_transaction: 0
        id_user: 0
        timestamp: <function datetime.now at 0x7f5740d7b510>
        type: ""
        value: 0
      properties:
        id:
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_investment:
          description: ID of the related investment
          type: integer
        id_transaction:
          description: ID of the related transaction
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        timestamp:
          default: <function datetime.now at 0x7f5740d7b510>
          description: Date of the alerts emission
          format: date-time
          type: string
        type:
          description: Type of the alert
          type: string
        value:
          description: Amount related to the alert
          format: float
          type: number
      required:
        - id
        - id_user
        - timestamp
        - type
        - value
      type: object
    AuthProvider:
      example:
        id: 0
        name: ""
        type: ""
      properties:
        id:
          type: integer
        name:
          description: Name to differentiate the authentication type
          type: string
        type:
          description: Authentication type to use when pushing the webhook
          type: string
      required:
        - id
        - name
        - type
      type: object
    Category:
      example:
        color: ""
        id: 0
        id_logo: 0
        id_parent_category: 0
        id_parent_category_in_menu: 0
        id_user: 0
        income: false
        name: ""
        name_displayed: ""
        refundable: false
      properties:
        color:
          description: Color of the category
          type: string
        id:
          description: ID of the category
          type: integer
        id_logo:
          description: ID of the logo
          type: integer
        id_parent_category:
          description: ID of the parent category. If this is a parent category, it will be equal to its own ID
          type: integer
        id_parent_category_in_menu:
          description: ID of the parent category to be displayed
          type: integer
        id_user:
          description: If not null, this category is specific to a user
          type: integer
        income:
          description: Is an income category. If null, this is both an income and an expense category
          type: boolean
        name:
          description: Name of the category
          type: string
        name_displayed:
          description: Displayed name, with HTML tags
          type: string
        refundable:
          description: This category accepts opposite sign of transactions
          type: boolean
      required:
        - id
        - id_parent_category
        - name
        - color
        - id_parent_category_in_menu
        - refundable
      type: object
    Certificate:
      example:
        created: 2021-08-23 10:35:44.254863
        id: 0
        id_private_key_file: 0
        id_public_key_file: 0
        type: ""
      properties:
        created:
          format: date-time
          type: string
        id:
          type: integer
        id_private_key_file:
          type: integer
        id_public_key_file:
          type: integer
        type:
          type: string
      required:
        - id
        - id_public_key_file
        - id_private_key_file
        - type
        - created
      type: object
    Client:
      example:
        id: 0
        id_logo: 0
        name: ""
        private_key: ""
        pro: false
        public_key: ""
        redirect_uris: ""
        secret: ""
      properties:
        config:
          description: customizable config
          type: string
        id:
          type: integer
        id_logo:
          type: integer
        name:
          default: ""
          type: string
        private_key:
          type: string
        pro:
          default: false
          description: Should the client display the company manager page.
          type: boolean
        public_key:
          type: string
        redirect_uris:
          default: ""
          type: string
        secret:
          type: string
      required:
        - id
        - name
        - secret
        - redirect_uris
        - pro
      type: object
    ConfigLog:
      example:
        id: 0
        new_value: ""
        origin: ""
        previous_value: ""
        timestamp: <function datetime.now at 0x7f5740c0d9d8>
        type: ""
      properties:
        id:
          type: integer
        key:
          type: string
        new_value:
          type: string
        origin:
          description: The entity who made the config key modification
          type: string
        previous_value:
          type: string
        timestamp:
          default: <function datetime.now at 0x7f5740c0d9d8>
          description: Timestamp of when the configuration key was changed
          format: date-time
          type: string
        type:
          description: "Action done on the config: add, update or delete"
          type: string
      required:
        - id
        - key
        - type
        - timestamp
      type: object
    Connection:
      example:
        active: true
        created: <function datetime.now at 0x7f5740f1ad90>
        id: 0
        id_connector: 0
        id_user: 0
        last_push: 2021-08-23 10:35:44.203796
        last_update: 2021-08-23 10:35:44.203510
        next_try: 2021-08-23 10:35:44.203907
      properties:
        active:
          default: true
          description: This connection is active and will be automatically synced
          type: boolean
        created:
          default: <function datetime.now at 0x7f5740f1ad90>
          description: Creation date
          format: date-time
          type: string
        id:
          description: ID of connection
          type: integer
        id_connector:
          description: ID of the related connector
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        last_push:
          description: Last successful push
          format: date-time
          type: string
        last_update:
          description: Last successful update
          format: date-time
          type: string
        next_try:
          description: Date of next synchronization
          format: date-time
          type: string
      required:
        - id
        - id_connector
        - active
      type: object
    ConnectionLog:
      example:
        error: ""
        error_message: ""
        error_uid: ""
        id: 0
        id_connection: 0
        id_connector: 0
        id_source: 0
        id_user: 0
        login: ""
        nb_accounts: 0
        next_try: 2021-08-23 10:35:44.219976
        session_folder_id: ""
        start: 2021-08-23 10:35:44.221393
        statut: 0
        timestamp: <function datetime.now at 0x7f5740f766a8>
        worker: ""
      properties:
        error:
          description: If fail, contains the error code
          type: string
        error_message:
          description: If fail, error message received from connector
          type: string
        error_uid:
          description: MD5 hash of the exception backtrace
          type: string
        fields:
          description: Fields for connection in additionalInformationNeeded state with background option
          type: string
        id:
          description: ID of the log
          type: integer
        id_connection:
          description: ID of the connection
          type: integer
        id_connector:
          description: ID of the connector
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_user:
          description: ID of the user
          type: integer
        login:
          description: bcrypt hash of the login
          type: string
        nb_accounts:
          description: In case of bank connection, number of accounts
          type: integer
        next_try:
          description: If fail, the date represents the next try to connect
          format: date-time
          type: string
        session_folder_id:
          description: Session folder uid
          type: string
        start:
          description: Timestamp when the synchronization has started
          format: date-time
          type: string
        statut:
          description: Status of user (1 = charged user)
          type: integer
        timestamp:
          default: <function datetime.now at 0x7f5740f766a8>
          description: Timestamp of log, when the synchronization has finished
          format: date-time
          type: string
        worker:
          description: Worker used to do synchronization
          type: string
      required:
        - id
        - id_connection
        - timestamp
      type: object
    ConnectionSource:
      example:
        access_expire: 2021-08-23 10:35:44.235793
        created: <function datetime.now at 0x7f5740f46510>
        disabled: 2021-08-23 10:35:44.235550
        expire: 2021-08-23 10:35:44.235883
        id: 0
        id_connection: 0
        id_connector_source: 0
        last_update: 2021-08-23 10:35:44.235451
        name: ""
        next_try: 2021-08-23 10:35:44.236093
        state: ""
      properties:
        access_expire:
          description: Expiration date of the access
          format: date-time
          type: string
        created:
          default: <function datetime.now at 0x7f5740f46510>
          description: Creation date of the connection source
          format: date-time
          type: string
        disabled:
          description: This source is not used to synchronize the connection
          format: date-time
          type: string
        expire:
          description: Expiration of the connection source. Used to purge the connection in case completion was not finished
          format: date-time
          type: string
        id:
          description: ID of connection
          type: integer
        id_connection:
          description: ID of the related connection
          type: integer
        id_connector_source:
          description: ID of the related connector source
          type: integer
        last_update:
          description: Last successful update
          format: date-time
          type: string
        name:
          description: Name of the connection source
          type: string
        next_try:
          description: Date of next synchronization
          format: date-time
          type: string
        state:
          description: If the last update has failed, the state code
          type: string
      required:
        - id
        - id_connection
        - id_connector_source
        - name
        - created
      type: object
    Connector:
      example:
        auth_mechanism: ""
        beta: false
        charged: true
        code: ""
        color: ""
        hidden: false
        id: 0
        months_to_fetch: 0
        name: ""
        restricted: false
        siret: ""
        slug: ""
        sync_frequency: 0
        uuid: ""
      properties:
        auth_mechanism:
          description: Authentication mechanism to use
          type: string
        beta:
          default: false
          description: If true, this connector is perhaps unstable :)
          type: boolean
        charged:
          default: true
          description: Usage of this connector is charged
          type: boolean
        code:
          description: Bank code
          type: string
        color:
          description: Main color of the bank or provider
          type: string
        hidden:
          default: false
          description: This connector is hidden from your users
          type: boolean
        id:
          description: ID of the connector
          type: integer
        months_to_fetch:
          description: How many months of history to fetch
          type: integer
        name:
          description: Name of the bank or provider
          type: string
        restricted:
          default: false
          description: If true, new connections cannot be added with this connector
          type: boolean
        siret:
          description: SIRET code for Bill modules
          type: string
        slug:
          type: string
        sync_frequency:
          description: How many days to wait between syncs
          format: float
          type: number
        uuid:
          description: Unique connector identifier
          type: string
      required:
        - id
        - name
        - charged
        - beta
        - uuid
        - restricted
      type: object
    ConnectorCategory:
      example:
        id: 0
        name: false
      properties:
        id:
          description: ID of the bank category
          type: integer
        name:
          default: false
          description: Name of the category
          type: string
      required:
        - id
        - name
      type: object
    ConnectorLogo:
      example:
        id: 0
        id_connector: 0
        id_file: 0
        type: ""
      properties:
        id:
          type: integer
        id_connector:
          description: ID of the connector
          type: integer
        id_file:
          description: Id of the Bank/Provider Logo
          type: integer
        type:
          description: Logo's type
          type: string
      required:
        - id
        - id_connector
        - id_file
      type: object
    ConnectorSource:
      example:
        auth_mechanism: ""
        disabled: 2021-08-23 10:35:44.205371
        disabled_capabilities: ""
        fallback: ""
        id: 0
        id_connector: 0
        id_weboob: ""
        name: ""
        priority: 0
      properties:
        auth_mechanism:
          description: Authentication mechanism to use
          type: string
        disabled:
          description: This source is not used to synchronize the connection
          format: date-time
          type: string
        disabled_capabilities:
          description: Comma separated list of capabilities disabled on this connector source
          type: string
        fallback:
          description: Name of the source this fallback is for
          type: string
        id:
          description: ID of the connector source
          type: integer
        id_connector:
          description: ID of the connector
          type: integer
        id_weboob:
          type: string
        name:
          description: Name of the source
          type: string
        priority:
          description: The source priority order for the synchronization
          type: integer
        stability:
          description: last known stability
          type: string
      required:
        - id
        - id_connector
        - name
        - id_weboob
      type: object
    ConnectorSourceField:
      example:
        id_connector_source: 0
        label: ""
        name: ""
        regex: ""
        required: true
        secret: true
        type: text
      properties:
        id_connector_source:
          description: ID of the related connector source
          type: integer
        label:
          description: Label to display to user
          type: string
        name:
          description: Name of the config
          type: string
        regex:
          description: If set, the value must match this regexp
          type: string
        required:
          default: true
          description: If true, config has to be set to use this source
          type: boolean
        secret:
          default: true
          description: If true, value must be hidden on fronts
          type: boolean
        type:
          default: text
          description: Type of config
          type: string
      required:
        - id_connector_source
        - name
        - label
      type: object
    Currency:
      example:
        crypto: false
        datetime: 2021-08-23 10:35:44.274832
        id: ""
        marketcap: 0
        precision: 2
        prefix: false
        symbol: ""
      properties:
        crypto:
          default: false
          description: It is a crypto currency or not
          type: boolean
        datetime:
          description: Time and date of Market Cap (for cryptos)
          format: date-time
          type: string
        id:
          description: ISO 4217 code used as ID
          type: string
        marketcap:
          description: Market Capitalization in EUR
          format: float
          type: number
        precision:
          default: 2
          description: Numbers of significant digits
          type: integer
        prefix:
          default: false
          description: Amount is prefixed or not by the currency
          type: boolean
        symbol:
          description: Symbol representing the currency
          type: string
      required:
        - id
        - symbol
        - prefix
      type: object
    Device:
      example:
        debug: false
        id: 0
        id_token: 0
        last_update: <function datetime.now at 0x7f5740d2bd90>
        notification_token: ""
        type: ""
        version: ""
      properties:
        debug:
          default: false
          type: boolean
        id:
          type: integer
        id_token:
          type: integer
        last_update:
          default: <function datetime.now at 0x7f5740d2bd90>
          format: date-time
          type: string
        notification_token:
          type: string
        type:
          type: string
        version:
          type: string
      required:
        - id
        - id_token
        - type
        - notification_token
        - last_update
        - version
        - debug
      type: object
    Document:
      example:
        currency: ""
        date: 2021-08-23 10:35:44.287914
        duedate: 2021-08-23
        has_file_on_website: true
        id: 0
        id_category: 0
        id_file: 0
        id_subscription: 0
        id_thumbnail: 0
        id_type: 0
        id_user: 0
        income: true
        issuer: ""
        last_update: 2021-08-23 10:35:44.289188
        name: ""
        number: ""
        readonly: true
        timestamp: <function datetime.now at 0x7f5740bab6a8>
        total_amount: 0
        untaxed_amount: 0
        vat: 0
        webid: ""
      properties:
        currency:
          description: Document currency
          type: object
        date:
          format: date-time
          type: string
        duedate:
          format: date
          type: string
        has_file_on_website:
          default: true
          description: Boolean to set if file is available on website
          type: boolean
        id:
          type: integer
        id_category:
          type: integer
        id_file:
          type: integer
        id_subscription:
          type: integer
        id_thumbnail:
          type: integer
        id_type:
          type: integer
        id_user:
          type: integer
        income:
          default: true
          type: boolean
        issuer:
          type: string
        last_update:
          description: Last successful update of the document
          format: date-time
          type: string
        name:
          type: string
        number:
          type: string
        readonly:
          default: true
          type: boolean
        timestamp:
          default: <function datetime.now at 0x7f5740bab6a8>
          format: date-time
          type: string
        total_amount:
          format: float
          type: number
        untaxed_amount:
          format: float
          type: number
        vat:
          format: float
          type: number
        webid:
          type: string
      required:
        - id
        - id_user
        - timestamp
        - readonly
        - has_file_on_website
      type: object
    DocumentType:
      example:
        attacheable: true
        id: 0
        name: ""
      properties:
        attacheable:
          default: true
          type: boolean
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
        - attacheable
      type: object
    Field:
      example:
        auth_mechanisms: ""
        connector_sources: ""
        ephemeral: false
        id: 0
        id_connector: 0
        label: ""
        name: ""
        regex: ""
        required: true
        type: text
        value: ""
      properties:
        auth_mechanisms:
          description: Authentication mechanisms this field is used for
          type: string
        connector_sources:
          description: Sources this field is used for
          type: string
        ephemeral:
          default: false
          description: This field will not be saved in database
          type: boolean
        id:
          description: ID of the field
          type: integer
        id_connector:
          description: ID of the related connector
          type: integer
        label:
          description: Label to display to user
          type: string
        name:
          description: Name of the field
          type: string
        regex:
          description: If set, the value must match this regexp
          type: string
        required:
          default: true
          description: If true, field has to be set to synchronize the connection
          type: boolean
        type:
          default: text
          description: Type of field (text, password, list, hidden)
          type: string
        value:
          description: Default value of the field
          type: string
      required:
        - id_connector
        - id
        - name
        - label
        - required
      type: object
    File:
      example:
        content_type: ""
        file_size: 0
        filename: ""
        id: 0
      properties:
        content_type:
          type: string
        file_size:
          type: integer
        filename:
          type: string
        id:
          type: integer
      required:
        - id
        - content_type
        - filename
        - file_size
      type: object
    Group:
      example:
        color: ""
        conf: ""
        email: ""
        id: 0
        id_logo: 0
        id_parent_group: 0
        name: ""
        url: ""
      properties:
        color:
          type: string
        conf:
          type: string
        email:
          type: string
        id:
          type: integer
        id_logo:
          type: integer
        id_parent_group:
          type: integer
        name:
          type: string
        url:
          type: string
      required:
        - id
      type: object
    HashTable:
      example:
        display: true
        income: false
        nature: ""
        wording: ""
      properties:
        display:
          default: true
          type: boolean
        income:
          type: boolean
        nature:
          type: string
        wording:
          type: string
      required:
        - wording
        - income
        - display
        - nature
      type: object
    IdentityInfo:
      example:
        external_ref: ""
        id: 0
        id_user: 0
        identification: ""
        issuer: ""
        kind: ""
        scheme_name: ""
      properties:
        external_ref:
          description: Label associated with the beneficiary account
          type: string
        id:
          type: integer
        id_user:
          description: ID of a related user
          type: integer
        identification:
          description: Identification number
          type: string
        issuer:
          description: issuer of the identification
          type: string
        kind:
          description: Kind of the entity
          type: string
        scheme_name:
          description: Identification number type
          type: string
      required:
        - id
      type: object
    Investment:
      example:
        code: ""
        code_type: ""
        deleted: 2021-08-23 10:35:44.377160
        description: ""
        diff: 0
        diff_percent: 0
        id: 0
        id_account: 0
        id_security: 0
        label: ""
        last_update: 2021-08-23 10:35:44.377092
        original_currency: ""
        original_diff: 0
        original_unitprice: 0
        original_unitvalue: 0
        original_valuation: 0
        portfolio_share: 0
        prev_diff: 0
        prev_vdate: 2021-08-23
        quantity: 0
        source: ""
        unitprice: 0
        unitvalue: 0
        valuation: 0
        vdate: 2021-08-23
      properties:
        code:
          description: Investment code
          type: string
        code_type:
          description: Code type (ISIN of AMF)
          type: string
        deleted:
          description: If set, this investment has been removed from the website
          format: date-time
          type: string
        description:
          description: Description of the investment
          type: string
        diff:
          default: 0
          description: Capital gain
          format: float
          type: number
        diff_percent:
          description: Capital gain in percent (between 0 and 1)
          format: float
          type: number
        id:
          description: ID of the investment
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_security:
          description: ID of the related security
          type: integer
        label:
          description: Label of the investment
          type: string
        last_update:
          description: Last update of the investment
          format: date-time
          type: string
        original_currency:
          description: Original currency
          type: object
        original_diff:
          description: Capital gain in the original currency
          format: float
          type: number
        original_unitprice:
          description: Current unit value in the original currency
          format: float
          type: number
        original_unitvalue:
          description: Average buy price in the original currency
          format: float
          type: number
        original_valuation:
          description: Valuation in original currency
          format: float
          type: number
        portfolio_share:
          description: Percent of the portfolio
          format: float
          type: number
        prev_diff:
          description: Capital gain from previous value
          format: float
          type: number
        prev_vdate:
          description: Value date of the previous value (prev_diff)
          format: date
          type: string
        quantity:
          default: 0
          description: Quantity
          format: float
          type: number
        source:
          description: Source of the ISIN code (website, notFound)
          type: string
        unitprice:
          default: 0
          description: Average buy price
          format: float
          type: number
        unitvalue:
          default: 0
          description: Current unit value
          format: float
          type: number
        valuation:
          default: 0
          description: Current valuation
          format: float
          type: number
        vdate:
          description: Value date
          format: date
          type: string
      required:
        - id
        - id_account
        - label
        - code
      type: object
    InvestmentValue:
      example:
        id: 0
        id_investment: 0
        original_currency: ""
        original_unitvalue: 0
        unitvalue: 0
        vdate: 2021-08-23
      properties:
        id:
          description: ID of the value
          type: integer
        id_investment:
          description: ID of the related investment
          type: integer
        original_currency:
          description: Original currency
          type: object
        original_unitvalue:
          description: Value on this date, in the original currency
          format: float
          type: number
        unitvalue:
          description: Value on this date
          format: float
          type: number
        vdate:
          description: Date of this value
          format: date
          type: string
      required:
        - id
        - id_investment
        - vdate
        - unitvalue
      type: object
    Keyword:
      example:
        id: 0
        id_category: 0
        income: false
        keyword: ""
        priority: 0
      properties:
        id:
          type: integer
        id_category:
          type: integer
        income:
          type: boolean
        keyword:
          type: string
        priority:
          type: integer
      required:
        - id
        - keyword
        - id_category
        - priority
        - income
      type: object
    LockedUser:
      example:
        id_user: 0
        timestamp: <function datetime.now at 0x7f5740d00c80>
        worker: ""
      properties:
        id_user:
          type: integer
        timestamp:
          default: <function datetime.now at 0x7f5740d00c80>
          format: date-time
          type: string
        worker:
          type: string
      required:
        - id_user
        - timestamp
      type: object
    MarketOrder:
      example:
        amount: 0
        code: ""
        created: 2021-08-23 10:35:44.372113
        date: 2021-08-23
        deleted: 2021-08-23 10:35:44.372183
        execution_date: 2021-08-23
        id: 0
        id_account: 0
        label: ""
        last_update: 2021-08-23 10:35:44.372022
        ordervalue: 0
        payment_method: ""
        quantity: 0
        state: ""
        stock_market: ""
        unitprice: 0
        unitvalue: 0
        validity_date: 2021-08-23
        webid: ""
      properties:
        amount:
          default: 0
          description: Total amount of the market order
          format: float
          type: number
        code:
          description: ISIN code of the investment associated with the market order
          type: string
        created:
          description: Insertion date of the market order in bi_market_order
          format: date-time
          type: string
        date:
          description: Creation date of the market order
          format: date
          type: string
        deleted:
          description: If set, this market order has been removed from the website
          format: date-time
          type: string
        execution_date:
          description: Execution date of the market order
          format: date
          type: string
        id:
          description: ID of the market order
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        label:
          description: Label of the investment associated with the market order
          type: string
        last_update:
          description: Last update of the market order
          format: date-time
          type: string
        ordervalue:
          default: 0
          description: Limit value or trigger value, only relevant if the order type is LIMIT or TRIGGER
          format: float
          type: number
        payment_method:
          description: Payment method for the market order (usually 'SRD' or 'Comptant')
          type: string
        quantity:
          default: 0
          description: Quantity of stock shares in the market order
          format: float
          type: number
        state:
          description: Current state of the market order
          type: string
        stock_market:
          description: Stock market on which the order was executed
          type: string
        unitprice:
          default: 0
          description: Value of the stock at the moment of the market order
          format: float
          type: number
        unitvalue:
          default: 0
          description: Current value of the stock associated with the market order
          format: float
          type: number
        validity_date:
          description: Validity date of the market order
          format: date
          type: string
        webid:
          description: Weboob ID of the market order
          type: string
      required:
        - id
        - id_account
        - label
        - created
      type: object
    OidcWhitelist:
      example:
        id: 0
        redirect_uri: ""
      properties:
        id:
          type: integer
        redirect_uri:
          description: authorized redirect uri
          type: string
      required:
        - id
        - redirect_uri
      type: object
    Payment:
      example:
        client_redirect_uri: ""
        error_code: ""
        error_description: ""
        id: 0
        register_date: 2021-08-23 10:35:44.188272
        state: ""
        validate_uri: ""
      properties:
        client_redirect_uri:
          description: URL to redirecting to client
          type: string
        error_code:
          description: In case of error, the error code
          type: string
        error_description:
          description: Error message
          type: string
        id:
          type: integer
        register_date:
          description: Date of payment registration
          format: date-time
          type: string
        state:
          description: State of the payment
          type: string
        validate_uri:
          description: URL to validate payment
          type: string
      required:
        - id
      type: object
    PaymentAccount:
      example:
        disabled_date: 2021-08-23 10:35:44.173688
        id: 0
        id_account: 0
        identification: ""
        issuer: ""
        label: ""
        scheme_name: ""
      properties:
        disabled_date:
          description: Date at which the entry was disabled
          format: date-time
          type: string
        id:
          type: integer
        id_account:
          description: ID of a related account
          type: integer
        identification:
          description: Account identification number
          type: string
        issuer:
          description: Issuer or bic associated with the account
          type: string
        label:
          description: Label associated with the beneficiary account
          type: string
        scheme_name:
          description: Account number type
          type: string
      required:
        - id
      type: object
    PaymentLog:
      example:
        error_code: ""
        error_description: ""
        id: 0
        id_file: 0
        id_payment: 0
        state: ""
        timestamp: <function datetime.now at 0x7f5740047f28>
      properties:
        error_code:
          description: In case of error, the error code
          type: string
        error_description:
          description: Error message
          type: string
        id:
          type: integer
        id_file:
          description: ID of the related payment file
          type: integer
        id_payment:
          description: ID of the related payment
          type: integer
        state:
          description: State of the payment
          type: string
        timestamp:
          default: <function datetime.now at 0x7f5740047f28>
          description: Timestamp of the log
          format: date-time
          type: string
      required:
        - id
        - timestamp
      type: object
    Pocket:
      example:
        availability_date: 2021-08-23
        condition: inconnu
        deleted: 2021-08-23 10:35:44.318086
        id: 0
        id_account: 0
        id_investment: 0
        label: ""
        last_update: 2021-08-23 10:35:44.318015
        quantity: 0
        value: 0
      properties:
        availability_date:
          description: Availability date of the pocket
          format: date
          type: string
        condition:
          default: inconnu
          description: Withdrawal condition of the pocket
          type: string
        deleted:
          description: If set, this pocket has been removed from the website
          format: date-time
          type: string
        id:
          description: ID of the pocket
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_investment:
          description: ID of the related investment
          type: integer
        label:
          description: Label of the pocket
          type: string
        last_update:
          description: Last update of the pocket
          format: date-time
          type: string
        quantity:
          default: 0
          description: Quantity of stocks
          format: float
          type: number
        value:
          description: Value of the pocket
          format: float
          type: number
      required:
        - id
        - id_account
        - id_investment
        - value
        - condition
      type: object
    Profile:
      example:
        admin: false
        conf: ""
        id: 0
        id_user: 0
        lang: ""
        role: admin
        statut: 0
      properties:
        admin:
          default: false
          type: boolean
        conf:
          type: string
        email:
          type: string
        id:
          type: integer
        id_user:
          type: integer
        lang:
          type: string
        role:
          default: admin
          enum:
            - admin
            - ser
          type: string
        statut:
          default: 0
          type: integer
      required:
        - id
        - id_user
        - role
        - email
        - statut
        - admin
      type: object
    Psd2Registration:
      example:
        id: 0
        id_connector_source: 0
        status: ""
      properties:
        id:
          type: integer
        id_connector_source:
          description: ID of the connector source
          type: integer
        status:
          description: "Current status: created/updated/error"
          type: string
      required:
        - id
        - status
      type: object
    Psd2RegistrationLog:
      description: |-
        Keep traces of PSD2 registration calls.
            The table is used by the plugin `psd2registration` to know:
             - whether it must call `update` or `create` routes on the PSD2 APIs when the config is updated
             - the list of PSD2 API to create (needed when a new connector is added)
             - the list of broken connectors
      example:
        created_at: 2021-08-23 10:35:44.620718
        error_message: ""
        id: 0
        id_psd2registration: 0
        type: ""
      properties:
        created_at:
          description: When this row was created
          format: date-time
          type: string
        error_message:
          description: If fail, error message received from connector
          type: string
        id:
          type: integer
        id_psd2registration:
          description: ID of the psd2 registration
          type: integer
        type:
          description: "Action done: create, update, delete"
          type: string
      required:
        - id
        - created_at
        - type
      type: object
    Recipient:
      example:
        add_verified: false
        bank_name: ""
        category: ""
        currency: ""
        deleted: 2021-08-23 10:35:44.378670
        enabled_at: 2021-08-23 10:35:44.378801
        error: ""
        expire: 2021-08-23 10:35:44.378737
        iban: ""
        id: 0
        id_account: 0
        id_target_account: 0
        label: ""
        last_update: 2021-08-23 10:35:44.378535
        state: ""
        time_scraped: 2021-08-23 10:35:44.378602
        webid: ""
      properties:
        add_verified:
          description: Was the recipient adding authorized
          type: boolean
        bank_name:
          description: Bank of the recipient
          type: string
        category:
          description: Category in which the recipient is
          type: string
        currency:
          description: Currency of the object
          type: object
        deleted:
          description: The recipient isn't found anymore on the bank
          format: date-time
          type: string
        enabled_at:
          description: It will be possible to do transfers to this recipient at this date
          format: date-time
          type: string
        error:
          description: Error message
          type: string
        expire:
          format: date-time
          type: string
        fields:
          description: Fields for recipient with additionalInformationNeeded state
          type: string
        iban:
          description: IBAN of the recipient
          type: string
        id:
          description: ID of the recipient
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_target_account:
          description: ID of the target account, in case of internal recipient
          type: integer
        label:
          description: Label of the recipient
          type: string
        last_update:
          description: Last time we have fetched this recipient
          format: date-time
          type: string
        state:
          description: State of recipient
          type: string
        time_scraped:
          description: First time we've seen this recipient
          format: date-time
          type: string
        webid:
          description: Webid of the recipient
          type: string
      required:
        - id
        - id_account
        - label
        - category
        - last_update
      type: object
    RecipientLog:
      example:
        error: ""
        id: 0
        id_file: 0
        id_recipient: 0
        request_data: ""
        step: ""
        timestamp: <function datetime.now at 0x7f5740ef61e0>
      properties:
        error:
          description: Error message during recipient addition, if any
          type: string
        fields:
          description: Fields for recipient in additionalInformationNeeded state with background option
          type: string
        id:
          description: ID of the transfer log entry
          type: integer
        id_file:
          description: ID of the related file
          type: integer
        id_recipient:
          description: ID of the related recipient
          type: integer
        request_data:
          description: Data stored related to user who has requested the recipient addition
          type: string
        step:
          description: Step of recipient addition, (add_recipient, asking_field, recipient addition validated, creation, storing_files)
          type: string
        timestamp:
          default: <function datetime.now at 0x7f5740ef61e0>
          description: Timestamp of the log
          format: date-time
          type: string
      required:
        - id
        - timestamp
      type: object
    Security:
      example:
        code: ""
        id: 0
        id_type: 0
        last_update: 2021-08-23 10:35:44.162155
        name: ""
      properties:
        code:
          description: ISIN code of the security
          type: string
        id:
          description: ID of the security
          type: integer
        id_type:
          description: ID of the security type
          type: integer
        last_update:
          description: Last update of the security
          format: date-time
          type: string
        name:
          description: Name of the security
          type: string
      required:
        - id
        - name
      type: object
    Subscription:
      example:
        deleted: 2021-08-23 10:35:44.400732
        disabled: 2021-08-23 10:35:44.400809
        error: ""
        id: 0
        id_connection: 0
        id_source: 0
        id_user: 0
        label: ""
        last_update: 2021-08-23 10:35:44.400663
        number: ""
        renewdate: 2021-08-23
        subscriber: ""
        validity: 2021-08-23
      properties:
        deleted:
          description: This subscription is not found on the website anymore
          format: date-time
          type: string
        disabled:
          description: This subscription has been deleted by user and will not be synchronized anymore
          format: date-time
          type: string
        error:
          description: If the last update has failed, the error code
          type: string
        id:
          description: ID of subscription
          type: integer
        id_connection:
          description: ID of related connection
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_user:
          description: ID of related user
          type: integer
        label:
          description: Label of the subscription
          type: string
        last_update:
          description: Last successful update of the subscription
          format: date-time
          type: string
        number:
          description: Subscription's number
          type: string
        renewdate:
          description: Next renew date, if any
          format: date
          type: string
        subscriber:
          description: Name of the subscriber
          type: string
        validity:
          description: The subscription is valid until this date, if any
          format: date
          type: string
      required:
        - id
        - number
        - label
      type: object
    SubscriptionLog:
      example:
        error: ""
        error_message: ""
        id: 0
        id_connection_log: 0
        id_source: 0
        id_subscription: 0
        nb_docs: 0
        timestamp: <function datetime.now at 0x7f5740bab400>
      properties:
        error:
          description: If fail, contains the error code
          type: string
        error_message:
          description: If fail, error message received from provider
          type: string
        id:
          description: ID of the log
          type: integer
        id_connection_log:
          description: ID of the related connection log
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_subscription:
          description: ID of the related subscription
          type: integer
        nb_docs:
          description: Number of docs on the subscription
          type: integer
        timestamp:
          default: <function datetime.now at 0x7f5740bab400>
          description: Timestamp of log
          format: date-time
          type: string
      required:
        - id
        - id_subscription
        - timestamp
      type: object
    TermsOfService:
      example:
        created: 2021-08-23 10:35:44.452486
        deleted: 2021-08-23 10:35:44.452561
        id: 0
        version: ""
      properties:
        created:
          format: date-time
          type: string
        deleted:
          format: date-time
          type: string
        id:
          type: integer
        version:
          type: string
      required:
        - id
        - version
        - created
      type: object
    Transaction:
      example:
        active: true
        application_date: 2021-08-23
        bdate: 2021-08-23
        bdatetime: 2021-08-23 10:35:44.313780
        card: ""
        coming: false
        comment: ""
        commission: 0
        commission_currency: ""
        counterparty: ""
        country: ""
        date: 2021-08-23
        date_scraped: 2021-08-23 10:35:44.312472
        datetime: 2021-08-23 10:35:44.311470
        deleted: 2021-08-23 10:35:44.314252
        gross_value: 0
        id: 0
        id_account: 0
        id_category: 0
        id_cluster: 0
        last_update: 2021-08-23 10:35:44.314171
        nature: inconnu
        original_currency: ""
        original_gross_value: 0
        original_value: 0
        rdate: 2021-08-23
        rdatetime: 2021-08-23 10:35:44.312932
        state: new
        value: 0
        vdate: 2021-08-23
        vdatetime: 2021-08-23 10:35:44.313366
        webid: ""
        wording: ""
      properties:
        active:
          default: true
          description: If false, PFM services will ignore this transaction
          type: boolean
        application_date:
          description: Date considered by PFM services. It is used to change the month of a transaction, for example.
          format: date
          type: string
        bdate:
          description: Date used by the bank for the transaction
          format: date
          type: string
        bdatetime:
          description: Datetime used by the bank
          format: date-time
          type: string
        card:
          description: Card number associated to the transaction
          type: string
        coming:
          description: If true, this transaction hasn't been yet debited
          type: boolean
        comment:
          description: User comment
          type: string
        commission:
          description: Commission taken on the transaction
          format: float
          type: number
        commission_currency:
          description: Commission currency
          type: object
        counterparty:
          description: Counterparty
          type: string
        country:
          description: Original country
          type: string
        date:
          description: Debit date
          format: date
          type: string
        date_scraped:
          description: Date when the transaction has been seen
          format: date-time
          type: string
        datetime:
          description: Datetime of the debit of the transaction
          format: date-time
          type: string
        deleted:
          description: If set, this transaction has been removed from the bank
          format: date-time
          type: string
        gross_value:
          description: Gross value of the transaction
          format: float
          type: number
        id:
          description: ID of the transaction
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_category:
          description: ID of the related category
          type: integer
        id_cluster:
          description: If the transaction is part of a cluster
          type: integer
        last_update:
          description: Last update of the transaction
          format: date-time
          type: string
        nature:
          default: inconnu
          description: Type of transaction
          type: string
        original_currency:
          description: Original currency
          type: object
        original_gross_value:
          description: Gross value in the original currency
          format: float
          type: number
        original_value:
          description: Value in the original currency
          format: float
          type: number
        original_wording:
          description: Full label of the transaction
          type: string
        rdate:
          description: Realization of the transaction
          format: date
          type: string
        rdatetime:
          description: Datetime of the realization of the transaction
          format: date-time
          type: string
        simplified_wording:
          description: Simplified label of the transaction
          type: string
        state:
          default: new
          description: Internal state of the transaction
          type: string
        stemmed_wording:
          description: Do not use it
          type: string
        value:
          description: Value of the transaction
          format: float
          type: number
        vdate:
          description: Value date of the transaction
          format: date
          type: string
        vdatetime:
          description: Datetime of the Value of the transaction
          format: date-time
          type: string
        webid:
          description: Webid of the transaction
          type: string
        wording:
          description: Label set by the user
          type: string
      required:
        - id
        - id_account
        - date
        - nature
        - original_wording
        - simplified_wording
        - stemmed_wording
        - state
        - date_scraped
        - rdate
        - coming
        - active
      type: object
    TransactionInformation:
      example:
        id: 0
        id_transaction: 0
        key: ""
        value: ""
      properties:
        id:
          description: ID of this transaction information
          type: integer
        id_transaction:
          description: ID of the related transaction
          type: integer
        key:
          description: Key of the transaction information
          type: string
        value:
          description: Value of the transaction information
          type: string
      required:
        - id
        - id_transaction
        - key
      type: object
    TransactionsCluster:
      example:
        created_by: ""
        enabled: true
        id: 0
        id_account: 0
        id_category: 0
        mean_amount: 0
        median_increment: 0
        next_date: 2021-08-23
        wording: ""
      properties:
        created_by:
          type: string
        enabled:
          default: true
          type: boolean
        id:
          type: integer
        id_account:
          type: integer
        id_category:
          type: integer
        mean_amount:
          format: float
          type: number
        median_increment:
          type: integer
        next_date:
          format: date
          type: string
        wording:
          type: string
      required:
        - id
        - id_account
        - mean_amount
        - enabled
        - wording
      type: object
    Transfer:
      description: This is a representation of a transfer.
      example:
        account_balance: 0
        account_iban: ""
        amount: 0
        beneficiary_label: ""
        beneficiary_number: ""
        beneficiary_type: recipient
        currency: ""
        error: ""
        exec_date: 2021-08-23
        fees: 0
        id: 0
        id_account: 0
        id_recipient: 0
        id_transaction: 0
        id_user: 0
        label: ""
        recipient_iban: ""
        register_date: 2021-08-23 10:35:44.320560
        state: ""
        validate_mechanism: ""
        webid: ""
      properties:
        account_balance:
          description: Balance of the account just before the transfer
          format: float
          type: number
        account_iban:
          description: IBAN of the debited account
          type: string
        amount:
          description: Amount of the transfer
          format: float
          type: number
        beneficiary_label:
          description: Label of the beneficiary (needed for transfer to other beneficiary type than 'recipient')
          type: string
        beneficiary_number:
          description: "Beneficiary bank identifier value like recipient webid, iban: EX6713281847025300290000062 or phone_number: 06XXXXXX"
          type: string
        beneficiary_type:
          default: recipient
          description: "Type of beneficiary number, for example: 'recipient' (in bank recipient list), 'iban' or 'phone_number'"
          type: string
        currency:
          description: Currency of the object
          type: object
        error:
          description: Error message during transfer, if any
          type: string
        exec_date:
          description: Date when the transfer will be operated by the bank
          format: date
          type: string
        fees:
          description: Fees taken by the bank
          format: float
          type: number
        id:
          description: ID of transfer
          type: integer
        id_account:
          description: ID of the debited account
          type: integer
        id_recipient:
          description: ID of the recipient
          type: integer
        id_transaction:
          description: If found, ID of the related transaction
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        label:
          description: Label of the transfer
          type: string
        recipient_iban:
          description: IBAN of the recipient in bank recipient list
          type: string
        register_date:
          description: Date when the transfer has been registered
          format: date-time
          type: string
        state:
          description: State of the transfer (created, scheduled, validating, pending, coming, done, canceled, transactionNotFound, deleted, error, bug)
          type: string
        validate_mechanism:
          description: Authentication method used to validate transfer (credentials or webauth)
          type: string
        webid:
          description: WebID of the transfer
          type: string
      required:
        - id
        - exec_date
        - register_date
        - amount
        - state
        - beneficiary_type
      type: object
    TransferLog:
      example:
        error: ""
        id: 0
        id_file: 0
        id_transfer: 0
        request_data: ""
        state: ""
        timestamp: <function datetime.now at 0x7f5740ef6510>
      properties:
        error:
          description: Error message during transfer, if any
          type: string
        fields:
          description: Fields for transfer in additionalInformationNeeded state with background option
          type: string
        id:
          description: ID of the transfer log entry
          type: integer
        id_file:
          description: ID of the related file
          type: integer
        id_transfer:
          description: ID of the related transfer
          type: integer
        request_data:
          description: Data stored related to user who has requested the transfer
          type: string
        state:
          description: State of the transfer (created, scheduled, validating, pending, done, canceled, error, bug)
          type: string
        timestamp:
          default: <function datetime.now at 0x7f5740ef6510>
          description: Timestamp of the log
          format: date-time
          type: string
      required:
        - id
        - timestamp
      type: object
    User:
      example:
        id: 0
        platform: ""
        signin: <function datetime.now at 0x7f5740c71620>
      properties:
        id:
          type: integer
        platform:
          enum:
            - web
            - iPad
            - iPhone
            - Android
            - CAstore
            - requestAccess
            - sharedAccess
            - singleAccess
            - transfer
            - refresh_token
          type: string
        signin:
          default: <function datetime.now at 0x7f5740c71620>
          format: date-time
          type: string
      required:
        - id
        - signin
        - platform
      type: object
    UserAlert:
      description: |-
        /!\ Careful we use default value from database if present

            For more information see AlertsPlugin.init
      example:
        apply: ""
        balance_max: 10000
        balance_min1: 500
        balance_min2: 0
        date_range: 0
        enabled: true
        expense_max: 500
        id: 0
        income_max: 500
        resume_enabled: true
        resume_frequency: 7
        transaction_types: ""
        type: transactions
        value_type: flat
      properties:
        apply:
          type: string
        balance_max:
          default: 10000
          format: float
          type: number
        balance_min1:
          default: 500
          format: float
          type: number
        balance_min2:
          default: 0
          format: float
          type: number
        date_range:
          type: integer
        enabled:
          default: true
          type: boolean
        expense_max:
          default: 500
          format: float
          type: number
        id:
          type: integer
        income_max:
          default: 500
          format: float
          type: number
        resume_enabled:
          default: true
          type: boolean
        resume_frequency:
          default: 7
          type: integer
        transaction_types:
          type: string
        type:
          default: transactions
          type: string
        value_type:
          default: flat
          type: string
      required:
        - id
        - value_type
        - type
        - resume_frequency
      type: object
    Webhook:
      example:
        created: 2021-08-23 10:35:44.609103
        deleted: 2021-08-23 10:35:44.609425
        id: 0
        id_auth: 0
        id_event: 0
        id_service: 0
        id_user: 0
        updated: 2021-08-23 10:35:44.609274
        url: ""
      properties:
        add_to_data:
          description: json value to describe data to add
          type: string
        created:
          description: Date of the webhook creation
          format: date-time
          type: string
        deleted:
          description: Date of the webhook deletion
          format: date-time
          type: string
        flush_fail:
          description: json value to store last related webhook data flushing fail
          type: string
        id:
          description: ID of the webhook
          type: integer
        id_auth:
          description: ID of the authentication process
          type: integer
        id_event:
          description: ID of the webhook event
          type: integer
        id_service:
          description: ID of the service
          type: integer
        id_user:
          description: ID of the emitter user
          type: integer
        updated:
          description: Date of the webhook last update
          format: date-time
          type: string
        url:
          description: URL of the webhook
          type: string
      required:
        - id
        - created
        - updated
      type: object
    WebhookData:
      example:
        created: 2021-08-23 10:35:44.613621
        id: 0
        id_resource: 0
        id_service: 0
        id_user: 0
        id_webhook: 0
        mimetype: ""
        success: 2021-08-23 10:35:44.613701
      properties:
        created:
          description: Timestamp when the hook data was generated
          format: date-time
          type: string
        data:
          description: Data emitted
          type: string
        id:
          description: ID of the webhook data
          type: integer
        id_resource:
          description: a changing ID used to filter webhookdata depending on the event triggered
          type: integer
        id_service:
          description: ID of the recipient service
          type: integer
        id_user:
          description: ID of the emitter user
          type: integer
        id_webhook:
          description: ID of the webhook
          type: integer
        mimetype:
          description: Mimetype of the data
          type: string
        success:
          description: Timestamp when the hook has been successfully called
          format: date-time
          type: string
      required:
        - id
        - created
      type: object
    WebhookLog:
      example:
        id: 0
        id_service: 0
        id_user: 0
        id_webhook_data: 0
        next_try: 2021-08-23 10:35:44.614914
        response_code: 0
        response_date: 2021-08-23 10:35:44.614448
        timestamp: 2021-08-23 10:35:44.614374
      properties:
        id:
          description: ID of the log
          type: integer
        id_service:
          description: ID of the service
          type: integer
        id_user:
          description: ID of the user
          type: integer
        id_webhook_data:
          description: ID of the webhook data
          type: integer
        next_try:
          description: If the log is an error, do not retry to push before this timestamp
          format: date-time
          type: string
        response_code:
          description: Return code of the reply to the hook
          type: integer
        response_date:
          description: Timestamp of the reply to the hook
          format: date-time
          type: string
        timestamp:
          description: Timestamp when the hook was sent
          format: date-time
          type: string
      required:
        - id
        - timestamp
      type: object
x-deactivated_services: []
x-query-services:
  - administration
  - authentication
  - banks
  - connections
  - documents
  - oidc
  - payments
  - pfm
  - providers
  - recipients
  - service
  - terms
  - timeline
  - transfer
  - transfers
  - usersmanagement
  - wealth
