swagger: "2.0"
schemes:
  - https
  - http
host: api.fungenerators.com
info:
  contact:
    name: Fun Generators
    url: http://fungenerators.com/
  description: |
    Generate random fake identities (name, address, email, phone , credit card info etc). [Click here to subscribe](http://fungenerators.com/api/fakeidentity/)
  termsOfService: https://fungenerators.com/terms
  title: Fake identity generation API
  version: "1.5"
  x-apisguru-categories:
    - text
  x-origin:
    - format: swagger
      url: https://fungenerators.com/yaml/fake-identity.yaml
      version: "2.0"
  x-providerName: fungenerators.com
  x-serviceName: fake-identity
consumes:
  - application/json
produces:
  - application/json
  - application/xml
  - application/js
securityDefinitions:
  X-Fungenerators-Api-Secret:
    in: header
    name: X-Fungenerators-Api-Secret
    type: apiKey
tags:
  - description: Fake Identity Generation API
    externalDocs:
      description: Find out more
      url: http://fungenerators.com/api/fakeidentity/
    name: Fake Identity
paths:
  /identity/company:
    get:
      description: Generate full company identity
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "name": "Walker-Crist",
                    "phone": "1-800-307-1546",
                    "domain": "walker-crist.xyz",
                    "email": "request@walker-crist.xyz",
                    "address": {
                      "address": "17487 Steuber Locks Suite 996",
                      "city": "South Einarchester",
                      "state": "New Mexico",
                      "country": "USA",
                      "postalcode": "46493"
                    }
                  },
                  "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/company/address:
    get:
      description: Generate postal addresses
      parameters:
        - description: No of addresses to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "addresses": [
                    {
                      "address": "880 Lessie Cove Apt. 110",
                      "city": "West Marge",
                      "state": "Massachusetts",
                      "country": "USA",
                      "postalcode": "09983"
                    },
                    {
                      "address": "48726 Curtis Station",
                      "city": "Baileystad",
                      "state": "Iowa",
                      "country": "USA",
                      "postalcode": "64152-3296"
                    },
                    {
                      "address": "49595 Myra Loop Apt. 925",
                      "city": "Coleport",
                      "state": "Oregon",
                      "country": "USA",
                      "postalcode": "02499"
                    },
                    {
                      "address": "60581 Pearl Inlet",
                      "city": "Wuckertmouth",
                      "state": "Connecticut",
                      "country": "USA",
                      "postalcode": "18376"
                    },
                    {
                      "address": "38440 Cassandre Circles",
                      "city": "Port Ezekiel",
                      "state": "Alabama",
                      "country": "USA",
                      "postalcode": "05904-0794"
                    }
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/company/name:
    get:
      description: Generate company name(s)
      parameters:
        - description: No of names to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": "5"
                },
                "contents": {
                  "names": [
                    "Johnston-Weissnat Ltd",
                    "Wisoky Group Inc",
                    "Pfannerstill Ltd and Sons",
                    "Rempel Ltd PLC",
                    "Wolf-Streich and Sons"
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }            
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/company/phonenumber:
    get:
      description: Generate random company phone number(s)
      parameters:
        - description: No of phone numbers to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "phonenumbers": [
                    "1-800-976-4219",
                    "(808) 423-7981",
                    "(888) 963-6939 x028",
                    "800-793-6143 x2948",
                    "1-808-351-9690 x026"
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person:
    get:
      description: Generate full identity name, phone, email, address, credit card etc.
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "name": {
                    "first": "Brittany",
                    "last": "Mohr",
                    "full": "Brittany Mohr"
                  },
                  "phone": "1-542-830-8666 x4187",
                  "email": "mohr1963@hotmail.com",
                  "birthday": "1975/03/13",
                  "address": {
                    "address": "6029 Homenick Ridges Suite 551",
                    "city": "Adelbertshire",
                    "state": "Connecticut",
                    "country": "USA",
                    "postalcode": "06305-2706"
                  },
                  "credit-card": {
                    "type": "MasterCard",
                    "number": "4539572808851695",
                    "expiration": "12/20"
                  }
                },
                "copyright": "https://fungenerators.com/"
              }        
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person/address:
    get:
      description: Generate postal addresses
      parameters:
        - description: No of addresses to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "addresses": [
                    {
                      "address": "880 Lessie Cove Apt. 110",
                      "city": "West Marge",
                      "state": "Massachusetts",
                      "country": "USA",
                      "postalcode": "09983"
                    },
                    {
                      "address": "48726 Curtis Station",
                      "city": "Baileystad",
                      "state": "Iowa",
                      "country": "USA",
                      "postalcode": "64152-3296"
                    },
                    {
                      "address": "49595 Myra Loop Apt. 925",
                      "city": "Coleport",
                      "state": "Oregon",
                      "country": "USA",
                      "postalcode": "02499"
                    },
                    {
                      "address": "60581 Pearl Inlet",
                      "city": "Wuckertmouth",
                      "state": "Connecticut",
                      "country": "USA",
                      "postalcode": "18376"
                    },
                    {
                      "address": "38440 Cassandre Circles",
                      "city": "Port Ezekiel",
                      "state": "Alabama",
                      "country": "USA",
                      "postalcode": "05904-0794"
                    }
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person/creditcard:
    get:
      description: Generate credit card details (number, type, expiration date, name on the card etc).
      parameters:
        - description: No of credit card details to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "creditcards": [
                    {
                      "name": "Una Nikolaus",
                      "type": "Visa",
                      "number": "4556029936375707",
                      "expiration": "02/21"
                    },
                    {
                      "name": "Dessie Runolfsson",
                      "type": "Visa",
                      "number": "6011247607523686",
                      "expiration": "11/19"
                    },
                    {
                      "name": "Dax Kunze",
                      "type": "MasterCard",
                      "number": "2221543215045897",
                      "expiration": "11/20"
                    },
                    {
                      "name": "Natalia Nicolas",
                      "type": "Visa",
                      "number": "345851764439527",
                      "expiration": "03/22"
                    },
                    {
                      "name": "Leda Von",
                      "type": "Visa",
                      "number": "4868179383681744",
                      "expiration": "12/21"
                    }
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }        
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person/email:
    get:
      description: Generate random email ids
      parameters:
        - description: No of email ids to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "emails": [
                    "lehner.alta@gmail.com",
                    "amitchell@gmail.com",
                    "chesley03@gmail.com",
                    "nhowell@hotmail.com",
                    "ottilie.oconner@hotmail.com"
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person/name:
    get:
      description: Generate full name(s)
      parameters:
        - description: Gender of the names. If not specified both gender names will be returned.
          format: string
          in: query
          name: gender
          required: false
          type: string
        - description: No of names to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "names": [
                    "Shanna Hagenes",
                    "Therese Beatty II",
                    "Mrs. Electa Cruickshank MD",
                    "Rachael Quigley",
                    "Kyra Bins"
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person/name/first:
    get:
      description: Generate first name (in a given gender)
      parameters:
        - description: Gender of the names. If not specified both gender names will be returned.
          format: string
          in: query
          name: gender
          required: false
          type: string
        - description: No of names to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "names": [
                    "Dedrick",
                    "Jedidiah",
                    "Helga",
                    "Berniece",
                    "Jammie"
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person/name/last:
    get:
      description: Generate last name(s)
      parameters:
        - description: No of names to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "names": [
                    "Trantow",
                    "Abshire",
                    "Bode",
                    "Dickens",
                    "Harris"
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
  /identity/person/phonenumber:
    get:
      description: Generate random phone number(s)
      parameters:
        - description: No of phone numbers to return. Defaults to 1.
          format: integer
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - application/js
      responses:
        "200":
          description: 200  response
          examples:
            application/json: |-
              {
                "success": {
                  "total": 5
                },
                "contents": {
                  "phonenumbers": [
                    "1-501-976-4219",
                    "(808) 423-7981",
                    "(295) 963-6939 x028",
                    "324-793-6143 x2948",
                    "1-931-351-9690 x026"
                  ]
                },
                "copyright": "https://fungenerators.com/"
              }
        "401":
          description: 401  response
          examples:
            application/json: |-
              {
                  "error": {
                      "code": 401,
                      "message": "Unauthorized"
                  }
              }
      security:
        - X-Fungenerators-Api-Secret: []
      tags:
        - Fake Identity
