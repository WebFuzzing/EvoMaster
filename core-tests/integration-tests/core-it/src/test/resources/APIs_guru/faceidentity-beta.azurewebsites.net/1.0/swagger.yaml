swagger: "2.0"
host: faceidentity-beta.azurewebsites.net
basePath: /api/v1.0.0
info:
  contact: {}
  description: Api Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  termsOfService: urn:tos
  title: Api Documentation
  version: "1.0"
  x-apisguru-categories:
    - security
  x-origin:
    - format: swagger
      url: https://faceidentity-beta.azurewebsites.net/api/v1.0.0/v2/api-docs?group=authentication-api
      version: "2.0"
  x-providerName: faceidentity-beta.azurewebsites.net
tags:
  - description: the authentication API
    name: authentication-api-controller
paths:
  /authentication/customer/registration:
    post:
      consumes:
        - application/json
      deprecated: false
      operationId: register
      parameters:
        - description: The RegistrationForm definition is used to register the customer
          in: body
          name: register
          required: true
          schema:
            $ref: "#/definitions/Customer"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ResponseStatus"
        "201":
          description: Created
        "400":
          description: Unexpected error
          schema:
            $ref: "#/definitions/Problem"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Customer Registration
      tags:
        - authentication-api-controller
  /authentication/customer/token:
    post:
      consumes:
        - application/json
      deprecated: false
      operationId: authenticateUser
      parameters:
        - description: The LoginUser definition used to returns the token for authentication
          in: body
          name: loginUser
          required: true
          schema:
            $ref: "#/definitions/LoginUser"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/JwtResponse"
        "201":
          description: Created
        "400":
          description: Unexpected error
          schema:
            $ref: "#/definitions/Problem"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Token
      tags:
        - authentication-api-controller
definitions:
  Customer:
    properties:
      city:
        description: The city of address
        type: string
      companyDescription:
        description: The company Description
        type: string
      companyName:
        description: The company name of customer
        type: string
      country:
        description: The country of address
        type: string
      faceRecognitionType:
        description: The facial recognition type of customer
        example: AWS or AZURE
        type: string
      firstName:
        description: The first name of customer
        type: string
      lastName:
        description: The last name of customer
        type: string
      password:
        description: The password of customer
        type: string
      phone:
        description: The mobile number
        type: string
      state:
        description: The state of customer
        type: string
      streetAddress:
        description: The street of address
        type: string
      username:
        description: The username of customer nothing but an email
        type: string
      zip:
        description: The zip code of address
        type: string
    required:
      - companyName
      - faceRecognitionType
      - password
      - username
    title: Customer
    type: object
  JwtResponse:
    properties:
      customerId:
        description: The ID of the Customer
        format: int32
        type: integer
      email:
        description: The Role of the User
        type: string
      role:
        description: The Role of the User
        type: string
      token:
        description: The value of token
        type: string
      type:
        description: The type of token
        type: string
      userId:
        description: The ID of the User
        format: int32
        type: integer
    required:
      - token
      - type
    title: JwtResponse
    type: object
  LoginUser:
    properties:
      password:
        description: The user password
        type: string
      username:
        description: The name of user
        type: string
    required:
      - password
      - username
    title: LoginUser
    type: object
  Problem:
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
    title: Problem
    type: object
  ResponseEntity:
    properties:
      body:
        type: object
      statusCode:
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        type: string
      statusCodeValue:
        format: int32
        type: integer
    title: ResponseEntity
    type: object
  ResponseStatus:
    properties:
      code:
        description: Indicates whether connection was established or not
        enum:
          - success
          - failure
        type: string
      message:
        description: The message that provides more detail relating to the status code
        type: string
    required:
      - code
      - message
    title: ResponseStatus
    type: object
