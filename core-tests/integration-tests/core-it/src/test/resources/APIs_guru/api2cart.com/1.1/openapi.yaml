openapi: 3.0.0
servers:
  - url: https://api.api2cart.com/v1.1
info:
  contact:
    email: contact@api2cart.com
    x-twitter: API2Cart
  description: API2Cart
  termsOfService: https://api2cart.com/terms-service
  title: Swagger API2Cart
  version: "1.1"
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: https://twitter.com/API2Cart/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://app.api2cart.com/default/index/swagger-json
      version: "3.0"
  x-providerName: api2cart.com
externalDocs:
  description: Find out more about API2Cart
  url: http://docs.api2cart.com
tags:
  - name: account
  - name: cart
  - name: product
  - name: category
  - name: order
  - name: customer
  - name: attribute
  - name: tax
  - name: webhook
paths:
  /account.cart.add.json:
    post:
      description: Add store to the account
      operationId: AccountCartAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCartAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      store_key:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
      tags:
        - account
  /account.cart.list.json:
    get:
      description: Get list of carts.
      operationId: AccountCartList
      parameters:
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: request_from_date
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: request_to_date
          required: false
          schema:
            type: string
        - description: A web address of a store
          in: query
          name: store_url
          required: false
          schema:
            type: string
        - description: Find store by store key
          in: query
          name: store_key
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      carts:
                        items:
                          properties:
                            cart_id:
                              type: string
                            id:
                              type: string
                            store_key:
                              type: string
                            total_calls:
                              type: string
                            url:
                              type: string
                          type: object
                        type: array
                      carts_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
      tags:
        - account
  /account.config.update.json:
    put:
      description: Update configs in the API2Cart database.
      operationId: AccountConfigUpdate
      parameters:
        - description: Update store key
          in: query
          name: new_store_key
          required: false
          schema:
            type: string
        - description: This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
          in: query
          name: bridge_url
          required: false
          schema:
            type: string
        - description: Absolute path to the store root directory (used with "bridge_url" parameter)
          in: query
          name: store_root
          required: false
          schema:
            type: string
        - description: DB tables prefix
          in: query
          name: db_tables_prefix
          required: false
          schema:
            type: string
        - description: 3DCart Private Key
          in: query
          name: 3dcart_private_key
          required: false
          schema:
            type: string
        - description: 3DCart Token
          in: query
          name: 3dcart_access_token
          required: false
          schema:
            type: string
        - description: 3DCart API Key
          in: query
          name: 3dcartapi_api_key
          required: false
          schema:
            type: string
        - description: Amazon SP API app client id
          in: query
          name: amazon_sp_client_id
          required: false
          schema:
            type: string
        - description: Amazon SP API app client secret
          in: query
          name: amazon_sp_client_secret
          required: false
          schema:
            type: string
        - description: Amazon AWS user access key ID
          in: query
          name: amazon_sp_aws_user_key_id
          required: false
          schema:
            type: string
        - description: Amazon AWS user secret access key
          in: query
          name: amazon_sp_aws_user_secret
          required: false
          schema:
            type: string
        - description: Amazon AWS Region
          in: query
          name: amazon_sp_aws_region
          required: false
          schema:
            type: string
        - description: Amazon AWS Role ARN
          in: query
          name: amazon_sp_aws_role_arn
          required: false
          schema:
            type: string
        - description: Amazon SP API OAuth refresh token
          in: query
          name: amazon_sp_refresh_token
          required: false
          schema:
            type: string
        - description: Amazon SP API environment
          in: query
          name: amazon_sp_api_environment
          required: false
          schema:
            default: production
            type: string
        - description: MWS Auth Token. Access token authorizing the app to access resources on behalf of a user
          in: query
          name: amazon_access_token
          required: false
          schema:
            type: string
        - description: Amazon Seller ID (Merchant token)
          in: query
          name: amazon_seller_id
          required: false
          schema:
            type: string
        - description: Amazon Marketplace IDs comma separated string
          in: query
          name: amazon_marketplaces_ids
          required: false
          schema:
            type: string
        - description: Amazon Secret Key
          in: query
          name: amazon_secret_key
          required: false
          schema:
            type: string
        - description: Amazon Secret Key Id
          in: query
          name: amazon_access_key_id
          required: false
          schema:
            type: string
        - description: It's a AspDotNetStorefront account for which API is available
          in: query
          name: aspdotnetstorefront_api_user
          required: false
          schema:
            type: string
        - description: AspDotNetStorefront API Password
          in: query
          name: aspdotnetstorefront_api_pass
          required: false
          schema:
            type: string
        - description: It's a BigCommerce account for which API is enabled
          in: query
          name: bigcommerceapi_admin_account
          required: false
          schema:
            type: string
        - description: BigCommerce API URL
          in: query
          name: bigcommerceapi_api_path
          required: false
          schema:
            type: string
        - description: Bigcommerce API Key
          in: query
          name: bigcommerceapi_api_key
          required: false
          schema:
            type: string
        - description: Client ID of the requesting app
          in: query
          name: bigcommerceapi_client_id
          required: false
          schema:
            type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: bigcommerceapi_access_token
          required: false
          schema:
            type: string
        - description: API Path section unique to the store
          in: query
          name: bigcommerceapi_context
          required: false
          schema:
            type: string
        - description: Demandware client id
          in: query
          name: demandware_client_id
          required: false
          schema:
            type: string
        - description: Demandware api password
          in: query
          name: demandware_api_password
          required: false
          schema:
            type: string
        - description: Demandware user name
          in: query
          name: demandware_user_name
          required: false
          schema:
            type: string
        - description: Demandware user password
          in: query
          name: demandware_user_password
          required: false
          schema:
            type: string
        - description: Demandware environment
          in: query
          name: demandware_env_type
          required: false
          schema:
            type: string
        - description: Application ID (AppID).
          in: query
          name: ebay_client_id
          required: false
          schema:
            type: string
        - description: Shared Secret from eBay application
          in: query
          name: ebay_client_secret
          required: false
          schema:
            type: string
        - description: The RuName value that eBay assigns to your application.
          in: query
          name: ebay_runame
          required: false
          schema:
            type: string
        - description: Used to authenticate API requests.
          in: query
          name: ebay_access_token
          required: false
          schema:
            type: string
        - description: Used to renew the access token.
          in: query
          name: ebay_refresh_token
          required: false
          schema:
            type: string
        - description: eBay environment
          in: query
          name: ebay_environment
          required: false
          schema:
            type: string
        - description: eBay global ID
          in: query
          name: ebay_site_id
          required: false
          schema:
            default: 0
            type: integer
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: ecwid_acess_token
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: ecwid_store_id
          required: false
          schema:
            type: string
        - description: Etsy keystring
          in: query
          name: etsy_keystring
          required: false
          schema:
            type: string
        - description: Etsy shared secret
          in: query
          name: etsy_shared_secret
          required: false
          schema:
            type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: etsy_access_token
          required: false
          schema:
            type: string
        - description: Secret token authorizing the app to access resources on behalf of a user
          in: query
          name: etsy_token_secret
          required: false
          schema:
            type: string
        - description: Neto API Key
          in: query
          name: neto_api_key
          required: false
          schema:
            type: string
        - description: Neto User Name
          in: query
          name: neto_api_username
          required: false
          schema:
            type: string
        - description: Shopify API Key
          in: query
          name: shopify_api_key
          required: false
          schema:
            type: string
        - description: Shopify API Password
          in: query
          name: shopify_api_password
          required: false
          schema:
            type: string
        - description: Shared secret
          in: query
          name: shopify_shared_secret
          required: false
          schema:
            type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: shopify_access_token
          required: false
          schema:
            type: string
        - description: Shopware api key
          in: query
          name: shopware_api_key
          required: false
          schema:
            type: string
        - description: Shopware client secret access key
          in: query
          name: shopware_api_secret
          required: false
          schema:
            type: string
        - description: It's a Volusion account for which API is enabled
          in: query
          name: volusion_login
          required: false
          schema:
            type: string
        - description: Volusion API Password
          in: query
          name: volusion_password
          required: false
          schema:
            type: string
        - description: Walmart client ID
          in: query
          name: walmart_client_id
          required: false
          schema:
            type: string
        - description: Walmart client secret
          in: query
          name: walmart_client_secret
          required: false
          schema:
            type: string
        - description: Walmart environment
          in: query
          name: walmart_environment
          required: false
          schema:
            default: production
            type: string
        - description: Walmart WM_CONSUMER.CHANNEL.TYPE header
          in: query
          name: walmart_channel_type
          required: false
          schema:
            type: string
        - description: Squarespace API Key
          in: query
          name: squarespace_api_key
          required: false
          schema:
            type: string
        - description: Omni Commerce Connector Client ID
          in: query
          name: hybris_client_id
          required: false
          schema:
            type: string
        - description: Omni Commerce Connector Client Secret
          in: query
          name: hybris_client_secret
          required: false
          schema:
            type: string
        - description: User Name
          in: query
          name: hybris_username
          required: false
          schema:
            type: string
        - description: User password
          in: query
          name: hybris_password
          required: false
          schema:
            type: string
        - description: Websites to stores mapping data
          explode: false
          in: query
          name: hybris_websites
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: LightSpeed api key
          in: query
          name: lightspeed_api_key
          required: false
          schema:
            type: string
        - description: LightSpeed api secret
          in: query
          name: lightspeed_api_secret
          required: false
          schema:
            type: string
        - description: CommerceHQ api key
          in: query
          name: commercehq_api_key
          required: false
          schema:
            type: string
        - description: CommerceHQ api password
          in: query
          name: commercehq_api_password
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - account
  /account.failed_webhooks.json:
    get:
      description: List webhooks that was not delivered to the callback.
      operationId: AccountFailedWebhooks
      parameters:
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: List of сomma-separated webhook ids
          in: query
          name: ids
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      all_failed_webhook:
                        type: string
                      webhook:
                        items:
                          properties:
                            entity_id:
                              type: string
                            time:
                              $ref: "#/components/schemas/A2CDateTime"
                            webhook_id:
                              type: integer
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
      tags:
        - account
  /account.supported_platforms.json:
    get:
      description: Get list of supported platforms
      operationId: AccountSupportedPlatforms
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      supported_platforms:
                        items:
                          properties:
                            cart_id:
                              type: string
                            cart_name:
                              type: string
                            cart_versions:
                              type: string
                            params:
                              properties:
                                additional:
                                  items:
                                    properties:
                                      description:
                                        type: string
                                      name:
                                        type: string
                                    type: object
                                  type: array
                                required:
                                  items:
                                    items:
                                      properties:
                                        description:
                                          type: string
                                        name:
                                          type: string
                                      type: object
                                    type: array
                                  type: array
                              type: object
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
      tags:
        - account
  /attribute.add.json:
    post:
      description: Add new attribute
      operationId: AttributeAdd
      parameters:
        - description: Defines attribute's type
          in: query
          name: type
          required: true
          schema:
            enum:
              - text
              - select
              - textarea
              - date
              - price
              - multiselect
              - boolean
            type: string
        - description: Entity code
          in: query
          name: code
          required: false
          schema:
            type: string
        - description: Defines attributes's name
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Set visibility status
          in: query
          name: visible
          required: false
          schema:
            default: false
            type: boolean
        - description: Defines if the option is required
          in: query
          name: required
          required: false
          schema:
            default: false
            type: boolean
        - description: Attribute`s position
          in: query
          name: position
          required: false
          schema:
            default: 0
            type: integer
        - description: Filter by attribute_group_id
          in: query
          name: attribute_group_id
          required: false
          schema:
            type: string
        - description: Attribute saving scope
          in: query
          name: is_global
          required: false
          schema:
            default: Store
            type: string
        - description: Use attribute in Quick Search
          in: query
          name: is_searchable
          required: false
          schema:
            default: false
            type: boolean
        - description: Use In Layered Navigation
          in: query
          name: is_filterable
          required: false
          schema:
            default: No
            type: string
        - description: Comparable on Front-end
          in: query
          name: is_comparable
          required: false
          schema:
            default: false
            type: boolean
        - description: Allow HTML Tags on Frontend
          in: query
          name: is_html_allowed_on_front
          required: false
          schema:
            default: false
            type: boolean
        - description: Use In Search Results Layered Navigation
          in: query
          name: is_filterable_in_search
          required: false
          schema:
            default: false
            type: boolean
        - description: Use To Create Configurable Product
          in: query
          name: is_configurable
          required: false
          schema:
            default: false
            type: boolean
        - description: Use in Advanced Search
          in: query
          name: is_visible_in_advanced_search
          required: false
          schema:
            default: false
            type: boolean
        - description: Use for Promo Rule Conditions
          in: query
          name: is_used_for_promo_rules
          required: false
          schema:
            default: false
            type: boolean
        - description: Used in Product Listing
          in: query
          name: used_in_product_listing
          required: false
          schema:
            default: false
            type: boolean
        - description: Used for Sorting in Product Listing
          in: query
          name: used_for_sort_by
          required: false
          schema:
            default: false
            type: boolean
        - description: Types of products which can have this attribute
          in: query
          name: apply_to
          required: false
          schema:
            default: all_types
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.assign.group.json:
    post:
      description: Assign attribute to the group
      operationId: AttributeAssignGroup
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Attribute group_id
          in: query
          name: group_id
          required: true
          schema:
            type: string
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      assigned:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.assign.set.json:
    post:
      description: Assign attribute to the attribute set
      operationId: AttributeAssignSet
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Attribute group_id
          in: query
          name: group_id
          required: false
          schema:
            type: string
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      assigned:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.attributeset.list.json:
    get:
      description: Get attribute_set list
      operationId: AttributeAttributesetList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    items:
                      $ref: "#/components/schemas/StoreAttribute_Group"
                    type: array
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.count.json:
    get:
      description: Get attributes count
      operationId: AttributeCount
      parameters:
        - description: Defines attribute's type
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Filter items by visibility status
          in: query
          name: visible
          required: false
          schema:
            type: boolean
        - description: Defines if the option is required
          in: query
          name: required
          required: false
          schema:
            type: boolean
        - description: True if attribute is system
          in: query
          name: system
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      attributes_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.delete.json:
    delete:
      description: Delete attribute from store
      operationId: AttributeDelete
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.group.list.json:
    get:
      description: Get attribute group list
      operationId: AttributeGroupList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    items:
                      $ref: "#/components/schemas/StoreAttribute_Group"
                    type: array
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.info.json:
    get:
      description: Get attribute info
      operationId: AttributeInfo
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/StoreAttribute"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.list.json:
    get:
      description: Get attributes list
      operationId: AttributeList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Defines attribute's type
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: Filter attributes by ids
          in: query
          name: attribute_ids
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Retrieves attributes on specified language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,code,type
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Filter items by visibility status
          in: query
          name: visible
          required: false
          schema:
            type: boolean
        - description: Defines if the option is required
          in: query
          name: required
          required: false
          schema:
            type: boolean
        - description: True if attribute is system
          in: query
          name: system
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      order:
                        items:
                          $ref: "#/components/schemas/StoreAttribute"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.type.list.json:
    get:
      description: Get list of supported attributes types
      operationId: AttributeTypeList
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      attribute_type:
                        items:
                          type: string
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.unassign.group.json:
    post:
      description: Unassign attribute from group
      operationId: AttributeUnassignGroup
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Customer group_id
          in: query
          name: group_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      unassigned:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.unassign.set.json:
    post:
      description: Unassign attribute from attribute set
      operationId: AttributeUnassignSet
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      unassigned:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.update.json:
    post:
      description: Update attribute data
      operationId: AttributeUpdate
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Defines new attributes's name
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /basket.info.json:
    get:
      description: Retrieve basket information.
      operationId: BasketInfo
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Basket"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - basket
  /basket.item.add.json:
    post:
      description: Add item to basket
      operationId: BasketItemAdd
      parameters:
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: true
          schema:
            type: string
        - description: Defines id of the product which should be added to the basket
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines product's variants specified by variant id
          in: query
          name: variant_id
          required: false
          schema:
            type: string
        - description: Defines new items quantity
          in: query
          name: quantity
          required: false
          schema:
            default: 0
            type: number
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      added:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - basket
  /basket.live_shipping_service.create.json:
    post:
      description: Create live shipping rate service. (Beta)
      operationId: BasketLiveShippingServiceCreate
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Shipping Service Name
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Callback url that returns shipping rates. It should be able to accept POST requests with json data.
          in: query
          name: callback
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - basket
  /basket.live_shipping_service.delete.json:
    delete:
      description: Delete live shipping rate service. (Beta)
      operationId: BasketLiveShippingServiceDelete
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      status:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - basket
  /basket.live_shipping_service.list.json:
    get:
      description: Retrieve a list of live shipping rate services. (Beta)
      operationId: BasketLiveShippingServiceList
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      live_shipping_services:
                        items:
                          $ref: "#/components/schemas/Basket_LiveShippingService"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - basket
  /bridge.delete.json:
    post:
      description: Delete bridge from the store.
      operationId: BridgeDelete
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - bridge
  /bridge.download.file:
    get:
      description: Download bridge for store
      operationId: BridgeDownload
      parameters:
        - description: Identifies if there is a necessity to download whitelabel bridge.
          in: query
          name: whitelabel
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /bridge.update.json:
    post:
      description: Update bridge in the store.
      operationId: BridgeUpdate
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - bridge
  /cart.bridge.json:
    get:
      description: Get bridge key and store key
      operationId: CartBridge
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      bridge:
                        type: string
                      store_key:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
      tags:
        - cart
  /cart.catalog_price_rules.count.json:
    get:
      description: Get count of cart catalog price rules discounts.
      operationId: CartCatalogPriceRulesCount
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      catalog_price_rules_count:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.catalog_price_rules.list.json:
    get:
      description: Get cart catalog price rules discounts.
      operationId: CartCatalogPriceRulesList
      parameters:
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Retrieves  catalog_price_rules by ids
          in: query
          name: ids
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,description
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Cart_Catalog_PriceRules_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.clear_cache.json:
    post:
      description: Clear cache on store.
      operationId: CartClearCache
      parameters:
        - description: Defines which cache should be cleared.
          in: query
          name: cache_type
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      cache_cleared:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.config.json:
    get:
      description: Get list of cart configs
      operationId: CartConfig
      parameters:
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: store_name,store_url,db_prefix
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      db_prefix:
                        type: string
                      store_name:
                        type: string
                      store_url:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.config.update.json:
    put:
      deprecated: true
      description: Use this API method to update custom data in client database.
      operationId: CartConfigUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartConfigUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.add.json:
    post:
      description: Create new coupon
      operationId: CartCouponAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartCouponAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      coupon_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.condition.add.json:
    post:
      description: Create new coupon condition
      operationId: CartCouponConditionAdd
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Coupon Id
          in: query
          name: coupon_id
          required: true
          schema:
            type: string
        - description: Defines condition operator
          in: query
          name: target
          required: false
          schema:
            default: coupon_prerequisite
            type: string
        - description: Defines condition entity type
          in: query
          name: entity
          required: true
          schema:
            enum:
              - order
              - order_shipping_address
              - product
              - customer
            type: string
        - description: Defines condition entity attribute key
          in: query
          name: key
          required: true
          schema:
            enum:
              - total
              - subtotal
              - shipping_total
              - total_quantity
              - total_weight
              - country
              - product_id
              - variant_id
              - category_id
              - customer_id
              - item_price
              - item_total_price
              - item_quantity
            type: string
        - description: Defines condition operator
          in: query
          name: operator
          required: true
          schema:
            enum:
              - ==
              - <
              - <=
              - ">"
              - ">="
              - ONE_OF
            type: string
        - description: Defines condition value, can be comma separated according to the operator.
          in: query
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      status:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.count.json:
    get:
      description: Get cart coupons count.
      operationId: CartCouponCount
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Filter entity by date_start (greater or equal)
          in: query
          name: date_start_from
          required: false
          schema:
            type: string
        - description: Filter entity by date_start (less or equal)
          in: query
          name: date_start_to
          required: false
          schema:
            type: string
        - description: Filter entity by date_end (greater or equal)
          in: query
          name: date_end_from
          required: false
          schema:
            type: string
        - description: Filter entity by date_end (less or equal)
          in: query
          name: date_end_to
          required: false
          schema:
            type: string
        - description: Defines category's visibility status
          in: query
          name: avail
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      coupons_count:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.delete.json:
    delete:
      description: Delete coupon
      operationId: CartCouponDelete
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.list.json:
    get:
      description: Get cart coupon discounts.
      operationId: CartCouponList
      parameters:
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Filter coupons by ids
          in: query
          name: coupons_ids
          required: false
          schema:
            type: string
        - description: Filter coupons by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Filter entity by date_start (greater or equal)
          in: query
          name: date_start_from
          required: false
          schema:
            type: string
        - description: Filter entity by date_start (less or equal)
          in: query
          name: date_start_to
          required: false
          schema:
            type: string
        - description: Filter entity by date_end (greater or equal)
          in: query
          name: date_end_from
          required: false
          schema:
            type: string
        - description: Filter entity by date_end (less or equal)
          in: query
          name: date_end_to
          required: false
          schema:
            type: string
        - description: Filter coupons by avail status
          in: query
          name: avail
          required: false
          schema:
            type: boolean
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Cart_Coupon_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.create.json:
    post:
      description: Add store to the account
      operationId: CartCreate
      parameters:
        - description: Store’s identifier which you can get from cart_list method
          in: query
          name: cart_id
          required: true
          schema:
            enum:
              - 3DCart
              - 3DCartApi
              - AceShop
              - AmazonSP
              - Amazon
              - AspDotNetStorefront
              - BigcommerceApi
              - Creloaded
              - CommerceHQ
              - Cscart
              - Cubecart
              - Demandware
              - EBay
              - Ecwid
              - Etsy
              - Gambio
              - Interspire
              - JooCart
              - Magento1212
              - MijoShop
              - Neto
              - Opencart14
              - LightSpeed
              - Oscmax2
              - Oscommerce22ms2
              - Oxid
              - Pinnacle
              - Prestashop
              - SSPremium
              - Shopify
              - Squarespace
              - Shopware
              - ShopwareApi
              - Tomatocart
              - Ubercart
              - Virtuemart
              - Volusion
              - WPecommerce
              - Walmart
              - WebAsyst
              - Woocommerce
              - Xcart
              - Xtcommerce
              - XtcommerceVeyton
              - Zencart137
              - Hybris
            type: string
        - description: A web address of a store that you would like to connect to API2Cart
          in: query
          name: store_url
          required: true
          schema:
            type: string
        - description: This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
          in: query
          name: bridge_url
          required: false
          schema:
            type: string
        - description: Absolute path to the store root directory (used with "bridge_url" parameter)
          in: query
          name: store_root
          required: false
          schema:
            type: string
        - description: Set this parameter if bridge is already uploaded to store
          in: query
          name: store_key
          required: false
          schema:
            type: string
        - description: Shared secret
          in: query
          name: shared_secret
          required: false
          schema:
            type: string
        - description: Specify if api2cart should validate cart version
          in: query
          name: validate_version
          required: false
          schema:
            default: false
            type: boolean
        - description: Enables or disables cart's verification
          in: query
          name: verify
          required: false
          schema:
            default: true
            type: boolean
        - description: DB tables prefix
          in: query
          name: db_tables_prefix
          required: false
          schema:
            type: string
        - description: FTP connection host
          in: query
          name: ftp_host
          required: false
          schema:
            type: string
        - description: FTP User
          in: query
          name: ftp_user
          required: false
          schema:
            type: string
        - description: FTP Password
          in: query
          name: ftp_password
          required: false
          schema:
            type: string
        - description: FTP Port
          in: query
          name: ftp_port
          required: false
          schema:
            type: integer
        - description: FTP Store dir
          in: query
          name: ftp_store_dir
          required: false
          schema:
            type: string
        - description: 3DCart API Key
          in: query
          name: apiKey_3dcart
          required: false
          schema:
            type: string
        - description: It's a BigCommerce account for which API is enabled
          in: query
          name: AdminAccount
          required: false
          schema:
            type: string
        - description: BigCommerce API URL
          in: query
          name: ApiPath
          required: false
          schema:
            type: string
        - description: Bigcommerce API Key
          in: query
          name: ApiKey
          required: false
          schema:
            type: string
        - description: Client ID of the requesting app
          in: query
          name: client_id
          required: false
          schema:
            type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: accessToken
          required: false
          schema:
            type: string
        - description: API Path section unique to the store
          in: query
          name: context
          required: false
          schema:
            type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: access_token
          required: false
          schema:
            type: string
        - description: Shopify API Key
          in: query
          name: apiKey_shopify
          required: false
          schema:
            type: string
        - description: Shopify API Password
          in: query
          name: apiPassword
          required: false
          schema:
            type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: accessToken_shopify
          required: false
          schema:
            type: string
        - description: Neto API Key
          in: query
          name: apiKey
          required: false
          schema:
            type: string
        - description: Neto User Name
          in: query
          name: apiUsername
          required: false
          schema:
            type: string
        - description: Volusion API Password
          in: query
          name: EncryptedPassword
          required: false
          schema:
            type: string
        - description: It's a Volusion account for which API is enabled
          in: query
          name: Login
          required: false
          schema:
            type: string
        - description: It's a AspDotNetStorefront account for which API is available
          in: query
          name: apiUser_adnsf
          required: false
          schema:
            type: string
        - description: AspDotNetStorefront API Password
          in: query
          name: apiPass
          required: false
          schema:
            type: string
        - description: Shopping Cart Elite Access Key
          in: query
          name: accessKey_scelite
          required: false
          schema:
            type: string
        - description: Shopping Cart Elite API Key
          in: query
          name: apiKey_scelite
          required: false
          schema:
            type: string
        - description: Shopping Cart Elite API Secret Key
          in: query
          name: apiSecretKey_scelite
          required: false
          schema:
            type: string
        - description: 3DCart Application Private Key
          in: query
          name: privateKey
          required: false
          schema:
            type: string
        - description: 3DCart Token from Application
          in: query
          name: appToken
          required: false
          schema:
            type: string
        - description: Etsy keystring
          in: query
          name: etsy_keystring
          required: false
          schema:
            type: string
        - description: Etsy shared secret
          in: query
          name: etsy_shared_secret
          required: false
          schema:
            type: string
        - description: Secret token authorizing the app to access resources on behalf of a user
          in: query
          name: tokenSecret
          required: false
          schema:
            type: string
        - description: Application ID (AppID).
          in: query
          name: ebay_client_id
          required: false
          schema:
            type: string
        - description: Shared Secret from eBay application
          in: query
          name: ebay_client_secret
          required: false
          schema:
            type: string
        - description: The RuName value that eBay assigns to your application.
          in: query
          name: ebay_runame
          required: false
          schema:
            type: string
        - description: Used to authenticate API requests.
          in: query
          name: ebay_access_token
          required: false
          schema:
            type: string
        - description: Used to renew the access token.
          in: query
          name: ebay_refresh_token
          required: false
          schema:
            type: string
        - description: eBay environment
          in: query
          name: ebay_environment
          required: false
          schema:
            default: production
            type: string
        - description: eBay global ID
          in: query
          name: ebay_site_id
          required: false
          schema:
            default: 0
            type: integer
        - description: Demandware client id
          in: query
          name: dw_client_id
          required: false
          schema:
            type: string
        - description: Demandware api password
          in: query
          name: dw_api_pass
          required: false
          schema:
            type: string
        - description: Demandware user name
          in: query
          name: demandware_user_name
          required: false
          schema:
            type: string
        - description: Demandware user password
          in: query
          name: demandware_user_password
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: true
          schema:
            type: string
        - description: Seller Id
          in: query
          name: seller_id
          required: false
          schema:
            type: string
        - description: Amazon Secret Key
          in: query
          name: amazon_secret_key
          required: false
          schema:
            type: string
        - description: Amazon Secret Key Id
          in: query
          name: amazon_access_key_id
          required: false
          schema:
            type: string
        - description: Comma separated marketplaces ids
          in: query
          name: marketplaces_ids
          required: false
          schema:
            type: string
        - description: ""
          in: query
          name: environment
          required: false
          schema:
            default: production
            type: string
        - description: Omni Commerce Connector Client ID
          in: query
          name: hybris_client_id
          required: false
          schema:
            type: string
        - description: Omni Commerce Connector Client Secret
          in: query
          name: hybris_client_secret
          required: false
          schema:
            type: string
        - description: User Name
          in: query
          name: hybris_username
          required: false
          schema:
            type: string
        - description: User password
          in: query
          name: hybris_password
          required: false
          schema:
            type: string
        - description: Websites to stores mapping data
          explode: false
          in: query
          name: hybris_websites
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Walmart client ID
          in: query
          name: walmart_client_id
          required: false
          schema:
            type: string
        - description: Walmart client secret
          in: query
          name: walmart_client_secret
          required: false
          schema:
            type: string
        - description: Walmart environment
          in: query
          name: walmart_environment
          required: false
          schema:
            default: production
            type: string
        - description: Walmart WM_CONSUMER.CHANNEL.TYPE header
          in: query
          name: walmart_channel_type
          required: false
          schema:
            type: string
        - description: LightSpeed api key
          in: query
          name: lightspeed_api_key
          required: false
          schema:
            type: string
        - description: LightSpeed api secret
          in: query
          name: lightspeed_api_secret
          required: false
          schema:
            type: string
        - description: Shopware api key
          in: query
          name: shopware_api_key
          required: false
          schema:
            type: string
        - description: Shopware client secret access key
          in: query
          name: shopware_api_secret
          required: false
          schema:
            type: string
        - description: CommerceHQ api key
          in: query
          name: commercehq_api_key
          required: false
          schema:
            type: string
        - description: CommerceHQ api password
          in: query
          name: commercehq_api_password
          required: false
          schema:
            type: string
        - description: 3DCart Private Key
          in: query
          name: 3dcart_private_key
          required: false
          schema:
            type: string
        - description: 3DCart Token
          in: query
          name: 3dcart_access_token
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      store_key:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
      tags:
        - cart
  /cart.delete.json:
    delete:
      description: Remove store from API2Cart
      operationId: CartDelete
      parameters:
        - description: Identifies if there is a necessity to delete bridge
          in: query
          name: delete_bridge
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      store:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.disconnect.json:
    get:
      description: Disconnect with the store and clear store session data.
      operationId: CartDisconnect
      parameters:
        - description: Identifies if there is a necessity to delete bridge
          in: query
          name: delete_bridge
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      connection:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.giftcard.add.json:
    post:
      description: Create new gift card
      operationId: CartGiftcardAdd
      parameters:
        - description: Defines the gift card amount value.
          in: query
          name: amount
          required: true
          schema:
            type: number
        - description: Gift card code
          in: query
          name: code
          required: false
          schema:
            type: string
        - description: Gift card owner email
          in: query
          name: owner_email
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      code:
                        type: string
                      id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.giftcard.count.json:
    get:
      description: Get gift cards count.
      operationId: CartGiftcardCount
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      gift_cards_count:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.giftcard.list.json:
    get:
      description: Get gift cards list.
      operationId: CartGiftcardList
      parameters:
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Cart_GiftCard_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.info.json:
    get:
      description: Get cart information
      operationId: CartInfo
      parameters:
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: store_name,store_url,db_prefix
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Cart"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.list.json:
    get:
      description: Get list of supported carts
      operationId: CartList
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      supported_carts:
                        items:
                          properties:
                            cart_id:
                              type: string
                            cart_name:
                              type: string
                            cart_versions:
                              type: string
                            params:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
      tags:
        - cart
  /cart.meta_data.list.json:
    get:
      description: Get entity meta data
      operationId: CartMetaDataList
      parameters:
        - description: Entity Id
          in: query
          name: entity_id
          required: true
          schema:
            type: string
        - description: Entity
          in: query
          name: entity
          required: false
          schema:
            default: product
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Key
          in: query
          name: key
          required: false
          schema:
            type: string
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: key,value
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Cart_MetaData_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.meta_data.set.json:
    post:
      description: Set meta data for a specific entity
      operationId: CartMetaDataSet
      parameters:
        - description: Entity Id
          in: query
          name: entity_id
          required: true
          schema:
            type: string
        - description: Entity
          in: query
          name: entity
          required: false
          schema:
            default: product
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Key
          in: query
          name: key
          required: true
          schema:
            type: string
        - description: Value
          in: query
          name: value
          required: true
          schema:
            type: string
        - description: Metafield namespace
          in: query
          name: namespace
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.meta_data.unset.json:
    delete:
      description: Unset meta data for a specific entity
      operationId: CartMetaDataUnset
      parameters:
        - description: Entity Id
          in: query
          name: entity_id
          required: true
          schema:
            type: string
        - description: Entity
          in: query
          name: entity
          required: false
          schema:
            default: product
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Key
          in: query
          name: key
          required: true
          schema:
            type: string
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      status:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.methods.json:
    get:
      description: Get list of cart methods
      operationId: CartMethods
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      method:
                        items:
                          type: string
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.plugin.list.json:
    get:
      description: Get list of installed plugins
      operationId: CartPluginList
      parameters:
        - description: Set this parameter if bridge is already uploaded to store
          in: query
          name: store_key
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      all_plugins:
                        type: integer
                      plugins:
                        items:
                          $ref: "#/components/schemas/PluginList"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.script.add.json:
    post:
      description: Add new script to the storefront
      operationId: CartScriptAdd
      parameters:
        - description: The user-friendly script name
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The user-friendly description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: An html string containing exactly one `script` tag.
          in: query
          name: html
          required: false
          schema:
            type: string
        - description: The URL of the remote script
          in: query
          name: src
          required: false
          schema:
            type: string
        - description: The load method to use for the script
          in: query
          name: load_method
          required: false
          schema:
            type: string
        - description: The page or pages on the online store where the script should be included
          in: query
          name: scope
          required: false
          schema:
            default: storefront
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      script_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.script.delete.json:
    delete:
      description: Remove script from the storefront
      operationId: CartScriptDelete
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: boolean
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.script.list.json:
    get:
      description: Get scripts installed to the storefront
      operationId: CartScriptList
      parameters:
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Retrieves only scripts with specific ids
          in: query
          name: script_ids
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Cart_Script_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.shipping_zones.list.json:
    get:
      description: Get list of shipping zones
      operationId: CartShippingZonesList
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Cart_ShippingZone"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.validate.json:
    get:
      description: Check store availability, bridge connection for the downloadable carts, identify DB prefix, validate API accesses for API carts.
      operationId: CartValidate
      parameters:
        - description: Specify if api2cart should validate cart version
          in: query
          name: validate_version
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      status:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /category.add.json:
    post:
      description: Add new category in store
      operationId: CategoryAdd
      parameters:
        - description: Defines category's name that has to be added
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Adds categories specified by parent id
          in: query
          name: parent_id
          required: false
          schema:
            type: string
        - description: Create category in the stores that is specified by comma-separated stores' id
          in: query
          name: stores_ids
          required: false
          schema:
            default: 0
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Defines category's visibility status
          in: query
          name: avail
          required: false
          schema:
            default: true
            type: boolean
        - description: Sort number in the list
          in: query
          name: sort_order
          required: false
          schema:
            default: 0
            type: integer
        - description: Entity's date creation
          in: query
          name: created_time
          required: false
          schema:
            type: string
        - description: Entity's date modification
          in: query
          name: modified_time
          required: false
          schema:
            type: string
        - description: Defines category's description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          schema:
            type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          schema:
            type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          schema:
            type: string
        - description: Defines unique category's URL for SEO
          in: query
          name: seo_url
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      category_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.assign.json:
    post:
      description: Assign category to product
      operationId: CategoryAssign
      parameters:
        - description: Defines category assign to the product, specified by product id
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines category assign, specified by category id
          in: query
          name: category_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.count.json:
    get:
      description: Count categories in store.
      operationId: CategoryCount
      parameters:
        - description: Counts categories specified by parent id
          in: query
          name: parent_id
          required: false
          schema:
            type: string
        - description: Counts category specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Counts category specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      categories_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.delete.json:
    delete:
      description: Delete category in store
      operationId: CategoryDelete
      parameters:
        - description: Defines category removal, specified by category id
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.find.json:
    get:
      description: Search category in store. "Laptop" is specified here by default.
      operationId: CategoryFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          schema:
            type: string
        - description: Entity search that is specified by the comma-separated unique fields
          in: query
          name: find_where
          required: false
          schema:
            default: name
            type: string
        - description: Entity search that is specified by comma-separated parameters
          in: query
          name: find_params
          required: false
          schema:
            default: whole_words
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      category:
                        items:
                          properties:
                            description:
                              type: string
                            id:
                              type: string
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.image.add.json:
    post:
      description: Add image to category
      operationId: CategoryImageAdd
      parameters:
        - description: Defines category id where the image should be added
          in: query
          name: category_id
          required: true
          schema:
            type: string
        - description: Defines image's name
          in: query
          name: image_name
          required: true
          schema:
            type: string
        - description: Defines URL of the image that has to be added
          in: query
          name: url
          required: true
          schema:
            type: string
        - description: Defines alternative text that has to be attached to the picture
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.
          in: query
          name: mime
          required: false
          schema:
            type: string
        - description: Defines image's types that are specified by comma-separated list
          in: query
          name: type
          required: true
          schema:
            enum:
              - base
              - thumbnail
            type: string
        - description: Defines image’s position in the list
          in: query
          name: position
          required: false
          schema:
            default: 0
            type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      image_path:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.image.delete.json:
    delete:
      description: Delete image
      operationId: CategoryImageDelete
      parameters:
        - description: Defines category id where the image should be deleted
          in: query
          name: category_id
          required: true
          schema:
            type: string
        - description: Define image id
          in: query
          name: image_id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.info.json:
    get:
      description: Get category info about category ID*** or specify other category ID.
      operationId: CategoryInfo
      parameters:
        - description: Retrieves category's info specified by category id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,parent_id,name,description
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieves category info  specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Retrieves category info  specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Category"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.list.json:
    get:
      description: Get list of categories from store.
      operationId: CategoryList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: Retrieves categories specified by parent id
          in: query
          name: parent_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,parent_id,name,description
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieves categories specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Retrieves categorys specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Category_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.unassign.json:
    post:
      description: Unassign category to product
      operationId: CategoryUnassign
      parameters:
        - description: Defines category unassign, specified by category id
          in: query
          name: category_id
          required: true
          schema:
            type: string
        - description: Defines category unassign to the product, specified by product id
          in: query
          name: product_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.update.json:
    put:
      description: Update category in store
      operationId: CategoryUpdate
      parameters:
        - description: Defines category update specified by category id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Defines new category’s name
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Defines new parent category id
          in: query
          name: parent_id
          required: false
          schema:
            type: string
        - description: Update category in the stores that is specified by comma-separated stores' id
          in: query
          name: stores_ids
          required: false
          schema:
            default: 0
            type: string
        - description: Defines category's visibility status
          in: query
          name: avail
          required: false
          schema:
            type: boolean
        - description: Sort number in the list
          in: query
          name: sort_order
          required: false
          schema:
            type: integer
        - description: Entity's date modification
          in: query
          name: modified_time
          required: false
          schema:
            type: string
        - description: Defines new category's description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          schema:
            type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          schema:
            type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          schema:
            type: string
        - description: Defines unique category's URL for SEO
          in: query
          name: seo_url
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /customer.add.json:
    post:
      description: Add customer into store.
      operationId: CustomerAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      customer_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.attribute.list.json:
    get:
      description: Get attributes for specific customer
      operationId: CustomerAttributeList
      parameters:
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Customer_Attribute_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.count.json:
    get:
      description: Get number of customers from store.
      operationId: CustomerCount
      parameters:
        - description: Customer group_id
          in: query
          name: group_id
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Counts customer specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: The numeric ID of the customer list in Demandware.
          in: query
          name: customer_list_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      customers_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.find.json:
    get:
      description: Find customers in store.
      operationId: CustomerFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          schema:
            type: string
        - description: Entity search that is specified by the comma-separated unique fields
          in: query
          name: find_where
          required: false
          schema:
            default: email
            type: string
        - description: Entity search that is specified by comma-separated parameters
          in: query
          name: find_params
          required: false
          schema:
            default: whole_words
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      email:
                        type: string
                      first_name:
                        type: string
                      id:
                        type: string
                      last_name:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.group.add.json:
    post:
      description: Create customer group.
      operationId: CustomerGroupAdd
      parameters:
        - description: Customer group name
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Assign customer group to the stores that is specified by comma-separated stores' id
          in: query
          name: stores_ids
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    items:
                      $ref: "#/components/schemas/Customer_Group"
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.group.list.json:
    get:
      description: Get list of customers groups.
      operationId: CustomerGroupList
      parameters:
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Groups that will be assigned to a customer
          in: query
          name: group_ids
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Customer_Group_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.info.json:
    get:
      description: Get customers' details from store.
      operationId: CustomerInfo
      parameters:
        - description: Retrieves customer's info specified by customer id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,email,first_name,last_name
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieves customer info specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Customer"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.list.json:
    get:
      description: Get list of customers from store.
      operationId: CustomerList
      parameters:
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,email,first_name,last_name
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Customer group_id
          in: query
          name: group_id
          required: false
          schema:
            type: string
        - description: Retrieves customers specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: The numeric ID of the customer list in Demandware.
          in: query
          name: customer_list_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Customer_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.update.json:
    put:
      description: Update information of customer in store.
      operationId: CustomerUpdate
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Customer group_id
          in: query
          name: group_id
          required: false
          schema:
            type: string
        - description: Groups that will be assigned to a customer
          in: query
          name: group_ids
          required: false
          schema:
            type: string
        - description: Defines customer's first name
          in: query
          name: first_name
          required: false
          schema:
            type: string
        - description: Defines customer's last name
          in: query
          name: last_name
          required: false
          schema:
            type: string
        - description: Defines whether the newsletter subscription is available for the user
          in: query
          name: news_letter_subscription
          required: false
          schema:
            type: boolean
        - description: Customer tags
          in: query
          name: tags
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /order.abandoned.list.json:
    get:
      description: Get list of orders that were left by customers before completing the order.
      operationId: OrderAbandonedList
      parameters:
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by customer email
          in: query
          name: customer_email
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Filter empty emails
          in: query
          name: skip_empty_email
          required: false
          schema:
            default: false
            type: boolean
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: customer,totals,items
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Order_Abandoned_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.add.json:
    post:
      description: Add a new order to the cart.
      operationId: OrderAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      order_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.count.json:
    get:
      description: Count orders in store
      operationId: OrderCount
      parameters:
        - description: Counts orders quantity specified by customer id
          in: query
          name: customer_id
          required: false
          schema:
            type: string
        - description: Counts orders quantity specified by customer email
          in: query
          name: customer_email
          required: false
          schema:
            type: string
        - description: Counts orders quantity specified by order status
          in: query
          name: order_status
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by order statuses
          explode: false
          in: query
          name: order_status_ids
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Counts orders quantity specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Counts orders specified by ids
          in: query
          name: ids
          required: false
          schema:
            type: string
        - description: Counts orders specified by order ids
          in: query
          name: order_ids
          required: false
          schema:
            type: string
        - description: Counts orders quantity specified by order status
          in: query
          name: ebay_order_status
          required: false
          schema:
            type: string
        - description: Counts orders quantity specified by financial status
          in: query
          name: financial_status
          required: false
          schema:
            type: string
        - description: Create order with fulfillment status
          in: query
          name: fulfillment_status
          required: false
          schema:
            type: string
        - description: Retrieve entities according to shipping method
          in: query
          name: shipping_method
          required: false
          schema:
            type: string
        - description: Retrieves order with delivery method
          in: query
          name: delivery_method
          required: false
          schema:
            type: string
        - description: Retrieves order with ship node type
          in: query
          name: ship_node_type
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      orders_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.financial_status.list.json:
    get:
      description: Retrieve list of financial statuses
      operationId: OrderFinancialStatusList
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      order_financial_statuses:
                        items:
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.find.json:
    get:
      description: Find orders
      operationId: OrderFind
      parameters:
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by customer email
          in: query
          name: customer_email
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by order status
          in: query
          name: order_status
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: order_id,customer,totals,address,items,bundles,status
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by financial status
          in: query
          name: financial_status
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      order:
                        items:
                          $ref: "#/components/schemas/Order"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.fulfillment_status.list.json:
    get:
      description: Retrieve list of fulfillment statuses
      operationId: OrderFulfillmentStatusList
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      order_fulfillment_statuses:
                        items:
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.info.json:
    get:
      description: Info about a specific order by ID
      operationId: OrderInfo
      parameters:
        - description: Retrieves order’s info specified by order id
          in: query
          name: order_id
          required: false
          schema:
            type: string
        - description: Retrieves order info specified by id
          in: query
          name: id
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: order_id,customer,totals,address,items,bundles,status
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Defines store id where the order should be found
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: If the value is 'true' and order exist in our cache, we will return order.info response from cache
          in: query
          name: enable_cache
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Order"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.list.json:
    get:
      description: Get list of orders from store.
      operationId: OrderList
      parameters:
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by customer email
          in: query
          name: customer_email
          required: false
          schema:
            type: string
        - description: Filter orders by customer's phone number
          in: query
          name: phone
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by order status
          in: query
          name: order_status
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by order statuses
          explode: false
          in: query
          name: order_status_ids
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Used to retrieve orders via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: Set field to sort by
          in: query
          name: sort_by
          required: false
          schema:
            default: order_id
            type: string
        - description: Set sorting direction
          in: query
          name: sort_direction
          required: false
          schema:
            default: asc
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: order_id,customer,totals,address,items,bundles,status
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by ids
          in: query
          name: ids
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by order ids
          in: query
          name: order_ids
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by order status
          in: query
          name: ebay_order_status
          required: false
          schema:
            type: string
        - description: Retrieves order’s info specified by basket id.
          in: query
          name: basket_id
          required: false
          schema:
            type: string
        - description: Retrieves orders specified by financial status
          in: query
          name: financial_status
          required: false
          schema:
            type: string
        - description: Create order with fulfillment status
          in: query
          name: fulfillment_status
          required: false
          schema:
            type: string
        - description: Retrieve entities according to shipping method
          in: query
          name: shipping_method
          required: false
          schema:
            type: string
        - description: Skipped orders by ids
          in: query
          name: skip_order_ids
          required: false
          schema:
            type: string
        - description: Retrieve entities starting from the specified id.
          in: query
          name: since_id
          required: false
          schema:
            type: integer
        - description: Filter deleted orders
          in: query
          name: is_deleted
          required: false
          schema:
            type: boolean
        - description: Retrieve entities according to shipping country
          in: query
          name: shipping_country_iso3
          required: false
          schema:
            type: string
        - description: If the value is 'true', we will cache orders for a 15 minutes in order to increase speed and reduce requests throttling for some methods and shoping platforms (for example order.shipment.add)
          in: query
          name: enable_cache
          required: false
          schema:
            default: false
            type: boolean
        - description: Retrieves order with delivery method
          in: query
          name: delivery_method
          required: false
          schema:
            type: string
        - description: Retrieves order with ship node type
          in: query
          name: ship_node_type
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Order_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.refund.add.json:
    post:
      description: Add a refund to the order.
      operationId: OrderRefundAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRefundAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      refund_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.add.json:
    post:
      description: Add a shipment to the order.
      operationId: OrderShipmentAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderShipmentAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      shipment_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.delete.json:
    delete:
      description: Delete order's shipment.
      operationId: OrderShipmentDelete
      parameters:
        - description: Shipment id indicates the number of delivery
          in: query
          name: shipment_id
          required: true
          schema:
            type: string
        - description: Defines the order for which the shipment will be deleted
          in: query
          name: order_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      status:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.list.json:
    get:
      description: Get list of shipments by orders.
      operationId: OrderShipmentList
      parameters:
        - description: Retrieves shipments specified by order id
          in: query
          name: order_id
          required: true
          schema:
            type: string
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,order_id,items,tracking_numbers
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Order_Shipment_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.tracking.add.json:
    post:
      description: Add order shipment's tracking info.
      operationId: OrderShipmentTrackingAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderShipmentTrackingAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      tracking_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.update.json:
    put:
      description: Update order's shipment information.
      operationId: OrderShipmentUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderShipmentUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.status.list.json:
    get:
      description: Retrieve list of statuses
      operationId: OrderStatusList
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      cart_order_statuses:
                        items:
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.update.json:
    put:
      description: Update existing order.
      operationId: OrderUpdate
      parameters:
        - description: Defines the orders specified by order id
          in: query
          name: order_id
          required: true
          schema:
            type: string
        - description: Defines store id where the order should be found
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Defines new order's status
          in: query
          name: order_status
          required: false
          schema:
            type: string
        - description: Specifies order comment
          in: query
          name: comment
          required: false
          schema:
            type: string
        - description: Specifies admin's order comment
          in: query
          name: admin_comment
          required: false
          schema:
            type: string
        - description: Specifies private admin's order comment
          in: query
          name: admin_private_comment
          required: false
          schema:
            type: string
        - description: Specifies order's  modification date
          in: query
          name: date_modified
          required: false
          schema:
            type: string
        - description: Specifies order's  finished date
          in: query
          name: date_finished
          required: false
          schema:
            type: string
        - description: Update order financial status to specified
          in: query
          name: financial_status
          required: false
          schema:
            type: string
        - description: Create order with fulfillment status
          in: query
          name: fulfillment_status
          required: false
          schema:
            type: string
        - description: Defines order payment method.<br/>Setting order_payment_method on Shopify will also change financial_status field value to 'paid'
          in: query
          name: order_payment_method
          required: false
          schema:
            type: string
        - description: Send notifications to customer after order was created
          in: query
          name: send_notifications
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /product.add.json:
    post:
      description: Add new product to store.
      operationId: ProductAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      product_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.attribute.list.json:
    get:
      description: Get list of attributes and values.
      operationId: ProductAttributeList
      parameters:
        - description: Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Retrieves attributes specified by product id
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines product's variants specified by variant id
          in: query
          name: variant_id
          required: false
          schema:
            type: string
        - description: Retrieves info for specified attribute_id
          in: query
          name: attribute_id
          required: false
          schema:
            type: string
        - description: Filter by attribute_group_id
          in: query
          name: attribute_group_id
          required: false
          schema:
            type: string
        - description: Retrieves attributes specified by set_name in Magento
          in: query
          name: set_name
          required: false
          schema:
            type: string
        - description: Retrieves attributes specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Retrieves attributes specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Set field to sort by
          in: query
          name: sort_by
          required: false
          schema:
            default: attribute_id
            type: string
        - description: Set sorting direction
          in: query
          name: sort_direction
          required: false
          schema:
            default: asc
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: attribute_id,name
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Product_Attribute_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.attribute.value.set.json:
    post:
      description: Set attribute value to product.
      operationId: ProductAttributeValueSet
      parameters:
        - description: Defines product id where the attribute should be added
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Filter by attribute_id
          in: query
          name: attribute_id
          required: false
          schema:
            type: string
        - description: Filter by attribute_group_id
          in: query
          name: attribute_group_id
          required: false
          schema:
            type: string
        - description: Define attribute name
          in: query
          name: attribute_name
          required: false
          schema:
            type: string
        - description: Define attribute value
          in: query
          name: value
          required: false
          schema:
            type: string
        - description: Define attribute value id
          in: query
          name: value_id
          required: false
          schema:
            type: integer
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      attribute_id:
                        type: string
                      product_id:
                        type: string
                      value_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.attribute.value.unset.json:
    post:
      description: Removes attribute value for a product.
      operationId: ProductAttributeValueUnset
      parameters:
        - description: Product id
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Attribute Id
          in: query
          name: attribute_id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Boolean, whether or not to unset default value of the attribute, if applicable
          in: query
          name: include_default
          required: false
          schema:
            default: false
            type: boolean
        - description: Is reindex required
          in: query
          name: reindex
          required: false
          schema:
            default: true
            type: boolean
        - description: Is cache clear required
          in: query
          name: clear_cache
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      success:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.brand.list.json:
    get:
      description: Get list of brands from your store.
      operationId: ProductBrandList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,short_description,active,url
            type: string
        - description: Retrieves brands specified by brand ids
          in: query
          name: brand_ids
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      product:
                        items:
                          $ref: "#/components/schemas/Brand"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.child_item.find.json:
    get:
      description: Search product child item (bundled item or configurable product variant) in store catalog.
      operationId: ProductChildItemFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          schema:
            type: string
        - description: Entity search that is specified by the comma-separated unique fields
          in: query
          name: find_where
          required: false
          schema:
            default: name
            type: string
        - description: Entity search that is specified by comma-separated parameters
          in: query
          name: find_params
          required: false
          schema:
            default: whole_words
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      children:
                        items:
                          $ref: "#/components/schemas/Child"
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.child_item.info.json:
    get:
      description: Get child for specific product.
      operationId: ProductChildItemInfo
      parameters:
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Filter by parent product id
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Child"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.child_item.list.json:
    get:
      description: Get child items list of specific product(s).
      operationId: ProductChildItemList
      parameters:
        - description: Used to retrieve products child items via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Filter by parent product id
          in: query
          name: product_id
          required: false
          schema:
            type: string
        - description: Filter by parent product ids
          in: query
          name: product_ids
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Currency Id
          in: query
          name: currency_id
          required: false
          schema:
            type: string
        - description: Specifies the set of available/not available products for sale
          in: query
          name: avail_sale
          required: false
          schema:
            type: boolean
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          schema:
            type: string
        - description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Product_ChildItem_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.count.json:
    get:
      description: Count products in store.
      operationId: ProductCount
      parameters:
        - description: Counts products specified by category id
          in: query
          name: category_id
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Specifies the set of visible/invisible products
          in: query
          name: avail_view
          required: false
          schema:
            type: boolean
        - description: Specifies the set of available/not available products for sale
          in: query
          name: avail_sale
          required: false
          schema:
            type: boolean
        - description: Counts products specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Counts products specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Counts products specified by product ids
          in: query
          name: product_ids
          required: false
          schema:
            type: string
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          schema:
            type: string
        - description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          schema:
            default: false
            type: boolean
        - description: Retrieves brands specified by brand name
          in: query
          name: brand_name
          required: false
          schema:
            type: string
        - description: Defines product attributes
          explode: false
          in: query
          name: product_attributes
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      products_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.currency.add.json:
    post:
      description: Add currency and/or set default in store
      operationId: ProductCurrencyAdd
      parameters:
        - description: Specifies standardized currency code
          in: query
          name: iso3
          required: true
          schema:
            type: string
        - description: Defines the numerical identifier against to the major currency
          in: query
          name: rate
          required: true
          schema:
            type: number
        - description: Defines currency's name
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Specifies whether the currency is available
          in: query
          name: avail
          required: false
          schema:
            default: true
            type: boolean
        - description: Defines the symbol that is located before the currency
          in: query
          name: symbol_left
          required: false
          schema:
            type: string
        - description: Defines the symbol that is located after the currency
          in: query
          name: symbol_right
          required: false
          schema:
            type: string
        - description: Specifies currency's default meaning
          in: query
          name: default
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      currency_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.currency.list.json:
    get:
      description: Get list of currencies
      operationId: ProductCurrencyList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: name,iso3,default,avail
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Specifies the set of default/not default currencies
          in: query
          name: default
          required: false
          schema:
            type: boolean
        - description: Specifies the set of available/not available currencies
          in: query
          name: avail
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      currency:
                        items:
                          $ref: "#/components/schemas/Currency"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.delete.json:
    delete:
      description: Product delete
      operationId: ProductDelete
      parameters:
        - description: Product id that will be removed
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      delete_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.fields.json:
    get:
      description: Retrieve all available fields for product item in store.
      operationId: ProductFields
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.find.json:
    get:
      description: Search product in store catalog. "Apple" is specified here by default.
      operationId: ProductFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          schema:
            type: string
        - description: Entity search that is specified by the comma-separated unique fields
          in: query
          name: find_where
          required: false
          schema:
            default: name
            type: string
        - description: Entity search that is specified by comma-separated parameters
          in: query
          name: find_params
          required: false
          schema:
            default: whole_words
            type: string
        - description: Parameter's value specifies the entity that has to be found
          in: query
          name: find_what
          required: false
          schema:
            default: product
            type: string
        - description: Search products specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      product:
                        items:
                          properties:
                            description:
                              type: string
                            id:
                              type: string
                            name:
                              type: string
                            price:
                              type: number
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.image.add.json:
    post:
      description: Add image to product
      operationId: ProductImageAdd
      parameters:
        - description: Defines product id where the image should be added
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines image's name
          in: query
          name: image_name
          required: true
          schema:
            type: string
        - description: Defines image's types that are specified by comma-separated list
          in: query
          name: type
          required: true
          schema:
            enum:
              - small
              - base
              - additional
              - thumbnail
            type: string
        - description: Defines URL of the image that has to be added
          in: query
          name: url
          required: false
          schema:
            type: string
        - description: Defines alternative text that has to be attached to the picture
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.
          in: query
          name: mime
          required: false
          schema:
            type: string
        - description: Defines image’s position in the list
          in: query
          name: position
          required: false
          schema:
            default: 0
            type: integer
        - description: Content(body) encoded in base64 of image file
          in: query
          name: content
          required: false
          schema:
            type: string
        - description: Defines product's variants specified by variant id
          in: query
          name: product_variant_id
          required: false
          schema:
            type: integer
        - description: Defines product's variants ids
          in: query
          name: variant_ids
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Add product image on specified language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        type: string
                      image_path:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.image.delete.json:
    delete:
      description: Delete image
      operationId: ProductImageDelete
      parameters:
        - description: Defines product id where the image should be deleted
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Entity id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.image.update.json:
    put:
      description: Update details of image
      operationId: ProductImageUpdate
      parameters:
        - description: Defines product id where the image should be updated
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines image's name
          in: query
          name: image_name
          required: false
          schema:
            type: string
        - description: Defines image's types that are specified by comma-separated list
          in: query
          name: type
          required: false
          schema:
            default: additional
            type: string
        - description: Defines alternative text that has to be attached to the picture
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: Defines image’s position in the list
          in: query
          name: position
          required: false
          schema:
            type: integer
        - description: Defines image update specified by image id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Define is hide image
          in: query
          name: hidden
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.info.json:
    get:
      description: Get product info about product ID *** or specify other product ID.
      operationId: ProductInfo
      parameters:
        - description: Retrieves product's info specified by product id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,description,price,categories_ids
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieves product info specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Retrieves product info specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Currency Id
          in: query
          name: currency_id
          required: false
          schema:
            type: string
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          schema:
            type: string
        - description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Product"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.list.json:
    get:
      description: Get list of products from your store. Returns 10 products by default.
      operationId: ProductList
      parameters:
        - description: Used to retrieve products via cursor-based pagination (it can't be used with any other filtering parameter)
          in: query
          name: page_cursor
          required: false
          schema:
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,description,price,categories_ids
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieves products specified by category id
          in: query
          name: category_id
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Specifies the set of visible/invisible products
          in: query
          name: avail_view
          required: false
          schema:
            type: boolean
        - description: Specifies the set of available/not available products for sale
          in: query
          name: avail_sale
          required: false
          schema:
            type: boolean
        - description: Retrieves products specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Retrieves products specified by language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Currency Id
          in: query
          name: currency_id
          required: false
          schema:
            type: string
        - description: Retrieves products specified by product ids
          in: query
          name: product_ids
          required: false
          schema:
            type: string
        - description: Retrieve entities starting from the specified id.
          in: query
          name: since_id
          required: false
          schema:
            type: integer
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          schema:
            type: string
        - description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          schema:
            default: false
            type: boolean
        - description: Set field to sort by
          in: query
          name: sort_by
          required: false
          schema:
            default: id
            type: string
        - description: Set sorting direction
          in: query
          name: sort_direction
          required: false
          schema:
            default: asc
            type: string
        - description: Filter by product's sku
          in: query
          name: sku
          required: false
          schema:
            type: string
        - description: Disable cache for current request
          in: query
          name: disable_cache
          required: false
          schema:
            default: false
            type: boolean
        - description: Retrieves brands specified by brand name
          in: query
          name: brand_name
          required: false
          schema:
            type: string
        - description: Defines product attributes
          explode: false
          in: query
          name: product_attributes
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model_Response_Product_List"
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.manufacturer.add.json:
    post:
      description: Add manufacturer to store and assign to product
      operationId: ProductManufacturerAdd
      parameters:
        - description: Defines products specified by product id
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines product’s manufacturer's name
          in: query
          name: manufacturer
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      manufacturer_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.add.json:
    post:
      description: Add product option from store.
      operationId: ProductOptionAdd
      parameters:
        - description: Defines option's name
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Defines option's type that has to be added
          in: query
          name: type
          required: true
          schema:
            enum:
              - option_type_select
              - option_type_text
              - option_type_radio
              - option_type_checkbox
              - option_type_textarea
              - option_type_readonly
              - option_type_multiselect
              - option_type_multicheckbox
              - option_type_file
              - option_type_date
              - option_type_datetime
              - option_type_time
            type: string
        - description: Defines product id where the option should be added
          in: query
          name: product_id
          required: false
          schema:
            type: string
        - description: Defines default option value that has to be added
          in: query
          name: default_option_value
          required: false
          schema:
            type: string
        - description: Defines option values that has to be added
          in: query
          name: option_values
          required: false
          schema:
            type: string
        - description: Defines option's description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Defines whether the option is available
          in: query
          name: avail
          required: false
          schema:
            default: true
            type: boolean
        - description: Sort number in the list
          in: query
          name: sort_order
          required: false
          schema:
            default: 0
            type: integer
        - description: Defines if the option is required
          in: query
          name: required
          required: false
          schema:
            default: false
            type: boolean
        - description: Is cache clear required
          in: query
          name: clear_cache
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      option_id:
                        type: string
                      product_option_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.assign.json:
    post:
      description: Assign option from product.
      operationId: ProductOptionAssign
      parameters:
        - description: Defines product id where the option should be assigned
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines option id which has to be assigned
          in: query
          name: option_id
          required: true
          schema:
            type: integer
        - description: Defines if the option is required
          in: query
          name: required
          required: false
          schema:
            default: false
            type: boolean
        - description: Sort number in the list
          in: query
          name: sort_order
          required: false
          schema:
            default: 0
            type: integer
        - description: Defines option values that has to be assigned
          in: query
          name: option_values
          required: false
          schema:
            type: string
        - description: Is cache clear required
          in: query
          name: clear_cache
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      product_option_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.list.json:
    get:
      description: Get list of options.
      operationId: ProductOptionList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,description
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieves products' options specified by product id
          in: query
          name: product_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      option:
                        items:
                          $ref: "#/components/schemas/Product_Option"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.value.add.json:
    post:
      description: Add product option item from option.
      operationId: ProductOptionValueAdd
      parameters:
        - description: Defines product id where the option value should be added
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines option id where the value has to be added
          in: query
          name: option_id
          required: true
          schema:
            type: integer
        - description: Defines option value that has to be added
          in: query
          name: option_value
          required: true
          schema:
            type: string
        - description: Sort number in the list
          in: query
          name: sort_order
          required: false
          schema:
            default: 0
            type: integer
        - description: Is cache clear required
          in: query
          name: clear_cache
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      option_value_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.value.assign.json:
    post:
      description: Assign product option item from product.
      operationId: ProductOptionValueAssign
      parameters:
        - description: Defines product's option id where the value has to be assigned
          in: query
          name: product_option_id
          required: true
          schema:
            type: integer
        - description: Defines value id that has to be assigned
          in: query
          name: option_value_id
          required: true
          schema:
            type: integer
        - description: Is cache clear required
          in: query
          name: clear_cache
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      product_option_value_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.value.update.json:
    put:
      description: Update product option item from option.
      operationId: ProductOptionValueUpdate
      parameters:
        - description: Defines product id where the option value should be updated
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines option id where the value has to be updated
          in: query
          name: option_id
          required: true
          schema:
            type: integer
        - description: Defines value id that has to be assigned
          in: query
          name: option_value_id
          required: true
          schema:
            type: integer
        - description: Defines option value that has to be added
          in: query
          name: option_value
          required: true
          schema:
            type: string
        - description: Defines new product option price
          in: query
          name: price
          required: false
          schema:
            type: number
        - description: Defines new products' options quantity
          in: query
          name: quantity
          required: false
          schema:
            type: number
        - description: Is cache clear required
          in: query
          name: clear_cache
          required: false
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.price.add.json:
    post:
      description: Add some prices to the product.
      operationId: ProductPriceAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPriceAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      status:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.price.delete.json:
    delete:
      description: Delete some prices of the product
      operationId: ProductPriceDelete
      parameters:
        - description: Defines the product where the price has to be deleted
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines product's group prices
          in: query
          name: group_prices
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.price.update.json:
    put:
      description: Update some prices of the product.
      operationId: ProductPriceUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPriceUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.review.list.json:
    get:
      description: Get reviews of a specific product.
      operationId: ProductReviewList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Product id
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Retrieves reviews specified by ids
          in: query
          name: ids
          required: false
          schema:
            type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Defines status
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,customer_id,email,message,status
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      reviews:
                        items:
                          $ref: "#/components/schemas/Product_Review"
                        type: array
                      total_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.store.assign.json:
    post:
      description: Assign product to store
      operationId: ProductStoreAssign
      parameters:
        - description: Defines id of the product which should be assigned to a store
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines id of the store product should be assigned to
          in: query
          name: store_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.tax.add.json:
    post:
      description: Add tax class and tax rate to store and assign to product.
      operationId: ProductTaxAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductTaxAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      tax_class_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.update.json:
    put:
      description: Update price and quantity for a specific product
      operationId: ProductUpdate
      parameters:
        - description: Defines product id that has to be updated
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Defines product model that has to be updated
          in: query
          name: model
          required: false
          schema:
            type: string
        - description: Defines product's old price
          in: query
          name: old_price
          required: false
          schema:
            type: number
        - description: Defines new product's price
          in: query
          name: price
          required: false
          schema:
            type: number
        - description: Defines new product's special price
          in: query
          name: special_price
          required: false
          schema:
            type: number
        - description: Defines the date of special price creation
          in: query
          name: sprice_create
          required: false
          schema:
            type: string
        - description: Defines the term of special price offer duration
          in: query
          name: sprice_expire
          required: false
          schema:
            type: string
        - description: Defines new product's cost price
          in: query
          name: cost_price
          required: false
          schema:
            type: number
        - description: Defines new product's retail price
          in: query
          name: retail_price
          required: false
          schema:
            type: number
        - description: Defines new product's quantity
          in: query
          name: quantity
          required: false
          schema:
            type: number
        - description: Weight
          in: query
          name: weight
          required: false
          schema:
            type: number
        - description: Defines the incremental changes in product quantity
          in: query
          name: increase_quantity
          required: false
          schema:
            type: number
        - description: Defines the decrement changes in product quantity
          in: query
          name: reduce_quantity
          required: false
          schema:
            type: number
        - description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
          in: query
          name: warehouse_id
          required: false
          schema:
            type: string
        - description: This parameter allows to reserve/unreserve product quantity.
          in: query
          name: reserve_quantity
          required: false
          schema:
            type: number
        - description: Defines inventory tracking for product
          in: query
          name: manage_stock
          required: false
          schema:
            type: boolean
        - description: Set backorder status
          in: query
          name: backorder_status
          required: false
          schema:
            type: string
        - description: Defines product's name that has to be updated
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Defines new product's sku
          in: query
          name: sku
          required: false
          schema:
            type: string
        - description: Set visibility status
          in: query
          name: visible
          required: false
          schema:
            type: string
        - description: Defines product's manufacturer
          in: query
          name: manufacturer
          required: false
          schema:
            type: string
        - description: Defines product's manufacturer by manufacturer_id
          in: query
          name: manufacturer_id
          required: false
          schema:
            type: string
        - description: Defines product add that is specified by comma-separated categories id
          in: query
          name: categories_ids
          required: false
          schema:
            type: string
        - description: Defines new product's description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Defines short description
          in: query
          name: short_description
          required: false
          schema:
            type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          schema:
            type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          schema:
            type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          schema:
            type: string
        - description: Defines store id where the product should be found
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          schema:
            type: string
        - description: Set stock status
          in: query
          name: in_stock
          required: false
          schema:
            type: boolean
        - description: Defines product's status
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Defines unique URL for SEO
          in: query
          name: seo_url
          required: false
          schema:
            type: string
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          schema:
            type: string
        - description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          schema:
            default: false
            type: boolean
        - description: Is reindex required
          in: query
          name: reindex
          required: false
          schema:
            default: true
            type: boolean
        - description: Product tags
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: Is cache clear required
          in: query
          name: clear_cache
          required: false
          schema:
            default: true
            type: boolean
        - description: Global Trade Item Number. An GTIN is an identifier for trade items.
          in: query
          name: gtin
          required: false
          schema:
            type: string
        - description: Specifies whether a tax is charged
          in: query
          name: taxable
          required: false
          schema:
            default: true
            type: boolean
        - description: A categorization for the product
          in: query
          name: product_class
          required: false
          schema:
            type: string
        - description: Defines product's height
          in: query
          name: height
          required: false
          schema:
            type: number
        - description: Defines product's length
          in: query
          name: length
          required: false
          schema:
            type: number
        - description: Defines product's width
          in: query
          name: width
          required: false
          schema:
            type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.add.json:
    post:
      description: Add variant to product.
      operationId: ProductVariantAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariantAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      product_variant_id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.count.json:
    get:
      description: Get count variants.
      operationId: ProductVariantCount
      parameters:
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Counts products’ variants specified by category id
          in: query
          name: category_id
          required: false
          schema:
            type: string
        - description: Retrieves products' variants specified by product id
          in: query
          name: product_id
          required: false
          schema:
            type: string
        - description: Retrieves variants specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      variants_count:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.delete.json:
    delete:
      description: Delete variant.
      operationId: ProductVariantDelete
      parameters:
        - description: Defines variant removal, specified by variant id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Defines product's id where the variant has to be deleted
          in: query
          name: product_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.image.add.json:
    post:
      description: Add image to product
      operationId: ProductVariantImageAdd
      parameters:
        - description: Defines product id where the variant image has to be added
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: Defines product's variants specified by variant id
          in: query
          name: product_variant_id
          required: true
          schema:
            type: integer
        - description: Defines image's name
          in: query
          name: image_name
          required: true
          schema:
            type: string
        - description: Defines image's types that are specified by comma-separated list
          in: query
          name: type
          required: true
          schema:
            default: base
            enum:
              - small
              - base
              - additional
              - thumbnail
            type: string
        - description: Defines URL of the image that has to be added
          in: query
          name: url
          required: false
          schema:
            type: string
        - description: Content(body) encoded in base64 of image file
          in: query
          name: content
          required: false
          schema:
            type: string
        - description: Defines alternative text that has to be attached to the picture
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.
          in: query
          name: mime
          required: false
          schema:
            type: string
        - description: Defines image’s position in the list
          in: query
          name: position
          required: false
          schema:
            default: 0
            type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        type: string
                      image_path:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.info.json:
    get:
      description: Get variant info.
      operationId: ProductVariantInfo
      parameters:
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,description,price
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieves variant's info specified by variant id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Retrieves variant info specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/Product"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.list.json:
    get:
      description: Get list variants.
      operationId: ProductVariantList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,name,description,price
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          schema:
            type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          schema:
            type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          schema:
            type: string
        - description: Retrieves products’ variants specified by category id
          in: query
          name: category_id
          required: false
          schema:
            type: string
        - description: Retrieves products' variants specified by product id
          in: query
          name: product_id
          required: false
          schema:
            type: string
        - description: Retrieves variants specified by store id
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      variant:
                        items:
                          $ref: "#/components/schemas/Product"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.price.add.json:
    post:
      description: Add some prices to the product variant.
      operationId: ProductVariantPriceAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariantPriceAdd"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      status:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.price.delete.json:
    delete:
      description: Delete some prices of the product variant.
      operationId: ProductVariantPriceDelete
      parameters:
        - description: Defines the variant where the price has to be deleted
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Defines variants's group prices
          in: query
          name: group_prices
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.price.update.json:
    put:
      description: Update some prices of the product variant.
      operationId: ProductVariantPriceUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariantPriceUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.update.json:
    put:
      description: Update variant.
      operationId: ProductVariantUpdate
      parameters:
        - description: Defines store id where the variant should be found
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Defines variant update specified by variant id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Defines product's id where the variant has to be updated
          in: query
          name: product_id
          required: true
          schema:
            type: string
        - description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
          in: query
          name: warehouse_id
          required: false
          schema:
            type: string
        - description: This parameter allows to reserve/unreserve product variants quantity.
          in: query
          name: reserve_quantity
          required: false
          schema:
            type: number
        - description: Defines new products' variants quantity
          in: query
          name: quantity
          required: false
          schema:
            type: number
        - description: Defines the incremental changes in product quantity
          in: query
          name: increase_quantity
          required: false
          schema:
            default: 0
            type: number
        - description: Defines the decrement changes in product quantity
          in: query
          name: reduce_quantity
          required: false
          schema:
            default: 0
            type: number
        - description: Defines new product's variant price
          in: query
          name: price
          required: false
          schema:
            type: number
        - description: Defines new product's variant special price
          in: query
          name: special_price
          required: false
          schema:
            type: number
        - description: Defines new product's retail price
          in: query
          name: retail_price
          required: false
          schema:
            type: number
        - description: Defines product's old price
          in: query
          name: old_price
          required: false
          schema:
            type: number
        - description: Defines new product's cost price
          in: query
          name: cost_price
          required: false
          schema:
            type: number
        - description: Defines the date of special price creation
          in: query
          name: sprice_create
          required: false
          schema:
            type: string
        - description: Defines the term of special price offer duration
          in: query
          name: sprice_expire
          required: false
          schema:
            type: string
        - description: Defines inventory tracking for product variant
          in: query
          name: manage_stock
          required: false
          schema:
            type: boolean
        - description: Set stock status
          in: query
          name: in_stock
          required: false
          schema:
            type: boolean
        - description: Defines variant's name that has to be updated
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Specifies variant's description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Defines new product's variant sku
          in: query
          name: sku
          required: false
          schema:
            type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          schema:
            type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          schema:
            type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          schema:
            type: string
        - description: Defines short description
          in: query
          name: short_description
          required: false
          schema:
            type: string
        - description: Set visibility status
          in: query
          name: visible
          required: false
          schema:
            type: string
        - description: Defines product variant's status
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Set backorder status
          in: query
          name: backorder_status
          required: false
          schema:
            type: string
        - description: Weight
          in: query
          name: weight
          required: false
          schema:
            default: 0
            type: number
        - description: A barcode is a unique code composed of numbers used as a product identifier.
          in: query
          name: barcode
          required: false
          schema:
            type: string
        - description: Is reindex required
          in: query
          name: reindex
          required: false
          schema:
            default: true
            type: boolean
        - description: Specifies whether a tax is charged
          in: query
          name: taxable
          required: false
          schema:
            default: true
            type: boolean
        - description: Defines variant's options list
          explode: false
          in: query
          name: options
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated_items:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /subscriber.list.json:
    get:
      description: Get subscribers list
      operationId: SubscriberList
      parameters:
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: Filter by subscription status
          in: query
          name: subscribed
          required: false
          schema:
            default: true
            type: boolean
        - description: Store Id
          in: query
          name: store_id
          required: false
          schema:
            type: string
        - description: Filter subscribers by email
          in: query
          name: email
          required: false
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: force_all
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      subscribers:
                        items:
                          $ref: "#/components/schemas/Subscriber"
                        type: array
                      total_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - subscriber
  /tax.class.info.json:
    get:
      description: Get info about tax
      operationId: TaxClassInfo
      parameters:
        - description: Retrieves taxes specified by class id
          in: query
          name: tax_class_id
          required: true
          schema:
            type: string
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: tax_class_id,name,avail
            type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    $ref: "#/components/schemas/TaxClass"
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - tax
  /webhook.count.json:
    get:
      description: Count registered webhooks on the store.
      operationId: WebhookCount
      parameters:
        - description: The entity you want to filter webhooks by (e.g. order or product)
          in: query
          name: entity
          required: false
          schema:
            type: string
        - description: The action you want to filter webhooks by (e.g. order or product)
          in: query
          name: action
          required: false
          schema:
            type: string
        - description: The webhook status you want to filter webhooks by
          in: query
          name: active
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      webhook_count:
                        type: integer
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.create.json:
    post:
      description: Create webhook on the store and subscribe to it.
      operationId: WebhookCreate
      parameters:
        - description: Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)
          in: query
          name: entity
          required: true
          schema:
            type: string
        - description: Specify what action (event) will trigger the webhook (e.g add, delete, or update)
          in: query
          name: action
          required: true
          schema:
            type: string
        - description: Callback where the webhook should send the POST request when the event occurs
          in: query
          name: callback
          required: true
          schema:
            type: string
        - description: The name you give to the webhook
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: Fields the webhook should send
          in: query
          name: fields
          required: false
          schema:
            default: id
            type: string
        - description: Webhook status
          in: query
          name: active
          required: false
          schema:
            default: true
            type: boolean
        - description: Defines store id where the webhook should be assigned
          in: query
          name: store_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      id:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.delete.json:
    delete:
      description: Delete registered webhook on the store.
      operationId: WebhookDelete
      parameters:
        - description: Webhook id
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      deleted:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.events.json:
    get:
      description: List all Webhooks that are available on this store.
      operationId: WebhookEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      events:
                        items:
                          properties:
                            action:
                              type: string
                            entity:
                              type: string
                            webhook_name:
                              type: string
                          type: object
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.list.json:
    get:
      description: List registered webhook on the store.
      operationId: WebhookList
      parameters:
        - description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          schema:
            default: id,entity,action,callback
            type: string
        - description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          schema:
            default: 0
            type: integer
        - description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          schema:
            default: 10
            type: integer
        - description: The entity you want to filter webhooks by (e.g. order or product)
          in: query
          name: entity
          required: false
          schema:
            type: string
        - description: The action you want to filter webhooks by (e.g. add, update, or delete)
          in: query
          name: action
          required: false
          schema:
            type: string
        - description: The webhook status you want to filter webhooks by
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: List of сomma-separated webhook ids
          in: query
          name: ids
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      webhook:
                        items:
                          $ref: "#/components/schemas/Webhook"
                        type: array
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.update.json:
    put:
      description: Update Webhooks parameters.
      operationId: WebhookUpdate
      parameters:
        - description: Webhook id
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Callback where the webhook should send the POST request when the event occurs
          in: query
          name: callback
          required: false
          schema:
            type: string
        - description: The name you give to the webhook
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: Fields the webhook should send
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: Webhook status
          in: query
          name: active
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    properties:
                      updated:
                        type: string
                    type: object
                  return_code:
                    type: integer
                  return_message:
                    type: string
                type: object
          description: successful operation
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
components:
  schemas:
    A2CDateTime:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        format:
          type: string
        value:
          type: string
      type: object
    AccountCartAdd:
      properties:
        3dcart_access_token:
          description: 3DCart Token
          type: string
        3dcart_private_key:
          description: 3DCart Private Key
          type: string
        3dcartapi_api_key:
          description: 3DCart API Key
          type: string
        amazon_access_key_id:
          description: Amazon Secret Key Id
          type: string
        amazon_access_token:
          description: MWS Auth Token. Access token authorizing the app to access resources on behalf of a user
          type: string
        amazon_marketplaces_ids:
          description: Amazon Marketplace IDs comma separated string
          type: string
        amazon_secret_key:
          description: Amazon Secret Key
          type: string
        amazon_seller_id:
          description: Amazon Seller ID (Merchant token)
          type: string
        amazon_sp_api_environment:
          default: production
          description: Amazon SP API environment
          type: string
        amazon_sp_aws_region:
          description: Amazon AWS Region
          enum:
            - eu-west-1
            - us-east-1
            - us-west-2
          type: string
        amazon_sp_aws_role_arn:
          description: Amazon AWS Role ARN
          type: string
        amazon_sp_aws_user_key_id:
          description: Amazon AWS user access key ID
          type: string
        amazon_sp_aws_user_secret:
          description: Amazon AWS user secret access key
          type: string
        amazon_sp_client_id:
          description: Amazon SP API app client id
          type: string
        amazon_sp_client_secret:
          description: Amazon SP API app client secret
          type: string
        amazon_sp_refresh_token:
          description: Amazon SP API OAuth refresh token
          type: string
        aspdotnetstorefront_api_pass:
          description: AspDotNetStorefront API Password
          type: string
        aspdotnetstorefront_api_user:
          description: It's a AspDotNetStorefront account for which API is available
          type: string
        bigcommerceapi_access_token:
          description: Access token authorizing the app to access resources on behalf of a user
          type: string
        bigcommerceapi_admin_account:
          description: It's a BigCommerce account for which API is enabled
          type: string
        bigcommerceapi_api_key:
          description: Bigcommerce API Key
          type: string
        bigcommerceapi_api_path:
          description: BigCommerce API URL
          type: string
        bigcommerceapi_client_id:
          description: Client ID of the requesting app
          type: string
        bigcommerceapi_context:
          description: API Path section unique to the store
          type: string
        bridge_url:
          description: This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
          type: string
        cart_id:
          description: Store’s identifier which you can get from cart_list method
          enum:
            - 3DCart
            - 3DCartApi
            - AceShop
            - AmazonSP
            - Amazon
            - AspDotNetStorefront
            - BigcommerceApi
            - Creloaded
            - CommerceHQ
            - Cscart
            - Cubecart
            - Demandware
            - EBay
            - Ecwid
            - Etsy
            - Gambio
            - Interspire
            - JooCart
            - Magento1212
            - MijoShop
            - Neto
            - Opencart14
            - LightSpeed
            - Oscmax2
            - Oscommerce22ms2
            - Oxid
            - Pinnacle
            - Prestashop
            - SSPremium
            - Shopify
            - Squarespace
            - Shopware
            - ShopwareApi
            - Tomatocart
            - Ubercart
            - Virtuemart
            - Volusion
            - WPecommerce
            - Walmart
            - WebAsyst
            - Woocommerce
            - Xcart
            - Xtcommerce
            - XtcommerceVeyton
            - Zencart137
            - Hybris
          type: string
        commercehq_api_key:
          description: CommerceHQ api key
          type: string
        commercehq_api_password:
          description: CommerceHQ api password
          type: string
        db_tables_prefix:
          description: DB tables prefix
          type: string
        demandware_api_password:
          description: Demandware api password
          type: string
        demandware_client_id:
          description: Demandware client id
          type: string
        demandware_env_type:
          default: production
          description: Demandware environment
          type: string
        demandware_user_name:
          description: Demandware user name
          type: string
        demandware_user_password:
          description: Demandware user password
          type: string
        ebay_access_token:
          description: Used to authenticate API requests.
          type: string
        ebay_client_id:
          description: Application ID (AppID).
          type: string
        ebay_client_secret:
          description: Shared Secret from eBay application
          type: string
        ebay_environment:
          default: production
          description: eBay environment
          type: string
        ebay_refresh_token:
          description: Used to renew the access token.
          type: string
        ebay_runame:
          description: The RuName value that eBay assigns to your application.
          type: string
        ebay_site_id:
          default: 0
          description: eBay global ID
          type: integer
        ecwid_acess_token:
          description: Access token authorizing the app to access resources on behalf of a user
          type: string
        ecwid_store_id:
          description: Store Id
          type: string
        etsy_access_token:
          description: Access token authorizing the app to access resources on behalf of a user
          type: string
        etsy_keystring:
          description: Etsy keystring
          type: string
        etsy_shared_secret:
          description: Etsy shared secret
          type: string
        etsy_token_secret:
          description: Secret token authorizing the app to access resources on behalf of a user
          type: string
        ftp_host:
          description: FTP connection host
          type: string
        ftp_password:
          description: FTP Password
          type: string
        ftp_port:
          description: FTP Port
          type: integer
        ftp_store_dir:
          description: FTP Store dir
          type: string
        ftp_user:
          description: FTP User
          type: string
        hybris_client_id:
          description: Omni Commerce Connector Client ID
          type: string
        hybris_client_secret:
          description: Omni Commerce Connector Client Secret
          type: string
        hybris_password:
          description: User password
          type: string
        hybris_username:
          description: User Name
          type: string
        hybris_websites:
          description: Websites to stores mapping data
          items:
            properties:
              storeIds:
                items:
                  type: string
                minItems: 1
                type: array
              uid:
                type: string
              url:
                type: string
            required:
              - uid
              - url
              - storeIds
            type: object
          minItems: 1
          type: array
        lightspeed_api_key:
          description: LightSpeed api key
          type: string
        lightspeed_api_secret:
          description: LightSpeed api secret
          type: string
        neto_api_key:
          description: Neto API Key
          type: string
        neto_api_username:
          description: Neto User Name
          type: string
        shopify_access_token:
          description: Access token authorizing the app to access resources on behalf of a user
          type: string
        shopify_api_key:
          description: Shopify API Key
          type: string
        shopify_api_password:
          description: Shopify API Password
          type: string
        shopify_shared_secret:
          description: Shared secret
          type: string
        shopware_api_key:
          description: Shopware api key
          type: string
        shopware_api_secret:
          description: Shopware client secret access key
          type: string
        squarespace_api_key:
          description: Squarespace API Key
          type: string
        store_key:
          description: Set this parameter if bridge is already uploaded to store
          type: string
        store_root:
          description: Absolute path to the store root directory (used with "bridge_url" parameter)
          type: string
        store_url:
          description: A web address of a store that you would like to connect to API2Cart
          type: string
        validate_version:
          default: false
          description: Specify if api2cart should validate cart version
          type: boolean
        verify:
          default: true
          description: Enables or disables cart's verification
          type: boolean
        volusion_login:
          description: It's a Volusion account for which API is enabled
          type: string
        volusion_password:
          description: Volusion API Password
          type: string
        walmart_channel_type:
          description: Walmart WM_CONSUMER.CHANNEL.TYPE header
          type: string
        walmart_client_id:
          description: Walmart client ID
          type: string
        walmart_client_secret:
          description: Walmart client secret
          type: string
        walmart_environment:
          default: production
          description: Walmart environment
          type: string
      required:
        - cart_id
        - store_url
        - amazon_sp_client_id
        - amazon_sp_client_secret
        - amazon_sp_aws_user_key_id
        - amazon_sp_aws_user_secret
        - amazon_sp_aws_region
        - amazon_sp_aws_role_arn
        - amazon_sp_refresh_token
      type: object
    BaseCustomer:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        email:
          type: string
        first_name:
          type: string
        id:
          type: string
        last_name:
          type: string
        phone:
          type: string
      type: object
    Basket:
      properties:
        additional_fields:
          type: object
        basket_products:
          items:
            $ref: "#/components/schemas/Basket_Item"
          type: array
        basket_url:
          type: string
        created_at:
          $ref: "#/components/schemas/A2CDateTime"
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          type: object
        customer:
          $ref: "#/components/schemas/BaseCustomer"
        id:
          type: string
        modified_at:
          $ref: "#/components/schemas/A2CDateTime"
      type: object
    Basket_Item:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        options:
          items:
            $ref: "#/components/schemas/Basket_Item_Option"
          type: array
        parent_id:
          type: string
        price:
          type: number
        product_id:
          type: string
        quantity:
          type: number
        sku:
          type: string
        tax:
          type: number
        variant_id:
          type: string
        weight:
          type: number
        weight_unit:
          type: string
      type: object
    Basket_Item_Option:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        used_in_combination:
          type: boolean
        value:
          type: string
        value_id:
          type: string
      type: object
    Basket_LiveShippingService:
      properties:
        additional_fields:
          type: object
        callback:
          type: string
        callback_err_cnt:
          type: integer
        custom_fields:
          type: object
        enabled_on_store:
          type: boolean
        id:
          type: string
        name:
          type: string
      type: object
    Brand:
      properties:
        active:
          type: boolean
        additional_fields:
          type: object
        created_time:
          type: string
        custom_fields:
          type: object
        full_description:
          type: string
        id:
          type: string
        images:
          items:
            $ref: "#/components/schemas/Image"
          type: array
        meta_description:
          type: string
        meta_keywords:
          type: string
        meta_title:
          type: string
        modified_time:
          type: string
        name:
          type: string
        short_description:
          type: string
        stores_ids:
          items:
            type: string
          type: array
        url:
          type: string
      type: object
    Carrier:
      properties:
        active:
          type: boolean
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        shipping_methods:
          items:
            $ref: "#/components/schemas/Order_ShippingMethod"
          type: array
      type: object
    Cart:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        db_prefix:
          type: string
        name:
          type: string
        shipping_zones:
          items:
            $ref: "#/components/schemas/Cart_ShippingZone"
          type: array
        stores_info:
          items:
            $ref: "#/components/schemas/Cart_StoreInfo"
          type: array
        url:
          type: string
        version:
          type: string
        warehouses:
          items:
            $ref: "#/components/schemas/Cart_Warehouse"
          type: array
      type: object
    CartConfigUpdate:
      properties:
        custom_fields:
          description: This parameter sets the list of params to the shopping cart.
          type: object
        db_tables_prefix:
          description: This parameter is deprecated for this method. Please, use this parameter in method account.config.update
          type: string
        store_id:
          description: Store Id
          type: string
      type: object
    CartCouponAdd:
      properties:
        action_amount:
          description: Defines the discount amount value.
          type: number
        action_apply_to:
          description: Defines where discount should be applied
          enum:
            - order_total
            - item_price
            - shipping
          type: string
        action_condition_entity:
          description: Defines entity for action condition.
          type: string
        action_condition_key:
          description: Defines entity attribute code for action condition.
          type: string
        action_condition_operator:
          description: Defines condition operator.
          type: string
        action_condition_value:
          description: Defines condition attribute value/s. Can be comma separated string.
          type: string
        action_scope:
          description: Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.
          enum:
            - order
            - matching_items
          type: string
        action_type:
          description: Coupon discount type
          enum:
            - percent
            - fixed
          type: string
        code:
          description: Coupon code
          type: string
        codes:
          description: Entity codes
          items:
            type: string
          type: array
        date_end:
          description: Defines when discount code will be expired.
          type: string
        date_start:
          default: now
          description: Defines when discount code will be available.
          type: string
        name:
          description: Coupon name
          type: string
        store_id:
          description: Store Id
          type: string
        usage_limit:
          description: Usage limit for coupon.
          type: integer
        usage_limit_per_customer:
          description: Usage limit per customer.
          type: integer
      required:
        - code
        - action_type
        - action_apply_to
        - action_scope
        - action_amount
      type: object
    Cart_Channel:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        is_enabled:
          type: boolean
        name:
          type: string
        platform:
          type: string
      type: object
    Cart_MetaData:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        key:
          type: string
        namespace:
          type: string
        value:
          type: string
      type: object
    Cart_ShippingZone:
      properties:
        additional_fields:
          type: object
        code:
          type: string
        country:
          type: string
        country_iso2_codes:
          items:
            type: string
          type: array
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
      type: object
    Cart_StoreInfo:
      properties:
        active:
          type: boolean
        additional_fields:
          type: object
        carrier_info:
          items:
            $ref: "#/components/schemas/Carrier"
          type: array
        channels:
          items:
            $ref: "#/components/schemas/Cart_Channel"
          type: array
        country:
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          type: object
        default_warehouse_id:
          type: string
        dimension_unit:
          type: string
        language:
          type: string
        multi_store_url:
          type: string
        name:
          type: string
        prices_include_tax:
          type: boolean
        root_category_id:
          type: string
        store_currencies:
          items:
            $ref: "#/components/schemas/Currency"
          type: array
        store_id:
          type: string
        store_languages:
          items:
            $ref: "#/components/schemas/Language"
          type: array
        store_owner_info:
          $ref: "#/components/schemas/Info"
        timezone:
          type: string
        weight_unit:
          type: string
      type: object
    Cart_Warehouse:
      properties:
        additional_fields:
          type: object
        address:
          $ref: "#/components/schemas/Customer_Address"
        avail:
          type: boolean
        carriers_ids:
          items:
            type: string
          type: array
        custom_fields:
          type: object
        description:
          type: string
        id:
          type: string
        name:
          type: string
        stores_ids:
          items:
            type: string
          type: array
      type: object
    CatalogPriceRule:
      properties:
        actions:
          items:
            $ref: "#/components/schemas/CatalogPriceRule_Action"
          type: array
        additional_fields:
          type: object
        avail:
          type: boolean
        conditions:
          items:
            $ref: "#/components/schemas/Coupon_Condition"
          type: array
        created_time:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        date_end:
          $ref: "#/components/schemas/A2CDateTime"
        date_start:
          $ref: "#/components/schemas/A2CDateTime"
        description:
          type: string
        gid:
          type: string
        id:
          type: string
        name:
          type: string
        short_description:
          type: string
        type:
          type: string
        usage_count:
          type: number
        uses_per_order_limit:
          type: integer
      type: object
    CatalogPriceRule_Action:
      properties:
        additional_fields:
          type: object
        apply_to:
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/Coupon_Condition"
          type: array
        currency_code:
          type: string
        custom_fields:
          type: object
        quantity:
          type: number
        scope:
          type: string
        type:
          type: string
        value:
          type: number
      type: object
    Category:
      properties:
        additional_fields:
          type: object
        avail:
          type: boolean
        created_at:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        description:
          type: string
        id:
          type: string
        images:
          items:
            $ref: "#/components/schemas/Image"
          type: array
        keywords:
          type: string
        meta_description:
          type: string
        meta_title:
          type: string
        modified_at:
          $ref: "#/components/schemas/A2CDateTime"
        name:
          type: string
        parent_id:
          type: string
        path:
          type: string
        seo_url:
          type: string
        short_description:
          type: string
        sort_order:
          type: integer
        stores_ids:
          items:
            type: string
          type: array
      type: object
    Child:
      properties:
        additional_fields:
          type: object
        advanced_price:
          items:
            $ref: "#/components/schemas/Product_AdvancedPrice"
          type: array
        allow_backorders:
          type: boolean
        avail_for_sale:
          type: boolean
        combination:
          items:
            properties:
              option_id:
                type: string
              option_value_id:
                type: string
            type: object
          type: array
        cost_price:
          type: number
        created_time:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        default_price:
          type: number
        default_qty_in_pack:
          type: number
        dimensions_unit:
          type: string
        ean:
          type: string
        full_description:
          type: string
        gtin:
          type: string
        height:
          type: number
        id:
          type: string
        images:
          items:
            $ref: "#/components/schemas/Image"
          type: array
        in_stock:
          type: boolean
        inventory:
          items:
            $ref: "#/components/schemas/Product_Inventory"
          type: array
        inventory_level:
          type: number
        is_qty_in_pack_fixed:
          type: boolean
        length:
          type: number
        list_price:
          type: number
        manage_stock:
          type: boolean
        min_quantity:
          type: number
        modified_time:
          $ref: "#/components/schemas/A2CDateTime"
        mpn:
          type: string
        name:
          type: string
        parent_id:
          type: string
        short_description:
          type: string
        sku:
          type: string
        sort_order:
          type: integer
        tax_class_id:
          type: string
        upc:
          type: string
        weight:
          type: number
        weight_unit:
          type: string
        wholesale_price:
          type: number
        width:
          type: number
      type: object
    Country:
      properties:
        additional_fields:
          type: object
        code2:
          type: string
        code3:
          type: string
        custom_fields:
          type: object
        name:
          type: string
      type: object
    Coupon:
      properties:
        actions:
          items:
            $ref: "#/components/schemas/Coupon_Action"
          type: array
        additional_fields:
          type: object
        avail:
          type: boolean
        code:
          type: string
        codes:
          items:
            $ref: "#/components/schemas/Coupon_Code"
          type: array
        conditions:
          items:
            $ref: "#/components/schemas/Coupon_Condition"
          type: array
        custom_fields:
          type: object
        date_end:
          $ref: "#/components/schemas/A2CDateTime"
        date_start:
          $ref: "#/components/schemas/A2CDateTime"
        description:
          type: string
        id:
          type: string
        logic_operator:
          type: string
        name:
          type: string
        priority:
          type: integer
        usage_history:
          items:
            $ref: "#/components/schemas/Coupon_History"
          type: array
        usage_limit:
          type: integer
        usage_limit_per_customer:
          type: integer
        used_times:
          type: integer
      type: object
    Coupon_Action:
      properties:
        additional_fields:
          type: object
        amount:
          type: number
        apply_to:
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/Coupon_Condition"
          type: array
        currency_code:
          type: string
        custom_fields:
          type: object
        discount_quantity_step:
          type: integer
        discounted_quantity:
          type: number
        include_tax:
          type: boolean
        logic_operator:
          type: string
        scope:
          type: string
        type:
          type: string
      type: object
    Coupon_Code:
      properties:
        additional_fields:
          type: object
        code:
          type: string
        custom_fields:
          type: object
        id:
          type: string
        used_times:
          type: integer
      type: object
    Coupon_Condition:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        entity:
          type: string
        id:
          type: string
        key:
          type: string
        logic_operator:
          type: string
        match_items:
          type: string
        operator:
          type: string
        sub-conditions:
          items:
            $ref: "#/components/schemas/Coupon_Condition"
          type: array
        value:
          type: string
      type: object
    Coupon_History:
      properties:
        additional_fields:
          type: object
        amount:
          type: number
        custom_fields:
          type: object
        order_id:
          type: string
      type: object
    Currency:
      properties:
        additional_fields:
          type: object
        avail:
          type: boolean
        custom_fields:
          type: object
        default:
          type: boolean
        id:
          type: string
        iso3:
          type: string
        name:
          type: string
        rate:
          type: number
        symbol_left:
          type: string
        symbol_right:
          type: string
      type: object
    Customer:
      properties:
        additional_fields:
          type: object
        address_book:
          items:
            $ref: "#/components/schemas/Customer_Address"
          type: array
        birth_day:
          $ref: "#/components/schemas/A2CDateTime"
        company:
          type: string
        created_time:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        email:
          type: string
        fax:
          type: string
        first_name:
          type: string
        gender:
          type: string
        group:
          items:
            $ref: "#/components/schemas/Customer_Group"
          type: array
        id:
          type: string
        ip_address:
          type: string
        last_login:
          $ref: "#/components/schemas/A2CDateTime"
        last_name:
          type: string
        last_order_id:
          type: string
        login:
          type: string
        modified_time:
          $ref: "#/components/schemas/A2CDateTime"
        news_letter_subscription:
          type: boolean
        orders_count:
          type: integer
        phone:
          type: string
        status:
          type: string
        stores_ids:
          items:
            type: string
          type: array
        website:
          type: string
      type: object
    CustomerAdd:
      properties:
        address:
          items:
            properties:
              address_book_address1:
                description: Specifies customer's first address in the address book
                type: string
              address_book_address2:
                description: Specifies customer's second address in the address book
                type: string
              address_book_city:
                description: Specifies customer's city in the address book
                type: string
              address_book_company:
                description: Specifies customer's company name in the address book
                type: string
              address_book_country:
                description: ISO code or name of country
                type: string
              address_book_default:
                description: Defines whether the address is used by default
                type: boolean
              address_book_fax:
                description: Specifies customer's fax in the address book
                type: string
              address_book_first_name:
                description: Specifies customer's first name in the address book
                type: string
              address_book_gender:
                description: Specifies customer's gender
                type: string
              address_book_last_name:
                description: Specifies customer's last name in the address book
                type: string
              address_book_phone:
                description: Specifies customer's phone number in the address book
                type: string
              address_book_postcode:
                description: Specifies customer's postcode
                type: string
              address_book_region:
                description: Specifies customer's region
                type: string
              address_book_state:
                description: ISO code or name of state.
                type: string
              address_book_type:
                description: Specifies customer's address type
                type: string
              address_book_website:
                description: Specifies customer's website in the address book
                type: string
            type: object
          type: array
        birth_day:
          description: Defines customer's birthday
          type: string
        company:
          description: Defines customer's company
          type: string
        created_time:
          description: Entity's date creation
          type: string
        email:
          description: Defines customer's email
          type: string
        fax:
          description: Defines customer's fax
          type: string
        first_name:
          description: Defines customer's first name
          type: string
        gender:
          description: Defines customer's gender
          type: string
        group:
          description: Defines the group where the customer
          type: string
        last_login:
          description: Defines customer's last login time
          type: string
        last_name:
          description: Defines customer's last name
          type: string
        login:
          description: Specifies customer's login name
          type: string
        modified_time:
          description: Entity's date modification
          type: string
        news_letter_subscription:
          default: false
          description: Defines whether the newsletter subscription is available for the user
          type: boolean
        password:
          description: Defines customer's unique password
          type: string
        phone:
          description: Defines customer's phone number
          type: string
        status:
          default: enabled
          description: Defines customer's status
          type: string
        website:
          description: Link to customer website
          type: string
      required:
        - email
        - first_name
        - last_name
      type: object
    Customer_Address:
      properties:
        additional_fields:
          type: object
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        company:
          type: string
        country:
          $ref: "#/components/schemas/Country"
        custom_fields:
          type: object
        default:
          type: boolean
        fax:
          type: string
        first_name:
          type: string
        gender:
          type: string
        id:
          type: string
        last_name:
          type: string
        phone:
          type: string
        postcode:
          type: string
        region:
          type: string
        state:
          $ref: "#/components/schemas/State"
        type:
          type: string
        website:
          type: string
      type: object
    Customer_Attribute:
      properties:
        additional_fields:
          type: object
        attribute_id:
          type: string
        code:
          type: string
        custom_fields:
          type: object
        name:
          type: string
        type:
          type: string
        values:
          items:
            $ref: "#/components/schemas/Customer_Attribute_Value"
          type: array
      type: object
    Customer_Attribute_Value:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        value:
          type: string
      type: object
    Customer_Group:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
      type: object
    GiftCard:
      properties:
        additional_fields:
          type: object
        amount:
          type: number
        avail_to:
          type: string
        code:
          type: string
        created_at:
          type: string
        currency_code:
          type: string
        custom_fields:
          type: object
        free_product_ids:
          type: string
        id:
          type: string
        initial_amount:
          type: number
        message:
          type: string
        name:
          type: string
        owner_email:
          type: string
        owner_name:
          type: string
        recipient_email:
          type: string
        recipient_name:
          type: string
        status:
          type: string
        type:
          type: string
        usage_history:
          items:
            $ref: "#/components/schemas/Coupon_History"
          type: array
      type: object
    Image:
      properties:
        additional_fields:
          type: object
        alt:
          type: string
        avail:
          type: boolean
        create_at:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        file_name:
          type: string
        http_path:
          type: string
        id:
          type: string
        mime-type:
          type: string
        modified_at:
          $ref: "#/components/schemas/A2CDateTime"
        size:
          type: integer
        sort_order:
          type: integer
        type:
          type: string
      type: object
    Info:
      properties:
        additional_fields:
          type: object
        city:
          type: string
        country:
          type: string
        custom_fields:
          type: object
        email:
          type: string
        owner:
          type: string
        phone:
          type: string
        state:
          type: string
        state_code:
          type: string
        street_address:
          type: string
        street_address_line_2:
          type: string
        zip_code:
          type: string
      type: object
    Language:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        iso_code:
          type: string
        name:
          type: string
      type: object
    Model_Response_Cart_Catalog_PriceRules_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Cart_CatalogPriceRules_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Cart_Coupon_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Cart_Coupon_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Cart_GiftCard_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Cart_Giftcard_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Cart_MetaData_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Cart_MetaData_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Cart_Script_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Cart_Script_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Category_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Category_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Customer_Attribute_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Customer_Attribute_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Customer_Group_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Customer_Group_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Customer_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Customer_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Order_Abandoned_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Order_Abandoned_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Order_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Order_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Order_Shipment_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Order_Shipment_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Product_Attribute_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Product_Attribute_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Product_ChildItem_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Product_ChildItem_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Model_Response_Product_List:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
        result:
          $ref: "#/components/schemas/Response_Product_List_Result"
        return_code:
          type: integer
        return_message:
          type: string
      type: object
    Order:
      properties:
        additional_fields:
          type: object
        basket_id:
          type: string
        billing_address:
          $ref: "#/components/schemas/Customer_Address"
        bundles:
          items:
            $ref: "#/components/schemas/Order_Item"
          type: array
        channel_id:
          type: string
        comment:
          type: string
        create_at:
          $ref: "#/components/schemas/A2CDateTime"
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          type: object
        customer:
          $ref: "#/components/schemas/BaseCustomer"
        discounts:
          items:
            $ref: "#/components/schemas/Order_Totals_NewDiscount"
          type: array
        finished_time:
          $ref: "#/components/schemas/A2CDateTime"
        gift_message:
          type: string
        id:
          type: string
        modified_at:
          $ref: "#/components/schemas/A2CDateTime"
        order_details_url:
          type: string
        order_id:
          type: string
        order_products:
          items:
            $ref: "#/components/schemas/Order_Item"
          type: array
        payment_method:
          $ref: "#/components/schemas/Order_PaymentMethod"
        refunds:
          items:
            $ref: "#/components/schemas/Order_Refund"
          type: array
        shipping_address:
          $ref: "#/components/schemas/Customer_Address"
        shipping_method:
          $ref: "#/components/schemas/Order_ShippingMethod"
        shipping_methods:
          items:
            $ref: "#/components/schemas/Order_ShippingMethod"
          type: array
        status:
          $ref: "#/components/schemas/Order_Status"
        store_id:
          type: string
        total:
          $ref: "#/components/schemas/Order_Total"
        totals:
          $ref: "#/components/schemas/Order_Totals"
        warehouses_ids:
          items:
            type: string
          type: array
      type: object
    OrderAbandoned:
      properties:
        additional_fields:
          type: object
        basket_id:
          type: string
        basket_url:
          type: string
        created_at:
          $ref: "#/components/schemas/A2CDateTime"
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          type: object
        customer:
          properties:
            email:
              type: string
            first_name:
              type: string
            id:
              type: string
            last_name:
              type: string
        id:
          type: string
        modified_at:
          $ref: "#/components/schemas/A2CDateTime"
        order_products:
          items:
            $ref: "#/components/schemas/Order_Item"
          type: array
        totals:
          $ref: "#/components/schemas/Order_Totals"
      type: object
    OrderAdd:
      properties:
        admin_comment:
          description: Specifies admin's order comment
          type: string
        admin_private_comment:
          description: Specifies private admin's order comment
          type: string
        bill_address_1:
          description: Specifies first billing address
          type: string
        bill_address_2:
          description: Specifies second billing address
          type: string
        bill_city:
          description: Specifies billing city
          type: string
        bill_company:
          description: Specifies billing company
          type: string
        bill_country:
          description: Specifies billing country code
          type: string
        bill_fax:
          description: Specifies billing fax
          type: string
        bill_first_name:
          description: Specifies billing first name
          type: string
        bill_last_name:
          description: Specifies billing last name
          type: string
        bill_phone:
          description: Specifies billing phone
          type: string
        bill_postcode:
          description: Specifies billing postcode
          type: string
        bill_state:
          description: Specifies billing state code
          type: string
        channel_id:
          description: Channel ID
          type: string
        clear_cache:
          default: true
          description: Is cache clear required
          type: boolean
        comment:
          description: Specifies order comment
          type: string
        coupon_discount:
          description: Specifies order's coupon discount
          type: number
        create_invoice:
          default: false
          description: Defines whether the invoice is created automatically along with the order
          type: boolean
        currency:
          description: Currency code of order
          type: string
        customer_birthday:
          description: Specifies customer’s birthday
          type: string
        customer_email:
          description: Defines the customer specified by email for whom order has to be created
          type: string
        customer_fax:
          description: Specifies customer’s fax
          type: string
        customer_first_name:
          description: Specifies customer's first name
          type: string
        customer_last_name:
          description: Specifies customer’s last name
          type: string
        customer_phone:
          description: Specifies customer’s phone
          type: string
        date:
          description: Specifies an order creation date in format Y-m-d H:i:s
          type: string
        date_finished:
          description: Specifies order's  finished date
          type: string
        date_modified:
          description: Specifies order's  modification date
          type: string
        discount:
          description: Specifies order's discount
          type: number
        external_source:
          description: Identifying the system used to generate the order
          type: string
        financial_status:
          description: Create order with financial status
          type: string
        fulfillment_status:
          description: Create order with fulfillment status
          type: string
        gift_certificate_discount:
          description: Discounts for order with gift certificates
          type: number
        id:
          description: Defines order's id
          type: string
        inventory_behaviour:
          default: bypass
          description: "The behaviour to use when updating inventory.<hr><div style=\"font-style:normal\">Values description:<div style=\"margin-left: 2%; padding-top: 2%\"><div style=\"font-size:85%\"><b>bypass</b> = Do not claim inventory </br></br><b>decrement_ignoring_policy</b> = Ignore the product's </br> inventory policy and claim amounts</br></br><b>decrement_obeying_policy</b> =  Obey the product's </br> inventory policy.</br></br></div></div></div>"
          type: string
        note_attributes:
          description: Defines note attributes
          items:
            properties:
              name:
                type: string
              value:
                type: string
            type: object
          type: array
        order_id:
          description: Defines the order id if it is supported by the cart
          type: string
        order_item:
          items:
            properties:
              order_item_allow_refund_items_separately:
                description: Indicates whether subitems of the grouped/bundle product can be refunded separately
                type: boolean
              order_item_allow_ship_items_separately:
                description: Indicates whether subitems of the grouped/bundle product can be shipped separately
                type: boolean
              order_item_id:
                description: Defines orders specified by order item id
                type: string
              order_item_model:
                description: Defines orders specified by order item model
                type: string
              order_item_name:
                description: Defines orders specified by order item name
                type: string
              order_item_option:
                items:
                  properties:
                    order_item_option_name:
                      description: Ordered Product Option Name. Where x is order item ID, y is order item option ID
                      type: string
                    order_item_option_price:
                      description: Ordered product option price Where x is order item ID, y - order item option ID
                      type: number
                    order_item_option_value:
                      description: Ordered product option value Where x is order item ID, y - order item option ID
                      type: string
                  type: object
                type: array
              order_item_parent:
                description: Index of the parent grouped/bundle product
                type: integer
              order_item_parent_option_name:
                description: Option name of the parent grouped/bundle product
                type: string
              order_item_price:
                description: Defines orders specified by order item price
                type: number
              order_item_price_includes_tax:
                default: false
                description: Defines if item price includes tax
                type: boolean
              order_item_property:
                items:
                  properties:
                    order_item_property_name:
                      description: Ordered product property name. Where x is order item ID, y is order item property ID
                      type: string
                    order_item_property_value:
                      description: Ordered product property value. Where x is order item ID, y - order item property ID
                      type: string
                  type: object
                type: array
              order_item_quantity:
                description: Defines orders specified by order item quantity
                type: integer
              order_item_tax:
                default: 0
                description: Percentage of tax for product order
                type: number
              order_item_variant_id:
                description: Ordered product variant. Where x is order item ID
                type: string
            required:
              - order_item_id
              - order_item_name
              - order_item_price
              - order_item_quantity
            type: object
          type: array
        order_payment_method:
          description: Defines order payment method.<br/>Setting order_payment_method on Shopify will also change financial_status field value to 'paid'
          type: string
        order_shipping_method:
          description: Defines order shipping method
          type: string
        order_status:
          description: Defines order status.
          type: string
        send_admin_notifications:
          default: false
          description: Notify admin when new order was created.
          type: boolean
        send_notifications:
          default: false
          description: Send notifications to customer after order was created
          type: boolean
        shipp_address_1:
          description: Specifies first shipping address
          type: string
        shipp_address_2:
          description: Specifies second address line of a shipping street address
          type: string
        shipp_city:
          description: Specifies shipping city
          type: string
        shipp_company:
          description: Specifies shipping company
          type: string
        shipp_country:
          description: Specifies shipping country code
          type: string
        shipp_fax:
          description: Specifies shipping fax
          type: string
        shipp_first_name:
          description: Specifies shipping first name
          type: string
        shipp_last_name:
          description: Specifies shipping last name
          type: string
        shipp_phone:
          description: Specifies shipping phone
          type: string
        shipp_postcode:
          description: Specifies shipping postcode
          type: string
        shipp_state:
          description: Specifies shipping state code
          type: string
        shipping_price:
          default: 0
          description: Specifies order's shipping price
          type: number
        shipping_tax:
          description: Specifies order's shipping price tax
          type: number
        store_id:
          description: Defines store id where the order should be assigned
          type: string
        subtotal_price:
          description: Total price of all ordered products multiplied by their number, excluding tax, shipping price and discounts
          type: number
        tags:
          description: Order tags
          type: string
        tax_price:
          default: 0
          description: The value of tax cost for order
          type: number
        total_paid:
          description: Defines total paid amount for the order
          type: number
        total_price:
          description: Defines order's total price
          type: number
        total_weight:
          description: Defines the sum of all line item weights in grams for the order
          type: integer
        transaction_id:
          description: Payment transaction id
          type: string
      required:
        - order_status
        - customer_email
        - bill_first_name
        - bill_last_name
        - bill_address_1
        - bill_city
        - bill_postcode
        - bill_state
        - bill_country
        - order_item
      type: object
    OrderRefundAdd:
      properties:
        date:
          description: Specifies an order creation date in format Y-m-d H:i:s
          type: string
        fee_price:
          description: Specifies refund's fee price
          type: number
        is_online:
          default: false
          description: Indicates whether refund type is online
          type: boolean
        item_restock:
          default: false
          description: Boolean, whether or not to add the line items back to the store inventory.
          type: boolean
        items:
          description: Defines items in the order that will be refunded
          items:
            properties:
              order_product_id:
                type: string
              price:
                type: number
              quantity:
                type: integer
            type: object
          type: array
        message:
          description: Refund reason, or some else message which assigned to refund.
          type: string
        order_id:
          description: Defines the order for which the refund will be created.
          type: string
        send_notifications:
          default: false
          description: Send notifications to customer after refund was created
          type: boolean
        shipping_price:
          description: Defines refund shipping amount.
          type: number
        total_price:
          description: Defines order refund amount.
          type: number
      type: object
    OrderShipmentAdd:
      properties:
        adjust_stock:
          default: false
          description: This parameter is used for adjust stock.
          type: boolean
        enable_cache:
          default: false
          description: If the value is 'true' and order exist in our cache, we will use order.info from cache to prepare shipment items.
          type: boolean
        items:
          description: Defines items in the order that will be shipped
          items:
            properties:
              order_product_id:
                type: string
              quantity:
                type: number
            type: object
          type: array
        order_id:
          description: Defines the order for which the shipment will be created
          type: string
        send_notifications:
          default: false
          description: Send notifications to customer after shipment was created
          type: boolean
        shipment_provider:
          description: Defines company name that provide tracking of shipment
          type: string
        shipping_method:
          description: Define shipping method
          type: string
        store_id:
          description: Store Id
          type: string
        tracking_link:
          description: Defines custom tracking link
          type: string
        tracking_numbers:
          description: Defines shipment's tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = "http://docs.api2cart.com/cart-info">cart.info</a > method
          items:
            properties:
              carrier_id:
                type: string
              tracking_number:
                type: string
            type: object
          type: array
        warehouse_id:
          description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
          type: string
      type: object
    OrderShipmentTrackingAdd:
      properties:
        carrier_id:
          description: Defines tracking carrier id
          type: string
        order_id:
          description: Defines the order id
          type: string
        send_notifications:
          default: false
          description: Send notifications to customer after tracking was created
          type: boolean
        shipment_id:
          description: Shipment id indicates the number of delivery
          type: string
        store_id:
          description: Store Id
          type: string
        tracking_link:
          description: Defines custom tracking link
          type: string
        tracking_number:
          description: Defines tracking number
          type: string
        tracking_provider:
          description: Defines name of the company which provides shipment tracking
          type: string
      required:
        - shipment_id
        - tracking_number
      type: object
    OrderShipmentUpdate:
      properties:
        order_id:
          description: Defines the order that will be updated
          type: string
        replace:
          default: true
          description: Allows rewrite tracking numbers
          type: boolean
        shipment_id:
          description: Shipment id indicates the number of delivery
          type: string
        store_id:
          description: Store Id
          type: string
        tracking_numbers:
          description: Defines shipment's tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = "http://docs.api2cart.com/cart-info">cart.info</a > method
          items:
            properties:
              carrier_id:
                type: string
              tracking_number:
                type: string
            type: object
          type: array
      required:
        - shipment_id
      type: object
    Order_Item:
      properties:
        additional_fields:
          type: object
        barcode:
          type: string
        custom_fields:
          type: object
        discount_amount:
          type: number
        model:
          type: string
        name:
          type: string
        options:
          items:
            $ref: "#/components/schemas/Order_Item_Option"
          type: array
        order_product_id:
          type: string
        parent_order_product_id:
          type: string
        price:
          type: number
        price_inc_tax:
          type: number
        product_id:
          type: string
        quantity:
          type: number
        tax_percent:
          type: number
        tax_value:
          type: number
        tax_value_after_discount:
          type: number
        total_price:
          type: number
        variant_id:
          type: string
        weight:
          type: number
        weight_unit:
          type: string
      type: object
    Order_Item_Option:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        name:
          type: string
        option_id:
          type: string
        price:
          type: number
        product_option_value_id:
          type: string
        type:
          type: string
        value:
          type: string
        weight:
          type: number
      type: object
    Order_PaymentMethod:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        name:
          type: string
      type: object
    Order_Refund:
      properties:
        additional_fields:
          type: object
        comment:
          type: string
        custom_fields:
          type: object
        fee:
          type: number
        id:
          type: string
        items:
          items:
            $ref: "#/components/schemas/Order_Status_Refund_Item"
          type: array
        modified_time:
          $ref: "#/components/schemas/A2CDateTime"
        shipping:
          type: number
        tax:
          type: number
        total:
          type: number
      type: object
    Order_ShippingMethod:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        name:
          type: string
      type: object
    Order_Status:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        history:
          items:
            $ref: "#/components/schemas/Order_Status_HistoryItem"
          type: array
        id:
          type: string
        name:
          type: string
        refund_info:
          $ref: "#/components/schemas/Order_Status_Refund"
      type: object
    Order_Status_HistoryItem:
      properties:
        additional_fields:
          type: object
        comment:
          type: string
        custom_fields:
          type: object
        id:
          type: string
        modified_time:
          $ref: "#/components/schemas/A2CDateTime"
        name:
          type: string
        notify:
          type: boolean
      type: object
    Order_Status_Refund:
      properties:
        additional_fields:
          type: object
        comment:
          type: string
        custom_fields:
          type: object
        fee:
          type: number
        refunded_items:
          items:
            $ref: "#/components/schemas/Order_Status_Refund_Item"
          type: array
        shipping:
          type: number
        tax:
          type: number
        time:
          $ref: "#/components/schemas/A2CDateTime"
        total_refunded:
          type: number
      type: object
    Order_Status_Refund_Item:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        order_product_id:
          type: string
        product_id:
          type: string
        qty:
          type: number
        refund:
          type: number
        variant_id:
          type: string
      type: object
    Order_Total:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        shipping_ex_tax:
          type: number
        subtotal_ex_tax:
          type: number
        total:
          type: number
        total_discount:
          type: number
        total_paid:
          type: number
        total_tax:
          type: number
        wrapping_ex_tax:
          type: number
      type: object
    Order_Totals:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        discount:
          type: number
        shipping:
          type: number
        subtotal:
          type: number
        tax:
          type: number
        total:
          type: number
      type: object
    Order_Totals_NewDiscount:
      properties:
        additional_fields:
          type: object
        code:
          type: string
        custom_fields:
          type: object
        type:
          type: string
        value:
          type: number
      type: object
    Pagination:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        next:
          type: string
        previous:
          type: string
      type: object
    Plugin:
      properties:
        active:
          type: boolean
        additional_fields:
          type: object
        custom_fields:
          type: object
        name:
          type: string
      type: object
    PluginList:
      properties:
        additional_fields:
          type: object
        all_plugins:
          type: integer
        custom_fields:
          type: object
        plugins:
          items:
            $ref: "#/components/schemas/Plugin"
          type: array
      type: object
    Product:
      properties:
        additional_fields:
          type: object
        advanced_price:
          items:
            $ref: "#/components/schemas/Product_AdvancedPrice"
          type: array
        avail_sale:
          type: boolean
        avail_view:
          type: boolean
        backorders:
          type: string
        categories_ids:
          items:
            type: string
          type: array
        cost_price:
          type: number
        create_at:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        description:
          type: string
        dimensions_unit:
          type: string
        group_price:
          items:
            $ref: "#/components/schemas/Product_GroupPrice"
          type: array
        height:
          type: number
        id:
          type: string
        images:
          items:
            $ref: "#/components/schemas/Image"
          type: array
        inventory:
          items:
            $ref: "#/components/schemas/Product_Inventory"
          type: array
        is_downloadable:
          type: boolean
        is_stock_managed:
          type: boolean
        is_virtual:
          type: boolean
        length:
          type: number
        manage_stock:
          type: string
        meta_description:
          type: string
        meta_keywords:
          type: string
        meta_title:
          type: string
        modified_at:
          $ref: "#/components/schemas/A2CDateTime"
        name:
          type: string
        price:
          type: number
        product_options:
          items:
            $ref: "#/components/schemas/Product_Option"
          type: array
        quantity:
          type: number
        related_products_ids:
          items:
            type: string
          type: array
        seo_url:
          type: string
        short_description:
          type: string
        sort_order:
          type: integer
        special_price:
          $ref: "#/components/schemas/SpecialPrice"
        stores_ids:
          items:
            type: string
          type: array
        tax_class_id:
          type: string
        tier_price:
          items:
            $ref: "#/components/schemas/Product_TierPrice"
          type: array
        type:
          type: string
        u_brand:
          type: string
        u_brand_id:
          type: string
        u_model:
          type: string
        u_mpn:
          type: string
        u_sku:
          type: string
        u_upc:
          type: string
        url:
          type: string
        weight:
          type: number
        weight_unit:
          type: string
        width:
          type: number
      type: object
    ProductAdd:
      properties:
        attribute_name:
          description: Defines product’s attribute name separated with a comma in Magento
          type: string
        attribute_set_name:
          default: Default
          description: Defines product’s attribute set name in Magento
          type: string
        avail_from:
          description: Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.
          type: string
        available_for_sale:
          default: true
          description: Specifies the set of visible/invisible products for sale
          type: boolean
        available_for_view:
          default: true
          description: Specifies the set of visible/invisible products for users
          type: boolean
        backorder_status:
          description: Set backorder status
          type: string
        barcode:
          description: A barcode is a unique code composed of numbers used as a product identifier.
          type: string
        best_offer:
          description: 'The price at which Best Offers are automatically accepted.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">best_offer[<b>minimum_offer_price</b>] = decimal</br>best_offer[<b>auto_accept_price</b>] = decimal</br></code></div></div>'
          items:
            type: string
          type: array
        categories_ids:
          description: Defines product add that is specified by comma-separated categories id
          type: string
        category_id:
          description: Defines product add that is specified by category id
          type: string
        clear_cache:
          default: true
          description: Is cache clear required
          type: boolean
        condition:
          description: The human-readable label for the condition (e.g., "New").
          type: string
        cost_price:
          description: Defines new product's cost price
          type: number
        created_at:
          description: Defines the date of entity creation
          type: string
        description:
          description: Defines product's description that has to be added
          type: string
        downloadable:
          default: false
          description: Defines whether the product is downloadable
          type: boolean
        ean:
          description: European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
          type: string
        group_prices:
          description: Defines product's group prices
          items:
            properties:
              group_id:
                type: string
              price:
                type: number
            type: object
          type: array
        gtin:
          description: Global Trade Item Number. An GTIN is an identifier for trade items.
          type: string
        image_name:
          description: Defines image's name
          type: string
        image_url:
          description: Image Url
          type: string
        isbn:
          description: International Standard Book Number. An ISBN is a unique identifier for books.
          type: string
        lang_id:
          description: Language id
          type: string
        listing_duration:
          description: Describes the number of days the seller wants the listing to be active. Look at cart.info method response for allowed values.
          type: string
        listing_type:
          default: FixedPrice
          description: Indicates the selling format of the eBay listing.
          type: string
        manufacturer:
          description: Defines product's manufacturer
          type: string
        marketplace_item_properties:
          default: false
          description: String containing the JSON representation of the supplied data
          type: string
        meta_description:
          description: Defines unique meta description of a entity
          type: string
        meta_keywords:
          description: Defines unique meta keywords for each entity
          type: string
        meta_title:
          description: Defines unique meta title for each entity
          type: string
        model:
          description: Defines product's model that has to be added
          type: string
        mpn:
          description: Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.
          type: string
        name:
          description: Defines product's name that has to be added
          type: string
        old_price:
          description: Defines product's old price
          type: number
        ordered_count:
          default: 0
          description: Defines how many times the product was ordered
          type: integer
        package_details:
          description: 'If the seller is subscribed to "Business Policies", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">package_details[<b>measure_unit</b>] = string</br> Allowed measure_unit values: [English or Metric] </br> Default: Metric</br>package_details[<b>weigh_unit</b>] = string</br> Allowed weigh_unit values: [kg, g, lbs, oz]</br>package_details[<b>package_depth</b>] = decimal</br>package_details[<b>package_length</b>] = decimal</br>package_details[<b>package_width</b>] = decimal</br>package_details[<b>weight_major</b>] = decimal</br>package_details[<b>weight_minor</b>] = decimal</br>package_details[<b>shipping_package</b>] = string</br> See cart.info method, param `eBay_shipping_package_details`</code></div></div>'
          items:
            type: string
          type: array
        payment_methods:
          description: 'Identifies the payment method (such as PayPal) that the seller will accept when the buyer pays for the item. Look at cart.info method response for allowed values.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">payment_methods[0] = string</br>payment_methods[1] = string</br></code></div></div>'
          items:
            type: string
          type: array
        paypal_email:
          description: Valid PayPal email address for the PayPal account that the seller will use if they offer PayPal as a payment method for the listing.
          type: string
        price:
          description: Defines product's price that has to be added
          type: number
        product_class:
          description: A categorization for the product
          type: string
        quantity:
          default: 0
          description: Defines product's quantity that has to be added
          type: number
        return_accepted:
          description: Indicates whether the seller allows the buyer to return the item.
          type: boolean
        sales_tax:
          description: "Percent of an item's price to be charged as the sales tax for the order. Look at cart.info method response for allowed values.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">sales_tax[<b>tax_percent</b>] = decimal (##.###)</br>sales_tax[<b>tax_state</b>] = string</br>sales_tax[<b>shipping_inc_in_tax</b>] = bool</br></code></div></div>"
          items:
            type: string
          type: array
        seller_profiles:
          description: 'If the seller is subscribed to "Business Policies", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">seller_profiles[<b>shipping_profile_id</b>] = integer</br>seller_profiles[<b>payment_profile_id</b>] = integer</br>seller_profiles[<b>return_profile_id</b>] = integer</br></code></div></div>'
          properties:
            payment_profile_id:
              type: string
            return_profile_id:
              type: string
            shipping_profile_id:
              type: string
          type: object
        shipping_details:
          description: 'The shipping details, including flat and calculated shipping costs and shipping insurance costs. Look at cart.info method response for allowed values.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">shipping_details[0][<b>shipping_type</b>] = string </br>shipping_details[0][<b>shipping_service</b>] = string</br>shipping_details[0][<b>shipping_cost</b>] = decimal</br>shipping_details[1][<b>shipping_type</b>] = string </br>shipping_details[1][<b>shipping_service</b>] = string</br>shipping_details[1][<b>shipping_cost</b>] = decimal</br></code></div></div>'
          items:
            properties:
              shipping_cost:
                type: number
              shipping_service:
                type: string
              shipping_type:
                type: string
            type: object
          type: array
        shipping_template_id:
          default: 0
          description: The numeric ID of the shipping template associated with the products in Etsy.
          type: integer
        short_description:
          description: Defines short description
          type: string
        sku:
          description: Defines product's sku that has to be added
          type: string
        special_price:
          description: Defines product's model that has to be added
          type: number
        specifics:
          description: |-
            An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.
                    <hr>
                    <div style="font-style:normal">Param structure:
                      <div style="margin-left: 2%;">
                        <code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">
                          specifics[int][<b>name</b>] = string</br>
                          specifics[int][<b>value</b>] = string</br>
                        </code>
                      </div>
                    </div>
          items:
            type: string
          type: array
        sprice_create:
          description: Defines the date of special price creation
          type: string
        sprice_expire:
          description: Defines the term of special price offer duration
          type: string
        sprice_modified:
          description: Defines the date of special price modification
          type: string
        status:
          description: Defines product's status
          type: string
        stores_ids:
          default: 0
          description: Assign product to the stores that is specified by comma-separated stores' id
          type: string
        tags:
          description: Product tags
          type: string
        tax_class_id:
          description: Defines tax classes where entity has to be added
          type: integer
        taxable:
          default: true
          description: Specifies whether a tax is charged
          type: boolean
        tier_prices:
          description: Defines product's tier prices
          items:
            properties:
              price:
                type: number
              quantity:
                type: number
            type: object
          type: array
        type:
          default: simple
          description: Defines product's type
          type: string
        upc:
          description: Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
          type: string
        url:
          description: Defines unique product's URL
          type: string
        viewed_count:
          default: 0
          description: Specifies the number of product's reviews
          type: integer
        visible:
          description: Set visibility status
          type: string
        warehouse_id:
          description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
          type: string
        weight:
          default: 0
          description: Weight
          type: number
        weight_unit:
          description: Weight Unit
          type: string
        wholesale_price:
          description: Defines product's sale price
          type: number
      required:
        - name
        - model
        - description
        - price
      type: object
    ProductPriceAdd:
      properties:
        group_prices:
          description: Defines product's group prices
          items:
            properties:
              group_id:
                type: string
              price:
                type: number
            type: object
          type: array
        product_id:
          description: Defines the product to which the price has to be added
          type: string
      type: object
    ProductPriceUpdate:
      properties:
        group_prices:
          description: Defines product's group prices
          items:
            properties:
              group_id:
                type: string
              id:
                type: integer
              price:
                type: number
            type: object
          type: array
        product_id:
          description: Defines the product where the price has to be updated
          type: string
      type: object
    ProductTaxAdd:
      properties:
        name:
          description: Defines tax class name where tax has to be added
          type: string
        product_id:
          description: Defines products specified by product id
          type: string
        tax_rates:
          description: Defines tax rates of specified tax classes
          items:
            properties:
              name:
                type: string
              type:
                type: string
              value:
                type: number
            type: object
          type: array
      required:
        - name
        - tax_rates
      type: object
    ProductVariantAdd:
      properties:
        attributes:
          description: Defines variant's attributes list
          items:
            properties:
              attribute_name:
                type: string
              attribute_price:
                type: number
              attribute_value:
                type: string
            type: object
          type: array
        available_for_sale:
          default: true
          description: Specifies the set of visible/invisible product's variants for sale
          type: boolean
        available_for_view:
          default: true
          description: Specifies the set of visible/invisible product's variants for users
          type: boolean
        barcode:
          description: A barcode is a unique code composed of numbers used as a product identifier.
          type: string
        clear_cache:
          default: true
          description: Is cache clear required
          type: boolean
        cost_price:
          description: Defines new product's cost price
          type: number
        created_at:
          description: Defines the date of entity creation
          type: string
        description:
          description: Specifies variant's description
          type: string
        lang_id:
          description: Language id
          type: string
        manufacturer:
          description: Specifies the product variant's manufacturer
          type: string
        meta_description:
          description: Defines unique meta description of a entity
          type: string
        meta_keywords:
          description: Defines unique meta keywords for each entity
          type: string
        meta_title:
          description: Defines unique meta title for each entity
          type: string
        model:
          description: Specifies variant's model that has to be added
          type: string
        name:
          description: Defines variant's name that has to be added
          type: string
        price:
          description: Defines new product's variant price
          type: number
        product_id:
          description: Defines product's id where the variant has to be added
          type: string
        quantity:
          default: 0
          description: Defines product variant's quantity that has to be added
          type: number
        short_description:
          description: Defines short description
          type: string
        sku:
          description: Defines variant's sku that has to be added
          type: string
        special_price:
          description: Specifies variant's model that has to be added
          type: number
        sprice_create:
          description: Defines the date of special price creation
          type: string
        sprice_expire:
          description: Defines the term of special price offer duration
          type: string
        sprice_modified:
          description: Defines the date of special price modification
          type: string
        store_id:
          description: Add variants specified by store id
          type: string
        tax_class_id:
          description: Defines tax classes where entity has to be added
          type: integer
        taxable:
          default: true
          description: Specifies whether a tax is charged
          type: boolean
        url:
          description: Defines unique product variant's URL
          type: string
        warehouse_id:
          description: This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
          type: string
        weight:
          default: 0
          description: Weight
          type: number
        weight_unit:
          description: Weight Unit
          type: string
      required:
        - model
      type: object
    ProductVariantPriceAdd:
      properties:
        group_prices:
          description: Defines variants's group prices
          items:
            properties:
              group_id:
                type: string
              price:
                type: number
            type: object
          type: array
        id:
          description: Defines the variant to which the price has to be added
          type: string
      type: object
    ProductVariantPriceUpdate:
      properties:
        group_prices:
          description: Defines variants's group prices
          items:
            properties:
              group_id:
                type: string
              id:
                type: integer
              price:
                type: number
            type: object
          type: array
        id:
          description: Defines the variant where the price has to be updated
          type: string
      type: object
    Product_AdvancedPrice:
      properties:
        additional_fields:
          type: object
        avail:
          type: boolean
        custom_fields:
          type: object
        expire_time:
          $ref: "#/components/schemas/A2CDateTime"
        group_id:
          type: string
        id:
          type: string
        quantity_from:
          type: number
        start_time:
          $ref: "#/components/schemas/A2CDateTime"
        value:
          type: number
      type: object
    Product_Attribute:
      properties:
        additional_fields:
          type: object
        attribute_group_id:
          type: string
        attribute_id:
          type: string
        code:
          type: string
        custom_fields:
          type: object
        lang_id:
          type: integer
        name:
          type: string
        position:
          type: integer
        product_id:
          type: integer
        required:
          type: boolean
        store_id:
          type: integer
        type:
          type: string
        value:
          type: string
        variant_id:
          type: string
        visible:
          type: boolean
      type: object
    Product_GroupPrice:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        expire_time:
          type: string
        group_id:
          type: string
        id:
          type: string
        price:
          type: number
        quantity:
          type: number
        start_time:
          type: string
        store_id:
          type: string
      type: object
    Product_Inventory:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        in_stock:
          type: boolean
        priority:
          type: integer
        quantity:
          type: number
        warehouse_id:
          type: string
      type: object
    Product_Option:
      properties:
        additional_fields:
          type: object
        available:
          type: boolean
        custom_fields:
          type: object
        description:
          type: string
        id:
          type: string
        name:
          type: string
        option_items:
          items:
            $ref: "#/components/schemas/Product_Option_Item"
          type: array
        product_option_id:
          type: string
        required:
          type: boolean
        sort_order:
          type: integer
        type:
          type: string
        used_in_combination:
          type: boolean
      type: object
    Product_Option_Item:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        price:
          type: string
        product_option_item_id:
          type: string
        quantity:
          type: integer
        sku:
          type: string
        sort_order:
          type: integer
        type_price:
          type: string
        weight:
          type: string
      type: object
    Product_Review:
      properties:
        additional_fields:
          type: object
        created_time:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        customer_id:
          type: string
        email:
          type: string
        id:
          type: string
        message:
          type: string
        nick_name:
          type: string
        product_id:
          type: string
        rating:
          type: number
        ratings:
          items:
            $ref: "#/components/schemas/Product_Review_Rating"
          type: array
        status:
          type: string
        summary:
          type: string
      type: object
    Product_Review_Rating:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        value:
          type: integer
      type: object
    Product_TierPrice:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        price:
          type: number
        qty:
          type: number
      type: object
    Response_Cart_CatalogPriceRules_List_Result:
      properties:
        additional_fields:
          type: object
        catalog_price_rules:
          items:
            $ref: "#/components/schemas/CatalogPriceRule"
          type: array
        catalog_price_rules_count:
          type: integer
        custom_fields:
          type: object
      type: object
    Response_Cart_Coupon_List_Result:
      properties:
        additional_fields:
          type: object
        coupon:
          items:
            $ref: "#/components/schemas/Coupon"
          type: array
        coupon_count:
          type: integer
        custom_fields:
          type: object
      type: object
    Response_Cart_Giftcard_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        gift_card:
          items:
            $ref: "#/components/schemas/GiftCard"
          type: array
      type: object
    Response_Cart_MetaData_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        items:
          items:
            $ref: "#/components/schemas/Cart_MetaData"
          type: array
        total_count:
          type: integer
      type: object
    Response_Cart_Script_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        scripts:
          items:
            $ref: "#/components/schemas/Script"
          type: array
        total_count:
          type: integer
      type: object
    Response_Category_List_Result:
      properties:
        additional_fields:
          type: object
        categories_count:
          type: integer
        category:
          items:
            $ref: "#/components/schemas/Category"
          type: array
        custom_fields:
          type: object
      type: object
    Response_Customer_Attribute_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        items:
          items:
            $ref: "#/components/schemas/Customer_Attribute"
          type: array
        total_count:
          type: integer
      type: object
    Response_Customer_Group_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        group:
          items:
            $ref: "#/components/schemas/Customer_Group"
          type: array
        group_count:
          type: integer
      type: object
    Response_Customer_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        customer:
          items:
            $ref: "#/components/schemas/Customer"
          type: array
        customers_count:
          type: integer
      type: object
    Response_Order_Abandoned_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        order:
          items:
            $ref: "#/components/schemas/OrderAbandoned"
          type: array
      type: object
    Response_Order_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        order:
          items:
            $ref: "#/components/schemas/Order"
          type: array
        orders_count:
          type: integer
      type: object
    Response_Order_Shipment_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        shipment:
          items:
            $ref: "#/components/schemas/Shipment"
          type: array
        shipment_count:
          type: integer
      type: object
    Response_Product_Attribute_List_Result:
      properties:
        additional_fields:
          type: object
        attribute:
          items:
            $ref: "#/components/schemas/Product_Attribute"
          type: array
        custom_fields:
          type: object
      type: object
    Response_Product_ChildItem_List_Result:
      properties:
        additional_fields:
          type: object
        children:
          items:
            $ref: "#/components/schemas/Child"
          type: array
        custom_fields:
          type: object
        total_count:
          type: integer
      type: object
    Response_Product_List_Result:
      properties:
        additional_fields:
          type: object
        custom_fields:
          type: object
        product:
          items:
            $ref: "#/components/schemas/Product"
          type: array
        products_count:
          type: integer
      type: object
    Script:
      properties:
        additional_fields:
          type: object
        created_time:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        description:
          type: string
        event:
          type: string
        html:
          type: string
        id:
          type: string
        load_method:
          type: string
        modified_time:
          $ref: "#/components/schemas/A2CDateTime"
        name:
          type: string
        scope:
          type: string
        src:
          type: string
      type: object
    Shipment:
      properties:
        additional_fields:
          type: object
        created_at:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        id:
          type: string
        items:
          items:
            properties:
              model:
                type: string
              name:
                type: string
              price:
                type: number
              product_id:
                type: string
              quantity:
                type: number
            type: object
          type: array
        order_id:
          type: string
        shipment_provider:
          type: string
        tracking_numbers:
          items:
            $ref: "#/components/schemas/Shipment_TrackingNumber"
          type: array
        warehouse_id:
          type: string
      type: object
    Shipment_TrackingNumber:
      properties:
        additional_fields:
          type: object
        carrier_id:
          type: string
        custom_fields:
          type: object
        tracking_number:
          type: string
      type: object
    SpecialPrice:
      properties:
        additional_fields:
          type: object
        avail:
          type: boolean
        created_at:
          $ref: "#/components/schemas/A2CDateTime"
        custom_fields:
          type: object
        expired_at:
          $ref: "#/components/schemas/A2CDateTime"
        modified_at:
          $ref: "#/components/schemas/A2CDateTime"
        value:
          type: number
      type: object
    State:
      properties:
        additional_fields:
          type: object
        code:
          type: string
        custom_fields:
          type: object
        name:
          type: string
      type: object
    StoreAttribute:
      properties:
        additional_fields:
          type: object
        code:
          type: string
        custom_fields:
          type: object
        default_values:
          items:
            type: string
          type: array
        id:
          type: string
        lang_id:
          type: string
        name:
          type: string
        position:
          type: integer
        required:
          type: boolean
        store_id:
          type: string
        system:
          type: boolean
        type:
          type: string
        values:
          items:
            type: string
          type: array
        visible:
          type: boolean
      type: object
    StoreAttribute_Group:
      properties:
        additional_fields:
          type: object
        assigned_attribute_ids:
          items:
            type: string
          type: array
        attribute_set_id:
          type: string
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        position:
          type: integer
      type: object
    Subscriber:
      properties:
        additional_fields:
          type: object
        created_time:
          type: string
        custom_fields:
          type: object
        customer_id:
          type: string
        email:
          type: string
        first_name:
          type: string
        id:
          type: string
        last_name:
          type: string
        modified_time:
          type: string
        subscribed:
          type: boolean
      type: object
    TaxClass:
      properties:
        additional_fields:
          type: object
        avail:
          type: boolean
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        tax:
          type: number
        tax_rates:
          items:
            $ref: "#/components/schemas/TaxClass_Rate"
          type: array
        tax_type:
          type: integer
      type: object
    TaxClass_Rate:
      properties:
        additional_fields:
          type: object
        address:
          items:
            type: string
          type: array
        cities:
          items:
            type: string
          type: array
        countries:
          items:
            type: string
          type: array
        custom_fields:
          type: object
        id:
          type: string
        name:
          type: string
        tax:
          type: number
        tax_based_on:
          type: string
        tax_type:
          type: integer
        zip_codes:
          items:
            type: string
          type: array
      type: object
    Webhook:
      properties:
        action:
          type: string
        active:
          type: boolean
        additional_fields:
          type: object
        callback:
          type: string
        created_at:
          type: string
        custom_fields:
          type: object
        entity:
          type: string
        fields:
          type: string
        id:
          type: integer
        label:
          type: string
        store_id:
          type: string
        updated_at:
          type: string
      type: object
  securitySchemes:
    api_key:
      in: query
      name: api_key
      type: apiKey
    store_key:
      in: query
      name: store_key
      type: apiKey
