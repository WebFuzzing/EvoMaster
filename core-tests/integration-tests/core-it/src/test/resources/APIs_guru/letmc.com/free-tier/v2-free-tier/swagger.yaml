swagger: "2.0"
schemes:
  - https
host: live-api.letmc.com
info:
  contact:
    x-twitter: LetMC
  title: LetMC Api V2, Free (Tier 1)
  version: v2-free-tier
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: https://twitter.com/agentOSSoftware/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://live-api.letmc.com/swagger/docs/v2-free-tier
      version: "2.0"
  x-providerName: letmc.com
  x-serviceName: free-tier
consumes: []
produces:
  - application/json
  - text/json
  - application/xml
  - text/xml
securityDefinitions:
  apiKey:
    description: ApiKey Authentication
    in: header
    name: ApiKey
    type: apiKey
  basic:
    description: Basic HTTP Authentication
    type: basic
paths:
  "/v2/tier1/{shortName}/area/areas":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/AreaModelResults"
      summary: A collection of all the areas for a company
      tags:
        - AreaController
  "/v2/tier1/{shortName}/area/areas/{areaID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Area
          in: path
          name: areaID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/AreaModel"
      summary: Get a specific area given its unique Object ID (OID)
      tags:
        - AreaController
  "/v2/tier1/{shortName}/branch/branches":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BranchModelResults"
      summary: All branches defined for a company
      tags:
        - BranchController
  "/v2/tier1/{shortName}/branch/branches/{branchID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Branch
          in: path
          name: branchID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BranchModel"
      summary: Get a specific branch given its unique Object ID (OID)
      tags:
        - BranchController
  "/v2/tier1/{shortName}/company":
    get:
      deprecated: false
      operationId: CompanyController_GetCompany
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CompanyModel"
      summary: Information about a specific company
      tags:
        - CompanyController
  "/v2/tier1/{shortName}/county/counties":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CountyModelResults"
      summary: A collection of all counties available for a company
      tags:
        - CountyController
  "/v2/tier1/{shortName}/county/counties/{countyID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the County
          in: path
          name: countyID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CountyModel"
      summary: Get a specific county given its unique Object ID (OID)
      tags:
        - CountyController
  "/v2/tier1/{shortName}/county/counties/{countyID}/branches":
    get:
      deprecated: false
      operationId: CountyController_GetCountiesBranches
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the County
          in: path
          name: countyID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BranchModelResults"
      summary: A collection of branches that manage a specific county
      tags:
        - CountyController
  "/v2/tier1/{shortName}/diary/allocations":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/DiaryAllocationModelResults"
      summary: A collection of all diary allocations
      tags:
        - DiaryController
  "/v2/tier1/{shortName}/diary/allocations/{diaryAllocationID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the DiaryAllocation
          in: path
          name: diaryAllocationID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/DiaryAllocationModel"
      summary: Get a specific diary allocation given its unique Object ID (OID)
      tags:
        - DiaryController
  "/v2/tier1/{shortName}/diary/appointments":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/DiaryAppointmentModelResults"
      summary: A collection of all diary appointments
      tags:
        - DiaryController
  "/v2/tier1/{shortName}/diary/appointments/{diaryAppointmentID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the DiaryAppointment
          in: path
          name: diaryAppointmentID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/DiaryAppointmentModel"
      summary: Get a specific diary appointment given its unique Object ID (OID)
      tags:
        - DiaryController
  "/v2/tier1/{shortName}/diary/appointmenttypes":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/DiaryAppointmentTypeModelResults"
      summary: A collection of all diary appointment types
      tags:
        - DiaryController
  "/v2/tier1/{shortName}/diary/appointmenttypes/{diaryAppointmentTypeID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the DiaryAppointmentType
          in: path
          name: diaryAppointmentTypeID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/DiaryAppointmentTypeModel"
      summary: Get a specific diary appointment type given its unique Object ID (OID)
      tags:
        - DiaryController
  "/v2/tier1/{shortName}/lettings/advertised":
    get:
      deprecated: false
      operationId: LettingsController_GetAdvertised
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Branch
          in: query
          name: branchID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
        - description: The unique ID of the Area
          in: query
          name: areaID
          required: false
          type: string
        - description: The minimum advertised rent to search for
          format: double
          in: query
          name: rentMinimum
          required: false
          type: number
        - description: The maximum advertised rent to search for
          format: double
          in: query
          name: rentMaximum
          required: false
          type: number
        - description: The maximum number of tenants a property can accommodate
          format: int32
          in: query
          name: maximumTenants
          required: false
          type: integer
        - description: Search for shared properties?
          in: query
          name: wantSharedProperties
          required: false
          type: boolean
        - description: Search for student properties?
          in: query
          name: wantStudentProperties
          required: false
          type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TenancyModelResults"
      summary: Search all properties available for rent given a range of search criteria.
      tags:
        - LettingsController
  "/v2/tier1/{shortName}/lettings/advertisedbetweendates":
    get:
      deprecated: false
      operationId: LettingsController_GetAdvertisedBetweenDates
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Branch
          in: query
          name: branchID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
        - description: The date to search from
          format: date-time
          in: query
          name: rangeStartDate
          required: true
          type: string
        - description: The date to search to
          format: date-time
          in: query
          name: rangeEndDate
          required: true
          type: string
        - description: The unique ID of the Area
          in: query
          name: areaID
          required: false
          type: string
        - description: The minimum advertised rent to search for
          format: double
          in: query
          name: rentMinimum
          required: false
          type: number
        - description: The maximum advertised rent to search for
          format: double
          in: query
          name: rentMaximum
          required: false
          type: number
        - description: The maximum number of tenants a property can accommodate
          format: int32
          in: query
          name: maximumTenants
          required: false
          type: integer
        - description: Search for shared properties?
          in: query
          name: wantSharedProperties
          required: false
          type: boolean
        - description: Search for student properties?
          in: query
          name: wantStudentProperties
          required: false
          type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TenancyModelResults"
      summary: Search all properties available for rent given a range of search criteria and dates.
      tags:
        - LettingsController
  "/v2/tier1/{shortName}/lettings/tenancies":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TenancyModelResults"
      summary: A collection of all the company's tenancies
      tags:
        - LettingsController
  "/v2/tier1/{shortName}/lettings/tenancies/{tenancyID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Tenancy
          in: path
          name: tenancyID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TenancyModel"
      summary: Get a specific tenancy given its unique Object ID (OID)
      tags:
        - LettingsController
  "/v2/tier1/{shortName}/lettings/tenancies/{tenancyID}/brochure":
    get:
      deprecated: false
      operationId: LettingsController_GetTenancyBrochure
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the tenancy
          in: path
          name: tenancyID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Object"
      summary: Downloads the brochure relating to the latest advertised rental of a property
      tags:
        - LettingsController
  "/v2/tier1/{shortName}/photo/photos":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PhotoModelResults"
      summary: A collection of all photos in the company
      tags:
        - PhotoController
  "/v2/tier1/{shortName}/photo/photos/{photoID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Photo
          in: path
          name: photoID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PhotoModel"
      summary: Get a specific photo given its unique Object ID (OID)
      tags:
        - PhotoController
  "/v2/tier1/{shortName}/photos/photo/{photoID}/download":
    get:
      deprecated: false
      operationId: PhotoController_GetPhotoDownload
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the photo on the property
          in: path
          name: photoID
          required: true
          type: string
        - description: An optional parameter specifying the image width
          format: int32
          in: query
          name: width
          required: false
          type: integer
        - description: An optional parameter specifying the image height
          format: int32
          in: query
          name: height
          required: false
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Object"
      summary: Downloads the photo of a property given the property and photo ID.
      tags:
        - PhotoController
  "/v2/tier1/{shortName}/property/properties":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PropertyModelResults"
      summary: A collection of all properties within a company
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/property/properties/{propertyID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Property
          in: path
          name: propertyID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PropertyModel"
      summary: Get a specific property given its unique Object ID (OID)
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/property/properties/{propertyID}/facilities":
    get:
      deprecated: false
      operationId: PropertyController_GetPropertiesFacilities
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Property
          in: path
          name: propertyID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PropertyFacilityModelResults"
      summary: A collection of facilities linked to a block, property or room
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/property/properties/{propertyID}/photos":
    get:
      deprecated: false
      operationId: PropertyController_GetPropertiesPhotos
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Property
          in: path
          name: propertyID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PhotoModelResults"
      summary: A collection showing all the photos linked to a specific block, property or room
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/property/properties/{propertyID}/rooms":
    get:
      deprecated: false
      operationId: PropertyController_GetPropertiesRooms
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Property
          in: path
          name: propertyID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PropertyRoomModelResults"
      summary: A collection of the rooms that belong to this property or block
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/property/properties/{propertyID}/tenancies":
    get:
      deprecated: false
      operationId: PropertyController_GetPropertiesTenancies
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Property
          in: path
          name: propertyID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TenancyModelResults"
      summary: A collection of all tenancies associated with this block, property or room
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/property/structures/{propertyStructureID}/reports/eer":
    get:
      deprecated: false
      operationId: PropertyController_GetPropertyEERDownload
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the property structure
          in: path
          name: propertyStructureID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Object"
      summary: Downloads the energy efficiency report (EER) graph for a property
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/property/structures/{propertyStructureID}/reports/eir":
    get:
      deprecated: false
      operationId: PropertyController_GetPropertyEIRDownload
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the property structure
          in: path
          name: propertyStructureID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Object"
      summary: Downloads the environmental impact report (EIR) graph for a property
      tags:
        - PropertyController
  "/v2/tier1/{shortName}/sales/advertisedsales":
    get:
      deprecated: false
      operationId: SalesController_GetAdvertisedSales
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the Branch
          in: query
          name: branchID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
        - description: Show only development properties?
          in: query
          name: onlyDevelopement
          required: true
          type: boolean
        - description: Show only investment properties?
          in: query
          name: onlyInvestements
          required: true
          type: boolean
        - description: The minimum price to search for
          format: double
          in: query
          name: minimumPrice
          required: false
          type: number
        - description: The maximum price to search for
          format: double
          in: query
          name: maximumPrice
          required: false
          type: number
        - description: The minimum beds to search for
          format: int32
          in: query
          name: minimumBeds
          required: false
          type: integer
        - description: The minimum bathrooms to search for
          format: int32
          in: query
          name: minimumBathrooms
          required: false
          type: integer
        - description: The minimum ensuite bathrooms to search for
          format: int32
          in: query
          name: minimumEnsuites
          required: false
          type: integer
        - description: The minimum toilets to search for
          format: int32
          in: query
          name: minimumToilets
          required: false
          type: integer
        - description: The minimum reception rooms to search for
          format: int32
          in: query
          name: minimumReception
          required: false
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SalesInstructionModelResults"
      summary: Search all sales properties available given a range of search criteria
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/reports/eer/{salesInstructionID}":
    get:
      deprecated: false
      operationId: SalesController_GetEER
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesInstruction
          in: path
          name: salesInstructionID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Object"
      summary: Downloads the energy efficiency report (EER) graph for a sales instruction
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/reports/eir/{salesInstructionID}":
    get:
      deprecated: false
      operationId: SalesController_GetEIR
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesInstruction
          in: path
          name: salesInstructionID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Object"
      summary: Downloads the energy efficiency report (EIR) graph for a sales instruction
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesfeaturetypes":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SalesFeatureTypeModelResults"
      summary: A collection of all sales feature types linked to a company
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesfeaturetypes/{salesFeatureTypeID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesFeatureType
          in: path
          name: salesFeatureTypeID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SalesFeatureTypeModel"
      summary: Get a specific sales feature type given its unique Object ID (OID)
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesinstructions":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SalesInstructionModelResults"
      summary: A collection of all sales instructions linked to a company
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesInstruction
          in: path
          name: salesInstructionID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SalesInstructionModel"
      summary: Get a specific sales instruction given its unique Object ID (OID)
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/features":
    get:
      deprecated: false
      operationId: SalesController_GetSalesInstructionsFeatures
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesInstruction
          in: path
          name: salesInstructionID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SalesFeatureModelResults"
      summary: A collection of all features linked to a sales instruction
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/floorplans":
    get:
      deprecated: false
      operationId: SalesController_GetSalesInstructionsFloorPlans
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesInstruction
          in: path
          name: salesInstructionID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PhotoModelResults"
      summary: A collection of floor plans linked to an instruction
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/photos":
    get:
      deprecated: false
      operationId: SalesController_GetSalesInstructionsPhotos
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesInstruction
          in: path
          name: salesInstructionID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PhotoModelResults"
      summary: A collection of photos linked to an instruction
      tags:
        - SalesController
  "/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/rooms":
    get:
      deprecated: false
      operationId: SalesController_GetSalesInstructionsRooms
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the SalesInstruction
          in: path
          name: salesInstructionID
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PropertyRoomModelResults"
      summary: A collection of rooms linked to an instruction
      tags:
        - SalesController
  "/v2/tier1/{shortName}/staff/staff":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The index of the first item to return
          format: int32
          in: query
          name: offset
          required: true
          type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          format: int32
          in: query
          name: count
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ApplicationStaffModelResults"
      summary: A collection of all the staff members linked to a specific company
      tags:
        - StaffController
  "/v2/tier1/{shortName}/staff/staff/{applicationStaffID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          type: string
        - description: The unique ID of the ApplicationStaff
          in: path
          name: applicationStaffID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ApplicationStaffModel"
      summary: Get a specific application staff given its unique Object ID (OID)
      tags:
        - StaffController
definitions:
  ApplicationStaffModel:
    description: Holds the information about a member of staff.
    properties:
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      Forename:
        description: The user's forename.
        type: string
      GlobalReference:
        description: The global reference to this user.
        type: string
      IsEnabled:
        description: Is this staff member enabled?
        type: boolean
      ManagedBy:
        description: The branch linked to this user
        type: string
      Middlename:
        description: The user's middlename.
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      Surname:
        description: The user's surname.
        type: string
      Title:
        description: The user's title.
        type: string
    type: object
  ApplicationStaffModelResults:
    description: Holds results from a paged query returning ApplicationStaffModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/ApplicationStaffModel"
        type: array
    type: object
  AreaModel:
    description: Stores the information about a single property area.
    properties:
      Branch:
        description: The branch that manages this area.
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      Name:
        description: The property area name.
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      ShowOnSites:
        description: Show the area on sites?
        type: boolean
    type: object
  AreaModelResults:
    description: Holds results from a paged query returning AreaModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/AreaModel"
        type: array
    type: object
  BranchModel:
    description: Defines a single branch of a client.
    properties:
      Address1:
        description: Branch address line 1.
        type: string
      Address2:
        description: Branch address line 2.
        type: string
      Address3:
        description: Branch address line 3.
        type: string
      Address4:
        description: Branch address line 4.
        type: string
      CompanyName:
        description: The relevant company name, if not the one specified on the branch then the one on company.
        type: string
      County:
        description: County
        type: string
      EMailAddress:
        description: Branch email address.
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      FaxPhone:
        description: Branch fax phone number.
        type: string
      LandPhone:
        description: Branch land phone number.
        type: string
      Name:
        description: The branch name.
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      Postcode:
        description: Branch address postcode.
        type: string
      WebAddress:
        description: Branch web address.
        type: string
    type: object
  BranchModelResults:
    description: Holds results from a paged query returning BranchModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/BranchModel"
        type: array
    type: object
  CompanyModel:
    description: The search code for the ApplicationCompany storage object.
    properties:
      CompanyName:
        description: Company name
        type: string
      CompanyRegistration:
        description: Company registration number
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      MarketingCompanyName:
        description: Company Marketing Name
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      ShortName:
        description: The unique identifier assigned to the client
        type: string
    type: object
  CountyModel:
    description: Stores the information about a single property County. A County can have a number of areas linked to it.
    properties:
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      Name:
        description: The property county name.
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
    type: object
  CountyModelResults:
    description: Holds results from a paged query returning CountyModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/CountyModel"
        type: array
    type: object
  DiaryAllocationModel:
    description: "Represents a single diary allocation, capable of holding a number\r

      \            of appointments associated with a member of staff."
    properties:
      AppointmentType:
        description: The diary appointment type.
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      End:
        description: The end date/time of this allocation.
        format: date-time
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      Staff:
        description: The staff member holding this allocation.
        type: string
      Start:
        description: The start date/time of this allocation.
        format: date-time
        type: string
    type: object
  DiaryAllocationModelResults:
    description: Holds results from a paged query returning DiaryAllocationModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/DiaryAllocationModel"
        type: array
    type: object
  DiaryAppointmentModel:
    description: Represents a single diary appointment for a staff member.
    properties:
      AppointmentType:
        description: The diary appointment type.
        type: string
      Cancelled:
        description: Whether the appointment has been cancelled.
        type: boolean
      Comment:
        description: The appointment comments text.
        type: string
      CreatedAt:
        description: The date/time this appointment was created.
        format: date-time
        type: string
      CreatedBy:
        description: The staff member that created this appointment.
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      End:
        description: The end date/time of this appointment.
        format: date-time
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      RemindAt:
        description: The date/time to remind the staff member of this appointment.
        format: date-time
        type: string
      RemindBefore:
        description: The number of minutes before the appointment start date/time to remind the staff member. -1 means don't remind.
        enum:
          - Min
          - Min2
          - Min5
          - Min10
          - Min15
          - Min30
          - Min45
          - Hour
          - Hour2
          - Hour3
          - Hour6
          - Hour12
          - Day
          - Day2
          - Day3
          - Week
          - NoReminder
        type: string
      Staff:
        description: The staff member holding this appointment.
        type: string
      Start:
        description: The start date/time of this appointment.
        format: date-time
        type: string
      Subject:
        description: The appointment subject text.
        type: string
    type: object
  DiaryAppointmentModelResults:
    description: Holds results from a paged query returning DiaryAppointmentModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/DiaryAppointmentModel"
        type: array
    type: object
  DiaryAppointmentTypeModel:
    description: Represents a diary appointment type.
    properties:
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      Name:
        description: The appointment type name.
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      SystemType:
        description: The appointment system type.
        enum:
          - Viewing
          - ViewAndValue
          - OpeningInspection
          - InterimInspection
          - ClosingInspection
          - SalesAppraisal
          - Custom
        type: string
    type: object
  DiaryAppointmentTypeModelResults:
    description: Holds results from a paged query returning DiaryAppointmentTypeModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/DiaryAppointmentTypeModel"
        type: array
    type: object
  Object:
    properties: {}
    type: object
  PhotoModel:
    description: Stores a photo related to a property structure.
    properties:
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      FileName:
        description: The file name.
        type: string
      InspectionItem:
        description: The inspection item the photo is assigned to (if applicable).
        type: string
      InterimInspection:
        description: The inspection the photo is assigned to (if applicable).
        type: string
      InventoryItem:
        description: The inventory item the photo is assigned to (if applicable).
        type: string
      Name:
        description: The photo name.
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      PhotoNumber:
        description: The photo ordering number
        format: int32
        type: integer
      PhotoType:
        description: The photo type.
        enum:
          - Photo
          - Map
          - FloorPlan
          - SiteMap
          - AerialPhoto
        type: string
      Property:
        description: The property the photo is assigned to.
        type: string
      Room:
        description: The room the photo is assigned to. (If applicable)
        type: string
    type: object
  PhotoModelResults:
    description: Holds results from a paged query returning PhotoModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/PhotoModel"
        type: array
    type: object
  PropertyFacilityModel:
    description: Stores the information about a single property facility.
    properties:
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      Name:
        description: Display Name
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
    type: object
  PropertyFacilityModelResults:
    description: Holds results from a paged query returning PropertyFacilityModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/PropertyFacilityModel"
        type: array
    type: object
  PropertyModel:
    description: Stores the 'Sales' type fields for property ownable as a stepping stone to a full on BO when we finally get the go ahead to write sales!!
    properties:
      Area:
        description: The area the property is located in.
        type: string
      Branch:
        description: The branch the block, property or room is assigned to
        type: string
      Description:
        description: The block, property or room description.
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      FullAddress:
        description: The full address of a block, property or room, formatted with line breaks such that it may be used on a letter directly.
        type: string
      GlobalReference:
        description: The global reference to this block, property or room
        type: string
      MainPhoto:
        description: Gets the main photo, if there is one.
        type: string
      ManagedByStaff:
        description: The staff memeber that manages the block, property or room
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      PropertySource:
        description: The block, property or room source type
        type: string
      PropertyType:
        description: The block or property type.
        enum:
          - House
          - FlatApartment
          - Bungalow
          - Land
          - HouseFlatShare
          - GarageParking
          - CommercialProperty
          - Block
          - TerracedHouse
          - EndTerraceHouse
          - SemiDetachedHouse
          - DetachedHouse
          - SemiDetachedBungalow
          - TownHouse
          - Cottage
          - ServicedApartment
          - Studio
          - Apartment
          - Barn
          - FarmHouse
          - Penthouse
          - BuildingPlot
          - DetachedBungalow
          - LinkDetached
          - MidTerracedBungalow
          - LandResidential
        type: string
      RoomName:
        description: The room name (if applicable).
        type: string
      VideoURL:
        description: URL of the video linked to the property
        type: string
    type: object
  PropertyModelResults:
    description: Holds results from a paged query returning PropertyModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/PropertyModel"
        type: array
    type: object
  PropertyRoomModel:
    description: A single room (bedroom) property structure.
    properties:
      Area:
        description: The area the property is located in.
        type: string
      Branch:
        description: The branch the block, property or room is assigned to
        type: string
      Description:
        description: The block, property or room description.
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      FullAddress:
        description: The full address of a block, property or room, formatted with line breaks such that it may be used on a letter directly.
        type: string
      GlobalReference:
        description: The global reference to this block, property or room
        type: string
      HeightCentimeters:
        description: Gets the CentiMeter part of the room Height.
        format: int32
        type: integer
      HeightMeters:
        description: Gets the Meter part of the room Height.
        format: int32
        type: integer
      LengthCentimeters:
        description: Gets the CentiMeter part of the room Length.
        format: int32
        type: integer
      LengthMeters:
        description: Gets the Meter part of the room Length.
        format: int32
        type: integer
      MainPhoto:
        description: Gets the main photo, if there is one.
        type: string
      ManagedByStaff:
        description: The staff memeber that manages the block, property or room
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      PropertySource:
        description: The block, property or room source type
        type: string
      RoomFloor:
        description: Gets and sets the room floor.
        enum:
          - Basement
          - Ground
          - First
          - Second
          - Third
          - Fourth
          - Fifth
          - SixthPlus
          - Unknown
        type: string
      RoomName:
        description: The room name (if applicable).
        type: string
      WidthCentiMeters:
        description: Gets the CentiMeter part of the room width.
        format: int32
        type: integer
      WidthMeters:
        description: Gets the Meter part of the room width.
        format: int32
        type: integer
    type: object
  PropertyRoomModelResults:
    description: Holds results from a paged query returning PropertyRoomModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/PropertyRoomModel"
        type: array
    type: object
  SalesFeatureModel:
    description: ""
    properties:
      Comment:
        description: The feature comment
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
      Type:
        description: The feature type
        type: string
    type: object
  SalesFeatureModelResults:
    description: Holds results from a paged query returning SalesFeatureModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/SalesFeatureModel"
        type: array
    type: object
  SalesFeatureTypeModel:
    description: ""
    properties:
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      Name:
        description: The name of the feature type
        type: string
      OID:
        description: The unique Object ID (OID).
        type: string
    type: object
  SalesFeatureTypeModelResults:
    description: Holds results from a paged query returning SalesFeatureTypeModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/SalesFeatureTypeModel"
        type: array
    type: object
  SalesInstructionModel:
    description: ""
    properties:
      Address1:
        description: Address 1 of the property to be sold
        type: string
      Address2:
        description: Address 2 of the property to be sold
        type: string
      Address3:
        description: Address 3 of the property to be sold
        type: string
      Address4:
        description: Address 4 of the property to be sold
        type: string
      AddressNumber:
        description: Address number of the property to be sold
        type: string
      Area:
        description: The area linked to the instruction
        type: string
      Bathrooms:
        description: Number of bathrooms linked to the instruction
        format: int32
        type: integer
      BathroomsEnsuite:
        description: How many of the bathrooms are ensuite?
        format: int32
        type: integer
      Bedrooms:
        description: Number of bedrooms linked to the instruction
        format: int32
        type: integer
      ContractType:
        description: The contract type
        enum:
          - Pending
          - SoleAgency
          - SoleSellingRights
          - JointSoleAgency
          - MultiAgency
          - SubAgent
        type: string
      Country:
        description: Address country of the property to be sold
        enum:
          - Afghanistan
          - Albania
          - Algeria
          - Andorra
          - Angola
          - AntiguaAndBarbuda
          - Argentina
          - Armenia
          - Australia
          - Austria
          - Azerbaijan
          - Bahamas
          - Bahrain
          - Bangladesh
          - Barbados
          - Belarus
          - Belgium
          - Belize
          - Benin
          - Bhutan
          - Bolivia
          - BosniaAndHerzegovina
          - Botswana
          - Brazil
          - Brunei
          - Bulgaria
          - BurkinaFaso
          - Burundi
          - Cambodia
          - Cameroon
          - Canada
          - CapeVerde
          - CentralAfricanRepublic
          - Chad
          - Chile
          - China
          - Colombia
          - Comoros
          - CongoBrazzaville
          - CongoDemocraticRepublicOfThe
          - CostaRica
          - CoteDIvoire
          - Croatia
          - Cuba
          - Cyprus
          - CzechRepublic
          - Denmark
          - Djibouti
          - Dominica
          - DominicanRepublic
          - EastTimorTimorTimur
          - Ecuador
          - Egypt
          - ElSalvador
          - EquatorialGuinea
          - Eritrea
          - Estonia
          - Ethiopia
          - Fiji
          - Finland
          - France
          - Gabon
          - GambiaThe
          - Georgia
          - Germany
          - Ghana
          - Greece
          - Grenada
          - Guatemala
          - Guinea
          - GuineaBissau
          - Guyana
          - Haiti
          - Honduras
          - Hungary
          - Iceland
          - India
          - Indonesia
          - Iran
          - Iraq
          - Ireland
          - Israel
          - Italy
          - Jamaica
          - Japan
          - Jordan
          - Kazakhstan
          - Kenya
          - Kiribati
          - KoreaNorth
          - KoreaSouth
          - Kuwait
          - Kyrgyzstan
          - Laos
          - Latvia
          - Lebanon
          - Lesotho
          - Liberia
          - Libya
          - Liechtenstein
          - Lithuania
          - Luxembourg
          - MacedoniaFormerYugoslavRepublicOf
          - Madagascar
          - Malawi
          - Malaysia
          - Maldives
          - Mali
          - Malta
          - MarshallIslands
          - Mauritania
          - Mauritius
          - Mexico
          - MicronesiaFederatedStatesOf
          - Moldova
          - Monaco
          - Mongolia
          - Morocco
          - Mozambique
          - Myanmar
          - Namibia
          - Nauru
          - Nepal
          - Netherlands
          - NewZealand
          - Nicaragua
          - Niger
          - Nigeria
          - Norway
          - Oman
          - Pakistan
          - Palau
          - Panama
          - PapuaNewGuinea
          - Paraguay
          - Peru
          - Philippines
          - Poland
          - Portugal
          - Qatar
          - Romania
          - Russia
          - Rwanda
          - SaintKittsAndNevis
          - SaintLucia
          - SaintVincentAndTheGrenadines
          - Samoa
          - SanMarino
          - SaoTomeAndPrincipe
          - SaudiArabia
          - Senegal
          - SerbiaAndMontenegro
          - Seychelles
          - SierraLeone
          - Singapore
          - Slovakia
          - Slovenia
          - SolomonIslands
          - Somalia
          - SouthAfrica
          - Spain
          - SriLanka
          - Sudan
          - Suriname
          - Swaziland
          - Sweden
          - Switzerland
          - Syria
          - Taiwan
          - Tajikistan
          - Tanzania
          - Thailand
          - Togo
          - Tonga
          - TrinidadAndTobago
          - Tunisia
          - Turkey
          - Turkmenistan
          - Tuvalu
          - Uganda
          - Ukraine
          - UnitedArabEmirates
          - UnitedKingdom
          - UnitedStates
          - Uruguay
          - Uzbekistan
          - Vanuatu
          - VaticanCity
          - Venezuela
          - Vietnam
          - WesternSahara
          - Yemen
          - Zambia
          - Zimbabwe
          - UnknownCountry
          - HongKong
          - Jersey
          - ChannelIslands
          - Bermuda
          - BritishOverseasTerritory
        type: string
      Description:
        description: The instruction description
        type: string
      DevelopmentOpp:
        description: Is the instruction a development opportunity?
        type: boolean
      Directions:
        description: Directions linked to the instruction
        type: string
      EPCCurrentEER:
        description: Current EER value
        format: int32
        type: integer
      EPCCurrentEI:
        description: Current EI value
        format: int32
        type: integer
      EPCPotentialEER:
        description: Potential EER value
        format: int32
        type: integer
      EPCPotentialEI:
        description: Potential EI value
        format: int32
        type: integer
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      HasElectricitySupply:
        description: Does the instruction have an electrical supply linked to it?
        type: boolean
      HasGasSupply:
        description: Does the instruction have an gas supply linked to it?
        type: boolean
      HasWaterMeter:
        description: Does the instruction have a water meter linked to it?
        type: boolean
      InvestmentOpp:
        description: Is the instruction a investment opportunity?
        type: boolean
      Kitchens:
        description: Number of kitchens linked to the property instruction
        format: int32
        type: integer
      OID:
        description: The unique Object ID (OID).
        type: string
      OutsideSpaceBalcony:
        description: Does the instruction have an outside balcony linked to it?
        type: boolean
      OutsideSpaceCommunalGarden:
        description: Does the instruction have a communal garden linked to it?
        type: boolean
      OutsideSpaceConservatory:
        description: Does the instruction have a conservatory linked to it?
        type: boolean
      OutsideSpaceGarden:
        description: Does the instruction have a garden linked to it?
        type: boolean
      OutsideSpaceLargeGarden:
        description: Does the instruction have a large garden linked to it?
        type: boolean
      OutsideSpacePatio:
        description: Does the instruction have a patio linked to it?
        type: boolean
      OutsideSpaceRoofTerrace:
        description: Does the instruction have a roof terrace linked to it?
        type: boolean
      OutsideSpaceSouthFacingGarden:
        description: Does the instruction have a south facing garden?
        type: boolean
      ParkingAllocated:
        description: Is there any parking allocation linked to the instruction?
        type: boolean
      ParkingCarport:
        description: Does the instruction have a carport linked to it?
        type: boolean
      ParkingDoubleGarage:
        description: Does the instruction have a double garage linked to it?
        type: boolean
      ParkingGarage:
        description: Does the instruction have a garage linked to it?
        type: boolean
      ParkingOffRoad:
        description: Is there off road parking linked to the instruction?
        type: boolean
      ParkingOnRoad:
        description: Is there on road parking linked to the instruction?
        type: boolean
      ParkingPermit:
        description: Is a parking permit required?
        type: boolean
      ParkingSecureGated:
        description: Is there any secured gate parking linked to the instruction?
        type: boolean
      ParkingTripleGarage:
        description: Does the instruction have a triple garage linked to it?
        type: boolean
      Postcode:
        description: Postcode of the property to be sold
        type: string
      Price:
        description: The price of the property to be sold
        format: double
        type: number
      PropertyOwnableType:
        description: The property type
        enum:
          - House
          - FlatApartment
          - Bungalow
          - Land
          - HouseFlatShare
          - GarageParking
          - CommercialProperty
          - Block
          - TerracedHouse
          - EndTerraceHouse
          - SemiDetachedHouse
          - DetachedHouse
          - SemiDetachedBungalow
          - TownHouse
          - Cottage
          - ServicedApartment
          - Studio
          - Apartment
          - Barn
          - FarmHouse
          - Penthouse
          - BuildingPlot
          - DetachedBungalow
          - LinkDetached
          - MidTerracedBungalow
          - LandResidential
        type: string
      ReceptionRooms:
        description: Number of reception rooms linked to the instruction
        format: int32
        type: integer
      State:
        description: The current instruction state
        enum:
          - MarketAppraisal
          - LostAppraisal
          - Instructed
          - Advertised
          - UnderOffer
          - ContractsExchanged
          - Completed
          - FallenThrough
          - Withdrawn
        type: string
      Tenure:
        description: Instruction tenure
        enum:
          - Freehold
          - Leasehold
          - Commonhold
          - ShareOfFreehold
          - FlyingFreehold
          - ShareTransfer
          - Unknown
        type: string
      VideoURL:
        description: The URL of the video linked to the Sales Instruction
        type: string
    type: object
  SalesInstructionModelResults:
    description: Holds results from a paged query returning SalesInstructionModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/SalesInstructionModel"
        type: array
    type: object
  TenancyModel:
    description: "Represents a single tenancy on a property structure. This class may\r

      \            be considered to be the context of the tenancy strategy pattern. The\r

      \            strategy is the tenancy service, that dictates the algorithm applied\r

      \            to the tenancy. This class therefore holds the raw data of a tenancy,\r

      \            and ignores any tenancy service (fully managed, let only) parameters."
    properties:
      AdvertiseFrom:
        description: The date to advertise this tenancy from.
        format: date-time
        type: string
      Area:
        description: The area containing the instruction.
        type: string
      BondRequired:
        description: The total bond required.
        format: double
        type: number
      Branch:
        description: The branch the tenancy is assigned to..
        type: string
      ETag:
        description: A unique identifier defining the object and change revision.
        type: string
      Furnished:
        description: The property furnished type.
        enum:
          - Unfurnished
          - PartFurnished
          - Furnished
        type: string
      GlobalReference:
        description: The global reference for a tenancy.
        type: string
      IsShareProperty:
        description: Is this property a shared property.
        type: boolean
      IsStudentProperty:
        description: Is this property a student property.
        type: boolean
      IsTenancyAdvertised:
        description: "Gets a value indicating whether this tenancy is being advertised. Note\r

          \            that this will only return true while the tenancy has a valid advertise\r

          \            date. It will not return true in the proposed phase."
        type: boolean
      IsTenancyProposed:
        description: Is the tenancy a proposed tenancy?
        type: boolean
      MaximumTenants:
        description: The maximum number of tenants to advertise for.
        format: int32
        type: integer
      MinimumTenants:
        description: The minimum number of tenants to advertise for.
        format: int32
        type: integer
      OID:
        description: The unique Object ID (OID).
        type: string
      RentAdvertised:
        description: The advertised amount of rent for the property.
        format: double
        type: number
      RentRecurrence:
        description: The rent schedule recurrence
        format: int32
        type: integer
      RentSchedule:
        description: The tenancy rent schedule
        enum:
          - Once
          - Daily
          - Weekly
          - Monthly
          - Yearly
        type: string
      TenancyProperty:
        description: The property linked to this tenancy.
        type: string
      TenantSystemTypes:
        description: The specific tenant type list, or empty if for all types.
        items:
          enum:
            - Employed
            - SelfEmployed
            - Unemployed
            - Student
            - OwnMeans
            - Retired
            - Company
            - Council
          type: string
        type: array
      TermMaximum:
        description: The instruction maximum term.
        format: int32
        type: integer
      TermMinimum:
        description: The minimum term.
        format: int32
        type: integer
      TermStart:
        description: The instruction start date.
        format: date-time
        type: string
      UtilityCouncilTax:
        description: Who's responsible for council tax bills.
        enum:
          - Tenant
          - Landlord
        type: string
      UtilityElectricity:
        description: Who's responsible for electricity bills.
        enum:
          - Tenant
          - Landlord
        type: string
      UtilityGas:
        description: Who's responsible for Gas bills.
        enum:
          - Tenant
          - Landlord
        type: string
      UtilityTelephone:
        description: Who's responsible for telephone bills.
        enum:
          - Tenant
          - Landlord
        type: string
      UtilityWater:
        description: Who's responsible for water bills.
        enum:
          - Tenant
          - Landlord
        type: string
    type: object
  TenancyModelResults:
    description: Holds results from a paged query returning TenancyModel values
    properties:
      Count:
        description: The total number of results available for all pages
        format: int32
        type: integer
      Data:
        description: The resulting data returned from the paged query range
        items:
          $ref: "#/definitions/TenancyModel"
        type: array
    type: object
