openapi: 3.0.0
servers:
  - url: https://live-api.letmc.com
info:
  contact:
    x-twitter: agentOSSoftware
  title: agentOS Api V2, Customer Login Call Group
  version: v2-customer
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: https://twitter.com/agentOSSoftware/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://live-api.letmc.com/swagger/docs/v2-customer
      version: "3.0"
  x-providerName: letmc.com
  x-serviceName: customer
paths:
  "/v2/customer/{shortName}/branch/branches":
    get:
      deprecated: false
      operationId: BranchController_GetBranches
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The index of the first item to return
          in: query
          name: offset
          required: true
          schema:
            format: int32
            type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          in: query
          name: count
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchModelResults"
            application/xml:
              schema:
                $ref: "#/components/schemas/BranchModelResults"
            text/json:
              schema:
                $ref: "#/components/schemas/BranchModelResults"
            text/xml:
              schema:
                $ref: "#/components/schemas/BranchModelResults"
          description: OK
      summary: All branches defined for a company
      tags:
        - BranchController
  "/v2/customer/{shortName}/branch/branches/{branchID}":
    get:
      deprecated: false
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The unique ID of the Branch
          in: path
          name: branchID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchModel"
            application/xml:
              schema:
                $ref: "#/components/schemas/BranchModel"
            text/json:
              schema:
                $ref: "#/components/schemas/BranchModel"
            text/xml:
              schema:
                $ref: "#/components/schemas/BranchModel"
          description: OK
      summary: Get a specific branch given its unique Object ID (OID)
      tags:
        - BranchController
  "/v2/customer/{shortName}/landlord/accounting":
    get:
      deprecated: false
      operationId: LandlordController_GetAccounts
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordAccountingModel"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordAccountingModel"
          description: OK
      summary: Get the accounting details for the landlord.
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/document":
    get:
      deprecated: false
      operationId: LandlordController_GetDocument
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The Document ID
          in: query
          name: ID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
          description: OK
      summary: Download a Document
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/inventory":
    get:
      deprecated: false
      operationId: LandlordController_GetInvetoryReport
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The Tenancy ID
          in: query
          name: tenancyID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
          description: OK
      summary: Generate a Inventory PDF for a tenancy
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/invoice":
    get:
      deprecated: false
      operationId: LandlordController_GetInvoice
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The invoice ID to load.
          in: query
          name: invoiceID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
          description: OK
      summary: Get an invoice pdf belonging to the landlord.
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/landlordcrmentries":
    get:
      deprecated: false
      operationId: LandlordController_GetLandlordCrmEntries
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LandlordCrmEntry"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/LandlordCrmEntry"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/LandlordCrmEntry"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/LandlordCrmEntry"
                type: array
          description: OK
      summary: Retrieve landlord's CRM ID
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/maintenance":
    get:
      deprecated: false
      operationId: LandlordController_GetMaintenanceJobs
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordMaintenanceModel"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordMaintenanceModel"
          description: OK
      summary: Get Active maintenance jobs.
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/profitloss":
    get:
      deprecated: false
      operationId: LandlordController_GetProfitLossReport
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordProfitLossModel"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordProfitLossModel"
          description: OK
      summary: Generate a Profit and Loss Report
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/rentarrears":
    get:
      deprecated: false
      operationId: LandlordController_GetRentArrears
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordRentArrearsModel"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordRentArrearsModel"
          description: OK
      summary: Rent Arrears
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/sas":
    get:
      deprecated: false
      operationId: LandlordController_GetSASReport
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The Tax Year End.
          in: query
          name: yearEnd
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
          description: OK
      summary: Generate a Self Assessment Tax Report
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/settings":
    get:
      deprecated: false
      operationId: LandlordController_GetSettings
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordSettingsModel"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordSettingsModel"
          description: OK
      summary: Get contact details of all linked landlords.
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/summary":
    get:
      deprecated: false
      operationId: LandlordController_GetSummaryDetails
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordSummaryModel"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordSummaryModel"
          description: OK
      summary: Get the summary details for the landlord.
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/tenancy":
    get:
      deprecated: false
      operationId: LandlordController_GetTenancy
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The Tenancy ID
          in: query
          name: tenancyID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordTenancyModel"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordTenancyModel"
          description: OK
      summary: Get tenancy details.
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/tenancy/maintenance/preference":
    post:
      deprecated: false
      operationId: LandlordController_CreateMaintenancePreference
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The Tenancy ID
          in: query
          name: tenancyID
          required: true
          schema:
            type: string
        - description: Name of the maintenance preference to add
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Notes of the maintenance preference to add
          in: query
          name: notes
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Post tenancy maintenance preferences:-
      tags:
        - LandlordController
  "/v2/customer/{shortName}/landlord/tenancyagreement":
    get:
      deprecated: false
      operationId: LandlordController_GetTenancyAgreementReport
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The Tenancy ID
          in: query
          name: tenancyID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
          description: OK
      summary: Generate a Tenancy Agreement Copy (PDF)
      tags:
        - LandlordController
  "/v2/customer/{shortName}/photo/download":
    get:
      deprecated: false
      operationId: PhotoController_GetPhotoDownload
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The unique ID of the photo on the property
          in: query
          name: photoID
          required: true
          schema:
            type: string
        - description: An optional parameter specifying the image width
          in: query
          name: width
          required: false
          schema:
            format: int32
            type: integer
        - description: An optional parameter specifying the image height
          in: query
          name: height
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
          description: OK
      summary: Downloads the photo of a property given the photo ID.
      tags:
        - PhotoController
  "/v2/customer/{shortName}/property/{propertyID}/photos":
    get:
      deprecated: false
      operationId: PropertyController_GetPropertiesPhotos
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The unique ID of the Property
          in: path
          name: propertyID
          required: true
          schema:
            type: string
        - description: The index of the first item to return
          in: query
          name: offset
          required: true
          schema:
            format: int32
            type: integer
        - description: The maximum number of items to return (up to 1000 per request)
          in: query
          name: count
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandlordPhotoModelResults"
            application/xml:
              schema:
                $ref: "#/components/schemas/LandlordPhotoModelResults"
            text/json:
              schema:
                $ref: "#/components/schemas/LandlordPhotoModelResults"
            text/xml:
              schema:
                $ref: "#/components/schemas/LandlordPhotoModelResults"
          description: OK
      summary: A collection showing all the photos linked to a specific block, property or room
      tags:
        - PropertyController
  "/v2/customer/{shortName}/session":
    delete:
      deprecated: false
      operationId: SessionController_Logout
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Logout a customer previously logged in via the Login endpoint.
      tags:
        - SessionController
    get:
      deprecated: false
      operationId: SessionController_GetSessionInfo
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Gets information about the currently logged on customer.
      tags:
        - SessionController
    post:
      deprecated: false
      operationId: SessionController_Login
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The user's username.
          in: query
          name: username
          required: true
          schema:
            type: string
        - description: The user's password.
          in: query
          name: password
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Login as a customer given their username and password.
      tags:
        - SessionController
  "/v2/customer/{shortName}/session/createlandlordlogin":
    post:
      deprecated: false
      operationId: SessionController_CreateLandlordLogin
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The email address of the landlord
          in: query
          name: email
          required: true
          schema:
            type: string
        - description: The title of the landlord
          in: query
          name: title
          required: true
          schema:
            type: string
        - description: The forename of the landlord
          in: query
          name: forename
          required: true
          schema:
            type: string
        - description: The surname of the landlord
          in: query
          name: surname
          required: true
          schema:
            type: string
        - description: Address of the property linked to the landlord
          in: query
          name: propertyAddress
          required: true
          schema:
            type: string
        - description: Contact details of the landlord
          in: query
          name: contactDetails
          required: true
          schema:
            type: string
        - description: (Optional) The branch ID linked to the login. This will determine which in tray the request display in
          in: query
          name: branchID
          required: false
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Send a request to the in-tray to create a landlord login.
      tags:
        - SessionController
  "/v2/customer/{shortName}/session/password":
    put:
      deprecated: false
      operationId: SessionController_ChangePassword
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login token returned from the /session POST call
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The customer's existing password.
          in: query
          name: oldPassword
          required: true
          schema:
            type: string
        - description: The customer's new password.
          in: query
          name: newPassword
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Change the password of a customer given their existing and new password.
      tags:
        - SessionController
  "/v2/customer/{shortName}/session/resetpassword":
    post:
      deprecated: false
      operationId: SessionController_ResetPassword
      parameters:
        - description: The unique client short-name
          in: path
          name: shortName
          required: true
          schema:
            type: string
        - description: The login Email Address.
          in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Reset the customer's password. An email will be sent out to reset.
      tags:
        - SessionController
components:
  schemas:
    BranchModel:
      description: Defines a single branch of a client.
      properties:
        Address1:
          description: Branch address line 1.
          type: string
        Address2:
          description: Branch address line 2.
          type: string
        Address3:
          description: Branch address line 3.
          type: string
        Address4:
          description: Branch address line 4.
          type: string
        CompanyName:
          description: The relevant company name, if not the one specified on the branch then the one on company.
          type: string
        County:
          description: County
          type: string
        EMailAddress:
          description: Branch email address.
          type: string
        ETag:
          description: A unique identifier defining the object and change revision.
          type: string
        FaxPhone:
          description: Branch fax phone number.
          type: string
        LandPhone:
          description: Branch land phone number.
          type: string
        Name:
          description: The branch name.
          type: string
        OID:
          description: The unique Object ID (OID).
          type: string
        Postcode:
          description: Branch address postcode.
          type: string
        WebAddress:
          description: Branch web address.
          type: string
      type: object
    BranchModelResults:
      description: Holds results from a paged query returning BranchModel values
      properties:
        Count:
          description: The total number of results available for all pages
          format: int32
          type: integer
        Data:
          description: The resulting data returned from the paged query range
          items:
            $ref: "#/components/schemas/BranchModel"
          type: array
      type: object
    KeyValuePair_String_String_:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    LandlordAccountingEntryModel:
      description: Landlord Accounting - Finance Entry
      properties:
        Amount:
          description: Amount
          format: double
          type: number
        Date:
          description: Payment Date
          format: date-time
          type: string
        Description:
          description: Description.
          type: string
        TransactionNumber:
          description: Transaction Number
          format: int32
          type: integer
      type: object
    LandlordAccountingInvoiceModel:
      description: Invoices
      properties:
        Date:
          description: Payment Date
          format: date-time
          type: string
        InvoiceID:
          description: Transaction Number
          type: string
        IsMaintenanceInvoice:
          description: Does this invoice contain contractor payments?
          type: boolean
      type: object
    LandlordAccountingModel:
      description: Landlord Accounting
      properties:
        AccountBalance:
          description: Account Balance
          format: double
          type: number
        LastPayment:
          description: Last Payment Made
          format: date-time
          type: string
        PaymentHistory:
          description: Payment History
          items:
            $ref: "#/components/schemas/LandlordAccountingEntryModel"
          type: array
        Statements:
          description: Statements
          items:
            $ref: "#/components/schemas/LandlordAccountingInvoiceModel"
          type: array
      type: object
    LandlordChaseNoteModel:
      description: Landlord Arrears Chase Note.
      properties:
        Date:
          description: Created Date
          format: date-time
          type: string
        Note:
          description: Note.
          type: string
        NoteType:
          description: Note Type
          type: string
        TenantID:
          description: Tenant
          type: string
      type: object
    LandlordCrmEntry:
      description: Class for Landlord CRM Entries
      properties:
        BranchID:
          type: string
        GlobalReference:
          type: string
        Name:
          type: string
        OID:
          type: string
      type: object
    LandlordDetailsModel:
      description: Landlord Details
      properties:
        Address:
          description: Address
          type: string
        Email:
          description: Email
          type: string
        GlobalReference:
          description: User Friendly ID
          type: string
        ID:
          description: ID
          type: string
        Mobile:
          description: Mobile
          type: string
        Name:
          description: Name
          type: string
        Phone:
          description: Phone
          type: string
      type: object
    LandlordLettingsInspectionModel:
      description: Lettings Inspection
      properties:
        InspectionDate:
          description: InspectionDate
          format: date-time
          type: string
        Notes:
          description: Notes
          type: string
      type: object
    LandlordMaintenanceCertificateModel:
      description: Maintenance Certificate
      properties:
        Due:
          description: Due
          format: date-time
          type: string
        Files:
          description: Files
          items:
            $ref: "#/components/schemas/LettingsLandlordDocument"
          type: array
        Status:
          description: Status.
          type: string
        Type:
          description: Type
          type: string
      type: object
    LandlordMaintenanceJobModel:
      description: Maintenance Job
      properties:
        AssignedTo:
          description: AssignedTo
          type: string
        ClosedDate:
          description: Job Closed Date:-
          format: date-time
          readOnly: true
          type: string
        Description:
          description: Description
          type: string
        MaintenanceNotes:
          items:
            $ref: "#/components/schemas/LandlordMaintenanceJobNoteModel"
          type: array
        Property:
          description: Property
          type: string
        Reported:
          description: Reported
          format: date-time
          type: string
        Status:
          description: Status
          type: string
      type: object
    LandlordMaintenanceJobNoteModel:
      description: Maintenance Job Note Helper Model:-
      properties:
        CreatedAt:
          description: Created At:-
          format: date-time
          type: string
        NoteContents:
          description: Note Contents:-
          type: string
        OID:
          description: Job ID:-
          type: string
      type: object
    LandlordMaintenanceModel:
      description: Landlord Maintenance
      properties:
        Jobs:
          description: Maintenance Jobs.
          items:
            $ref: "#/components/schemas/LandlordMaintenanceJobModel"
          type: array
      type: object
    LandlordMaintenancePreferenceModel:
      description: Maintenance Preference
      properties:
        Name:
          description: Name
          type: string
        Notes:
          description: Notes.
          type: string
        Type:
          description: Type
          type: string
      type: object
    LandlordPhotoModel:
      description: Stores a photo related to a property structure.
      properties:
        ETag:
          description: A unique identifier defining the object and change revision.
          type: string
        FileName:
          description: The file name.
          type: string
        OID:
          description: The unique Object ID (OID).
          type: string
        PhotoType:
          description: The photo type.
          enum:
            - Photo
            - Map
            - FloorPlan
            - SiteMap
            - AerialPhoto
          type: string
      type: object
    LandlordPhotoModelResults:
      description: Holds results from a paged query returning LandlordPhotoModel values
      properties:
        Count:
          description: The total number of results available for all pages
          format: int32
          type: integer
        Data:
          description: The resulting data returned from the paged query range
          items:
            $ref: "#/components/schemas/LandlordPhotoModel"
          type: array
      type: object
    LandlordProfitLossModel:
      description: Class to represent proffit loss report.
      properties:
        DirectCosts:
          $ref: "#/components/schemas/LandlordProfitLossSectionModel"
        GrossProfitLoss:
          $ref: "#/components/schemas/LandlordProfitLossSectionModel"
        Income:
          $ref: "#/components/schemas/LandlordProfitLossSectionModel"
      type: object
    LandlordProfitLossRowModel:
      description: Class for a group of entries.
      properties:
        MonthTotals:
          description: Month Totals
          items:
            $ref: "#/components/schemas/KeyValuePair_String_String_"
          type: array
        NominalCode:
          description: Nominal Code
          type: string
        Title:
          description: Title of the values.
          type: string
        Total:
          description: Total for all months.
          type: string
      type: object
    LandlordProfitLossSectionModel:
      description: Class for a group of entries.
      properties:
        Rows:
          description: Rows.
          items:
            $ref: "#/components/schemas/LandlordProfitLossRowModel"
          type: array
      type: object
    LandlordRentArrearsModel:
      description: Landlord Rent Arrears.
      properties:
        ChaseNotes:
          description: Chase Notes
          items:
            $ref: "#/components/schemas/LandlordChaseNoteModel"
          type: array
        RentCollected:
          description: Rent Collected
          format: double
          type: number
        RentOutstanding:
          description: Outstanding Rent
          items:
            $ref: "#/components/schemas/LandlordRentOustandingItem"
          type: array
        TotalRentArrears:
          description: Rent Arrears
          format: double
          type: number
      type: object
    LandlordRentOustandingItem:
      description: Outstanding Rent
      properties:
        DebtDays:
          description: Days since the tenant went into arrears
          format: int32
          type: integer
        OutstandingRent:
          description: Outstanding Rent
          format: double
          type: number
        Property:
          description: Property
          type: string
        Tenant:
          description: Tenant
          type: string
        TenantID:
          description: TenantID
          type: string
      type: object
    LandlordSettingsModel:
      description: Landlord Settings
      properties:
        LinkedAccounts:
          description: Linked Accounts
          items:
            $ref: "#/components/schemas/LandlordDetailsModel"
          type: array
      type: object
    LandlordSummaryModel:
      description: Landlord Summary - Landing Page.
      properties:
        AccountBalance:
          description: Account Balance
          format: double
          type: number
        LastPayment:
          description: Last Payment Made
          format: date-time
          type: string
        Tenancies:
          description: Tenancies
          items:
            $ref: "#/components/schemas/LandlordSummaryTenancyModel"
          type: array
        TotalRentArrears:
          description: Rent Arrears
          format: double
          type: number
      type: object
    LandlordSummaryTenancyModel:
      description: Landlord Summary - Landing Page.
      properties:
        Bond:
          description: Bomd
          format: double
          type: number
        BranchID:
          description: The Tenancy Branch ID
          type: string
        Description:
          description: Description.
          type: string
        GlobalReference:
          description: User Friendly ID
          type: string
        ID:
          description: ID
          type: string
        MaintenanceJobs:
          description: Maintenance Jobs.
          format: int32
          type: integer
        ManagedRent:
          description: State of the tenancy
          type: boolean
        PropertyAddress:
          description: Display Property Address
          type: string
        Rent:
          description: Rent
          type: string
        RentArrears:
          description: Rent Arrears
          format: double
          type: number
        RentCollected:
          description: Rent Arrears
          format: double
          type: number
        TenancyProperty:
          description: Tenancy Property
          type: string
        TenancyState:
          description: State of the tenancy
          type: string
      type: object
    LandlordTenancyModel:
      description: Landlord Tenancy Model.
      properties:
        ActualEndDate:
          description: Actual End Date
          format: date-time
          type: string
        Beds:
          description: Beds
          format: int32
          type: integer
        Bond:
          description: Bond
          format: double
          type: number
        BranchID:
          description: The tenancy branch ID:-
          type: string
        Certificates:
          description: Maintenance Certificates.
          items:
            $ref: "#/components/schemas/LandlordMaintenanceCertificateModel"
          type: array
        Documents:
          description: Tenancy documents:-
          items:
            $ref: "#/components/schemas/LettingsLandlordDocument"
          type: array
        FixedDate:
          description: Fixed Date
          format: date-time
          type: string
        GlobalReference:
          description: User Friendly ID
          type: string
        ID:
          description: ID
          type: string
        Inspections:
          description: Inspections
          items:
            $ref: "#/components/schemas/LandlordLettingsInspectionModel"
          type: array
        ManagedRent:
          description: State of the tenancy
          type: boolean
        Preferences:
          description: Maintenance Preferences.
          items:
            $ref: "#/components/schemas/LandlordMaintenancePreferenceModel"
          type: array
        PreviousRentAmount:
          description: Previous Rent Amount
          format: double
          type: number
        PropertyAddress:
          description: Display Property Address
          type: string
        Rent:
          description: Rent
          type: string
        RentAmount:
          description: Rent Amount
          format: double
          type: number
        StartDate:
          description: Start Date
          format: date-time
          type: string
        TenancyProperty:
          description: Tenancy Property
          type: string
        TenancyState:
          description: State of the tenancy
          type: string
        Tenants:
          description: Tenants
          items:
            type: string
          type: array
      type: object
    LettingsLandlordDocument:
      description: Document details.
      properties:
        FileName:
          description: File Name
          type: string
        FileSize:
          description: File Size Bytes
          format: int32
          type: integer
        ID:
          description: ID
          type: string
        MIMEType:
          description: MIME Type
          type: string
        Note:
          description: Document Note
          type: string
      type: object
    Object:
      properties: {}
      type: object
  securitySchemes:
    apiKey:
      description: ApiKey Authentication
      in: header
      name: ApiKey
      type: apiKey
    basic:
      description: Basic HTTP Authentication
      scheme: basic
      type: http
