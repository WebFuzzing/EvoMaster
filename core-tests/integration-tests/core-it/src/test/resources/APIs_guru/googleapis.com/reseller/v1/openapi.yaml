openapi: 3.0.0
servers:
  - url: https://reseller.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Workspace Reseller API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: openapi
      url: https://reseller.googleapis.com/$discovery/rest?version=v1
      version: "3.0"
  x-providerName: googleapis.com
  x-serviceName: reseller
externalDocs:
  url: https://developers.google.com/google-apps/reseller/
tags:
  - name: customers
  - name: resellernotify
  - name: subscriptions
paths:
  /apps/reseller/v1/customers:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Orders a new customer's account. Before ordering a new customer account, establish whether the customer account already exists using the [`customers.get`](/admin-sdk/reseller/v1/reference/customers/get) If the customer account exists as a direct Google account or as a resold customer account from another reseller, use the `customerAuthToken\` as described in [order a resold account for an existing customer](/admin-sdk/reseller/v1/how-tos/manage_customers#create_existing_customer). For more information about ordering a new customer account, see [order a new customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#create_customer). After creating a new customer account, you must provision a user as an administrator. The customer's administrator is required to sign in to the Admin console and sign the G Suite via Reseller agreement to activate the account. Resellers are prohibited from signing the G Suite via Reseller agreement on the customer's behalf. For more information, see [order a new customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#tos).
      operationId: reseller.customers.insert
      parameters:
        - description: The `customerAuthToken` query string is required when creating a resold account that transfers a direct customer's subscription or transfers another reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer. For more information, see the administrator help center.
          in: query
          name: customerAuthToken
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - customers
  "/apps/reseller/v1/customers/{customerId}":
    get:
      description: Gets a customer account. Use this operation to see a customer account already in your reseller management, or to see the minimal account information for an existing customer that you do not manage. For more information about the API response for existing customers, see [retrieving a customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#get_customer).
      operationId: reseller.customers.get
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a customer account's settings. This method supports patch semantics. You cannot update `customerType` via the Reseller API, but a `"team"` customer can verify their domain and become `customerType = "domain"`. For more information, see [Verify your domain to unlock Essentials features](https://support.google.com/a/answer/9122284).
      operationId: reseller.customers.patch
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - customers
    put:
      description: Updates a customer account's settings. You cannot update `customerType` via the Reseller API, but a `"team"` customer can verify their domain and become `customerType = "domain"`. For more information, see [update a customer's settings](/admin-sdk/reseller/v1/how-tos/manage_customers#update_customer).
      operationId: reseller.customers.update
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - customers
  "/apps/reseller/v1/customers/{customerId}/subscriptions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates or transfer a subscription. Create a subscription for a customer's account that you ordered using the [Order a new customer account](/admin-sdk/reseller/v1/reference/customers/insert.html) method. For more information about creating a subscription for different payment plans, see [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#create_subscription).\ If you did not order the customer's account using the customer insert method, use the customer's `customerAuthToken` when creating a subscription for that customer. If transferring a G Suite subscription with an associated Google Drive or Google Vault subscription, use the [batch operation](/admin-sdk/reseller/v1/how-tos/batch.html) to transfer all of these subscriptions. For more information, see how to [transfer subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#transfer_a_subscription).
      operationId: reseller.subscriptions.insert
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The `customerAuthToken` query string is required when creating a resold account that transfers a direct customer's subscription or transfers another reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer. For more information, see the administrator help center.
          in: query
          name: customerAuthToken
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
  "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}":
    delete:
      description: Cancels, suspends, or transfers a subscription to direct.
      operationId: reseller.subscriptions.delete
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
        - description: The `deletionType` query string enables the cancellation, downgrade, or suspension of a subscription.
          in: query
          name: deletionType
          required: true
          schema:
            enum:
              - deletion_type_undefined
              - cancel
              - transfer_to_direct
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
    get:
      description: Gets a specific subscription. The `subscriptionId` can be found using the [Retrieve all reseller subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions) method. For more information about retrieving a specific subscription, see the information descrived in [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_subscription).
      operationId: reseller.subscriptions.get
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order.readonly
      tags:
        - subscriptions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/activate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Activates a subscription previously suspended by the reseller. If you did not suspend the customer subscription and it is suspended for any other reason, such as for abuse or a pending ToS acceptance, this call will not reactivate the customer subscription.
      operationId: reseller.subscriptions.activate
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
  "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/changePlan":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates a subscription plan. Use this method to update a plan for a 30-day trial or a flexible plan subscription to an annual commitment plan with monthly or yearly payments. How a plan is updated differs depending on the plan and the products. For more information, see the description in [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#update_subscription_plan).
      operationId: reseller.subscriptions.changePlan
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePlanRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
  "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/changeRenewalSettings":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates a user license's renewal settings. This is applicable for accounts with annual commitment plans only. For more information, see the description in [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#update_renewal).
      operationId: reseller.subscriptions.changeRenewalSettings
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenewalSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
  "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/changeSeats":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates a subscription's user license settings. For more information about updating an annual commitment plan or a flexible plan subscription’s licenses, see [Manage Subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#update_subscription_seat).
      operationId: reseller.subscriptions.changeSeats
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Seats"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
  "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/startPaidService":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Immediately move a 30-day free trial subscription to a paid service subscription. This method is only applicable if a payment plan has already been set up for the 30-day trial subscription. For more information, see [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#paid_service).
      operationId: reseller.subscriptions.startPaidService
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
  "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/suspend":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Suspends an active subscription. You can use this method to suspend a paid subscription that is currently in the `ACTIVE` state. * For `FLEXIBLE` subscriptions, billing is paused. * For `ANNUAL_MONTHLY_PAY` or `ANNUAL_YEARLY_PAY` subscriptions: * Suspending the subscription does not change the renewal date that was originally committed to. * A suspended subscription does not renew. If you activate the subscription after the original renewal date, a new annual subscription will be created, starting on the day of activation. We strongly encourage you to suspend subscriptions only for short periods of time as suspensions over 60 days may result in the subscription being cancelled."
      operationId: reseller.subscriptions.suspend
      parameters:
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: This is a required property. The `subscriptionId` is the subscription identifier and is unique for each customer. Since a `subscriptionId` changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the `subscriptionId` can be found using the retrieve all reseller subscriptions method.
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - subscriptions
  /apps/reseller/v1/resellernotify/getwatchdetails:
    get:
      description: Returns all the details of the watch corresponding to the reseller.
      operationId: reseller.resellernotify.getwatchdetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResellernotifyGetwatchdetailsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order.readonly
      tags:
        - resellernotify
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /apps/reseller/v1/resellernotify/register:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Registers a Reseller for receiving notifications.
      operationId: reseller.resellernotify.register
      parameters:
        - description: The service account which will own the created Cloud-PubSub topic.
          in: query
          name: serviceAccountEmailAddress
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResellernotifyResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - resellernotify
  /apps/reseller/v1/resellernotify/unregister:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Unregisters a Reseller for receiving notifications.
      operationId: reseller.resellernotify.unregister
      parameters:
        - description: The service account which owns the Cloud-PubSub topic.
          in: query
          name: serviceAccountEmailAddress
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResellernotifyResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
      tags:
        - resellernotify
  /apps/reseller/v1/subscriptions:
    get:
      description: Lists of subscriptions managed by the reseller. The list can be all subscriptions, all of a customer's subscriptions, or all of a customer's transferable subscriptions. Optionally, this method can filter the response by a `customerNamePrefix`. For more information, see [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions).
      operationId: reseller.subscriptions.list
      parameters:
        - description: The `customerAuthToken` query string is required when creating a resold account that transfers a direct customer's subscription or transfers another reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer. For more information, see the administrator help center.
          in: query
          name: customerAuthToken
          schema:
            type: string
        - description: This can be either the customer's primary domain name or the customer's unique identifier. If the domain name for a customer changes, the old domain name cannot be used to access the customer, but the customer's unique identifier (as returned by the API) can always be used. We recommend storing the unique identifier in your systems where applicable.
          in: query
          name: customerId
          schema:
            type: string
        - description: "When retrieving all of your subscriptions and filtering for specific customers, you can enter a prefix for a customer name. Using an example customer group that includes `exam.com`, `example20.com` and `example.com`: - `exa` -- Returns all customer names that start with 'exa' which could include `exam.com`, `example20.com`, and `example.com`. A name prefix is similar to using a regular expression's asterisk, exa*. - `example` -- Returns `example20.com` and `example.com`. "
          in: query
          name: customerNamePrefix
          schema:
            type: string
        - description: When retrieving a large list, the `maxResults` is the maximum number of results per page. The `nextPageToken` value takes you to the next page. The default is 20.
          in: query
          name: maxResults
          schema:
            maximum: 100
            minimum: 1
            type: integer
        - description: Token to specify next page in the list
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriptions"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order
        - Oauth2:
            - https://www.googleapis.com/auth/apps.order.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/apps.order.readonly
      tags:
        - subscriptions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Address:
      description: JSON template for address of a customer.
      properties:
        addressLine1:
          description: A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional.
          type: string
        addressLine2:
          description: Line 2 of the address.
          type: string
        addressLine3:
          description: Line 3 of the address.
          type: string
        contactName:
          description: The customer contact's name. This is required.
          type: string
        countryCode:
          description: For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer.
          type: string
        kind:
          default: customers#address
          description: "Identifies the resource as a customer address. Value: `customers#address`"
          type: string
        locality:
          description: An example of a `locality` value is the city of `San Francisco`.
          type: string
        organizationName:
          description: The company or company division name. This is required.
          type: string
        postalCode:
          description: A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer.
          type: string
        region:
          description: An example of a `region` value is `CA` for the state of California.
          type: string
      type: object
    ChangePlanRequest:
      description: JSON template for the ChangePlan rpc request.
      properties:
        dealCode:
          description: Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `changePlan` request in order to receive discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been added to a subscription and this property is left blank, regular pricing will apply.
          type: string
        kind:
          default: subscriptions#changePlanRequest
          description: "Identifies the resource as a subscription change plan request. Value: `subscriptions#changePlanRequest`"
          type: string
        planName:
          description: "The `planName` property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` - The annual commitment plan with monthly payments *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` - The annual commitment plan with yearly payments - `FLEXIBLE` - The flexible plan - `TRIAL` - The 30-day free trial plan "
          type: string
        purchaseOrderId:
          description: This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
          type: string
        seats:
          $ref: "#/components/schemas/Seats"
          description: This is a required property. The seats property is the number of user seat licenses.
      type: object
    Customer:
      description: When a Google customer's account is registered with a reseller, the customer's subscriptions for Google services are managed by this reseller. A customer is described by a primary domain name and a physical address.
      properties:
        alternateEmail:
          description: Like the "Customer email" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as service outage or a security issue. This property is required when creating a new "domain" customer and should not use the same domain as `customerDomain`. The `alternateEmail` field is not necessary to create a "team" customer.
          type: string
        customerDomain:
          description: The customer's primary domain name string. `customerDomain` is required when creating a new customer. Do not include the `www` prefix in the domain when adding a customer.
          type: string
        customerDomainVerified:
          description: Whether the customer's primary domain has been verified.
          type: boolean
        customerId:
          description: This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.
          type: string
        customerType:
          description: "Identifies the type of the customer. Acceptable values include: * `domain`: Implies a domain-verified customer (default). * `team`: Implies an email-verified customer. For more information, see [managed teams](https://support.google.com/a/users/answer/9939479)."
          enum:
            - customerTypeUnspecified
            - domain
            - team
          type: string
        kind:
          default: reseller#customer
          description: "Identifies the resource as a customer. Value: `reseller#customer`"
          type: string
        phoneNumber:
          description: Customer contact phone number. Must start with "+" followed by the country code. The rest of the number can be contiguous numbers or respect the phone local format conventions, but it must be a real phone number and not, for example, "123". This field is silently ignored if invalid.
          type: string
        postalAddress:
          $ref: "#/components/schemas/Address"
          description: A customer's address information. Each field has a limit of 255 charcters.
        primaryAdmin:
          $ref: "#/components/schemas/PrimaryAdmin"
          description: The first admin details of the customer, present in case of TEAM customer.
        resourceUiUrl:
          description: URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console.
          type: string
      type: object
    PrimaryAdmin:
      description: JSON template for primary admin in case of TEAM customers
      properties:
        primaryEmail:
          description: The business email of the primary administrator of the customer. The email verification link is sent to this email address at the time of customer creation. Primary administrators have access to the customer's Admin Console, including the ability to invite and evict users and manage the administrative needs of the customer.
          type: string
      type: object
    RenewalSettings:
      description: JSON template for a subscription renewal settings.
      properties:
        kind:
          default: subscriptions#renewalSettings
          description: "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
          type: string
        renewalType:
          description: Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property.
          type: string
      type: object
    ResellernotifyGetwatchdetailsResponse:
      description: JSON template for resellernotify getwatchdetails response.
      properties:
        serviceAccountEmailAddresses:
          description: List of registered service accounts.
          items:
            type: string
          type: array
        topicName:
          description: Topic name of the PubSub
          type: string
      type: object
    ResellernotifyResource:
      description: JSON template for resellernotify response.
      properties:
        topicName:
          description: Topic name of the PubSub
          type: string
      type: object
    Seats:
      description: JSON template for subscription seats.
      properties:
        kind:
          default: subscriptions#seats
          description: "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
          type: string
        licensedNumberOfSeats:
          description: "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
          format: int32
          type: integer
        maximumNumberOfSeats:
          description: "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
          format: int32
          type: integer
        numberOfSeats:
          description: "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *Google Workspace subscriptions automatically assign a license to every user."
          format: int32
          type: integer
      type: object
    Subscription:
      description: JSON template for a subscription.
      properties:
        billingMethod:
          description: Read-only field that returns the current billing method for a subscription.
          type: string
        creationTime:
          description: The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter.
          format: int64
          type: string
        customerDomain:
          description: Primary domain name of the customer
          type: string
        customerId:
          description: This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.
          type: string
        dealCode:
          description: Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty.
          type: string
        kind:
          default: reseller#subscription
          description: "Identifies the resource as a Subscription. Value: `reseller#subscription`"
          type: string
        plan:
          description: The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API"s payment plans, see the API concepts.
          properties:
            commitmentInterval:
              description: "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
              properties:
                endTime:
                  description: An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter.
                  format: int64
                  type: string
                startTime:
                  description: An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter.
                  format: int64
                  type: string
              type: object
            isCommitmentPlan:
              description: "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
              type: boolean
            planName:
              description: "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
              type: string
          type: object
        purchaseOrderId:
          description: This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
          type: string
        renewalSettings:
          $ref: "#/components/schemas/RenewalSettings"
          description: Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center.
        resourceUiUrl:
          description: URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console.
          type: string
        seats:
          $ref: "#/components/schemas/Seats"
          description: This is a required property. The number and limit of user seat licenses in the plan.
        skuId:
          description: A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs.
          type: string
        skuName:
          description: Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs.
          type: string
        status:
          description: This is an optional property.
          type: string
        subscriptionId:
          description: The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions.
          type: string
        suspensionReasons:
          description: "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
          items:
            type: string
          type: array
        transferInfo:
          description: Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer.
          properties:
            currentLegacySkuId:
              description: The `skuId` of the current resold subscription. This is populated only when the customer has a subscription with a legacy SKU and the subscription resource is populated with the `skuId` of the SKU recommended for the transfer.
              type: string
            minimumTransferableSeats:
              description: When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats.
              format: int32
              type: integer
            transferabilityExpirationTime:
              description: The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format.
              format: int64
              type: string
          type: object
        trialSettings:
          description: The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts.
          properties:
            isInTrial:
              description: "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
              type: boolean
            trialEndTime:
              description: Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter.
              format: int64
              type: string
          type: object
      type: object
    Subscriptions:
      description: A subscription manages the relationship of a Google customer's payment plan with a product's SKU, user licenses, 30-day free trial status, and renewal options. A primary role of a reseller is to manage the Google customer's subscriptions.
      properties:
        kind:
          default: reseller#subscriptions
          description: "Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions"
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
        subscriptions:
          description: The subscriptions in this page of results.
          items:
            $ref: "#/components/schemas/Subscription"
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/apps.order: Manage users on your domain
            https://www.googleapis.com/auth/apps.order.readonly: Manage users on your domain
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/apps.order: Manage users on your domain
            https://www.googleapis.com/auth/apps.order.readonly: Manage users on your domain
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
