openapi: 3.0.0
servers:
  - url: https://datapipelines.googleapis.com/
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Data pipelines API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://datapipelines.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: datapipelines
externalDocs:
  url: https://cloud.google.com/dataflow/docs/guides/data-pipelines
tags:
  - name: projects
paths:
  "/v1/{name}":
    delete:
      description: Deletes a pipeline. If a scheduler job is attached to the pipeline, it will be deleted.
      operationId: datapipelines.projects.locations.pipelines.delete
      parameters:
        - description: "Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`."
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Looks up a single pipeline. Returns a "NOT_FOUND" error if no such pipeline exists. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.get
      parameters:
        - description: "Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`."
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Pipeline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a pipeline. If successful, the updated Pipeline is returned. Returns `NOT_FOUND` if the pipeline doesn't exist. If UpdatePipeline does not return successfully, you can retry the UpdatePipeline request until you receive a successful response.
      operationId: datapipelines.projects.locations.pipelines.patch
      parameters:
        - description: "The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The list of fields to be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Pipeline"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Pipeline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:run":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a job for the specified pipeline directly. You can use this method when the internal scheduler is not configured and you want to trigger the job directly or through an external system. Returns a "NOT_FOUND" error if the pipeline doesn't exist. Returns a "FORBIDDEN" error if the user doesn't have permission to access the pipeline or run jobs for the pipeline.
      operationId: datapipelines.projects.locations.pipelines.run
      parameters:
        - description: "Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatapipelinesV1RunPipelineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatapipelinesV1RunPipelineResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:stop":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Freezes pipeline execution permanently. If there's a corresponding scheduler entry, it's deleted, and the pipeline state is changed to "ARCHIVED". However, pipeline metadata is retained.
      operationId: datapipelines.projects.locations.pipelines.stop
      parameters:
        - description: "Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatapipelinesV1StopPipelineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Pipeline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}":
    get:
      description: Lists pipelines. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.listPipelines
      parameters:
        - description: "Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "An expression for filtering the results of the request. If unspecified, all pipelines will be returned. Multiple filters can be applied and must be comma separated. Fields eligible for filtering are: + `type`: The type of the pipeline (streaming or batch). Allowed values are `ALL`, `BATCH`, and `STREAMING`. + `status`: The activity status of the pipeline. Allowed values are `ALL`, `ACTIVE`, `ARCHIVED`, and `PAUSED`. For example, to limit results to active batch processing pipelines: type:BATCH,status:ACTIVE"
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of entities to return. The service may return fewer than this value, even if there are additional pages. If unspecified, the max limit is yet to be determined by the backend implementation.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListPipelines` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPipelines` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatapipelinesV1ListPipelinesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{parent}/jobs":
    get:
      description: Lists jobs for a given pipeline. Throws a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.jobs.list
      parameters:
        - description: "Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of entities to return. The service may return fewer than this value, even if there are additional pages. If unspecified, the max limit will be determined by the backend implementation.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListJobs` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatapipelinesV1ListJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{parent}/pipelines":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines uses the scheduler information to create an internal scheduler that runs jobs periodically. If the internal scheduler is not configured, you can use RunPipeline to run jobs.
      operationId: datapipelines.projects.locations.pipelines.create
      parameters:
        - description: "Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Pipeline"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Pipeline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudDatapipelinesV1DataflowJobDetails:
      description: Pipeline job details specific to the Dataflow API. This is encapsulated here to allow for more executors to store their specific details separately.
      properties:
        currentWorkers:
          description: Output only. The current number of workers used to run the jobs. Only set to a value if the job is still running.
          format: int32
          readOnly: true
          type: integer
        resourceInfo:
          additionalProperties:
            format: double
            type: number
          description: Cached version of all the metrics of interest for the job. This value gets stored here when the job is terminated. As long as the job is running, this field is populated from the Dataflow API.
          type: object
        sdkVersion:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1SdkVersion"
          description: Output only. The SDK version used to run the job.
          readOnly: true
      type: object
    GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment:
      description: The environment values to be set at runtime for a Flex Template.
      properties:
        additionalExperiments:
          description: Additional experiment flags for the job.
          items:
            type: string
          type: array
        additionalUserLabels:
          additionalProperties:
            type: string
          description: 'Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ "name": "wrench", "mass": "1kg", "count": "3" }`.'
          type: object
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
        flexrsGoal:
          description: Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
          type: string
        ipConfiguration:
          description: Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
        kmsKeyName:
          description: "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/"
          type: string
        machineType:
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
          type: string
        maxWorkers:
          description: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
          format: int32
          type: integer
        network:
          description: Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
          type: string
        numWorkers:
          description: The initial number of Compute Engine instances for the job.
          format: int32
          type: integer
        serviceAccountEmail:
          description: The email address of the service account to run the job as.
          type: string
        subnetwork:
          description: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
          type: string
        tempLocation:
          description: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
          type: string
        workerRegion:
          description: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
          type: string
        workerZone:
          description: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
          type: string
        zone:
          description: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
          type: string
      type: object
    GoogleCloudDatapipelinesV1Job:
      description: Definition of the job information maintained by the pipeline. Fields in this entity are retrieved from the executor API (e.g. Dataflow API).
      properties:
        createTime:
          description: Output only. The time of job creation.
          format: google-datetime
          readOnly: true
          type: string
        dataflowJobDetails:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1DataflowJobDetails"
          description: All the details that are specific to a Dataflow job.
        endTime:
          description: Output only. The time of job termination. This is absent if the job is still running.
          format: google-datetime
          readOnly: true
          type: string
        id:
          description: Output only. The internal ID for the job.
          readOnly: true
          type: string
        name:
          description: Required. The fully qualified resource name for the job.
          type: string
        state:
          description: The current state of the job.
          enum:
            - STATE_UNSPECIFIED
            - STATE_PENDING
            - STATE_RUNNING
            - STATE_DONE
            - STATE_FAILED
            - STATE_CANCELLED
          type: string
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Status capturing any error code or message related to job creation or execution.
      type: object
    GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter:
      description: Launch Flex Template parameter.
      properties:
        containerSpecGcsPath:
          description: Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.
          type: string
        environment:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment"
          description: The runtime environment for the Flex Template job.
        jobName:
          description: Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.
          type: string
        launchOptions:
          additionalProperties:
            type: string
          description: Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
          type: object
        parameters:
          additionalProperties:
            type: string
          description: 'The parameters for the Flex Template. Example: `{"num_workers":"5"}`'
          type: object
        transformNameMappings:
          additionalProperties:
            type: string
          description: 'Use this to pass transform name mappings for streaming update jobs. Example: `{"oldTransformName":"newTransformName",...}`'
          type: object
        update:
          description: Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.
          type: boolean
      type: object
    GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest:
      description: A request to launch a Dataflow job from a Flex Template.
      properties:
        launchParameter:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter"
          description: Required. Parameter to launch a job from a Flex Template.
        location:
          description: Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. For example, `us-central1`, `us-west1`.
          type: string
        projectId:
          description: Required. The ID of the Cloud Platform project that the job belongs to.
          type: string
        validateOnly:
          description: If true, the request is validated but not actually executed. Defaults to false.
          type: boolean
      type: object
    GoogleCloudDatapipelinesV1LaunchTemplateParameters:
      description: Parameters to provide to the template being launched.
      properties:
        environment:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1RuntimeEnvironment"
          description: The runtime environment for the job.
        jobName:
          description: Required. The job name to use for the created job.
          type: string
        parameters:
          additionalProperties:
            type: string
          description: The runtime parameters to pass to the job.
          type: object
        transformNameMapping:
          additionalProperties:
            type: string
          description: Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
          type: object
        update:
          description: If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.
          type: boolean
      type: object
    GoogleCloudDatapipelinesV1LaunchTemplateRequest:
      description: A request to launch a template.
      properties:
        gcsPath:
          description: A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with 'gs://'.
          type: string
        launchParameters:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1LaunchTemplateParameters"
          description: The parameters of the template to launch. This should be part of the body of the POST request.
        location:
          description: The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.
          type: string
        projectId:
          description: Required. The ID of the Cloud Platform project that the job belongs to.
          type: string
        validateOnly:
          description: If true, the request is validated but not actually executed. Defaults to false.
          type: boolean
      type: object
    GoogleCloudDatapipelinesV1ListJobsResponse:
      description: Response message for ListJobs
      properties:
        jobs:
          description: Results that were accessible to the caller. Results are always in descending order of job creation date.
          items:
            $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Job"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudDatapipelinesV1ListPipelinesResponse:
      description: Response message for ListPipelines.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        pipelines:
          description: Results that matched the filter criteria and were accessible to the caller. Results are always in descending order of pipeline creation date.
          items:
            $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Pipeline"
          type: array
      type: object
    GoogleCloudDatapipelinesV1Pipeline:
      description: The main pipeline entity and all the necessary metadata for launching and managing linked jobs.
      properties:
        createTime:
          description: Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).
          type: string
        jobCount:
          description: Output only. Number of jobs.
          format: int32
          readOnly: true
          type: integer
        lastUpdateTime:
          description: Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: "The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location."
          type: string
        pipelineSources:
          additionalProperties:
            type: string
          description: Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.
          type: object
        scheduleInfo:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1ScheduleSpec"
          description: Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the schedule. If not, users are responsible for creating jobs externally.
        schedulerServiceAccountEmail:
          description: Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.
          type: string
        state:
          description: Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
          enum:
            - STATE_UNSPECIFIED
            - STATE_RESUMING
            - STATE_ACTIVE
            - STATE_STOPPING
            - STATE_ARCHIVED
            - STATE_PAUSED
          type: string
        type:
          description: Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
          enum:
            - PIPELINE_TYPE_UNSPECIFIED
            - PIPELINE_TYPE_BATCH
            - PIPELINE_TYPE_STREAMING
          type: string
        workload:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Workload"
          description: Workload information for creating new jobs.
      type: object
    GoogleCloudDatapipelinesV1RunPipelineRequest:
      description: Request message for RunPipeline
      properties: {}
      type: object
    GoogleCloudDatapipelinesV1RunPipelineResponse:
      description: Response message for RunPipeline
      properties:
        job:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1Job"
          description: Job that was created as part of RunPipeline operation.
      type: object
    GoogleCloudDatapipelinesV1RuntimeEnvironment:
      description: The environment values to set at runtime.
      properties:
        additionalExperiments:
          description: Additional experiment flags for the job.
          items:
            type: string
          type: array
        additionalUserLabels:
          additionalProperties:
            type: string
          description: 'Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          type: object
        bypassTempDirValidation:
          description: Whether to bypass the safety checks for the job's temporary directory. Use with caution.
          type: boolean
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
        ipConfiguration:
          description: Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
        kmsKeyName:
          description: "Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/"
          type: string
        machineType:
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
          type: string
        maxWorkers:
          description: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
          format: int32
          type: integer
        network:
          description: Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
          type: string
        numWorkers:
          description: The initial number of Compute Engine instances for the job.
          format: int32
          type: integer
        serviceAccountEmail:
          description: The email address of the service account to run the job as.
          type: string
        subnetwork:
          description: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
          type: string
        tempLocation:
          description: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
          type: string
        workerRegion:
          description: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
          type: string
        workerZone:
          description: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
          type: string
        zone:
          description: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
          type: string
      type: object
    GoogleCloudDatapipelinesV1ScheduleSpec:
      description: Details of the schedule the pipeline runs on.
      properties:
        nextJobTime:
          description: Output only. When the next Scheduler job is going to run.
          format: google-datetime
          readOnly: true
          type: string
        schedule:
          description: Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
          type: string
        timeZone:
          description: Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.
          type: string
      type: object
    GoogleCloudDatapipelinesV1SdkVersion:
      description: The version of the SDK used to run the job.
      properties:
        sdkSupportStatus:
          description: The support status for this SDK version.
          enum:
            - UNKNOWN
            - SUPPORTED
            - STALE
            - DEPRECATED
            - UNSUPPORTED
          type: string
        version:
          description: The version of the SDK used to run the job.
          type: string
        versionDisplayName:
          description: A readable string describing the version of the SDK.
          type: string
      type: object
    GoogleCloudDatapipelinesV1StopPipelineRequest:
      description: Request message for StopPipeline.
      properties: {}
      type: object
    GoogleCloudDatapipelinesV1Workload:
      description: Workload details for creating the pipeline jobs.
      properties:
        dataflowFlexTemplateRequest:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest"
          description: Template information and additional parameters needed to launch a Dataflow job using the flex launch API.
        dataflowLaunchTemplateRequest:
          $ref: "#/components/schemas/GoogleCloudDatapipelinesV1LaunchTemplateRequest"
          description: Template information and additional parameters needed to launch a Dataflow job using the standard launch API.
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
