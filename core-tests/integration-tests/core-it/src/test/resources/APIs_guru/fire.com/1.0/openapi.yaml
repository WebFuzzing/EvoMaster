openapi: 3.0.2
servers:
  - description: Preproduction/Sandbox Server
    url: https://api-preprod.fire.com/business/v1
  - description: Production Server
    url: https://api.fire.com/business/v1
info:
  contact:
    email: api@fire.com
    name: Fire API
    url: https://docs.fire.com
  description: |
    The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.

    The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.


    The API exposes 3 main areas of functionality: financial functions, service information and service configuration.
    ## Financial Functions
    These functions provide access to your account details, transactions, payee accounts, payment initiation etc.
    ## Service Functions
    These provide information about the fees and limits applied to your account.
    ## Service configuration
    These provide information about your service configs - applications, webhooks, API tokens, etc.
  title: Fire Financial Services Business API
  version: "1.0"
  x-apisguru-categories:
    - financial
  x-logo:
    url: https://www.fire.com/wp-content/uploads/2018/12/fire-cover.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/firefinancialservices/fire-business-api-openapi/master/fire-business-api-v1.yaml
      version: "3.0"
  x-providerName: fire.com
security:
  - bearerAuth: []
tags:
  - description: |
      Access to the API is by Bearer Tokens. The process is somewhat similar to OAuth2.0, but with some changes to improve security.
      1. You must first log into the firework online application and create a new Application in the Profile > API page. (You will need your PIN digits and 2-Factor Authentication device).
      2. Give your application a Name and select the scope/permissions you need the application to have (more on Scopes below).
      3. You will be provided with three pieces of information - the App Refresh Token, Client ID and Client Key. You need to take note of the Client Key when it is displayed - it will not be shown again.

      You now use these pieces of data to retrieve a short-term Access Token which you can use to access the API. The Access Token expires within a relatively short time, so even if it is compromised, the attacker will not have long to use it. The Client Key is the most important piece of information to keep secret. This should only ever be stored on a backend server, and never in a front end client or mobile app.

      **If you ever accidentally reveal the Client Key (or accidentally commit it to Github for instance) it is vital that you log into firework online and delete/recreate the App Tokens as soon as possible. Anyone who has these three pieces of data can access the API to view your data and set up payments from your account (depending on the scope of the tokens).**

      Once you have the access token, pass it as a header for every call, like so:
      `Authorization: Bearer $ACCESS_TOKEN`
      Whenever it expires, create a new nonce and get a new access token again.
    name: Authentication
  - description: fire.com Accounts are the equivalent of a bank account from bank.
    name: Accounts
  - description: |
      Fire Open Payments is a feature of the fire.com business account that leverages Open Banking to allow your customers to pay you via bank transfer and to reconcile those payments as they are received into your fire.com GBP or EUR account.

      To set up each Fire Open Payment you first need to create a payment request. This contains the details of the payment such as the amount, destination account, description as well as various other specific fields that you want to associate with the payment. The payment request is represented as a URL with a unique code which can then be incorporated into an eCommerce shopping cart as an alternative form of payment. For example, you can put “Pay by Bank” on your website along with “Pay by Card” and “Pay by PayPal”. It can also be distributed by a variety of means such as by email, SMS, WhatsApp, encoded as a QR code, NFC tag, etc.

      Consumers confirm the payment details such as the amount are correct, select their bank and authorise the payment. Payments can be made from all major UK banks.

      The funds are settled into your fire.com account, fully reconciled, with your specified fields provided.

      There are two implementation options you can use to display payment pages with Fire Open Payments.
      1. **Hosted Payment Pages:** fire.com hosts the payment pages - this option allows you to re-direct your customer to the hosted fire.com payment pages displaying the payment details confirmation, bank selection, consent and response pages.
      2. **Integrated Payment Pages:** You host the payments page yourself - this option allows you to have control of the UI and UX for displaying the payment details confirmation, bank selection and response pages. Once the response is received, fire.com can re-direct the payer back to your website.

      ## Hosted Payment Pages Option
      ![Image](https://fire.com/docs/images/fop-hosted-flow.png)

      The payer is brought through 5 stages to complete the payment:
      1. **View Payment Details page:** The payer must first be clear on the amount of the payment, who they are paying and the reason for the payment.
      2. **Select Bank / Account Provider page:** The payer then selects their bank. Again this step is offered as part of the fire.com payment UI.
      3. **Consent page:**  The payer must provide consent to the PISP (fire.com) prior to authorising the payment. This is a regulatory requirement, this page must be hosted by fire.com.
      4. **Authenticate and Authorise Payment:** The payer will be redirected to their bank’s online site or mobile banking app. After authenticating, the details of the payment will be displayed, and the payer will authorise the payment.
      5. **Response page:** It is a regulatory requirement that the PISP (fire.com) display the results of the payment and provide the same information that would be provided if the payer had made the payment via their banking application. fire.com must display this page, before optionally redirecting the payer back to your website.

      To implement the hosted Fire Open Payments option you need to do the following:
      1. You can create a new Fire Open Payment request either within Firework Online or via the API.
      2. Create your new API application with the appropriate permissions required in Firework Online, as outlined in the “Authentication” steps. The permissions needed are:
          - “Create a Payment Request”
          - “Get Payment Details”

      3. Use the Refresh Token, Client ID and Client Key to create an access token as outlined in the “Authentication” steps.
      4. On your website, create a “Pay by Bank” button alongside your other available payment methods, such as Cards and PayPal.
      5. After the user clicks on “Pay by Bank”, you need to create a new Fire Open Payment request as outlined in the “Create a Fire Open Payment” steps. The Create a Fire Open Payment request endpoint returns a unique code for the payment request.
      6. Create a URL using the code returned in this format: `https://payments.fire.com/{code}` and redirect your customer to this page.
      7. fire.com will host all the pages that the customer needs to review and authorise the payment. fire.com will will return the paymentUUID of the successful or failed transaction to the returnUrl that you supplied when creating the Fire Open Payment request. fire.com can also optionally send a “webhook” to your website notifying you of the transaction’s outcome.
      8. Once fire.com responds with the paymentUUID and/or the webhook to your website, you need to call the “Get Payment Details” endpoint to get the details of the transaction. This will let you know whether the transaction was successful or not. You can set up the “Payment Request Payment Authorised” webhook to notify you once the payment is authorised or cancelled.
      9. The funds will be received into your GBP or EUR account. Funding will typically be within 6 business hours.

      Once the code is returned the payment can be viewed and paid by going to the following URL: `https://payments.fire.com/{code}`
    name: Open Banking
  - description: Manage your API Applications and Webhooks
    name: API
  - description: While there are many types of transactions, they are all represented by the same JSON object with a different txnType.
    name: Transactions
  - description: |
      The fire.com api allows businesses to automate direct debit payment actions on their fire.com business accounts.

      You can retrieve details of your direct debit payments, direct debit mandates and also take actions on both your direct debit payments and mandates.
    name: Direct Debits
  - description: |
      The fire.com API allows businesses to automate payments between their accounts or to third parties across the UK and Europe.

      For added security, the API can only set up the payments in batches. These batches must be approved by an authorised user via the firework mobile app.


      The process is as follows:

      **1.**Create a new batch

      **2.**Add payments to the batch

      **3.**Submit the batch for approval

      Once the batch is submitted, the authorised users will receive notifications to their firework mobile apps. They can review the contents of the batch and then approve or reject it. If approved, the batch is then processed. You can avail of enhanced security by using Dual Authorisation to verify payments if you wish. Dual Authorisation can be enabled by you when setting up your API application in firework online.

      **Batch Life Cycle Events**

      A batch webhook can be specified to receive details of all the payments as they are processed. This webhook receives notifications for every event in the batch lifecycle.

      The following events are triggered during a batch:

      **batch.opened:** Contains the details of the batch opened. Checks that the callback URL exists - unless a HTTP 200 response is returned, the callback URL will not be configured.

      **batch.item-added:** Details of the item added to the batch

      **batch.item-removed:** Details of the item removed from the batch

      **batch.cancelled:** Notifies that the batch was cancelled.

      **batch.submitted:** Notifes that the batch was submitted

      **batch.approved:** Notifies that the batch was approved.

      **batch.rejected:** Notifies that the batch was rejected.

      **batch.failed:** Notifies that the batch failed - includes the details of the failure (insufficient funds etc)

      **batch.completed:** Notifies that the batch completed successfully. Includes a summary.

      Push notifications are sent to the firework mobile app for many of these events too - these can be configured from within the app.
    name: Payment Batches
paths:
  /accounts:
    get:
      description: Returns all your fire.com Accounts. Ordered by Alias ascending. Can be paginated.
      operationId: getAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  accounts:
                    items:
                      properties:
                        balance:
                          description: the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).
                          example: 23950
                          format: int64
                          type: integer
                        cbic:
                          description: the BIC of the account (provided if currency is EUR).
                          example: CPAYIE2D
                          type: string
                        ccan:
                          description: the Account Number of the account.
                          example: "11111111"
                          type: string
                        ciban:
                          description: the IBAN of the account (provided if currency is EUR).
                          example: IE54CPAY99119911111111
                          type: string
                        cnsc:
                          description: the Sort Code of the account.
                          example: "232221"
                          type: string
                        colour:
                          deprecated: true
                          description: Internal Use
                          example: ORANGE
                          type: string
                        currency:
                          properties:
                            code:
                              description: The three letter code for the currency - either `EUR` or `GBP`.
                              enum:
                                - EUR
                                - GBP
                              type: string
                            description:
                              description: The name of the currency
                              example: Euro
                              type: string
                          title: Currency
                          type: object
                        defaultAccount:
                          description: true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).
                          example: true
                          type: boolean
                        directDebitsAllowed:
                          description: Whether or not direct debits can be set up on this account.
                          example: false
                          type: boolean
                        ican:
                          description: identifier for the fire.com account (assigned by fire.com)
                          example: 42
                          format: int64
                          type: integer
                        name:
                          description: the name the user gives to the account to help them identify it.
                          example: Main Account
                          type: string
                        status:
                          description: Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.
                          enum:
                            - LIVE
                            - MIGRATED
                          type: string
                      title: Account
                      type: object
                    type: array
                title: Accounts
                type: object
          description: An array of account objects.
        "401":
          description: Access Token is Invalid or missing
      summary: List all fire.com Accounts
      tags:
        - Accounts
    post:
      description: |
        Creates a new fire.com account.

        **Please note there is a charge associated with creating a new account.**
      operationId: addAccount
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acceptFeesAndCharges:
                  description: a field to indicate you accept the fee for a new account
                  type: boolean
                accountName:
                  description: Name to give the new account
                  example: Operating Account
                  maxLength: 50
                  type: string
                currency:
                  description: The currency of the new account
                  enum:
                    - EUR
                    - GBP
                  type: string
              title: NewAccount
              type: object
        description: Details of the new account
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items"
          description: The details of the new account
      summary: Add a new account
      tags:
        - Accounts
  "/accounts/{ican}":
    get:
      description: You can retrieve the details of a fire.com Account by its `ican`.
      operationId: getAccountById
      parameters:
        - in: path
          name: ican
          required: true
          schema:
            description: The ican of the account to retrieve
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items"
          description: An array of account objects.
        "401":
          $ref: "#/paths/~1accounts/get/responses/401"
      summary: Retrieve the details of a fire.com Account
      tags:
        - Accounts
  "/accounts/{ican}/transactions":
    get:
      description: Retrieve a list of transactions against an account.
      operationId: getTransactionsById
      parameters:
        - in: path
          name: ican
          required: true
          schema:
            description: The ican of the account to retrieve
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  amountAfterCharges:
                    description: Net amount lodged or taken from the account after fees and charges were applied.
                    example: 5000
                    format: int64
                    type: integer
                  amountBeforeCharges:
                    description: Amount of the transaction before the fees and taxes were applied.
                    example: 5000
                    format: int64
                    type: integer
                  balance:
                    description: the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).
                    example: 8500
                    format: int64
                    type: integer
                  card:
                    properties:
                      alias:
                        type: string
                      cardId:
                        format: int64
                        type: number
                      embossBusinessName:
                        type: string
                      embossCardName:
                        type: string
                      expiryDate:
                        format: date-time
                        type: string
                      maskedPan:
                        type: string
                      provider:
                        type: string
                    title: RelatedCard
                    type: object
                  currency:
                    $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                  date:
                    description: Date of the transaction
                    example: 2021-04-13T11:06:32.437Z
                    format: date-time
                    type: string
                  dateAcknowledged:
                    example: 2021-04-13T11:06:32.437Z
                    format: date-time
                    type: string
                  feeAmount:
                    description: The amount of the fee, if any.
                    example: 0
                    format: int64
                    type: integer
                  fxTradeDetails:
                    properties:
                      buyAmount:
                        description: amount of buyCurrency being bought
                        example: 359
                        format: int64
                        type: integer
                      buyCurrency:
                        description: currency which is being bought
                        example: GBP
                        type: string
                      fixedSide:
                        description: type of trade
                        example: SELL
                        type: string
                      rate4d:
                        description: exchange rate
                        example: 7180
                        format: int64
                        type: integer
                      sellAmount:
                        description: amount of sellCurrency being sold
                        example: 500
                        format: int64
                        type: integer
                      sellCurrency:
                        description: currency which is being sold
                        example: EUR
                        type: string
                    title: FxTrade
                    type: object
                  ican:
                    description: identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.
                    example: 1951
                    format: int64
                    type: integer
                  myRef:
                    description: The comment/reference on the transaction
                    example: Transfer to main account
                    type: string
                  paymentRequestPublicCode:
                    description: The code that was returned when you created the payment request.
                    example: 1abcdefg
                    type: string
                  refId:
                    description: The id of the transaction.
                    example: 26774
                    format: int64
                    type: integer
                  relatedParty:
                    oneOf:
                      - properties:
                          account:
                            properties:
                              accountNumber:
                                description: the Account Number of the account.
                                example: "11111111"
                                type: string
                              alias:
                                description: the name the user gives to the account to help them identify it.
                                example: Main Account
                                type: string
                              bic:
                                description: the BIC of the account (provided if currency is EUR).
                                example: CPAYIE2D
                                type: string
                              iban:
                                description: the IBAN of the account (provided if currency is EUR).
                                example: IE54CPAY99119911111111
                                type: string
                              id:
                                description: identifier for the fire.com account (assigned by fire.com)
                                example: 42
                                format: int64
                                type: integer
                              nsc:
                                description: the Sort Code of the account.
                                example: "232221"
                                type: string
                            type: object
                          type:
                            enum:
                              - FIRE_ACCOUNT
                            type: string
                        title: RelatedPartyFireAccount
                        type: object
                      - properties:
                          account:
                            properties:
                              accountNumber:
                                type: string
                              alias:
                                type: string
                              bic:
                                type: string
                              iban:
                                type: string
                              id:
                                format: int64
                                type: integer
                              nsc:
                                type: string
                            type: object
                          type:
                            enum:
                              - EXTERNAL_ACCOUNT
                            type: string
                        title: RelatedPartyExternalAccount
                        type: object
                      - properties:
                          account:
                            properties:
                              accountNumber:
                                description: The account number of the Withdrawl account in reference
                                example: 0
                                type: string
                              alias:
                                description: The Alias name of the Withdrawl account in reference
                                example: Smyth and Co.
                                type: string
                              bic:
                                description: The BIC of the Withdrawl account in reference
                                example: CPAYIE2D
                                type: string
                              iban:
                                description: The BIC of the Withdrawl account in reference
                                example: IE76CPAY99119900000000
                                type: string
                              id:
                                description: The ID number of the Withdrawl account in reference
                                example: 123
                                format: int64
                                type: integer
                              nsc:
                                description: (Conditional) Provide this field if using Mode 2 and the payee account is in GBP.
                                example: 991199
                                type: string
                            type: object
                          type:
                            enum:
                              - WITHDRAWAL_ACCOUNT
                            type: string
                        title: RelatedPartyPayee
                        type: object
                      - properties:
                          cardMerchant:
                            properties:
                              acquirerIdDe32:
                                example: "06011319"
                                type: string
                              additionalAmtDe54:
                                type: string
                              additionalDataDe124:
                                type: string
                              additionalDataDe48:
                                example: 010X610500000
                                type: string
                              authCodeDe38:
                                example: "177449"
                                type: string
                              authorisedByGps:
                                example: N
                                type: string
                              avsResult:
                                example: N
                                type: string
                              billAmt:
                                example: -1000
                                format: int64
                                type: number
                              billCcy:
                                example: "978"
                                type: string
                              expiryDate:
                                type: string
                              mccCode:
                                example: "5521"
                                type: string
                              merchIdDe42:
                                example: "013152429"
                                type: string
                              merchNameDe43:
                                example: ABC Coffee Shop
                                type: string
                              mtId:
                                example: "0100"
                                type: string
                              posDataDe22:
                                example: "051"
                                type: string
                              posDataDe61:
                                example: "000001000030037299999"
                                type: string
                              posTermnlDe41:
                                example: "80266721"
                                type: string
                              procCode:
                                example: "000000"
                                type: string
                              recordDataDe120:
                                type: string
                              respCodeDe39:
                                example: "00"
                                type: string
                              retRefNoDe37:
                                example: "010900006720"
                                type: string
                              statusCode:
                                example: "00"
                                type: string
                              token:
                                example: "976307363"
                                type: string
                              txnAmt4d:
                                example: 1000
                                format: int64
                                type: number
                              txnCcy:
                                example: "978"
                                type: string
                              txnCtry:
                                example: IRL
                                type: string
                              txnDesc:
                                example: ABC Coffee Shop
                                type: string
                              txnStatCode:
                                example: A
                                type: string
                              txnType:
                                example: A
                                type: string
                            type: object
                          type:
                            enum:
                              - CARD_MERCHANT
                              - CARD_ATM
                            type: string
                        title: RelatedPartyCardPayment
                        type: object
                    title: RelatedParty
                  taxAmount:
                    description: The amount of the tax, if any (e.g. Stamp duty for ATM transactions)
                    example: 0
                    format: int64
                    type: integer
                  txnId:
                    description: The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.
                    example: 30157
                    format: int64
                    type: integer
                  type:
                    description: |
                      Retrieve a filtered list of transactions against an account.
                      * `LODGEMENT` - Bank Transfer received
                      * `PIS_LODGEMENT` - Fire Open Payments Lodgement received
                      * `MANUAL_TRANSFER` - Manual Transfer to
                      * `WITHDRAWAL` - Bank Transfer sent
                      * `REVERSAL` - Credit Reversal
                      * `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)
                      * `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)
                      * `WITHDRAWAL_RETURNED` - Bank Transfer sent returned
                      * `LODGEMENT_REVERSED` - Bank Transfer received returned
                      * `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)
                      * `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)
                      * `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin
                      * `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin
                      * `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC
                      * `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC
                      * `CARD_ECOMMERCE_DEBIT` - Card used on the internet
                      * `CARD_ECOMMERCE_CREDIT` - Card used on the internet
                      * `CARD_ATM_DEBIT` - Card used in an ATM
                      * `CARD_ATM_CREDIT` - Card used in an ATM
                      * `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin
                      * `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin
                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC
                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC
                      * `CARD_INTERNATIONAL_ECOMMERCE_DEBIT	` - Card used on the internet in non-processing currency
                      * `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency
                      * `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency
                      * `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency
                      * `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed
                      * `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed
                      * `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed
                      * `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed
                      * `CARD_ECOMMERCE_DEBIT_REVERSAL	` - Card used on the internet - reversed
                      * `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed
                      * `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed
                      * `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed
                      * `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed
                      * `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed
                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed
                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.
                      * `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed
                      * `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed
                      * `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed
                      * `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed
                    example: WITHDRAWAL
                    type: string
                title: Transaction
                type: object
          description: An array of transaction objects for the account with a count (`total`).
      summary: List transactions for an account
      tags:
        - Transactions
  "/accounts/{ican}/transactions/filter":
    get:
      description: |
        Retrieve a filtered list of transactions against an account.
        * `dateRangeFrom` - A millisecond epoch time specifying the date range start date.
        * `dateRangeTo` - A millisecond epoch time specifying the date range end date.
        * `searchKeyword` - Search term to filter by from the reference field (`myRef`).
        * `transactionTypes` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.
      operationId: getTransactionsFilteredById
      parameters:
        - in: path
          name: ican
          required: true
          schema:
            description: The ican of the account to retrieve
            format: int64
            type: integer
        - in: query
          name: dateRangeFrom
          required: true
          schema:
            description: A millisecond epoch time specifying the date range start date.
            format: int64
            type: number
        - in: query
          name: dateRangeTo
          required: true
          schema:
            description: A millisecond epoch time specifying the date range end date.
            format: int64
            type: number
        - in: query
          name: searchKeyword
          required: true
          schema:
            description: Search term to filter by from the reference field (`myRef`).
            type: string
        - in: query
          name: transactionTypes
          required: true
          schema:
            description: One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.
            items:
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1accounts~1%7Bican%7D~1transactions/get/responses/200/content/application~1json/schema"
          description: An array of transaction objects for the account with a count (`total`) filtered by the specified query parameter.
      summary: Filtered list of transactions for an account
      tags:
        - Transactions
  /apps:
    post:
      description: Create a new API Application with specified permissions
      operationId: createApiApplication
      requestBody:
        content:
          application/json:
            schema:
              properties:
                applicationName:
                  description: A name for the API Application to help you identify it
                  example: Batch Processing API
                  type: string
                enabled:
                  description: Whether or not this API Application can be used
                  example: true
                  type: boolean
                expiry:
                  description: The date that this API Application can no longer be used.
                  example: 2019-08-22T07:48:56.460Z
                  format: date-time
                  type: string
                ican:
                  description: The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.
                  format: int64
                  type: integer
                numberOfPayeeApprovalsRequired:
                  description: Number of approvals required to create a payee in a batch
                  example: 1
                  type: integer
                numberOfPaymentApprovalsRequired:
                  description: Number of approvals required to process a payment in a batch
                  example: 1
                  type: integer
                permissions:
                  description: The list of permissions required
                  example:
                    - PERM_BUSINESS_POST_PAYMENT_REQUEST
                    - PERM_BUSINESS_GET_ASPSPS
                  items:
                    type: string
                  type: array
              title: NewApiApplication
              type: object
        description: Details of the new API Application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  applicationId:
                    description: The ID of the API Application
                    example: 45345
                    format: int64
                    type: integer
                  clientId:
                    description: The Client ID of the new API Application
                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                    type: string
                  clientKey:
                    description: The Client Key of the new API Application
                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                    type: string
                  enabled:
                    description: Whether or not this API Application can be used
                    example: true
                    type: boolean
                  expiry:
                    description: The date that this API Application can no longer be used.
                    example: 2019-08-22T07:48:56.460Z
                    format: date-time
                    type: string
                  ican:
                    description: The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.
                    format: int64
                    type: integer
                  numberOfPayeeApprovalsRequired:
                    description: Number of approvals required to create a payee in a batch
                    example: 1
                    type: integer
                  numberOfPaymentApprovalsRequired:
                    description: Number of approvals required to process a payment in a batch
                    example: 1
                    type: integer
                  refreshToken:
                    description: The Refresh Token of the new API Application
                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                    type: string
                title: ApiApplication
                type: object
          description: API Application created successfully
      summary: Create a new API Application
      tags:
        - API
  /apps/accesstokens:
    post:
      description: Authenticate with the API.
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                clientId:
                  description: The Client ID for this API Application
                  example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                  type: string
                clientSecret:
                  description: The SHA256 hash of the nonce above and the app’s Client Key. The Client Key will only be shown to you when you create the app, so don’t forget to save it somewhere safe. SECRET=( `/bin/echo -n $NONCE$CLIENT_KEY | sha256sum` ).
                  example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                  type: string
                grantType:
                  description: Always `AccessToken`. (This will change to `refresh_token` in a future release.)
                  enum:
                    - AccessToken
                  type: string
                nonce:
                  description: A random non-repeating number used as a salt for the `clientSecret` below. The simplest nonce is a unix time.
                  example: 728345638475
                  format: int64
                  type: integer
                refreshToken:
                  description: The Refresh Token for this API Application
                  example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                  type: string
              title: Authentication
              type: object
        description: Authentication data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    description: The App Bearer Access Token you can use in further API calls.
                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                    type: string
                  apiApplicationId:
                    description: The ID of the application you are using.
                    example: 433
                    format: int64
                    type: integer
                  businessId:
                    description: The business ID for the business.
                    example: 248
                    format: int64
                    type: integer
                  expiry:
                    description: The expiry date and time for this token (ISO-8601).
                    example: 2020-10-22T07:48:56.460Z
                    format: date-time
                    type: string
                  permissions:
                    description: The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.
                    example:
                      - PERM_BUSINESSES_GET_ACCOUNTS
                      - PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS
                    items:
                      type: string
                    type: array
                title: AccessToken
                type: object
          description: Successfully authenticated
      security: []
      summary: Authenticate with the API.
      tags:
        - Authentication
  /aspsps:
    get:
      description: |
        Returns all ASPSPs (Account Servicing Payment Service Provider) / banks. The list can be filtered by currency. You will need to enable the `PERM_BUSINESS_GET_ASPSPS` permission to use this endpoint.
        ***This endpoint is only required if you intend to host the “Select ASPSP / bank” page yourself.***
      operationId: getListOfAspsps
      parameters:
        - description: The three letter code for the currency - either `EUR` or `GBP`. Use this to filter the list for banks that can be used to pay in a certain currency.
          example: EUR
          in: query
          name: currency
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  aspsps:
                    items:
                      properties:
                        alias:
                          description: The name of the ASPSP / bank.
                          example: Demo Bank
                          type: string
                        aspspUuid:
                          description: The UUID associated with the ASPSP / bank.
                          example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                          type: string
                        country:
                          properties:
                            code:
                              description: The 2-letter code for the country - e.g. `IE`, `GP`...
                              example: GB
                              type: string
                            description:
                              description: The name of the country
                              example: United Kingdom
                              type: string
                          title: Country
                          type: object
                        currency:
                          $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                        dateCreated:
                          description: The date the ASPSP / bank was created.
                          example: 2019-08-22T07:48:56.460Z
                          format: date-time
                          type: string
                        lastUpdated:
                          description: The date the ASPSP / bank was last updated.
                          example: 2019-08-22T07:48:56.460Z
                          format: date-time
                          type: string
                        logoUrl:
                          description: A link to the ASPSP / bank's logo in SVG format.
                          example: https://assets.fire.com/pisp/demo.svg
                          type: string
                      title: Aspsp
                      type: object
                    type: array
                  total:
                    description: The total number of ASPSPs in the list.
                    example: 10
                    type: integer
                title: Aspsps
                type: object
          description: |
            A list of ASPSPs the customers can use to pay a payment.
      summary: Get list of ASPSPs / Banks
      tags:
        - Open Banking
  /batches:
    get:
      description: |
        Returns the list of batch with the specified types and statuses.
      operationId: getBatches
      parameters:
        - in: query
          name: batchStatus
          schema:
            description: The status of the batch if internal transfer.
            enum:
              - SUBMITTED
              - REMOVED
              - SUCCEEDED
              - FAILED
            example: SUBMITTED
            type: string
        - in: query
          name: batchTypes
          schema:
            description: The type of the batch. Can be one of the 3 listed enums.
            enum:
              - INTERNAL_TRANSFER
              - BANK_TRANSFER
              - NEW_PAYEE
            example: INTERNAL_TRANSFER
            type: string
        - in: query
          name: orderBy
          schema:
            description: You can order the batches by date. No other options at this time
            enum:
              - DATE
            example: DATE
            type: string
        - in: query
          name: order
          schema:
            description: You can order the batches by ascending or descending order.
            enum:
              - DESC
              - ASC
            example: DESC
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  items:
                    items:
                      properties:
                        amount:
                          description: The amount of funds to send. In cent or pence
                          example: 10000
                          format: int64
                          type: integer
                        amountAfterCharges:
                          description: The amount of the transfer after fees and taxes. in pence or cent.
                          example: 10000
                          format: int64
                          type: integer
                        batchItemUuid:
                          description: A UUID for this item.
                          example: F2AF3F2B-4406-4199-B249-B354F2CC6019
                          type: string
                        dateCreated:
                          description: The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z
                          example: 2021-04-04T10:48:53.540Z
                          format: date-time
                          type: string
                        feeAmount:
                          description: The fee charged by fire.com for the payment. In pence or cent.
                          example: 0
                          format: int64
                          type: integer
                        icanFrom:
                          description: The Fire account ID of the source account.
                          example: 2150
                          format: int64
                          type: integer
                        icanTo:
                          description: The Fire account ID for the fire.com account the funds are sent to.
                          example: 1002
                          format: int64
                          type: integer
                        lastUpdated:
                          description: The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z
                          example: 2021-04-04T10:48:53.540Z
                          format: date-time
                          type: string
                        ref:
                          description: The reference on the transaction.
                          example: Testing a transfer via batch
                          type: string
                        refId:
                          description: The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.
                          example: 123782
                          format: int64
                          type: integer
                        result:
                          description: The outcome of the attempted transaction.
                          properties:
                            code:
                              example: 500001
                              format: int64
                              type: integer
                            message:
                              example: SUCCESS
                              type: string
                          type: object
                        status:
                          description: status of the batch if internal trasnfer
                          enum:
                            - SUBMITTED
                            - REMOVED
                            - SUCCEEDED
                            - FAILED
                          example: SUCCEEDED
                          type: string
                        taxAmount:
                          description: Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.
                          example: 0
                          format: int64
                          type: integer
                      title: BatchItem
                      type: object
                    type: array
                  total:
                    description: total number of batches returned
                    example: 1
                    format: int64
                    type: integer
                title: BatchItems
                type: object
          description: List all batches.
      summary: List batches
      tags:
        - Payment Batches
    post:
      description: This is the first step in creating a batch payment.
      operationId: createBatchPayment
      requestBody:
        content:
          application/json:
            schema:
              properties:
                batchName:
                  description: An optional name you give to the batch at creation time.
                  example: January 2018 Payroll
                  type: string
                callBackUrl:
                  description: An optional POST URL that all events for this batch will be sent to.
                  example: https://my.webserver.com/cb/payroll
                  type: string
                currency:
                  description: GBP or EUR
                  example: EUR
                  type: string
                jobNumber:
                  description: An optional job number you can give to the batch to help link it to your own system.
                  example: 2022-01-PR
                  type: string
                type:
                  description: The type of the batch - can be one of the listed 3
                  enum:
                    - BANK_TRANSFER
                    - INTERNAL_TRANSFER
                  type: string
              title: NewBatch
              type: object
        description: Details of the batch payment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  batchUuid:
                    description: A UUID for this item.
                    example: F2AF3F2B-4406-4199-B249-B354F2CC6019
                    type: string
                title: NewBatchResponse
                type: object
          description: Batch created successfully
      summary: Create a new bath of payments
      tags:
        - Payment Batches
    put:
      description: |
        Submits the Batch (for approval in the case of a **BANK_TRANSFER**). If this is an **INTERNAL_TRANSFER** batch, the transfers are immediately queued for processing. If this is a **BANK_TRANSFER** batch, this will trigger requests for approval to the firework mobile apps of authorised users. Once those users approve the batch, it is queued for processing.

        You can only submit a batch while it is in the OPEN state.
      operationId: submitBatch
      responses:
        "204":
          description: No body is returned - a HTTP 204 No Content response signifies the call was successful.
      summary: Submit a batch for approval
      tags:
        - Payment Batches
  "/batches/{batchUuid}":
    delete:
      description: Cancels the Batch. You can only cancel a batch before it is submitted for approval (while it is in the OPEN state).
      operationId: cancelBatchPayment
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "200":
          description: Batch payment deleted successfully.
      summary: Cancel a batch
      tags:
        - Payment Batches
    get:
      description: Returns the details of the batch specified in the API endpoint - {batchUuid}.
      operationId: getDetailsSingleBatch
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1batches/get/responses/200/content/application~1json/schema/properties/items/items"
          description: Returns the details of the batch specified in the API endpoint - {batchUuid}.
      summary: Get details of a single Batch
      tags:
        - Payment Batches
  "/batches/{batchUuid}/approvals":
    get:
      description: Returns a list of approvers for this batch.
      operationId: getListofApproversForBatch
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  approvals:
                    items:
                      properties:
                        emailAddress:
                          description: User email address
                          example: jane.doe@example.com
                          type: string
                        firstName:
                          example: Jane
                          type: string
                        lastName:
                          example: Doe
                          type: string
                        lastUpdated:
                          description: The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z
                          example: 2021-04-04T10:48:53.540Z
                          format: date-time
                          type: string
                        mobileNumber:
                          example: 353871234567
                          type: string
                        status:
                          example: PENDING_APPROVAL
                          type: string
                        userId:
                          description: User id assigned by fire.com
                          example: 3138
                          format: int64
                          type: integer
                      type: object
                    type: array
                title: BatchApprovers
                type: object
          description: A list of approvers for this batch.
      summary: List Approvers for a Batch
      tags:
        - Payment Batches
  "/batches/{batchUuid}/banktransfers":
    get:
      description: Returns a paginated list of items in the specified batch.
      operationId: getItemsBatchBankTransfer
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
        - in: query
          name: offset
          schema:
            description: The page offset. Defaults to 0. This is the record number that the returned list will start at. E.g. offset = 40 and limit = 20 will return records 40 to 59.
            example: "0"
            format: int64
            type: integer
        - in: query
          name: limit
          schema:
            description: The number of records to return. Defaults to 10 - max is 200.
            example: "10"
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1batches/get/responses/200/content/application~1json/schema"
          description: A fire.com list object of Batch Items (Internal transfers or Bank transfers).
      summary: List items in a Batch
      tags:
        - Payment Batches
    post:
      description: |
        There are two ways to process bank transfers - by Payee ID (**Mode 1**) or by Payee Account Details (**Mode 2**).

        **Mode 1:** Use the payee IDs of existing approved payees set up against your account. These batches can be approved in the normal manner.

        **Mode 2:** Use the account details of the payee. In the event that these details correspond to an existing approved payee, the batch can be approved as normal. If the account details are new, a batch of New Payees will automatically be created. This batch will need to be approved before the Payment batch can be approved. These payees will then exist as approved payees for future batches.
      operationId: addBankTransferBatchPayment
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    amount:
                      description: The value of the transaction
                      example: 500
                      format: int64
                      type: integer
                    destAccountHolderName:
                      description: The destination account holder name
                      example: John Smith
                      type: string
                    destAccountNumber:
                      description: The destination Account Number if a GBP bank transfer
                      example: "12345678"
                      type: string
                    destIban:
                      description: The destination IBAN if a Euro Bank transfer
                      example: IE00AIBK93123412341234
                      type: string
                    destNsc:
                      description: The destination Nsc if a GBP bank transfer
                      example: "123456"
                      type: string
                    icanFrom:
                      description: The Fire account ID for the fire.com account the funds are taken from.
                      example: 2001
                      format: int64
                      type: integer
                    myRef:
                      description: The reference on the transaction for your records - not shown to the beneficiary.
                      example: Payment to John Smith for Consultancy in device.
                      type: string
                    payeeType:
                      description: Use ACCOUNT_DETAILS if you are providing account numbers/sort codes/IBANs (Mode 2). Specify the account details in the destIban, destAccountHolderName, destNsc or destAccountNumber fields as appropriate.
                      enum:
                        - ACCOUNT_DETAILS
                      example: ACCOUNT_DETAILS
                      type: string
                    yourRef:
                      description: The reference on the transaction - displayed on the beneficiary bank statement.
                      example: ACME LTD - INV 23434
                      type: string
                  title: BatchItemBankTransferMode2
                  type: object
                - properties:
                    amount:
                      description: The value of the transaction
                      example: 500
                      format: int64
                      type: integer
                    icanFrom:
                      description: The Fire account ID for the fire.com account the funds are taken from.
                      example: 2001
                      format: int64
                      type: integer
                    myRef:
                      description: The reference on the transaction for your records - not shown to the beneficiary.
                      example: Payment to John Smith for Consultancy in device.
                      type: string
                    payeeId:
                      description: The ID of the existing or automatically created payee
                      example: 15002
                      format: int64
                      type: integer
                    payeeType:
                      description: Use PAYEE_ID if you are paying existing approved payees (Mode 1).
                      enum:
                        - PAYEE_ID
                      example: PAYEE_ID
                      type: string
                    yourRef:
                      description: The reference on the transaction - displayed on the beneficiary bank statement.
                      example: ACME LTD - INV 23434
                      type: string
                  title: BatchItemBankTransferMode1
                  type: object
        description: Details of **Mode 1** & **Mode 2**.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1batches~1%7BbatchUuid%7D~1internaltransfers/post/responses/200/content/application~1json/schema"
          description: Batch payment added successfully. **Note*** Please use batchUuid when submitting a batch, not batchItemUuid.
      summary: Add payment for an bank transfers
      tags:
        - Payment Batches
  "/batches/{batchUuid}/banktransfers/{itemUuid}":
    delete:
      description: Removes a Payment from the Batch (Bank Transfers). You can only remove payments before the batch is submitted for approval (while it is in the OPEN state).
      operationId: deleteBankTransferBatchPayment
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
        - in: path
          name: itemUuid
          required: true
          schema:
            description: The uuid of the item to remove.
            type: string
      responses:
        "200":
          description: Batch payment deleted successfully.
      summary: Remove a Payment from the Batch (Bank Transfers)
      tags:
        - Payment Batches
  "/batches/{batchUuid}/internaltransfers":
    get:
      description: Returns a paginated list of items in the specified batch.
      operationId: getItemsBatchInternalTrasnfer
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
        - in: query
          name: offset
          schema:
            description: The page offset. Defaults to 0. This is the record number that the returned list will start at. E.g. offset = 40 and limit = 20 will return records 40 to 59.
            example: "0"
            format: int64
            type: integer
        - in: query
          name: limit
          schema:
            description: The number of records to return. Defaults to 10 - max is 200.
            example: "10"
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1batches/get/responses/200/content/application~1json/schema"
          description: A fire.com list object of Batch Items (Internal transfers or Bank transfers).
      summary: List items in a Batch
      tags:
        - Payment Batches
    post:
      description: Simply specify the source account, destination account, amount and a reference.
      operationId: addInternalTransferBatchPayment
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: amount of funds to be transfered
                  example: 10000
                  format: int64
                  type: integer
                icanFrom:
                  description: The account ID for the fire.com account the funds are taken from
                  example: 2001
                  format: int64
                  type: integer
                icanTo:
                  description: The account ID for the fire.com account the funds are directed to
                  example: 3221
                  format: int64
                  type: integer
                ref:
                  description: The reference on the transaction
                  example: Moving funds to Operating Account
                  type: string
              title: BatchItemInternalTransfer
              type: object
        description: Details of the source account, destination account, amount and a reference.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  batchItemUuid:
                    description: A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.
                    example: fba4a76a-ce51-4fc1-b562-98ec01299e4d
                    type: string
                title: NewBatchItemResponse
                type: object
          description: Batch payment added successfully. Note* Please use batchUuid when submitting a batch, not batchItemUuid.
      summary: Add payment for an internal transfers
      tags:
        - Payment Batches
  "/batches/{batchUuid}/internaltransfers/{itemUuid}":
    delete:
      description: Removes a Payment from the Batch (Internal Transfer). You can only remove payments before the batch is submitted for approval (while it is in the OPEN state).
      operationId: deleteInternalTransferBatchPayment
      parameters:
        - in: path
          name: batchUuid
          required: true
          schema:
            description: The uuid of the batch.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
        - in: path
          name: itemUuid
          required: true
          schema:
            description: The uuid of the item to remove.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "200":
          description: Batch payment deleted successfully.
      summary: Remove a Payment from the Batch (Internal Transfer)
      tags:
        - Payment Batches
  /cards:
    get:
      description: Returns a list of cards related to your fire.com account.
      operationId: getListofCards
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  cards:
                    items:
                      properties:
                        blocked:
                          description: Whether the card is blocked or not
                          example: false
                          type: boolean
                        cardId:
                          description: card id assigned by fire.com
                          example: 51
                          format: int64
                          type: integer
                        dateCreated:
                          description: The date-time the card was created
                          example: 2017-01-19T16:38:15.803Z
                          format: date-time
                          type: string
                        emailAddress:
                          description: card user email address
                          example: user@example.com
                          type: string
                        eurIcan:
                          description: identifier for the eur fire.com account (assigned by fire.com)
                          example: 2150
                          format: int64
                          type: integer
                        expiryDate:
                          description: card expiry date
                          example: 2019-01-31T00:00:00.000Z
                          format: date-time
                          type: string
                        firstName:
                          description: card user first name
                          example: John
                          type: string
                        gbpIcan:
                          description: identifier for the gbp fire.com account (assigned by fire.com)
                          example: 2152
                          format: int64
                          type: integer
                        lastName:
                          description: card user last name
                          example: Doe
                          type: string
                        maskedPan:
                          description: card number (masked)
                          example: 537455******1111
                          type: string
                        provider:
                          description: card provider
                          enum:
                            - MASTERCARD
                          example: MASTERCARD
                          type: string
                        status:
                          description: card status
                          enum:
                            - LIVE
                            - CREATED_ACTIVE
                            - CREATED_INACTIVE
                            - DEACTIVATED
                          example: LIVE
                          type: string
                        statusReason:
                          description: reason for card status
                          enum:
                            - LOST_CARD
                            - STOLEN_CARD
                            - CARD_DESTROYED
                          example: LOST_CARD
                          type: string
                        userId:
                          description: card user id assigned by fire.com
                          example: 3138
                          format: int64
                          type: integer
                      title: Card
                      type: object
                    type: array
                title: Cards
                type: object
          description: Successful response
        "401":
          $ref: "#/paths/~1accounts/get/responses/401"
        "403":
          $ref: "#/paths/~1accounts/get/responses/401"
      summary: View List of Cards.
      tags:
        - Cards
    post:
      description: You can create multiple debit cards which can be linked to your fire.com accounts.
      operationId: createNewCard
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acceptFeesAndCharges:
                  example: true
                  type: boolean
                addressType:
                  enum:
                    - HOME
                    - BUSINESS
                  example: BUSINESS
                  type: string
                cardPin:
                  example: 5345
                  type: string
                eurIcan:
                  example: 2150
                  format: int64
                  type: integer
                gbpIcan:
                  example: 2152
                  format: int64
                  type: integer
                userId:
                  example: 3245
                  format: int64
                  type: number
              title: NewCard
              type: object
        description: Details of the new card
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  cardId:
                    example: 51
                    format: int64
                    type: integer
                  expiryDate:
                    example: 2019-01-31T00:00:00.000Z
                    format: date-time
                    type: string
                  maskedPan:
                    example: 537455******1111
                    type: string
                  status:
                    enum:
                      - CREATED_ACTIVE
                      - CREATED_INACTIVE
                    example: CREATED_ACTIVE
                    type: string
                title: NewCardResponse
                type: object
          description: Card created successfully
      summary: Create a new debit card.
      tags:
        - Cards
  /directdebits:
    get:
      description: |
        Retrieve all direct debit payments associated with a direct debit mandate.
        The permision needed to access this endpoint is PERM_BUSINESS_GET_DIRECT_DEBITS
      operationId: getDirectDebitsForMandateUuid
      parameters:
        - description: The mandate UUID to retrieve
          example: 1A07774B-1461-4595-BC4B-423B739712AF
          in: query
          name: mandateUuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  directdebits:
                    items:
                      properties:
                        amount:
                          description: Value of the payment
                          example: 100
                          format: int64
                          type: integer
                        currency:
                          $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                        dateCreated:
                          description: Date the direct debit was created. Milliseconds since the epoch (1970).
                          example: 2016-12-15T22:56:05.937Z
                          format: date-time
                          type: string
                        directDebitReference:
                          description: The direct debit reference.
                          example: VODA-ABC453-1
                          type: string
                        directDebitUuid:
                          description: The UUID for the direct debit payment
                          example: 42de0705-e3f1-44fa-8c41-79973eb80eb2
                          type: string
                        isDDIC:
                          description: DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.
                          example: false
                          type: boolean
                        lastUpdated:
                          description: Date the direct debit was last updated. Milliseconds since the epoch (1970).
                          example: 2016-12-15T22:56:05.937Z
                          format: date-time
                          type: string
                        mandateUUid:
                          description: The UUID for the mandate
                          example: f171b143-e3eb-47de-85a6-1c1f1108c701
                          type: string
                        originatorAlias:
                          description: The Alias of the party who sets up the direct debit.
                          example: Three
                          type: string
                        originatorName:
                          description: The creator of the party who sets up the direct debit.
                          example: Vodafone PLC
                          type: string
                        originatorReference:
                          description: Set by party who sets up the direct debit.
                          example: VODA-123456
                          type: string
                        schemeRejectReason:
                          description: Reason why rejected
                          example: eg. Instruction cancelled by payer
                          type: string
                        schemeRejectReasonCode:
                          description: The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.
                          enum:
                            - "0"
                            - "1"
                            - "2"
                            - "3"
                            - "4"
                            - "5"
                            - "6"
                            - "7"
                            - "8"
                            - "9"
                            - A
                            - B
                          example: for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B
                          type: string
                        status:
                          description: |
                            The statuses of the direct debit payments associated with the mandate.
                            * 'RECIEVED' - Direct Debit has been recieved
                            * 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it
                            * 'REJECT_READY_FOR_PROCESSING' 
                            * 'REJECT_RECORD_IN_PROGRESS'
                            * 'REJECT_RECORDED'
                            * 'REJECT_FILE_CREATED'
                            * 'REJECT_FILE_SENT'
                            * 'COLLECTED' - Direct debit collected
                            * 'REFUND_REQUESTED' - Refund requested on direct debit
                            * 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit
                            * 'REFUND_RECORDED'
                            * 'REFUND_FILE_CREATED'
                            * 'REFUND_FILE_SENT' 
                          enum:
                            - RECIEVED
                            - REJECT_REQUESTED
                            - REJECT_READY_FOR_PROCESSING
                            - REJECT_RECORD_IN_PROGRESS
                            - REJECT_RECORDED
                            - REJECT_FILE_CREATED
                            - REJECT_FILE_SENT
                            - COLLECTED
                            - REFUND_REQUESTED
                            - REFUND_RECORD_IN_PROGRESS
                            - REFUND_RECORDED
                            - REFUND_FILE_CREATED
                            - REFUND_FILE_SENT
                          example: RECIEVED
                          type: string
                        targetIcan:
                          description: The ican of your fire account that the money was taken from
                          example: 42
                          format: int64
                          type: integer
                        targetPayeeId:
                          description: The payee that was created when the DD was processed
                          example: 12
                          format: int64
                          type: integer
                        type:
                          description: The type of the direct debit.
                          enum:
                            - FIRST_COLLECTION
                            - ONGOING_COLLECTION
                            - REPRESENTED_COLLECTION
                            - FINAL_COLLECTION
                          example: FIRST_COLLECTION
                          type: string
                      title: DirectDebit
                      type: object
                    type: array
                  total:
                    description: Number of direct debits found
                    example: 1
                    format: int64
                    type: integer
                title: DirectDebits
                type: object
          description: Retrieve all direct debit payments associated with a direct debit mandate.
      summary: Get all DD payments associated with a direct debit mandate
      tags:
        - Direct Debits
  "/directdebits/{directDebitUuid}":
    get:
      description: |
        Retrieve all details of a single direct debit collection/payment, whether successful or not.
        The permision needed to access this endpoint is **PERM_BUSINESS_GET_DIRECT_DEBIT**
      operationId: getDirectDebitByUuid
      parameters:
        - in: path
          name: directDebitUuid
          required: true
          schema:
            description: The uuid of the direct debit to retrieve.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1directdebits/get/responses/200/content/application~1json/schema/properties/directdebits/items"
          description: Retrieve all details of a single direct debit collection/payment
      summary: Get the deails of a direct debit
      tags:
        - Direct Debits
  "/directdebits/{directDebitUuid}/reject":
    post:
      description: |
        This endpoint allows you to reject a direct debit payment where the status is still set to RECEIVED.
        Permission name PERM_BUSINESS_POST_DIRECT_DEBIT_REJECT
      operationId: rejectDirectDebit
      parameters:
        - in: path
          name: directDebitUuid
          required: true
          schema:
            description: The uuid of the direct debit to retrieve.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "204":
          description: 204 no content
      summary: Reject a direct debit payment
      tags:
        - Direct Debits
  /mandates:
    get:
      description: |
        The permision needed to access this endpoint is PERM_BUSINESS_GET_MANDATES
      operationId: getDirectDebitMandates
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  mandates:
                    items:
                      properties:
                        alias:
                          description: The name of the alias
                          example: Vodaphone
                          type: string
                        currency:
                          $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                        dateCancelled:
                          description: Date the direct debit was canceled. Milliseconds since the epoch (1970).
                          example: 2016-12-15T22:56:05.937Z
                          format: date-time
                          type: string
                        dateCompleted:
                          description: Date the direct debit was completed. Milliseconds since the epoch (1970).
                          example: 2016-12-15T22:56:05.937Z
                          format: date-time
                          type: string
                        dateCreated:
                          description: Date the direct debit was created. Milliseconds since the epoch (1970).
                          example: 2016-12-15T22:56:05.937Z
                          format: date-time
                          type: string
                        fireRejectionReason:
                          description: Rejection reason if transaction is rejected
                          enum:
                            - ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS
                            - DDIC
                            - ACCOUNT_NOT_FOUND
                            - ACCOUNT_NOT_LIVE
                            - CUSTOMER_NOT_FOUND
                            - BUSINESS_NOT_LIVE
                            - BUSINESS_NOT_FULL
                            - PERSONAL_USER_NOT_LIVE
                            - PERSONAL_USER_NOT_FULL
                            - MANDATE_ALREADY_EXISTS
                            - MANDATE_WITH_DIFERENT_ACCOUNT
                            - NULL_MANDATE_REFERENCE
                            - INVALID_ACCOUNT_CURRENCY
                            - INVALID_MANDATE_REFERENCE
                            - REQUESTED_BY_CUSTOMER_VIA_SUPPORT
                            - CUSTOMER_ACCOUNT_CLOSED
                            - CUSTOMER_DECEASED
                            - ACCOUNT_TRANSFERRED
                            - MANDATE_NOT_FOUND
                            - ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT
                            - INVALID_ACCOUNT_TYPE
                            - MANDATE_EXPIRED
                            - MANDATE_CANCELLED
                            - REQUESTED_BY_CUSTOMER
                          example: ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS
                          type: string
                        lastUpdated:
                          description: Date the direct debit was last updated. Milliseconds since the epoch (1970).
                          example: 2016-12-15T22:56:05.937Z
                          format: date-time
                          type: string
                        latestDirectDebitAmount:
                          description: The value of largest direct debit collected
                          example: 2
                          format: int64
                          type: integer
                        latestDirectDebitDate:
                          description: The date of latest direct debit collected
                          example: 2016-12-15T22:56:05.937Z
                          format: date-time
                          type: string
                        mandateReference:
                          description: the reference of the mandate
                          example: CRZ-102190123
                          type: string
                        mandateUuid:
                          description: The UUID for the  mandate
                          example: 28d627c3-1889-44c8-ae59-6f6b20239260
                          type: string
                        numberOfDirectDebitCollected:
                          description: The number of direct debits collected
                          example: 2
                          format: int64
                          type: integer
                        originatorAlias:
                          description: The name of the alias
                          example: Vodaphone PLC
                          type: string
                        originatorLogoUrlLarge:
                          description: Logo url from party who sets up the direct debit.
                          example: originatorLogoLarge
                          type: string
                        originatorLogoUrlSmall:
                          description: Logo url from party who sets up the direct debit.
                          example: originatorLogoSmall
                          type: string
                        originatorName:
                          description: The creator of the party who sets up the direct debit.
                          example: Vodafone PLC
                          type: string
                        originatorReference:
                          description: Set by party who sets up the direct debit.
                          example: VODA-123456
                          type: string
                        schemeCancelReason:
                          description: Reason for cancelation
                          example: e.g. Instruction cancelled by payer
                          type: string
                        schemeCancelReasonCode:
                          description: The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.
                          example: For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R
                          type: string
                        status:
                          description: |
                            The status of the mandate.
                            * 'CREATED'
                            * 'LIVE'
                            * 'REJECT_REQUESTED'
                            * 'REJECT_RECORD_IN_PROGRESS'
                            * 'REJECT_RECORDED'
                            * 'REJECT_FILE_CREATED'
                            * 'REJECT_FILE_SENT'
                            * 'CANCEL_REQUESTED'
                            * 'CANCEL_RECORD_IN_PROGRESS'
                            * 'CANCEL_RECORDED'
                            * 'CANCEL_FILE_CREATED'
                            * 'CANCEL_FILE_SENT'
                            * 'COMPLETE'
                            * 'DORMANT'
                          enum:
                            - CREATED
                            - LIVE
                            - REJECT_REQUESTED
                            - REJECT_RECORD_IN_PROGRESS
                            - REJECT_RECORDED
                            - REJECT_FILE_CREATED
                            - REJECT_FILE_SENT
                            - CANCEL_REQUESTED
                            - CANCEL_RECORD_IN_PROGRESS
                            - CANCEL_RECORDED
                            - CANCEL_FILE_CREATED
                            - CANCEL_FILE_SENT
                            - COMPLETE
                            - DORMANT
                          example: RECIEVED
                          type: string
                        targetIcan:
                          description: Identifier for the fire.com account (assigned by fire.com)
                          example: 1
                          format: int64
                          type: integer
                        valueOfDirectDebitCollected:
                          description: The value of direct debits collected
                          example: 2
                          format: int64
                          type: integer
                      title: Mandate
                      type: object
                    type: array
                  total:
                    description: Number of direct debits found
                    example: 1
                    format: int64
                    type: integer
                title: Mandates
                type: object
          description: List all direct debit mandates.
      summary: List all direct debit mandates
      tags:
        - Direct Debits
  "/mandates/{mandateUuid}":
    get:
      description: |
        Retrieve all details for a direct debit mandate.
        The permision needed to access this endpoint is PERM_BUSINESS_GET_MANDATE
      operationId: getMandate
      parameters:
        - in: path
          name: mandateUuid
          required: true
          schema:
            description: The uuid of the mandate to retrieve.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1mandates/get/responses/200/content/application~1json/schema/properties/mandates/items"
          description: Retrieve all details for a direct debit mandate.
      summary: Get direct debit mandate details
      tags:
        - Direct Debits
    post:
      description: |
        Update Direct Debit Mandate Alias
        The permision needed to access this endpoint is PERM_BUSINESS_PUT_MANDATE
      operationId: updateMandateAlias
      parameters:
        - in: path
          name: mandateUuid
          required: true
          schema:
            description: The uuid of the mandate to update.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "204":
          description: 204 no content
      summary: Update a direct debit mandate alias
      tags:
        - Direct Debits
  "/mandates/{mandateUuid}/activate":
    post:
      description: |
        This endpoint can only be used to activate a direct debit mandate when it is in the status REJECT_REQUESTED (even if the account has direct debits disabled). This action will also enable the account for direct debits if it was previously set to be disabled.
        The permision needed to access this endpoint is PERM_BUSINESS_POST_MANDATE_ACTIVATE
      operationId: activateMandate
      parameters:
        - in: path
          name: mandateUuid
          required: true
          schema:
            description: The uuid of the mandate to activate.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "204":
          description: 204 no content
      summary: Activate a direct debit mandate
      tags:
        - Direct Debits
  "/mandates/{mandateUuid}/cancel":
    post:
      description: |
        This endpoint allows you to cancel a direct debit mandate.
        The permision needed to access this endpoint is PERM_BUSINESS_POST_MANDATE_CANCEL
      operationId: cancelMandateByUuid
      parameters:
        - in: path
          name: mandateUuid
          required: true
          schema:
            description: The uuid of the mandate to cancel.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "204":
          description: 204 no content
      summary: Cancel a direct debit mandate
      tags:
        - Direct Debits
  /payees:
    get:
      description: |
        Returns all your payee bank accounts. 

        Ordered by date added descending. 

        Can be paginated.
      operationId: getPayees
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  accountHolderName:
                    description: The name on the payee bank account.
                    example: Joe Bloggs
                    type: string
                  accountName:
                    description: The alias attributed to the payee, usually set by the user when creating the payee.
                    example: Joe
                    type: string
                  accountNumber:
                    description: The Account Number of the account if currency is GBP.
                    example: null
                    type: string
                  bic:
                    description: The BIC of the account if currency is EUR.
                    example: BOFIIE2DXXX
                    type: string
                  createdBy:
                    description: The creation source of the payee.
                    enum:
                      - CUSTOMER
                      - LODGEMENT
                      - DIRECT DEBIT
                      - OPEN BANKING
                      - FIRE OPEN PAYMENT
                      - FIRE DIRECT
                    example: CUSTOMER
                    type: string
                  currency:
                    $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                  dateCreated:
                    description: The date the payee was created. Milliseconds since the epoch (1970).
                    example: 2019-08-22T07:48:56.460Z
                    format: date-time
                    type: string
                  iban:
                    description: The IBAN of the account if currency is EUR.
                    example: IE86BOFI90535211111111
                    type: string
                  id:
                    description: Identifier for the fire.com payee bank account (assigned by fire.com).
                    example: 742
                    format: int64
                    type: integer
                  nsc:
                    description: The Sort Code of the account if currency is GBP.
                    example: null
                    type: string
                  status:
                    description: |
                      The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.
                        * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.
                        * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.
                        * 'CLOSED'
                        * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.
                    enum:
                      - CREATED
                      - LIVE
                      - CLOSED
                      - ARCHIVED
                    example: LIVE
                    type: string
                title: Payee
                type: object
          description: An array of Payee Bank Accounts
      summary: List all Payee Bank Accounts
      tags:
        - Payee Bank Accounts
  /paymentrequests:
    post:
      description: |
        Creates a new Fire Open Payment Payment request. A code is returned that can be shared to your customers as a URL by any channel you wish.
        You will need to enable the `PERM_BUSINESS_POST_PAYMENT_REQUEST` permission to use this endpoint.
      operationId: newPaymentRequest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                additionalFields:
                  description: These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.
                  example: ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2
                  type: string
                amount:
                  description: The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).
                  example: 1000
                  format: int64
                  type: integer
                collectFields:
                  description: For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
                  example: ADDRESS|REFERENCE|COMMENT1
                  type: string
                currency:
                  description: Either `EUR` or `GBP`, and must correspond to the currency of the account the funds are being lodged into in the `icanTo`.
                  enum:
                    - EUR
                    - GBP
                  type: string
                description:
                  description: A public facing description of the request. This will be shown to the user when they tap or scan the request.
                  example: Gym Fees Oct 2020
                  type: string
                expiry:
                  description: This is the expiry of the payment request. After this time, the payment cannot be paid.
                  example: 2020-10-22T07:48:56.460Z
                  format: date-time
                  type: string
                icanTo:
                  description: The ican of the account to collect the funds into. Must be one of your fire.com Accounts.
                  example: 42
                  format: int64
                  type: integer
                mandatoryFields:
                  description: For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
                  example: ADDRESS|REFERENCE|COMMENT1
                  type: string
                maxNumberPayments:
                  description: The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.
                  example: 1
                  type: integer
                myRef:
                  description: An internal description of the request.
                  example: Fees
                  type: string
                orderDetails:
                  properties:
                    comment1:
                      description: This is your own comment for the transaction.
                      example: Additional comments about the transaction
                      type: string
                    comment2:
                      description: This is your own comment for the transaction.
                      example: Additional comments about the transaction
                      type: string
                    customerNumber:
                      description: Use this field to store a customer number for the transaction (for example).
                      example: "123645"
                      type: string
                    deliveryAddressLine1:
                      description: The first line of the delivery address.
                      example: 12 The Street
                      type: string
                    deliveryAddressLine2:
                      description: The second line of the delivery address.
                      example: The Way
                      type: string
                    deliveryCity:
                      description: Delivery address city
                      example: London
                      type: string
                    deliveryCountry:
                      description: 2-digit code for the country
                      example: GB
                      type: string
                    deliveryPostCode:
                      description: Delivery address post code
                      example: EC15155
                      type: string
                    merchantCustomerIdentification:
                      description: This is a reference you use to uniquely identify each of your customers.
                      example: "08303863544"
                      type: string
                    merchantNumber:
                      description: Your Merchant Number (if applicable).
                      example: "1234567"
                      type: string
                    orderId:
                      description: Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.
                      example: 6c28a47d-4502-4111
                      type: string
                    productId:
                      description: Use this field to store a product id for the transaction (for example).
                      example: ZFDAA-1221
                      type: string
                    variableReference:
                      description: Use this field to store any other reference for the transaction (for example, a phone number).
                      example: John Doe
                      type: string
                  title: OrderDetails
                  type: object
                returnUrl:
                  description: The merchant return URL where the customer will be re-directed to with the result of the transaction.
                  example: https://example.com/callback
                  type: string
                type:
                  description: The type of Fire Open Payment that was created
                  enum:
                    - OTHER
                  type: string
              required:
                - type
                - icanTo
                - currency
                - myRef
                - description
              title: NewPaymentRequest
              type: object
        description: Details of the new payment request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: |
                      The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.
                    example: 1234abcd
                    maxLength: 8
                    minLength: 8
                    type: string
                  type:
                    description: The type of Fire Open Payment that was created.
                    enum:
                      - OTHER
                    type: string
                title: NewPaymentRequestResponse
                type: object
          description: Payment Request created successfully
      summary: Create a Fire Open Payment request
      tags:
        - Open Banking
  "/payments/{paymentUuid}":
    get:
      description: |
        Returns the details of a specific payment.

        As the customer goes through the process of making the payment the status of the payment will change.

        * `AWAITING_AUTHORISATION` -This is the initial status of all your payments.
        * `AUTHORISED` - This is the status that your payment is set to after the customer has authorised the payment with their ASPSP / bank.
        * `AWAITING_MULTI_AUTHORISATION` - Some business accounts such as charities require dual authorisation.
        * `NOT_AUTHORISED` - Either your customer clicked on cancel or the payment was rejected by their ASPSP / bank.
        * `PENDING` - This is the status that your payment is set to after the customer has authorised the payment with their ASPSP / bank but the bank may want to carry out another check before funding the transaction.
        * `PAID` - Funds were received into your fire.com GBP or EUR account from your customer’s ASPSP / bank.


        You will need to enable the `PERM_BUSINESS_GET_PAYMENT` permission to use this endpoint.
      operationId: getPaymentDetails
      parameters:
        - in: path
          name: paymentUuid
          required: true
          schema:
            description: The unique id for the transaction.
            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  additionalFields:
                    description: These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.
                    example: ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2
                    type: string
                  amount:
                    description: The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).
                    example: 1000
                    format: int64
                    type: integer
                  collectFields:
                    description: For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
                    example: ADDRESS|REFERENCE|COMMENT1
                    type: string
                  currency:
                    $ref: "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                  description:
                    description: A public facing description of the request. This will be shown to the user when they tap or scan the request.
                    example: Gym Fees Oct 2020
                    type: string
                  expiry:
                    description: This is the expiry of the payment request. After this time, the payment cannot be paid.
                    example: 2024-10-22T07:48:56.460Z
                    format: date-time
                    type: string
                  icanTo:
                    description: The ican of the account to collect the funds into. Must be one of your fire.com Accounts.
                    example: 42
                    format: int64
                    type: integer
                  mandatoryFields:
                    description: For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
                    example: ADDRESS|REFERENCE|COMMENT1
                    type: string
                  maxNumberPayments:
                    description: The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.
                    example: 1
                    type: integer
                  myRef:
                    description: An internal description of the request.
                    example: Fees
                    type: string
                  orderDetails:
                    $ref: "#/paths/~1paymentrequests/post/requestBody/content/application~1json/schema/properties/orderDetails"
                  paymentRequestCode:
                    description: The code that was returned when you created the payment request.
                    example: 1234abcd
                    maxLength: 8
                    minLength: 8
                    type: string
                  paymentUuid:
                    description: A unique id for the transaction.
                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C
                    type: string
                  returnUrl:
                    description: The merchant return URL where the customer will be re-directed to with the result of the transaction.
                    example: https://example.com/callback
                    type: string
                  status:
                    description: The status of the transaction
                    enum:
                      - AWAITING_AUTHORISATION
                      - AUTHORISED
                      - AWAITING_MULTI_AUTHORISATION
                      - NOT_AUTHORISED
                      - PAID
                      - REJECTED
                      - ACCEPTED
                      - RECEIVED
                    type: string
                  transactionType:
                    description: The type of payment request payment
                    enum:
                      - REFUND_REQUEST
                      - PAYMENT
                    type: string
                  type:
                    description: The type of Fire Open Payment that was created
                    enum:
                      - OTHER
                    type: string
                  webhookUrl:
                    description: A URL to be called in the background with the details of the payment after the payment is complete
                    example: https://example.com/webhook
                    type: string
                title: PaymentRequest
                type: object
          description: The Payment Request details object
      summary: Get Payment Details
      tags:
        - Open Banking
  "/user/{userId}":
    get:
      description: You can retrieve the details of a specific fire.com user
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            description: Lists a specific User
            example: 14059
            type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/paths/~1users/get/responses/200/content/application~1json/schema/items"
          description: Unique information about a User.
      summary: Returns details of a specific fire.com user.
      tags:
        - Users
  /users:
    get:
      description: You can retrieve the details of all fire.com users on your acount.
      operationId: getUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    emailAddress:
                      description: email address for user
                      example: user@example.com
                      type: string
                    firstName:
                      description: User first name
                      example: Colm
                      type: string
                    id:
                      description: The User ID for this User
                      example: 14059
                      format: int64
                      type: integer
                    lastName:
                      description: User second name
                      example: User
                      type: string
                    lastlogin:
                      description: Timestamp on when user last logged in.
                      example: 2012-01-20T11:21:35.000Z
                      type: string
                    mobileApplicationDetails:
                      properties:
                        OS:
                          description: Operating system of device.
                          enum:
                            - Android
                            - IOS
                            - OTHER
                          type: string
                        businessUserId:
                          description: Business user ID
                          example: "14059"
                          format: int64
                          type: integer
                        clientID:
                          description: Client ID of user.
                          example: EBB10F29-A653-4DBA-9C8C-BA79F72F78B0
                          type: string
                        deviceName:
                          description: type of device.
                          enum:
                            - iPhone
                            - Android
                            - Other
                          type: string
                        deviceOSVersion:
                          description: OS version for device.
                          example: "14.4"
                          type: string
                        mobileApplicationId:
                          description: Mobile application id for user.
                          example: "18967"
                          format: int64
                          type: integer
                        status:
                          description: Status of user
                          enum:
                            - LIVE
                            - CLOSED
                            - LOCKED
                            - SMS_SENT
                          type: string
                      title: MobileApplication
                      type: object
                    mobileNumber:
                      description: User mobile number
                      example: "+353871234567"
                      type: string
                    role:
                      description: User role
                      enum:
                        - ADMIN
                        - FULL_USER
                        - READ_ONLY
                        - CARD_ONLY
                      type: string
                    status:
                      description: Status of user
                      enum:
                        - LIVE
                        - CLOSED
                        - FROZEN
                        - INVITE_SENT
                        - SMS_CODE_SENT
                      type: string
                    userCvl:
                      description: Users Cvl type ID (shows up when status is LIVE)
                      example: FULL
                      type: string
                  title: User
                  type: object
                type: array
          description: List of all Users.
      summary: Returns list of all users on your fire.com account
      tags:
        - Users
components:
  parameters:
    limitParam:
      description: The number of records to return. Defaults to 10 - max is 200.
      in: query
      name: limit
      required: false
      schema:
        default: 10
        maximum: 200
        type: integer
    offsetParam:
      description: The page offset. Defaults to 0. This is the record number that the returned list will start at. E.g. `offset = 40` and `limit = 20` will return records 40 to 59.
      in: query
      name: offset
      required: false
      schema:
        default: 0
        type: integer
    orderByParam:
      description: Currently defaults to `DATE` No other options at this time.
      in: query
      name: orderBy
      required: false
      schema:
        enum:
          - DATE
    orderParam:
      description: Either `ASC` or `DESC`
      in: query
      name: order
      required: false
      schema:
        enum:
          - ASC
          - DESC
  responses:
    UnauthorisedError:
      description: Access Token is Invalid or missing
  securitySchemes:
    bearerAuth:
      bearerFormat: API Access Token
      scheme: bearer
      type: http
