openapi: 3.0.0
servers:
  - url: http://gambitcomm.local
  - description: Gambit Communications MIMIC simulator REST API
    url: http://127.0.0.1
info:
  contact:
    email: support@gambitcomm.com
  description: This is the API for MIMIC client to connect to MIMIC daemon.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.gambitcomm.com/terms/
  title: MIMIC REST API
  version: "21.00"
  x-apisguru-categories:
    - iot
  x-logo:
    url: https://www.gambitcomm.com/site/images/logo.png
  x-origin:
    - format: openapi
      url: https://www.gambitcomm.com/docs/mimic.yaml
      version: "3.0"
  x-providerName: gambitcomm.local
  x-serviceName: mimic
externalDocs:
  description: Find out more about Gambit
  url: https://www.gambitcomm.com/site/about.php
security:
  - basicAuth: []
paths:
  "/mimic/access/add/{user}/{agents}/{mask}":
    post:
      description: Adds/Overwrites the user entry in the access control database.
      operationId: access_add
      parameters:
        - description: Username of the simulator hosting system
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: Agent range in minimal range representation
          in: path
          name: agents
          required: true
          schema:
            type: string
        - description: Currently not used
          in: path
          name: mask
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds/Overwrites the user entry in the access control database.
      tags:
        - Access
  "/mimic/access/del/{user}":
    delete:
      description: Using '*' for user clears all the users.
      operationId: access_del
      parameters:
        - description: username of the simulator hosting system
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears a users entry from access control database.
      tags:
        - Access
  /mimic/access/get/acldb:
    get:
      description: If nothing is specified then this returns "".
      operationId: access_get_acldb
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current access control database in use.
      tags:
        - Access
  /mimic/access/get/admindir:
    get:
      description: If nothing is specified in admin/settings.cfg then returns "". If no admin directory is specified then the shared area will be used where needed (e.g. for persistent info, access control data files etc. )
      operationId: access_get_admindir
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current admin directory.
      tags:
        - Access
  /mimic/access/get/adminuser:
    get:
      description: If nothing is specified in admin/settings.cfg then returns "".
      operationId: access_get_adminuser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current administrator.
      tags:
        - Access
  /mimic/access/get/enabled:
    get:
      description: 0 indicates that it is disabled, 1 indicates it is enabled.
      operationId: access_get_enabled
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the state of access control checking.
      tags:
        - Access
  /mimic/access/list:
    get:
      description: Each entry consists of user, agents (in minimal range representation) and access mask (not used currently).
      operationId: access_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AccessEntry"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns an array of entries.
      tags:
        - Access
  "/mimic/access/load/{filename}":
    put:
      description: If filename is not specified then the currently set 'acldb' parameter is used.
      operationId: access_load
      parameters:
        - description: Filename to load
          in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Loads the specified file for access control data.
      tags:
        - Access
  "/mimic/access/save/{filename}":
    put:
      description: If filename is not specified then the currently set 'acldb' parameter is used.
      operationId: access_save
      parameters:
        - description: Filename to save
          in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current access control data in specified file.
      tags:
        - Access
  "/mimic/access/set/acldb/{databaseName}":
    put:
      description: This will be used for subsequent load and save operations.
      operationId: access_set_acldb
      parameters:
        - description: Database name to use
          in: path
          name: databaseName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Allows setting the name of the current access control database.
      tags:
        - Access
  "/mimic/access/set/enabled/{enabledOrNot}":
    put:
      description: 0 indicates disabled, 1 indicates enabled.
      operationId: access_set_enabled
      parameters:
        - description: indicator
          in: path
          name: enabledOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Allows the user to enable/disable the access control check.
      tags:
        - Access
  "/mimic/agent/{agentNum}/add/{IP}":
    post:
      description: Add an agent.
      operationId: new
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Primary IP
          in: path
          name: IP
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: Triplet array
              items:
                $ref: "#/components/schemas/Triplet"
              type: array
        description: Created agent object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add an agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/from/add/{IP}/{port}":
    post:
      description: An empty ipaddress or 0.0.0.0 both imply any address. Similarly an empty port or 0 both imply any port. For agents with source-address-indexing enabled, messages which do not match any source address will be discarded with an ERROR message, similar to community string mismatches.
      operationId: from_add
      parameters:
        - description: Agent to add the IP source
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP of the port, 0.0.0.0 for any
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: port of the source, 0 for any
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a source address that the agent will accept messages from.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/from/delete/{IP}/{port}":
    delete:
      description: An empty ipaddress or 0.0.0.0 both imply any address. Similarly an empty port or 0 both imply any port. For agents with source-address-indexing enabled, messages which do not match any source address will be discarded with an ERROR message, similar to community string mismatches.
      operationId: from_del
      parameters:
        - description: Agent to delete the IP source
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP of the source
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: port of the source
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: delete a source address that the agent will accept messages from.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/from/list":
    get:
      description: This in effect implements source-address-indexing, where 2 agents with the same address can be configured, each accepting messages from different management stations.
      operationId: from_list
      parameters:
        - description: Agent to show the IP sources
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IPSource"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the source addresses that the agent will accept messages from.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/changed":
    get:
      description: has the agent value space changed?
      operationId: get_changed
      parameters:
        - description: Agent to return the indicator
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: has the agent value space changed?
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/config_changed":
    get:
      description: has the lab configuration changed?
      operationId: get_config_changed
      parameters:
        - description: Agent to return the indicator
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: has the lab configuration changed?
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/delay":
    get:
      description: The minimum granularity is 10 msec.
      operationId: get_delay
      parameters:
        - description: Agent to return the delay time
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/start"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: one-way transit delay in msec.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/drops":
    get:
      description: drop rate (every N-th PDU). 0 means no drops.
      operationId: get_drops
      parameters:
        - description: Agent to return the drop rate
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: drop rate (every N-th PDU). 0 means no drops.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/host":
    get:
      description: Currently, only IPv4 addresses are allowed as the main address of the agent, but both IPv4 and IPv6 addresses are allowed as IP aliases for the agent.
      operationId: get_host
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: string
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/value/get/{object}/{instance}/{variable}"
              parameters:
                agentNum: $request.body#/agentNum
                instance: $response.body#
                object: ipAdEntIfIndex
                variable: v
        "400":
          description: Invalid agent number value
      summary: host address of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/inform_timeout":
    get:
      description: The agent will retransmit INFORM PDUs at this interval until it has received a reply from the manager.
      operationId: get_inform_timeout
      parameters:
        - description: Agent to return the timeout setting
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: timeout in seconds for retransmitting INFORM PDUs.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/interface":
    get:
      description: network interface card for the agent.
      operationId: get_interface
      parameters:
        - description: Agent to return the primary interface
          in: path
          name: agentNum
          required: true
          schema:
            format: string
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/mask"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: network interface card for the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/mask":
    get:
      description: subnet mask of the agent.
      operationId: get_mask
      parameters:
        - description: Agent to return the primary interface
          in: path
          name: agentNum
          required: true
          schema:
            format: string
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/port"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: subnet mask of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/mibs":
    get:
      description: set of MIBs, simulations and scenarios
      operationId: get_mibs
      parameters:
        - description: Agent to return the MIB triplets
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Triplet"
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/sim"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: set of MIBs, simulations and scenarios
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/num_starts":
    get:
      description: This count is incremented each time an agent starts. It affects the SNMPv3 EngineBoots parameter.
      operationId: get_number_starts
      parameters:
        - description: Agent to return the count
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: number of starts for the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/oiddir":
    get:
      description: MIB directory of the agent.
      operationId: get_oiddir
      parameters:
        - description: Agent to return the directory path
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: MIB directory of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/owner":
    get:
      description: owner of the agent.
      operationId: get_owner
      parameters:
        - description: Agent to return the owner
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: owner of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/pdusize":
    get:
      description: The limit for this configurable is 65536.
      operationId: get_pdusize
      parameters:
        - description: Agent to return the PDU size
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: maximum PDU size.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/port":
    get:
      description: port number
      operationId: get_port
      parameters:
        - description: Agent to return the primary SNMP port
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/protocol"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: port number
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/privdir":
    get:
      description: private directory of the agent.
      operationId: get_privdir
      parameters:
        - description: Agent to return the directory path
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: private directory of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/protocol":
    get:
      description: protocols supported by agent as an array of strings
      operationId: get_protocols
      parameters:
        - description: Agent to return the protocols arrary
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/protocol/{prot}/get/config"
              parameters:
                agentNum: $request.body#/agentNum
                prot: $response.body#
        "400":
          description: Invalid agent number value
      summary: protocols supported by agent
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/read":
    get:
      description: read community string
      operationId: get_read_community
      parameters:
        - description: Agent to return the SNMP read community string
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/write"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: read community string
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/scen":
    get:
      description: first scenario name
      operationId: get_scen
      parameters:
        - description: Agent to return the first scenario number
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: first scenario name
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/sim":
    get:
      description: first simulation name
      operationId: get_sim
      parameters:
        - description: Agent to return the first simulation name
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/scen"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: first simulation name
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/start":
    get:
      description: relative start time
      operationId: get_starttime
      parameters:
        - description: Agent to return the relative start time
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/mibs"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: relative start time
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/state":
    get:
      description: 0-Unknown 1-Running 2-Stopped 3-Halted 4-Paused 5-Deleted 6-Stopping
      operationId: get_agent_state
      parameters:
        - description: Agent to return the state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: current running state of the agent
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/state_changed":
    get:
      description: has the agent state changed?
      operationId: get_state_changed
      parameters:
        - description: Agent to return the indicator
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: has the agent state changed?
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/statistics":
    get:
      description: The statistics are returned as 64-bit decimal numbers for the following statistics, total, discarded, error, GET, GETNEXT, SET, GETBULK, trap, GET variables, GETNEXT variables, SET variables, GETBULK variables, INFORM sent, INFORM re-sent, INFORM timed out, INFORM acked, INFORM REPORT
      operationId: get_statistics
      parameters:
        - description: Agent to return the statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: current statistics of the agent instance
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/trace":
    get:
      description: SNMP PDU tracing
      operationId: get_trace
      parameters:
        - description: Agent to return the indicator
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP PDU tracing
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/validate":
    get:
      description: Is a bitmask in which with the following bits (from LSB) check for type, length, range, access
      operationId: get_validate
      parameters:
        - description: Agent to return the bitmask integer
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP SET validation policy.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/get/write":
    get:
      description: write community string
      operationId: get_write_community
      parameters:
        - description: Agent to return the SNMP write community string
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/delay"
              parameters:
                agentNum: $request.body#/agentNum
        "400":
          description: Invalid agent number value
      summary: write community string
      tags:
        - Agent
  "/mimic/agent/{agentNum}/halt":
    put:
      description: Halt the current agent.
      operationId: halt
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Halt the current agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/ipalias/add/{IP}/{port}/{mask}/{interface}":
    post:
      description: port defaults to 161 if not specified. mask defaults to the class-based network mask for the address. interface defaults to the default network interface.  If port is set to 0, the system will automatically select a port number. This is useful for client-mode protocols, such as TFTP or TOD. Upon start of an IP alias with a 0 (auto-assigned) port number, its port will change to contain the value of the selected system port.
      operationId: add_ipalias
      parameters:
        - description: Agent to add the IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP address , IPv4 or IPv6
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: SNMP port , 0 or empty for default
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
        - description: Netmask, empty for default
          in: path
          name: mask
          required: true
          schema:
            type: string
        - description: Interface. Empty for default
          in: path
          name: interface
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new ipalias for the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/ipalias/delete/{IP}/{port}":
    delete:
      description: port defaults to 161 if not specified.
      operationId: del_ipalias
      parameters:
        - description: Agent to delete the IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP address , IPv4 or IPv6
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: SNMP port , 0 or empty for default
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes an existing ipalias from the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/ipalias/list":
    get:
      description: The agent host address (set with mimic agent set host) is not in this list, since it is already accessible separately with mimic agent get host.
      operationId: list_ipaliases
      parameters:
        - description: Agent to show the IP alias list
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IPAlias"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Lists all the additional ipaliases configured for the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/ipalias/start/{IP}/{port}":
    put:
      description: port defaults to 161 if not specified.
      operationId: start_ipalias
      parameters:
        - description: Agent to start the IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP address , IPv4 or IPv6
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: SNMP port , 0 or empty for default
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Starts an existing ipalias for the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/ipalias/status/{IP}/{port}":
    get:
      description: port defaults to 161 if not specified.
      operationId: status_ipalias
      parameters:
        - description: Agent to show status of the IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP address , IPv4 or IPv6
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: SNMP port , 0 or empty for default
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the status (0=down, 1=up) of an existing ipalias for the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/ipalias/stop/{IP}/{port}":
    put:
      description: port defaults to 161 if not specified.
      operationId: stop_ipalias
      parameters:
        - description: Agent to stop the IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP address , IPv4 or IPv6
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: SNMP port , 0 or empty for default
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stops an existing ipalias for the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/pause":
    put:
      description: Pause the current agent.
      operationId: pause_now
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Pause the current agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/protocol/msg/coap/get/args":
    get:
      description: Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_coap_get_args
      parameters:
        - description: Agent to show the COAP argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP argument structure
      tags:
        - COAP
  "/mimic/agent/{agentNum}/protocol/msg/coap/get/config":
    get:
      description: Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_coap_get_config
      parameters:
        - description: Agent to show the COAP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigCOAP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP configuration
      tags:
        - COAP
  "/mimic/agent/{agentNum}/protocol/msg/coap/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_coap_get_statistics
      parameters:
        - description: Agent to show COAP statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP statistics
      tags:
        - COAP
  "/mimic/agent/{agentNum}/protocol/msg/coap/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_coap_get_trace
      parameters:
        - description: Agent to show whether COAP tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigCOAP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's COAP traffic tracing
      tags:
        - COAP
  "/mimic/agent/{agentNum}/protocol/msg/coap/set/config/{argument}/{value}":
    put:
      description: Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_coap_set_config
      parameters:
        - description: Agent to set the COAP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the COAP configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the COAP configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's COAP configuration
      tags:
        - COAP
  "/mimic/agent/{agentNum}/protocol/msg/coap/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_coap_set_trace
      parameters:
        - description: Agent to set the COAP tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the COAP tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's COAP traffic tracing
      tags:
        - COAP
  "/mimic/agent/{agentNum}/protocol/msg/dhcp/get/args":
    get:
      description: Agent's DHCP configuration particulars
      operationId: protocol_dhcp_get_args
      parameters:
        - description: Agent to show the DHCP argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP argument structure
      tags:
        - DHCP
  "/mimic/agent/{agentNum}/protocol/msg/dhcp/get/config":
    get:
      description: Agent's DHCP configuration hwaddr,classid,add_options,script
      operationId: protocol_dhcp_get_config
      parameters:
        - description: Agent to show the DHCP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigDHCP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP configuration
      tags:
        - DHCP
  "/mimic/agent/{agentNum}/protocol/msg/dhcp/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_dhcp_get_statistics
      parameters:
        - description: Agent to show DHCP statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP statistics
      tags:
        - DHCP
  "/mimic/agent/{agentNum}/protocol/msg/dhcp/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_dhcp_get_trace
      parameters:
        - description: Agent to show whether DHCP tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigDHCP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's DHCP traffic tracing
      tags:
        - DHCP
  "/mimic/agent/{agentNum}/protocol/msg/dhcp/params":
    get:
      description: DHCP-OFFER message parameters
      operationId: protocol_dhcp_params
      parameters:
        - description: Agent to show DHCP DHCP-OFFER message
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the parameters configured by the server in its DHCP-OFFER message
      tags:
        - DHCP
  "/mimic/agent/{agentNum}/protocol/msg/dhcp/set/config/{argument}/{value}":
    put:
      description: Agent's DHCP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_dhcp_set_config
      parameters:
        - description: Agent to set the DHCP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the DHCP configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the DHCP configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's DHCP configuration
      tags:
        - DHCP
  "/mimic/agent/{agentNum}/protocol/msg/dhcp/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_dhcp_set_trace
      parameters:
        - description: Agent to set the DHCP tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the DHCP tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's DHCP traffic tracing
      tags:
        - DHCP
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/get/args":
    get:
      description: Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_ipmi_get_args
      parameters:
        - description: Agent to show the IPMI argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI argument structure
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/get/config":
    get:
      description: Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_ipmi_get_config
      parameters:
        - description: Agent to show the IPMI configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigIPMI"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI configuration
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_ipmi_get_statistics
      parameters:
        - description: Agent to show IPMI statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI statistics
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_ipmi_get_trace
      parameters:
        - description: Agent to show whether IPMI tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigIPMI"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's IPMI traffic tracing
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/get/{attr}":
    get:
      description: Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq , field_N
      operationId: protocol_ipmi_get_attr
      parameters:
        - description: Agent to set the IPMI tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the outgoing message's attributes
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/set/config/{argument}/{value}":
    put:
      description: Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_ipmi_set_config
      parameters:
        - description: Agent to set the IPMI configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the IPMI configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the IPMI configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's IPMI configuration
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_ipmi_set_trace
      parameters:
        - description: Agent to set the IPMI tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the IPMI tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's IPMI traffic tracing
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/ipmi/set/{attr}/{value}":
    put:
      description: Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq , field_N
      operationId: protocol_ipmi_set_attr
      parameters:
        - description: Agent to set the IPMI tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
        - in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the outgoing message's attributes
      tags:
        - IPMI
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/get/protstate":
    get:
      description: 0 - stopped, 2 - disconnected, 3 - connecting, 4 - connected, 5 - waiting for CONNACK, 6 - waiting for SUBACK, 7 - CONNACK received, in steady state
      operationId: protocol_mqtt_client_get_protstate
      parameters:
        - description: Agent to show MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT TCP connection state
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/get/state":
    get:
      description: 0 means stopped, 1 means running
      operationId: protocol_mqtt_client_get_state
      parameters:
        - description: Agent to show MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT state
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/card":
    get:
      description: 0 or more
      operationId: protocol_mqtt_client_message_card
      parameters:
        - description: Agent to show MQTT message state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's current messages' cardinality
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/get/{msgNum}/{attr}":
    get:
      description: Attribute can be topic, interval, count, sent , pre, post, properties(list of PUBLISH properties), properties.i (i-th PUBLISH property), properties.PROP-NAME (PUBLISH property with name PROP-NAME)
      operationId: protocol_mqtt_client_message_get
      parameters:
        - description: Agent to show MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Message Number
          in: path
          name: msgNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's message attributes
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/set/{msgNum}/{attr}/{value}":
    put:
      description: Attribute can not be sent or properties . Use set/{msgNum}/count/{value} together with get/{msgNum}/count to throttle the outgoing MQTT message to the broker.
      operationId: protocol_mqtt_client_message_set
      parameters:
        - description: Agent to show MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Message Number
          in: path
          name: msgNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
        - description: Value
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's message attributes
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/resubscribe/{subNum}":
    put:
      description: Restarts a subscription
      operationId: protocol_mqtt_client_resubscribe
      parameters:
        - description: Agent to change MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Subscription Number
          in: path
          name: subNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Restart receiving messages from a subcription of the agent
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/abort":
    put:
      description: Abort a connection
      operationId: protocol_mqtt_client_runtime_abort
      parameters:
        - description: Agent to set MQTT behavior
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Abort agent's MQTT TCP session without sending DISCONNECT command
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/connect":
    put:
      description: Start a connection
      operationId: protocol_mqtt_client_runtime_connect
      parameters:
        - description: Agent to set MQTT behavior
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start agent's MQTT TCP session
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/disconnect":
    put:
      description: Graceful disconnect
      operationId: protocol_mqtt_client_runtime_disconnect
      parameters:
        - description: Agent to set MQTT behavior
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disconnect agent's MQTT TCP session by sending DISCONNECT command
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/broker/{brokerAddr}":
    put:
      description: Broker IP address
      operationId: protocol_mqtt_client_set_broker
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Broker address
          in: path
          name: brokerAddr
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT TCP connection target broker
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/cleansession/{cleanOrNot}":
    put:
      description: 1 for clean session , 0 not
      operationId: protocol_mqtt_client_set_cleansession
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Clean session
          in: path
          name: cleanOrNot
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT session
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/clientid/{clientID}":
    put:
      description: MQTT client ID
      operationId: protocol_mqtt_client_set_clientid
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Client ID
          in: path
          name: clientID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client ID
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/keepalive/{aliveTime}":
    put:
      description: Keep alive the TCP connection
      operationId: protocol_mqtt_client_set_keepalive
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: period to send keepalive messages
          in: path
          name: aliveTime
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT TCP keepalive
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/on_disconnect/{action}":
    put:
      description: Action to take when MQTT session is disconnected
      operationId: protocol_mqtt_client_set_on_disconnect
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Action to take
          in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT disconnection action
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/password/{password}":
    put:
      description: Client password
      operationId: protocol_mqtt_client_set_password
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Password
          in: path
          name: password
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client password
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/port/{port}":
    put:
      description: target TCP port
      operationId: protocol_mqtt_client_set_port
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: TCP port
          in: path
          name: port
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT TCP connection target port
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/username/{username}":
    put:
      description: Client username
      operationId: protocol_mqtt_client_set_username
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: User name
          in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client username
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willmsg/{msg}":
    put:
      description: Will message
      operationId: protocol_mqtt_client_set_willmsg
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Will message
          in: path
          name: msg
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client's will
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willqos/{qos}":
    put:
      description: QOS field
      operationId: protocol_mqtt_client_set_willqos
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Quality of service field
          in: path
          name: qos
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT will message's QOS field
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willretain/{retain}":
    put:
      description: Retaining will
      operationId: protocol_mqtt_client_set_willretain
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Retaining will
          in: path
          name: retain
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT retained will
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willtopic/{topic}":
    put:
      description: Will topic for the will message
      operationId: protocol_mqtt_client_set_willtopic
      parameters:
        - description: Agent to set MQTT config
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: topic
          in: path
          name: topic
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT client will's topic
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/card":
    get:
      description: 0 or more
      operationId: protocol_mqtt_client_subscribe_card
      parameters:
        - description: Agent to show MQTT subscription state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's current subscriptions' cardinality
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/get/{subNum}/{attr}":
    get:
      description: Attribute can be topic, properties(list of SUBSCRIBE properties), properties.i (i-th SUBSCRIBE property), properties.PROP-NAME (SUBSCRIBE property with name PROP-NAME)
      operationId: protocol_mqtt_client_subscribe_get
      parameters:
        - description: Agent to show MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Subscribe Number
          in: path
          name: subNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's subscription attributes
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/set/{subNum}/{attr}/{value}":
    put:
      description: Attribute can not be properties .
      operationId: protocol_mqtt_client_subscribe_set
      parameters:
        - description: Agent to show MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Subscribe Number
          in: path
          name: subNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
        - description: Value
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's subscribe attributes
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/client/unsubscribe/{subNum}":
    put:
      description: Stops a subscription
      operationId: protocol_mqtt_client_unsubscribe
      parameters:
        - description: Agent to change MQTT state
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Subscription Number
          in: path
          name: subNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stops receiving messages from a subcription of the agent
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/get/args":
    get:
      description: Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_mqtt_get_args
      parameters:
        - description: Agent to show the MQTT argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT argument structure
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/get/config":
    get:
      description: Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_mqtt_get_config
      parameters:
        - description: Agent to show the MQTT configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigMQTT"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT configuration
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_mqtt_get_statistics
      parameters:
        - description: Agent to show MQTT statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT statistics
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_mqtt_get_trace
      parameters:
        - description: Agent to show whether MQTT tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigMQTT"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's MQTT traffic tracing
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/set/config/{argument}/{value}":
    put:
      description: Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_mqtt_set_config
      parameters:
        - description: Agent to set the MQTT configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the MQTT configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the MQTT configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT configuration
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/mqtt/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_mqtt_set_trace
      parameters:
        - description: Agent to set the MQTT tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the MQTT tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's MQTT traffic tracing
      tags:
        - MQTT
  "/mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/dfs_interval/{interval}":
    put:
      description: Interval in msec .
      operationId: protocol_netflow_change_dfs
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: NETFLOW export interval
          in: path
          name: interval
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Change NETFLOW data export interval
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/tfs_interval/{interval}":
    put:
      description: Interval in msec .
      operationId: protocol_netflow_change_tfs
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: NETFLOW export interval
          in: path
          name: interval
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Change NETFLOW template export interval
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/{flowset-uid}/{field-num}/{attr}/{value}":
    put:
      description: Change attributes
      operationId: protocol_netflow_change_attr
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: flowset-uid
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: field-num
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: attr
          required: true
          schema:
            type: string
        - in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Change NETFLOW export attributes
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/flow/list":
    get:
      description: Show list of NETFLOW exports
      operationId: protocol_netflow_list
      parameters:
        - description: Agent to show NETFLOW statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show list of NETFLOW exports
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/get/args":
    get:
      description: Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_netflow_get_args
      parameters:
        - description: Agent to show the NETFLOW argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW argument structure
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/get/config":
    get:
      description: Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_netflow_get_config
      parameters:
        - description: Agent to show the NETFLOW configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigNETFLOW"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW configuration
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_netflow_get_statistics
      parameters:
        - description: Agent to show NETFLOW statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW statistics
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_netflow_get_trace
      parameters:
        - description: Agent to show whether NETFLOW tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigNETFLOW"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's NETFLOW traffic tracing
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/halt":
    put:
      description: Halt NETFLOW traffic
      operationId: protocol_netflow_halt
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Halt NETFLOW traffic
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/reload":
    put:
      description: Reload NETFLOW configuration before resuming traffic
      operationId: protocol_netflow_reload
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Reload NETFLOW configuration before resuming traffic
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/resume":
    put:
      description: Resuming traffic
      operationId: protocol_netflow_resume
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Resuming traffic
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/set/collector/{collectorIP}":
    put:
      description: Allow changing collector without stopping agent
      operationId: protocol_netflow_set_collector
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: file name to load config
          in: path
          name: collectorIP
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Swap NETFLOW collector
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/set/config/{argument}/{value}":
    put:
      description: Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_netflow_set_config
      parameters:
        - description: Agent to set the NETFLOW configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the NETFLOW configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the NETFLOW configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's NETFLOW configuration
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/set/filename/{fileName}":
    put:
      description: Allow reloading the configuration file for an agent without stopping agent
      operationId: protocol_netflow_set_fileName
      parameters:
        - description: Agent to set the NETFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: file name to load config
          in: path
          name: fileName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Swap NETFLOW configuration file
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/netflow/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_netflow_set_trace
      parameters:
        - description: Agent to set the NETFLOW tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the NETFLOW tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's NETFLOW traffic tracing
      tags:
        - NETFLOW
  "/mimic/agent/{agentNum}/protocol/msg/proxy/get/args":
    get:
      description: Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_proxy_get_args
      parameters:
        - description: Agent to show the PROXY argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY argument structure
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/get/config":
    get:
      description: Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_proxy_get_config
      parameters:
        - description: Agent to show the PROXY configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigPROXY"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY configuration
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_proxy_get_statistics
      parameters:
        - description: Agent to show PROXY statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY statistics
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_proxy_get_trace
      parameters:
        - description: Agent to show whether PROXY tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigPROXY"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's PROXY traffic tracing
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/port/add/{port}/{target}/{targetPort}":
    post:
      description: Additional proxy target
      operationId: protocol_proxy_port_add
      parameters:
        - description: Agent to manipulate PROXY target
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: target
          required: true
          schema:
            type: string
        - in: path
          name: targetPort
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add individual proxy target on the agent and the simulator host
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/port/isStarted/{port}":
    get:
      description: Check individual target
      operationId: protocol_proxy_port_isstarted
      parameters:
        - description: Agent to manipulate PROXY target
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual target
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/port/list":
    get:
      operationId: protocol_proxy_port_list
      parameters:
        - description: Agent to manipulate PROXY target
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all proxy targets
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/port/remove/{port}":
    delete:
      description: Remove proxy target
      operationId: protocol_proxy_port_remove
      parameters:
        - description: Agent to manipulate PROXY target
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove individual proxy target on the agent and the simulator host
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/port/start/{port}":
    put:
      description: Start additional target
      operationId: protocol_proxy_port_start
      parameters:
        - description: Agent to manipulate PROXY target
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start additional target
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/port/stop/{port}":
    put:
      description: Stop additional target
      operationId: protocol_proxy_port_stop
      parameters:
        - description: Agent to manipulate PROXY target
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stop additional target
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/set/config/{argument}/{value}":
    put:
      description: Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_proxy_set_config
      parameters:
        - description: Agent to set the PROXY configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the PROXY configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the PROXY configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's PROXY configuration
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/proxy/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_proxy_set_trace
      parameters:
        - description: Agent to set the PROXY tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the PROXY tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's PROXY traffic tracing
      tags:
        - PROXY
  "/mimic/agent/{agentNum}/protocol/msg/sflow/get/args":
    get:
      description: Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_sflow_get_args
      parameters:
        - description: Agent to show the SFLOW argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW argument structure
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/get/config":
    get:
      description: Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_sflow_get_config
      parameters:
        - description: Agent to show the SFLOW configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSFLOW"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW configuration
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_sflow_get_statistics
      parameters:
        - description: Agent to show SFLOW statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW statistics
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_sflow_get_trace
      parameters:
        - description: Agent to show whether SFLOW tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSFLOW"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SFLOW traffic tracing
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/halt":
    put:
      description: Halt SFLOW traffic
      operationId: protocol_sflow_halt
      parameters:
        - description: Agent to set the SFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Halt SFLOW traffic
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/reload":
    put:
      description: Reload SFLOW configuration before resuming traffic
      operationId: protocol_sflow_reload
      parameters:
        - description: Agent to set the SFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Reload SFLOW configuration before resuming traffic
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/resume":
    put:
      description: Resuming traffic
      operationId: protocol_sflow_resume
      parameters:
        - description: Agent to set the SFLOW
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Resuming traffic
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/set/config/{argument}/{value}":
    put:
      description: Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_sflow_set_config
      parameters:
        - description: Agent to set the SFLOW configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the SFLOW configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the SFLOW configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SFLOW configuration
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/sflow/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_sflow_set_trace
      parameters:
        - description: Agent to set the SFLOW tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the SFLOW tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SFLOW traffic tracing
      tags:
        - SFLOW
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/args":
    get:
      description: Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_snmptcp_get_args
      parameters:
        - description: Agent to show the SNMPTCP argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP argument structure
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/config":
    get:
      description: Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_snmptcp_get_config
      parameters:
        - description: Agent to show the SNMPTCP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSNMPTCP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP configuration
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_snmptcp_get_statistics
      parameters:
        - description: Agent to show SNMPTCP statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP statistics
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_snmptcp_get_trace
      parameters:
        - description: Agent to show whether SNMPTCP tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSNMPTCP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SNMPTCP traffic tracing
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/disable/{ipaddress}/{port}":
    put:
      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_snmptcp_ipalias_disable
      parameters:
        - description: Agent to manipulate SNMPTCP IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disable individual IP aliases on the agent and the simulator host
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/enable/{ipaddress}/{port}":
    put:
      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_snmptcp_ipalias_enable
      parameters:
        - description: Agent to manipulate SNMPTCP IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Enable individual IP aliases on the agent and the simulator host
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/isenabled/{ipaddress}/{port}":
    get:
      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_snmptcp_ipalias_isenabled
      parameters:
        - description: Agent to manipulate SNMPTCP IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual IP aliases on the agent and the simulator host
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/list":
    get:
      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_snmptcp_ipalias_list
      parameters:
        - description: Agent to manipulate SNMPTCP IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IPAlias"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all IP aliases on the agent and the simulator host
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/set/config/{argument}/{value}":
    put:
      description: Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_snmptcp_set_config
      parameters:
        - description: Agent to set the SNMPTCP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the SNMPTCP configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the SNMPTCP configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SNMPTCP configuration
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmptcp/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_snmptcp_set_trace
      parameters:
        - description: Agent to set the SNMPTCP tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the SNMPTCP tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SNMPTCP traffic tracing
      tags:
        - SNMPTCP
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/add/{groupName}/{prefix}/{securityModel}/{securityLevel}/{contextMatch}/{readView}/{writeView}/{notifyView}":
    post:
      description: Adds a new access entry with the specified parameters.
      operationId: protocol_snmpv3_access_add
      parameters:
        - description: Agent to add the SNMPv3 access
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 access name
          in: path
          name: groupName
          required: true
          schema:
            type: string
        - description: SNMPv3 prefix
          in: path
          name: prefix
          required: true
          schema:
            type: string
        - description: SNMPv3 access security model
          in: path
          name: securityModel
          required: true
          schema:
            type: string
        - description: SNMPv3 access security level
          in: path
          name: securityLevel
          required: true
          schema:
            type: string
        - description: SNMPv3 access context match
          in: path
          name: contextMatch
          required: true
          schema:
            type: string
        - description: SNMPv3 access read view
          in: path
          name: readView
          required: true
          schema:
            type: string
        - description: SNMPv3 access write view
          in: path
          name: writeView
          required: true
          schema:
            type: string
        - description: SNMPv3 access notify view
          in: path
          name: notifyView
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new access entry with the specified parameters.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/clear":
    delete:
      description: Clears all access entries.
      operationId: protocol_snmpv3_access_clear
      parameters:
        - description: Agent to add the SNMPv3 access
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all access entries.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/del/{accessName}":
    delete:
      description: Deletes the specified access entry.
      operationId: protocol_snmpv3_access_del
      parameters:
        - description: Agent to add the SNMPv3 access
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 access name
          in: path
          name: accessName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified access entry.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/list":
    get:
      description: Returns the current acccess entries as an array of strings.
      operationId: protocol_snmpv3_access_list
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current acccess entries as an array of strings.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/config":
    get:
      description: Returns the SNMPv3 configuration.
      operationId: protocol_snmpv3_get_config
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSNMPv3"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the SNMPv3 configuration.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/context_engineid":
    get:
      description: Retrieves the contextEngineID for the agent instance.
      operationId: protocol_snmpv3_get_context_engineid
      parameters:
        - description: Agent to show the SNMPv3 engine
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieves the contextEngineID for the agent instance.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/engineboots":
    get:
      description: Retrieves the number of times the agent has been restarted.
      operationId: protocol_snmpv3_get_engineboots
      parameters:
        - description: Agent to show the SNMPv3 engine
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieves the number of times the agent has been restarted.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/engineid":
    get:
      description: For stopped agents, this operation is meaningless. If not explicitly set by the user then the autogenerated engineID is returned. The format of the engineID is in the familiar hex format, eg. \x01 23 45 67 89...
      operationId: protocol_snmpv3_get_engineid
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: For started agents, retrieves the current engineID in use by the snmpv3 module.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/enginetime":
    get:
      description: Retrieves the time in seconds for which the agent has been running.
      operationId: protocol_snmpv3_get_enginetime
      parameters:
        - description: Agent to show the SNMPv3 engine
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieves the time in seconds for which the agent has been running.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/add/{groupName}/{securityModel}/{securityName}":
    post:
      description: Adds a new group entry with the specified parameters.
      operationId: protocol_snmpv3_group_add
      parameters:
        - description: Agent to add the SNMPv3 group
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 group name
          in: path
          name: groupName
          required: true
          schema:
            type: string
        - description: SNMPv3 group security model
          in: path
          name: securityModel
          required: true
          schema:
            type: string
        - description: SNMPv3 group security name
          in: path
          name: securityName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new group entry with the specified parameters.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/clear":
    delete:
      description: Clears all group entries.
      operationId: protocol_snmpv3_group_clear
      parameters:
        - description: Agent to add the SNMPv3 group
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all group entries.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/del/{groupName}":
    delete:
      description: Deletes the specified group entry.
      operationId: protocol_snmpv3_group_del
      parameters:
        - description: Agent to add the SNMPv3 group
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 group name
          in: path
          name: groupName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified group entry.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/list":
    get:
      description: Returns the current group entries as an array of strings.
      operationId: protocol_snmpv3_group_list
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current group entries as an array of strings.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/set/config/{parameter}/{value}":
    put:
      description: Changes the SNMPv3 configuration.
      operationId: protocol_snmpv3_set_config
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 configuration parameter
          in: path
          name: parameter
          required: true
          schema:
            type: string
        - description: SNMPv3 parameter value
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Changes the SNMPv3 configuration.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/add/{userName}/{securityName}/{authProtocol}/{authKey}/{privProtocol}/{privKey}":
    post:
      description: Adds a new user entry with the specified parameters.
      operationId: protocol_snmpv3_user_add
      parameters:
        - description: Agent to add the SNMPv3 user
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 user name
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: SNMPv3 user security name
          in: path
          name: securityName
          required: true
          schema:
            type: string
        - description: SNMPv3 user authentication protocol
          in: path
          name: authProtocol
          required: true
          schema:
            type: string
        - description: SNMPv3 user authentication key
          in: path
          name: authKey
          required: true
          schema:
            type: string
        - description: SNMPv3 user privacy encryption protocol
          in: path
          name: privProtocol
          required: true
          schema:
            type: string
        - description: SNMPv3 user privacy encryption key
          in: path
          name: privKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new user entry with the specified parameters.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/clear":
    delete:
      description: Clears all user entries.
      operationId: protocol_snmpv3_user_clear
      parameters:
        - description: Agent to add the SNMPv3 user
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all user entries.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/del/{userName}":
    delete:
      description: Deletes the specified user entry.
      operationId: protocol_snmpv3_user_del
      parameters:
        - description: Agent to add the SNMPv3 user
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 user name
          in: path
          name: userName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified user entry.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/list":
    get:
      description: Returns the current user entries as a Tcl list.
      operationId: protocol_snmpv3_user_list
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current user entries as a Tcl list.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/usm/save":
    put:
      description: Saves current user settings in the currently loaded USM config file.
      operationId: protocol_snmpv3_usm_save
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current user settings in the currently loaded USM config file.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/usm/saveas/{filename}":
    put:
      description: Saves current user settings in the specified USM config file.
      operationId: protocol_snmpv3_usm_saveas
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Filename to save
          in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current user settings in the specified USM config file.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/vacm/save":
    put:
      description: Saves current group, access, view settings in the currently loaded VACM config file.
      operationId: protocol_snmpv3_vacm_save
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current group, access, view settings in the currently loaded VACM config file.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/vacm/saveas/{filename}":
    put:
      description: Saves current group, access, view settings in the specified VACM config file.
      operationId: protocol_snmpv3_vacm_saveas
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Filename to save
          in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Saves current group, access, view settings in the specified VACM config file.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/add/{viewName}/{viewType}/{subtree}/{mask}":
    post:
      description: Adds a new view entry with the specified parameters.
      operationId: protocol_snmpv3_view_add
      parameters:
        - description: Agent to add the SNMPv3 view
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 view name
          in: path
          name: viewName
          required: true
          schema:
            type: string
        - description: SNMPv3 view type
          in: path
          name: viewType
          required: true
          schema:
            type: string
        - description: SNMPv3 view subtree
          in: path
          name: subtree
          required: true
          schema:
            type: string
        - description: SNMPv3 view mask
          in: path
          name: mask
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Adds a new view entry with the specified parameters.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/clear":
    delete:
      description: Clears all view entries.
      operationId: protocol_snmpv3_view_clear
      parameters:
        - description: Agent to add the SNMPv3 view
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Clears all view entries.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/del/{viewName}":
    delete:
      description: Deletes the specified view entry.
      operationId: protocol_snmpv3_view_del
      parameters:
        - description: Agent to add the SNMPv3 view
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMPv3 view name
          in: path
          name: viewName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes the specified view entry.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/list":
    get:
      description: Returns the current view entries as an array of strings.
      operationId: protocol_snmpv3_view_list
      parameters:
        - description: Agent to show the SNMPv3 configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the current view entries as an array of strings.
      tags:
        - SNMPv3
  "/mimic/agent/{agentNum}/protocol/msg/ssh/get/args":
    get:
      description: Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_ssh_get_args
      parameters:
        - description: Agent to show the SSH argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH argument structure
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/get/config":
    get:
      description: Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_ssh_get_config
      parameters:
        - description: Agent to show the SSH configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSSH"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH configuration
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_ssh_get_statistics
      parameters:
        - description: Agent to show SSH statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH statistics
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_ssh_get_trace
      parameters:
        - description: Agent to show whether SSH tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSSH"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SSH traffic tracing
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/disable/{ipaddress}/{port}":
    put:
      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_ssh_ipalias_disable
      parameters:
        - description: Agent to manipulate SSH IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disable individual IP aliases on the agent and the simulator host
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/enable/{ipaddress}/{port}":
    put:
      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_ssh_ipalias_enable
      parameters:
        - description: Agent to manipulate SSH IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Enable individual IP aliases on the agent and the simulator host
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/isenabled/{ipaddress}/{port}":
    get:
      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_ssh_ipalias_isenabled
      parameters:
        - description: Agent to manipulate SSH IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual IP aliases on the agent and the simulator host
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/list":
    get:
      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_ssh_ipalias_list
      parameters:
        - description: Agent to manipulate SSH IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IPAlias"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all IP aliases on the agent and the simulator host
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/set/config/{argument}/{value}":
    put:
      description: Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_ssh_set_config
      parameters:
        - description: Agent to set the SSH configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the SSH configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the SSH configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SSH configuration
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/ssh/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_ssh_set_trace
      parameters:
        - description: Agent to set the SSH tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the SSH tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SSH traffic tracing
      tags:
        - SSH
  "/mimic/agent/{agentNum}/protocol/msg/syslog/get/args":
    get:
      description: Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_syslog_get_args
      parameters:
        - description: Agent to show the SYSLOG argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG argument structure
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/get/config":
    get:
      description: Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_syslog_get_config
      parameters:
        - description: Agent to show the SYSLOG configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSYSLOG"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG configuration
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_syslog_get_statistics
      parameters:
        - description: Agent to show SYSLOG statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG statistics
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_syslog_get_trace
      parameters:
        - description: Agent to show whether SYSLOG tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigSYSLOG"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's SYSLOG traffic tracing
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/get/{attr}":
    get:
      description: Attribute can be server , sequence , separator , hostname , timestamp
      operationId: protocol_syslog_get_attr
      parameters:
        - description: Agent to set the SYSLOG tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the outgoing message's attributes
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/send/{pri}":
    post:
      description: 1 to enable, 0 to disable
      operationId: protocol_syslog_send
      parameters:
        - description: Agent to set the SYSLOG tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Message Priority
          in: path
          name: pri
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyslogMsg"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SYSLOG traffic tracing
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/set/config/{argument}/{value}":
    put:
      description: Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_syslog_set_config
      parameters:
        - description: Agent to set the SYSLOG configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the SYSLOG configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the SYSLOG configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SYSLOG configuration
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_syslog_set_trace
      parameters:
        - description: Agent to set the SYSLOG tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the SYSLOG tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's SYSLOG traffic tracing
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/syslog/set/{attr}/{value}":
    put:
      description: Attribute can be server , sequence , separator , hostname , timestamp
      operationId: protocol_syslog_set_attr
      parameters:
        - description: Agent to set the SYSLOG tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Attribute
          in: path
          name: attr
          required: true
          schema:
            type: string
        - in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the outgoing message's attributes
      tags:
        - SYSLOG
  "/mimic/agent/{agentNum}/protocol/msg/telnet/connection/logon/{connectionID}/{user}/{password}":
    put:
      description: Logon change allows (hidden) commands for a different access mode to run.
      operationId: protocol_telnet_connection_logon
      parameters:
        - description: Agent to manipulate TELNET connection
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: connectionID
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: user
          required: true
          schema:
            type: string
        - in: path
          name: password
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Changes the connection's current logon.
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/connection/request/{connectionID}/{command}":
    put:
      description: Equivalent of the command typed in by the user.
      operationId: protocol_telnet_connection_request
      parameters:
        - description: Agent to manipulate TELNET connection
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: connectionID
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: command
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Executes the command asynchronously .
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/connection/signal/{connectionID}/{signalName}":
    put:
      description: Signal name is either connect or idle
      operationId: protocol_telnet_connection_signal
      parameters:
        - description: Agent to manipulate TELNET connection
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: connectionID
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: signalName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Triggers the asynchronous signal event with the specified signal name
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/get/args":
    get:
      description: Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_telnet_get_args
      parameters:
        - description: Agent to show the TELNET argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET argument structure
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/get/config":
    get:
      description: Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_telnet_get_config
      parameters:
        - description: Agent to show the TELNET configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigTELNET"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET configuration
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_telnet_get_statistics
      parameters:
        - description: Agent to show TELNET statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET statistics
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_telnet_get_trace
      parameters:
        - description: Agent to show whether TELNET tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigTELNET"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET traffic tracing
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/disable/{ipaddress}/{port}":
    put:
      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_telnet_ipalias_disable
      parameters:
        - description: Agent to manipulate TELNET IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Disable individual IP aliases on the agent and the simulator host
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/enable/{ipaddress}/{port}":
    put:
      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_telnet_ipalias_enable
      parameters:
        - description: Agent to manipulate TELNET IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Enable individual IP aliases on the agent and the simulator host
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/isenabled/{ipaddress}/{port}":
    get:
      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_telnet_ipalias_isenabled
      parameters:
        - description: Agent to manipulate TELNET IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: ipaddress
          required: true
          schema:
            type: string
        - in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check individual IP aliases on the agent and the simulator host
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/list":
    get:
      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent
      operationId: protocol_telnet_ipalias_list
      parameters:
        - description: Agent to manipulate TELNET IP alias
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IPAlias"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List all IP aliases on the agent and the simulator host
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/connections":
    get:
      description: IDs of all connected connections
      operationId: protocol_telnet_server_get_connections
      parameters:
        - description: Agent to show TELNET configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET connections
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/keymap":
    get:
      description: Keymap file name
      operationId: protocol_telnet_server_get_keymap
      parameters:
        - description: Agent to show TELNET statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET keymap file name
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/rulesdb":
    get:
      description: Rules db file name
      operationId: protocol_telnet_server_get_rulesdb
      parameters:
        - description: Agent to show TELNET statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET rules db file name
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/state":
    get:
      description: Return 1 means accepting connections, 0 not
      operationId: protocol_telnet_server_get_state
      parameters:
        - description: Agent to show TELNET statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET server state
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/userdb":
    get:
      description: User db file name
      operationId: protocol_telnet_server_get_userdb
      parameters:
        - description: Agent to show TELNET statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET user db file name
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/users":
    get:
      description: List of users
      operationId: protocol_telnet_server_get_users
      parameters:
        - description: Agent to show TELNET configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TelnetUser"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TELNET users
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/set/config/{argument}/{value}":
    put:
      description: Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_telnet_set_config
      parameters:
        - description: Agent to set the TELNET configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the TELNET configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the TELNET configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TELNET configuration
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/telnet/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_telnet_set_trace
      parameters:
        - description: Agent to set the TELNET tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the TELNET tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TELNET traffic tracing
      tags:
        - TELNET
  "/mimic/agent/{agentNum}/protocol/msg/tftp/get/args":
    get:
      description: Agent's TFTP configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_tftp_get_args
      parameters:
        - description: Agent to show the TFTP argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP argument structure
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/get/config":
    get:
      description: Agent's TFTP configuration
      operationId: protocol_tftp_get_config
      parameters:
        - description: Agent to show the TFTP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigTFTP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP configuration
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_tftp_get_statistics
      parameters:
        - description: Agent to show TFTP statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP statistics
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_tftp_get_trace
      parameters:
        - description: Agent to show whether TFTP tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigTFTP"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TFTP traffic tracing
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/session/read/server/{srcfile}":
    post:
      description: Session ID is returned
      operationId: protocol_tftp_session_read
      parameters:
        - description: Agent to show TFTP statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: File name to retrieve from server
          in: path
          name: srcfile
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Create a read session to download srcfile from server
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/session/write/server/{srcfile}":
    post:
      description: Session ID is returned
      operationId: protocol_tftp_session_write
      parameters:
        - description: Agent to show TFTP statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: File name to upload to server
          in: path
          name: srcfile
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Create a read session to upload srcfile to server
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/set/config/{argument}/{value}":
    put:
      description: Agent's TFTP configuration
      operationId: protocol_tftp_set_config
      parameters:
        - description: Agent to set the TFTP configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the TFTP configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the TFTP configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TFTP configuration
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_tftp_set_trace
      parameters:
        - description: Agent to set the TFTP tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the TFTP tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TFTP traffic tracing
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/get/{parameter}":
    get:
      description: Parameter is server , port , or dstfile
      operationId: protocol_tftp_session_get_parameter
      parameters:
        - description: Agent to show TFTP parameter
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SessionID
          in: path
          name: sessionID
          required: true
          schema:
            type: string
        - description: Parameter to show
          in: path
          name: parameter
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show a parameter of a TFTP sesssion
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/set/{parameter}/{value}":
    put:
      description: Parameter is server , port , or dstfile
      operationId: protocol_tftp_session_set_parameter
      parameters:
        - description: Agent to set TFTP parameter
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SessionID
          in: path
          name: sessionID
          required: true
          schema:
            type: string
        - description: Parameter to set
          in: path
          name: parameter
          required: true
          schema:
            type: string
        - description: Value to set
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set a parameter of a TFTP sesssion
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/start":
    put:
      description: Start uploading or downloading the file
      operationId: protocol_tftp_session_start
      parameters:
        - description: Agent to start TFTP transaction
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SessionID
          in: path
          name: sessionID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start a TFTP sesssion
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/status":
    get:
      description: Status includes running state, bytes transfered, and time elapsed
      operationId: protocol_tftp_session_status
      parameters:
        - description: Agent to show TFTP transaction
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SessionID
          in: path
          name: sessionID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Check a TFTP sesssion's status
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/stop":
    put:
      description: Stop uploading or downloading the file
      operationId: protocol_tftp_session_stop
      parameters:
        - description: Agent to stop TFTP transaction
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SessionID
          in: path
          name: sessionID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stop a TFTP sesssion
      tags:
        - TFTP
  "/mimic/agent/{agentNum}/protocol/msg/tod/get/args":
    get:
      description: Agent's TOD configuration
      operationId: protocol_tod_get_args
      parameters:
        - description: Agent to show the TOD argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD argument structure
      tags:
        - TOD
  "/mimic/agent/{agentNum}/protocol/msg/tod/get/config":
    get:
      description: Agent's TOD configuration
      operationId: protocol_tod_get_config
      parameters:
        - description: Agent to show the TOD configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigTOD"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD configuration
      tags:
        - TOD
  "/mimic/agent/{agentNum}/protocol/msg/tod/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_tod_get_statistics
      parameters:
        - description: Agent to show TOD statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD statistics
      tags:
        - TOD
  "/mimic/agent/{agentNum}/protocol/msg/tod/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_tod_get_trace
      parameters:
        - description: Agent to show whether TOD tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigTOD"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's TOD traffic tracing
      tags:
        - TOD
  "/mimic/agent/{agentNum}/protocol/msg/tod/gettime/server/{serverAddr}/port/{portNum}/script/{scriptName}/timeout/{timeSec}/retries/{numRetries}":
    get:
      description: Retrive time from server
      operationId: protocol_tod_gettime
      parameters:
        - description: Agent to show TOD return
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: serverAddr
          in: path
          name: serverAddr
          required: true
          schema:
            type: string
        - description: portNum
          in: path
          name: portNum
          required: true
          schema:
            format: int32
            type: integer
        - description: scriptName
          in: path
          name: scriptName
          required: true
          schema:
            type: string
        - description: timeSec
          in: path
          name: timeSec
          required: true
          schema:
            format: int32
            type: integer
        - description: numRetries
          in: path
          name: numRetries
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Retrieve TOD time
      tags:
        - TOD
  "/mimic/agent/{agentNum}/protocol/msg/tod/set/config/{argument}/{value}":
    put:
      description: Agent's TOD configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_tod_set_config
      parameters:
        - description: Agent to set the TOD configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the TOD configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the TOD configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TOD configuration
      tags:
        - TOD
  "/mimic/agent/{agentNum}/protocol/msg/tod/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_tod_set_trace
      parameters:
        - description: Agent to set the TOD tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the TOD tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's TOD traffic tracing
      tags:
        - TOD
  "/mimic/agent/{agentNum}/protocol/msg/web/get/args":
    get:
      description: Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_web_get_args
      parameters:
        - description: Agent to show the WEB argument structure
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB argument structure
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/get/config":
    get:
      description: Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_web_get_config
      parameters:
        - description: Agent to show the WEB configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigWEB"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB configuration
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/get/statistics":
    get:
      description: Statistics of fields indicated in the headers
      operationId: protocol_web_get_statistics
      parameters:
        - description: Agent to show WEB statistics
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB statistics
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/get/trace":
    get:
      description: Trace 1 means enabled, 0 means not
      operationId: protocol_web_get_trace
      parameters:
        - description: Agent to show whether WEB tracing is enabled
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigWEB"
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB traffic tracing
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/port/add/{port}":
    post:
      description: Add port
      operationId: protocol_web_port_add
      parameters:
        - description: Agent to add WEB port
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: TCP port
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add the agent's WEB port
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/port/exists/{port}":
    get:
      description: Check the port. 1 means existing, 0 means not
      operationId: protocol_web_port_exists
      parameters:
        - description: Agent to show WEB configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: TCP port
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's WEB port
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/port/remove/{port}":
    delete:
      description: Remove port
      operationId: protocol_web_port_remove
      parameters:
        - description: Agent to remove WEB port
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: TCP port
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove the agent's WEB port
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/port/set/{port}/{protocol}/{version}":
    put:
      description: Set port
      operationId: protocol_web_port_set
      parameters:
        - description: Agent to set WEB port
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: TCP port
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
        - description: Encryption or related protocol
          in: path
          name: protocol
          required: true
          schema:
            type: string
        - description: Encryption or related protocol version
          in: path
          name: version
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's WEB port attribute
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/port/start/{port}":
    put:
      description: Start port
      operationId: protocol_web_port_start
      parameters:
        - description: Agent to start WEB port
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: TCP port
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start the agent's WEB port
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/port/stop/{port}":
    put:
      description: Stop port
      operationId: protocol_web_port_stop
      parameters:
        - description: Agent to stop WEB port
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: TCP port
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Stop the agent's WEB port
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/set/config/{argument}/{value}":
    put:
      description: Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap
      operationId: protocol_web_set_config
      parameters:
        - description: Agent to set the WEB configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Parameter to set the WEB configuration
          in: path
          name: argument
          required: true
          schema:
            type: string
        - description: Value to set the WEB configuration
          in: path
          name: value
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's WEB configuration
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/msg/web/set/trace/{enableOrNot}":
    put:
      description: 1 to enable, 0 to disable
      operationId: protocol_web_set_trace
      parameters:
        - description: Agent to set the WEB tracing
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Value to set the WEB tracing
          in: path
          name: enableOrNot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the agent's WEB traffic tracing
      tags:
        - WEB
  "/mimic/agent/{agentNum}/protocol/{prot}/get/config":
    get:
      description: Returns the protocol's configuration.
      operationId: protocol_get_config
      parameters:
        - description: Agent to show the protocol configuration
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Protocol to show configuration
          in: path
          name: prot
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Returns the protocol's configuration.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/reload":
    put:
      description: This only works for halted agents. The net effect is the same as restarting an agent (ie. stop, start, halt), but without disconnecting the network (and thus existing connections).
      operationId: reload
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Reload the current agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/remove":
    delete:
      description: For speed, this operation will complete asynchronously. The same synchronization considerations apply as in /mimic/agent/start.
      operationId: agent_remove
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove the current agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/resume":
    put:
      description: Resume the current agent.
      operationId: resume
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Resume the current agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/save":
    put:
      description: Save agent MIB values.
      operationId: save
      parameters:
        - description: Agent to save
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Save agent MIB values.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/delay/{delay}":
    put:
      description: The minimum granularity is 10 msec.
      operationId: set_delay
      parameters:
        - description: Agent to set the delay time
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Delay time of the agent
          in: path
          name: delay
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: one-way transit delay in msec
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/drops/{drops}":
    put:
      description: 0 means no drops
      operationId: set_drops
      parameters:
        - description: Agent to set the drop rate
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Drop rate of the agent
          in: path
          name: drops
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: drop rate (every N-th PDU)
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/host/{host}":
    put:
      description: Currently, only IPv4 addresses are allowed as the main address of the agent, but both IPv4 and IPv6 addresses are allowed as IP aliases for the agent.
      operationId: set_host
      parameters:
        - description: Agent to set the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: string
            type: integer
        - description: Primary IP of the agent
          in: path
          name: host
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/value/set/{object}/0/{variable}"
              parameters:
                agentNum: $request.body#/agentNum
                object: sysDescr
                variable: v
        "400":
          description: Invalid agent number value
      summary: host address of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/inform_timeout/{inform_timeout}":
    put:
      description: The agent will retransmit INFORM PDUs at this interval until it has received a reply from the manager.
      operationId: set_inform_timeout
      parameters:
        - description: Agent to set the timeout setting
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Tmeout setting
          in: path
          name: inform_timeout
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: timeout in seconds for retransmitting INFORM PDUs
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/interface/{interface}":
    put:
      description: network interface card for the agent
      operationId: set_interface
      parameters:
        - description: Agent to set the primary interface
          in: path
          name: agentNum
          required: true
          schema:
            format: string
            type: integer
        - description: Primary interface of the agent
          in: path
          name: interface
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: network interface card for the agent
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/mask/{mask}":
    put:
      description: subnet mask of the agent.
      operationId: set_mask
      parameters:
        - description: Agent to set the primary IP address mask
          in: path
          name: agentNum
          required: true
          schema:
            format: string
            type: integer
        - description: Mask to set for the agent primary IP address
          in: path
          name: mask
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: subnet mask of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/mibs":
    put:
      description: set of MIBs, simulations and scenarios
      operationId: set_mibs
      parameters:
        - description: Agent to return the MIB triplets
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              description: Triplet array
              items:
                $ref: "#/components/schemas/Triplet"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: set of MIBs, simulations and scenarios
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/oiddir/{oiddir}":
    put:
      description: MIB directory of the agent.
      operationId: set_oiddir
      parameters:
        - description: Agent to set the directory path
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Directory path for the agent
          in: path
          name: oiddir
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: MIB directory of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/owner/{owner}":
    put:
      description: owner of the agent
      operationId: set_owner
      parameters:
        - description: Agent to set the owner
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Owner of the agent
          in: path
          name: owner
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: owner of the agent
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/pdusize/{pdusize}":
    put:
      description: The limit for this configurable is 65536
      operationId: set_pdusize
      parameters:
        - description: Agent to return the PDU size
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: PDU size setting for the agent
          in: path
          name: pdusize
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: maximum PDU size
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/port/{port}":
    put:
      description: port number
      operationId: set_port
      parameters:
        - description: Agent to set the primary SNMP port
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Primary SNMP port of the agent
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: port number
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/privdir/{privdir}":
    put:
      description: private directory of the agent.
      operationId: set_privdir
      parameters:
        - description: Agent to set the directory path
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Directory path for the agent
          in: path
          name: privdir
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: private directory of the agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/protocol":
    put:
      description: protocols supported by agent as a comma-separated list
      operationId: set_protocols
      parameters:
        - description: Agent to return the protocols arrary
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: Protocol string
                type: string
              type: array
        description: Created agent object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: string
                  type: integer
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: protocols supported by agent as a comma-separated list
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/read/{read}":
    put:
      description: read community string
      operationId: set_read_community
      parameters:
        - description: Agent to return the SNMP read community string
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMP read community string
          in: path
          name: read
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: read community string
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/start/{start}":
    put:
      description: relative start time
      operationId: set_starttime
      parameters:
        - description: Agent to return the relative start time
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Relative start time of the agent
          in: path
          name: start
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: relative start time
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/trace/{trace}":
    put:
      description: SNMP PDU tracing
      operationId: set_trace
      parameters:
        - description: Agent to set trace setting
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Trace setting for the agent
          in: path
          name: trace
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP PDU tracing
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/validate/{validate}":
    put:
      description: Is a bitmask in which with the following bits (from LSB) check for type, length, range, access. A default value of 65535 does all validation checking.
      operationId: set_validate
      parameters:
        - description: Agent to set the bitmask integer
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Bitmask integer to set
          in: path
          name: validate
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: SNMP SET validation policy
      tags:
        - Agent
  "/mimic/agent/{agentNum}/set/write/{write}":
    put:
      description: write community string
      operationId: set_write_community
      parameters:
        - description: Agent to set the SNMP write community string
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: SNMP write community string
          in: path
          name: write
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: write community string
      tags:
        - Agent
  "/mimic/agent/{agentNum}/start":
    put:
      description: For speed, this operation will complete asynchronously. A successful return from this command means the starting of the agent is in progress. If you need to rely on the agent to have completed startup, you should wait for it's state to become RUNNING.
      operationId: start
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Start the current agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/stop":
    put:
      description: Agent primary IP address
      operationId: stop
      parameters:
        - description: Agent to return the primary IP
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the agent's primary IP address
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/copy/{otherAgent}":
    put:
      description: This command copies the variable store from the other agent to this agent.
      operationId: agent_store_copy
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Agent of the value space
          in: path
          name: otherAgent
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command copies the variable store from the other agent to this agent.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/exists/{var}":
    get:
      description: It returns "1" if the variable exists, else "0".
      operationId: agent_store_exists
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the existence of a given variable.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/get/{var}":
    get:
      description: The value will be returned as a string (like all Tcl values).
      operationId: agent_store_get
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Fetches the value associated with a variable.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/list":
    get:
      description: The list will be a Tcl format list with curly braces "{}" around each list element. These elements in turn are space separated.
      operationId: agent_store_list
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command will return the list of variables in the said scope.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/lreplace/{var}/{index}":
    put:
      description: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.
      operationId: agent_store_lreplace
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
        - description: Index
          in: path
          name: index
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/persists/{var}":
    get:
      description: It returns "1" if the variable is persistent, else "0".
      operationId: agent_store_persists
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the persistence of a given variable.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/set/{var}/{persist}":
    put:
      description: The append sub-command will append the value to an existing variable, or create a new one. The set sub-command will overwrite an existing variable, or create a new one. The optional persist flag can be used to indicate if the variable is to be persistent as described above. By default a value of '0' will be implied for the persist flag. To avoid mistakes, for existing variables the persist flag can only be set. If you want to reset it, you first need to unset the variable.
      operationId: agent_store_set
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
        - description: Persistent setting
          in: path
          name: persist
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: These commands allow the creation of a new variable, or changing an existing value.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/store/unset/{var}":
    put:
      description: This will cleanup persistent variables if needed
      operationId: agent_store_unset
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes a variable which is currently defined.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/timer/script/add/{script}/{interval}/{arg}":
    post:
      description: Add a new timer script to be executed at specified interval (in msec) with the specified argument.
      operationId: add_timer_script
      parameters:
        - description: Agent to return the timer script list
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Script name
          in: path
          name: script
          required: true
          schema:
            type: string
        - description: Interval in msec
          in: path
          name: interval
          required: true
          schema:
            format: int32
            type: integer
        - description: Arguments to the script
          in: path
          name: arg
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a new timer script to be executed at specified interval (in msec) with the specified argument.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/timer/script/delete/{script}/{interval}/{arg}":
    delete:
      description: The first scheduled script that matches the script name, and optionally the interval and argument will be deleted.
      operationId: del_timer_script
      parameters:
        - description: Agent to return the timer script list
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Script name
          in: path
          name: script
          required: true
          schema:
            type: string
        - description: Interval in msec
          in: path
          name: interval
          required: true
          schema:
            format: int32
            type: integer
        - description: Arguments to the script
          in: path
          name: arg
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove a timer script from the execution list.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/timer/script/list":
    get:
      description: The command mimic timer script list lists global timer scripts, the command /mimic/timer/script/{agentNum}/list is the per-agent equivalent NOTE Global timer scripts run globally but within them you can address individual agents using {agentNum}. To schedule timerscripts for an individual agent, use /mimic/timer/script/{agentNum}.
      operationId: list_timer_scripts
      parameters:
        - description: Agent to return the timer script list
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TimerScript"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the timer scripts currently running along with the their intervals.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/trap/config/add/{IP}/{port}":
    post:
      description: Add a trap destination to the set of destinations.
      operationId: trap_config_add
      parameters:
        - description: Agent to add the destination
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP of the destination
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: port of the destination
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a trap destination to the set of destinations.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/trap/config/delete/{IP}/{port}":
    delete:
      description: Remove a trap destination from the set of destinations.
      operationId: trap_config_del
      parameters:
        - description: Agent to delete the destination
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: IP of the destination
          in: path
          name: IP
          required: true
          schema:
            type: string
        - description: port of the destination
          in: path
          name: port
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove a trap destination from the set of destinations.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/trap/config/list":
    get:
      description: Each trap destination is identified with an IP address and a port number. The default port number is the standard SNMP trap port 162.
      operationId: trap_config_list
      parameters:
        - description: Agent to show the IP alias list
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TrapDest"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the set of trap destinations for this agent instance.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/trap/list":
    get:
      description: List the outstanding asynchronous traps for this agent instance.
      operationId: trap_list
      parameters:
        - description: Agent to list the traps
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                description: array of OID or Object strings
                items:
                  type: string
                type: array
          description: successful operation
      summary: List the outstanding asynchronous traps for this agent instance.
      tags:
        - Agent
  "/mimic/agent/{agentNum}/value/add/{object}/{instance}":
    post:
      description: The object needs to specify the MIB object with the INDEX clause, usually an object whose name ends with Entry.
      operationId: add
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object (column) of the table in the agent's value space
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Object (column) of the table in the agent's value space
          in: path
          name: instance
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add an entry to a table.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/eval/{object}/{instance}":
    get:
      description: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.
      operationId: eval_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Single instance object or object (column) of the table in the agent's value space.
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Row of the table in the agent's value space. 0 for single instance objects
          in: path
          name: instance
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/get/{object}/{instance}/{variable}":
    get:
      description: Get a variable in the Value Space.
      operationId: get_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object (column) of the table in the agent's value space
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Object (column) of the table in the agent's value space
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Object (column) of the table in the agent's value space
          in: path
          name: variable
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/value/eval/{object}/{instance}"
              parameters:
                agentNum: $request.body#/agentNum
                instance: 0
                object: sysDescr
        "400":
          description: Invalid agent number value
      summary: Get a variable in the Value Space.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/info/{object}":
    get:
      description: Return the syntactical information for the specified object, such as type, size, range, enumerations, and ACCESS.
      operationId: get_info
      parameters:
        - description: Agent to show the information of the object
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object
          in: path
          name: object
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Return the syntactical information for the specified object, such as type, size, range, enumerations, and ACCESS.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/instances/{object}":
    get:
      description: This enables MIB browsing of the MIB on the current agent.
      operationId: get_instances
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object (column) of the table in the agent's value space
          in: path
          name: object
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Display the MIB object instances for the specified object.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/list/{OID}":
    get:
      description: This command is similar to the ls or dir operating system commands to list filesystem directories.
      operationId: get_objects
      parameters:
        - description: Agent to show the OID branches
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Current OID
          in: path
          name: OID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Display the MIB objects below the current position
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/meval/{objInsArray}":
    get:
      description: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.
      operationId: meval_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Multiple objects or object (column) of the table in the agent's value space.
          in: path
          name: objInsArray
          required: true
          schema:
            items:
              items:
                type: string
              type: array
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/mget/{objInsVarArray}":
    get:
      description: This is a performance optimization of the mimic value get command, to be used when many variables are requested.
      operationId: mget_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Multiple objects or object (column) of the table in the agent's value space.
          in: path
          name: objInsVarArray
          required: true
          schema:
            items:
              items:
                type: string
              type: array
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Get multiple variables in the Value Space.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/mib/{object}":
    get:
      description: This will only return a MIB name if the object is unmistakeably defined in a MIB.
      operationId: get_mib
      parameters:
        - description: Agent to show the MIB
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object
          in: path
          name: object
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Return the MIB that defines the specified object.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/mset":
    put:
      description: This is a performance optimization of the mimic value set command, to be used when many variables are to be set.
      operationId: mset_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                items:
                  type: string
                type: array
              type: array
        description: objInsVarValArray
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set multiple variables in the Value Space.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/munset":
    put:
      description: This is a performance optimization of the mimic value unset command, to be used when many variables are to be unset.
      operationId: munset_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                items:
                  type: string
                type: array
              type: array
        description: objInsVarArray
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Unset multiple variables in the Value Space
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/name/{OID}":
    get:
      description: Return the symbolic name of the specified object identifier.
      operationId: get_name
      parameters:
        - description: Agent to show the object
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: OID
          in: path
          name: OID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Return the symbolic name of the specified object identifier.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/oid/{object}":
    get:
      description: Return the numeric OID of the specified object.
      operationId: get_oid
      parameters:
        - description: Agent to show the OID
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object
          in: path
          name: object
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Return the numeric OID of the specified object.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/remove/{object}/{instance}":
    delete:
      description: The object needs to specify the MIB object with the INDEX clause, usually an object whose name ends with Entry.
      operationId: remove
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object (column) of the table in the agent's value space
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Object (column) of the table in the agent's value space
          in: path
          name: instance
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove an entry from a table.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/set/{object}/{instance}/{variable}":
    put:
      description: NOTE to set a binary string value, specify a string starting with \\x followed by pairs of hexadecimal digits, eg. "\\x 01 23 45". This command also assigns SNMP PDU action scripts for GET* and SET requests on a MIB object. The instance parameter must be 0. The following variables enable actions, g - The specified TCL script will be run on GET or GETNEXT requests. It has to exist under the simulation directory. s - The specified script will be run on SET requests. It has to exist under the simulation directory. This command also controls advanced trap generation functionality. The following variables control trap generation r, tu, c - These variables together represent the rate settings for the trap. r and tu is the actual per second rate and c represents the total duration in seconds for which the trap is sent. As soon as the c variable is set, the trap generation begins, for this reason it should be the last variable set for a particular trap. The following variables have to be set before setting the c variable to modify the behavior of the generated trap(s). OBJECT - An object name when used as a variable is looked up during the trap send and the value of that variable is included in the PDU. OBJECT.i - This type of variable will be used to assign an optional instance for the specified object in the traps varbind. The value of this variable identifies the index. e.g. The commands below will send ifIndex.2 with a value of 5 in the linkUp trap PDU. i - This variable is used to specify any extra version specific information to the trap generation code. Here is what it can be used to represent for various SNMP versions SNMPv1 - [community_string][,[enterprise][,agent_addr]] SNMPv2c - community_string SNMPv2 - source_party,destination_party,context SNMPv3 - user_name,context v - This variable lets the user override the version of the PDU being generated. The possible values are - "1", "2c", "2" and "3". o - This variable is used for traps that need extra variables to be added to the PDU along with the ones defined in the MIB as its variables. This lets the user force extra objects (along with instances if needed). All variables to be sent need to be assigned to the o variable. O - To omit any variables which are defined in the MIB you can use the O (capital o) variable. This needs to be set to the list of OIDs of the variable bindings in the order defined in the MIB. ip - The variable ip is used for generating the trap from the N-th IP alias address. a - This variable associates an action script to the trap or INFORM request. The action script specified in the value of this variable has to exist in the simulation directory. It will be executed before each instance of the trap is sent out. I - This optional variable controls the generation of INFORM PDUs. An INFORM is sent only if the variable is non-zero, else a TRAP is generated. R, T, E - This variable associates an action script to the INFORM request. The action script specified in the value of this variable has to exist in the simulation directory. The action script associated with the R variable will be executed on receiving a INFORM RESPONSE, the one associated with the T variable on a timeout (ie. no response), the one associated with the E variable on a report PDU. eid.IP-ADDRESS.PORT - control variable allows to configure message authoritative engine id for the destination specified by IP-ADDRESS and optionally by PORT. eb.IP-ADDRESS.PORT - control variable allows to configure message authoritative engine boots. et.IP-ADDRESS.PORT - control variable allows to configure message authoritative engine time.
      operationId: set_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Single instance object or object (column) of the table in the agent's value space.
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Row of the table in the agent's value space. 0 for single instance objects
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Variable
          in: path
          name: variable
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set a variable in the Value Space.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/split/{OID}":
    get:
      description: This is useful if you have an OID which is a combination of object and instance.
      operationId: split_oid
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: OID
          in: path
          name: OID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Split the numerical OID into the object OID and instance OID.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/state/get/{object}":
    get:
      description: To disable traversal into a MIB object and any subtree underneath, set the state to 0, else set the state to 1.
      operationId: get_state
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object
          in: path
          name: object
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Get the state of a MIB object object.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/state/set/{object}/{state}":
    put:
      description: To disable traversal into a MIB object and any subtree underneath, set the state to 0, else set the state to 1.
      operationId: set_state
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Object
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: State
          in: path
          name: state
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the state of a MIB object object
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/unset/{object}/{instance}/{variable}":
    put:
      description: Only variables that have previously been set can be unset.
      operationId: unset_value
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Single instance object or object (column) of the table in the agent's value space.
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Row of the table in the agent's value space. 0 for single instance objects
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Variable
          in: path
          name: variable
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Unset a variable in the Value Space in order to free its memory.
      tags:
        - Valuespace
  "/mimic/agent/{agentNum}/value/variables/{object}/{instance}":
    get:
      description: This enables variable browsing of the MIB on the current agent.
      operationId: get_variables
      parameters:
        - description: Agent of the value space
          in: path
          name: agentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Single instance object or object (column) of the table in the agent's value space.
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Row of the table in the agent's value space. 0 for single instance objects
          in: path
          name: instance
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Display the variables for the specified instance instance for the specified MIB object object
      tags:
        - Valuespace
  "/mimic/clear/{firstAgentNum}/{lastAgentNum}":
    put:
      description: Clear the lab configuration.
      operationId: cfg_new
      parameters:
        - description: Agent number to start clearing
          in: path
          name: firstAgentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Agent number to end the clearing
          in: path
          name: lastAgentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Clear the lab configuration.
      tags:
        - Daemon
  /mimic/get/active_data_list:
    get:
      description: This list is guaranteed to be sorted into increasing order.
      operationId: get_active_data_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
          links:
            address:
              operationId: get_host
              parameters:
                agentNum: $response.body#/id/
      summary: The list of {agentnum {statistics}} for agents that are currently active and whose statistics have changed since the last invocation of this command.
      tags:
        - Daemon
  /mimic/get/active_list:
    get:
      description: This list is guaranteed to be sorted into increasing order.
      operationId: get_active_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/interface"
              parameters:
                agentNum: $response.body#
      summary: The list of {agentnum} that are currently active (running or paused).
      tags:
        - Daemon
  /mimic/get/cfgfile:
    get:
      description: In the case of multi-user access this command returns a different configuration file loaded for each user.
      operationId: get_cfgfile
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The currently loaded lab configuration file for the particular user.
      tags:
        - Daemon
  /mimic/get/cfgfile_changed:
    get:
      description: Whether the loaded agent configuration file has changed since the last time this predicate was queried. This allows for a client to detect agent configuration changes and to synchronize those changes from the MIMIC daemon.
      operationId: get_cfg_file_changed
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: This predicate indicates if the currently loaded agent configuration file has changed.
      tags:
        - Daemon
  /mimic/get/changed_config_list:
    get:
      description: This list contains at most 5000 agent(s), and is guaranteed to be sorted into increasing order.
      operationId: get_changed_config_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
      summary: The list of {agentnum} for which a configurable parameter changed.
      tags:
        - Daemon
  /mimic/get/changed_state_list:
    get:
      description: This list contains at most 5000 agent(s), and is guaranteed to be sorted into increasing order.
      operationId: get_changed_state_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AgentState"
                type: array
          description: successful operation
      summary: The list of {agentnum state} for which the state changed.
      tags:
        - Daemon
  /mimic/get/clients:
    get:
      description: The number of clients currently connected to the daemon.
      operationId: get_clients
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The number of clients currently connected to the daemon.
      tags:
        - Daemon
  /mimic/get/configured_list:
    get:
      description: This list is guaranteed to be sorted into increasing order.
      operationId: get_configured_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: successful operation
          links:
            address:
              operationRef: "#/mimic/agent/{agentNum}/get/host"
              parameters:
                agentNum: $response.body#
      summary: The list of {agentnum} that are currently configured.
      tags:
        - Daemon
  /mimic/get/interfaces:
    get:
      description: The set of network interfaces that can be used for simulations.
      operationId: get_interfaces
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The set of network interfaces that can be used for simulations.
      tags:
        - Daemon
  /mimic/get/last:
    get:
      description: The last configured agent instance.
      operationId: get_last
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
      summary: The last configured agent instance.
      tags:
        - Daemon
  /mimic/get/log:
    get:
      description: The current log file for the Simulator.
      operationId: get_log
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The current log file for the Simulator.
      tags:
        - Daemon
  /mimic/get/max:
    get:
      description: The maximum number of agent instances.
      operationId: get_max
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: successful operation
      summary: The maximum number of agent instances.
      tags:
        - Daemon
  /mimic/get/netaddr:
    get:
      description: The network address of the host where the MIMIC simulator is running.
      operationId: get_netaddr
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The network address of the host where the MIMIC simulator is running.
      tags:
        - Daemon
  /mimic/get/netdev:
    get:
      description: The default network device to be used for agent addresses if the interface is not explicitly specified for an agent.
      operationId: get_netdev
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The default network device to be used for agent addresses.
      tags:
        - Daemon
  /mimic/get/product:
    get:
      description: The product number that is licensed.
      operationId: get_product
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The product number that is licensed.
      tags:
        - Daemon
  /mimic/get/protocols:
    get:
      description: The set of protocols supported by the Simulator.
      operationId: get_daemon_protocols
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The set of protocols supported by the Simulator.
      tags:
        - Daemon
  /mimic/get/return:
    get:
      description: The OpenAPI daemon operates in two modes, nocatch, where error returns from MIMIC operations return error; or catch, where the TCL catch semantics are used (these are similar to C++ exceptions)
      operationId: get_return
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The return mode.
      tags:
        - Daemon
  /mimic/get/version:
    get:
      description: The version of the MIMIC command interface.
      operationId: get_version
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      summary: The version of the MIMIC command interface.
      tags:
        - Daemon
  "/mimic/load/{cfgFile}/{firstAgentNum}/{lastAgentNum}/{startAgentNum}":
    put:
      description: Load agents in cfgFile from firstAgentNum to lastAgentNum on startAgentNum of current configuration
      operationId: cfg_load
      parameters:
        - description: MIMIC agent configuration file to load
          in: path
          name: cfgFile
          required: true
          schema:
            type: string
        - description: Agent number in cfgFile to start the loading
          in: path
          name: firstAgentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Agent number in cfgFile to end the loading
          in: path
          name: lastAgentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Agent number in current configuration to start placing the new agents
          in: path
          name: startAgentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Load the lab configuration file file.
      tags:
        - Daemon
  "/mimic/mget/{infoArray}":
    get:
      description: Get multiple sets of information about MIMIC, where infoArray is one of the parameters defined in the mimic get command.
      operationId: mget_info
      parameters:
        - description: Multiple strings of info.
          in: path
          name: infoArray
          required: true
          schema:
            items:
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: successful operation
        "400":
          description: Invalid info string
      summary: Get multiple sets of information about MIMIC, where infoArray is one of the parameters defined in the mimic get command.
      tags:
        - Daemon
  /mimic/protocol/msg/coap/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_coap_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the COAP statistics headers
      tags:
        - COAP
  /mimic/protocol/msg/dhcp/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_dhcp_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the DHCP statistics headers
      tags:
        - DHCP
  /mimic/protocol/msg/ipmi/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_ipmi_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the IPMI statistics headers
      tags:
        - IPMI
  /mimic/protocol/msg/mqtt/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_mqtt_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the MQTT statistics headers
      tags:
        - MQTT
  /mimic/protocol/msg/netflow/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_netflow_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the NETFLOW statistics headers
      tags:
        - NETFLOW
  /mimic/protocol/msg/proxy/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_proxy_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the PROXY statistics headers
      tags:
        - PROXY
  /mimic/protocol/msg/sflow/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_sflow_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SFLOW statistics headers
      tags:
        - SFLOW
  /mimic/protocol/msg/snmptcp/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_snmptcp_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SNMPTCP statistics headers
      tags:
        - SNMPTCP
  /mimic/protocol/msg/ssh/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_ssh_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SSH statistics headers
      tags:
        - SSH
  /mimic/protocol/msg/syslog/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_syslog_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the SYSLOG statistics headers
      tags:
        - SYSLOG
  /mimic/protocol/msg/telnet/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_telnet_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the TELNET statistics headers
      tags:
        - TELNET
  /mimic/protocol/msg/tftp/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_tftp_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the TFTP statistics headers
      tags:
        - TFTP
  /mimic/protocol/msg/tod/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_tod_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the TOD statistics headers
      tags:
        - TOD
  /mimic/protocol/msg/web/get/stats_hdr:
    get:
      description: The headers of statistics fields
      operationId: protocol_web_get_stats_hdr
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Show the WEB statistics headers
      tags:
        - WEB
  /mimic/save:
    put:
      description: Save the lab configuration.
      operationId: cfg_save
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Save the lab configuration.
      tags:
        - Daemon
  "/mimic/saveas/{cfgFile}/{firstAgentNum}/{lastAgentNum}":
    put:
      description: Save the lab configuration in file.
      operationId: cfg_saveas
      parameters:
        - description: MIMIC agent configuration file to save
          in: path
          name: cfgFile
          required: true
          schema:
            type: string
        - description: Agent number in cfgFile to start the loading
          in: path
          name: firstAgentNum
          required: true
          schema:
            format: int32
            type: integer
        - description: Agent number in cfgFile to end the loading
          in: path
          name: lastAgentNum
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Save the lab configuration in file.
      tags:
        - Daemon
  /mimic/set/log:
    put:
      description: The current log file for the Simulator.
      operationId: set_log
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The file name of the new log file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      summary: The current log file for the Simulator.
      tags:
        - Daemon
  /mimic/set/netdev:
    put:
      description: The network address of the host where the MIMIC simulator is running.
      operationId: set_netdev
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: The network address of the host where the MIMIC simulator is running.
      tags:
        - Daemon
  /mimic/set/persistent:
    put:
      description: The MIMIC daemon caches persistent objects and their changes, and writes them to disk at program termination. If it were to crash, these changes would be lost. This operation allows to checkpoint the cache, ie. write changes to persistent objects to disk. To save the lab configuration with per-agent persistent information the mimic save operation needs to be used.
      operationId: store_save
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: This operation flushes all global objects which need to be made persistent to disk.
      tags:
        - Daemon
  /mimic/start:
    put:
      description: Start MIMIC.
      operationId: start_all_agents
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Start MIMIC.
      tags:
        - Daemon
  /mimic/stop:
    put:
      description: Stop MIMIC.
      operationId: stop_all_agents
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Stop MIMIC.
      tags:
        - Daemon
  "/mimic/store/exists/{var}":
    get:
      description: It returns "1" if the variable exists, else "0".
      operationId: store_exists
      parameters:
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the existence of a given variable.
      tags:
        - Daemon
  "/mimic/store/get/{var}":
    get:
      description: The value will be returned as a string (like all Tcl values).
      operationId: store_get
      parameters:
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Fetches the value associated with a variable.
      tags:
        - Daemon
  /mimic/store/list:
    get:
      description: The list will be a Tcl format list with curly braces "{}" around each list element. These elements in turn are space separated.
      operationId: store_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command will return the list of variables in the said scope.
      tags:
        - Daemon
  "/mimic/store/lreplace/{var}/{index}":
    put:
      description: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.
      operationId: store_lreplace
      parameters:
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
        - description: Index
          in: path
          name: index
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.
      tags:
        - Daemon
  "/mimic/store/persists/{var}":
    get:
      description: It returns "1" if the variable is persistent, else "0".
      operationId: store_persists
      parameters:
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: This command can be used as a predicate to ascertain the persistence of a given variable.
      tags:
        - Daemon
  "/mimic/store/set/{var}/{persist}":
    put:
      description: Persist 1 means persistent , 0 means non-persistent
      operationId: store_set
      parameters:
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
        - description: Persistent setting
          in: path
          name: persist
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Value
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Set the variable store for the global storage
      tags:
        - Daemon
  "/mimic/store/unset/{var}":
    put:
      description: This will cleanup persistent variables if needed
      operationId: store_unset
      parameters:
        - description: Variable name
          in: path
          name: var
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Deletes a variable which is currently defined.
      tags:
        - Daemon
  /mimic/terminate:
    put:
      description: Terminate the MIMIC daemon.
      operationId: terminate
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: successful operation
      summary: Terminate the MIMIC daemon.
      tags:
        - Daemon
  "/mimic/timer/script/add/{script}/{interval}/{arg}":
    post:
      description: Add a new timer script to be executed at specified interval (in msec) with the specified argument.
      operationId: add_daemon_timer_script
      parameters:
        - description: Script name
          in: path
          name: script
          required: true
          schema:
            type: string
        - description: Interval in msec
          in: path
          name: interval
          required: true
          schema:
            format: int32
            type: integer
        - description: Arguments to the script
          in: path
          name: arg
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Add a new timer script to be executed at specified interval (in msec) with the specified argument.
      tags:
        - Daemon
  "/mimic/timer/script/delete/{script}/{interval}/{arg}":
    delete:
      description: The first scheduled script that matches the script name, and optionally the interval and argument will be deleted.
      operationId: del_daemon_timer_script
      parameters:
        - description: Script name
          in: path
          name: script
          required: true
          schema:
            type: string
        - description: Interval in msec
          in: path
          name: interval
          required: true
          schema:
            format: int32
            type: integer
        - description: Arguments to the script
          in: path
          name: arg
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: Remove a timer script from the execution list.
      tags:
        - Daemon
  /mimic/timer/script/list:
    get:
      description: The command mimic timer script list lists global timer scripts, the command /mimic/timer/script/{agentNum}/list is the per-agent equivalent NOTE Global timer scripts run globally but within them you can address individual agents using {agentNum}. To schedule timerscripts for an individual agent, use /mimic/timer/script/{agentNum}.
      operationId: list_daemon_timer_scripts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TimerScript"
                type: array
          description: successful operation
        "400":
          description: Invalid agent number value
      summary: List the timer scripts currently running along with the their intervals.
      tags:
        - Daemon
components:
  schemas:
    AccessEntry:
      properties:
        access_mask:
          type: string
        agent_range:
          type: string
        user:
          type: string
      type: object
    AgentState:
      properties:
        agentNum:
          format: int32
          type: integer
        state:
          format: int32
          type: integer
      type: object
    ConfigCOAP:
      properties:
        keystore:
          type: string
        primary_port:
          format: int32
          type: integer
        rule:
          type: string
        secure_port:
          format: int32
          type: integer
      type: object
    ConfigDHCP:
      properties:
        add_options:
          type: string
        classid:
          type: string
        hwaddr:
          type: string
        script:
          type: string
      type: object
    ConfigIPMI:
      properties:
        primary_port:
          format: int32
          type: integer
        secure_port:
          format: int32
          type: integer
        version:
          type: string
      type: object
    ConfigMQTT:
      properties:
        broker:
          type: string
        clientid:
          type: string
        filename:
          type: string
        is_tls:
          type: string
        password:
          type: string
        port:
          format: int32
          type: integer
        tls_conf_filename:
          type: string
        username:
          type: string
        version:
          type: string
      type: object
    ConfigNETFLOW:
      properties:
        bundleflowsets:
          format: int32
          type: integer
        collector:
          type: string
        collectorport:
          format: int32
          type: integer
        filename:
          type: string
      type: object
    ConfigPROXY:
      properties:
        TCP_NODELAY:
          format: int32
          type: integer
        client_to_server:
          type: string
        disconnect_delay:
          format: int32
          type: integer
        max_connects:
          format: int32
          type: integer
        portno:
          format: int32
          type: integer
        pre_connect:
          type: string
        server_to_client:
          type: string
        target:
          type: string
        transport:
          type: string
      type: object
    ConfigSFLOW:
      properties:
        collector:
          type: string
        collectorport:
          format: int32
          type: integer
        encoding_type:
          type: string
        filename:
          type: string
        flows_per_min:
          format: int32
          type: integer
        include_samples:
          type: string
        records_per_sample:
          type: string
        samples_per_datagram:
          type: string
      type: object
    ConfigSNMPTCP:
      properties:
        connections:
          format: int32
          type: integer
      type: object
    ConfigSNMPv3:
      properties:
        context_engine_id:
          type: string
        engine_id:
          type: string
        usm_db:
          type: string
        vacm_db:
          type: string
      type: object
    ConfigSSH:
      properties:
        port:
          format: int32
          type: integer
        version:
          type: string
      type: object
    ConfigSYSLOG:
      properties:
        client:
          type: string
        hostname:
          type: string
        localport:
          format: int32
          type: integer
        separator:
          type: string
        sequence:
          format: int32
          type: integer
        server:
          type: string
        serverport:
          format: int32
          type: integer
        timestamp:
          type: string
      type: object
    ConfigTELNET:
      properties:
        keymap:
          type: string
        paging_prompt:
          type: string
        port:
          format: int32
          type: integer
        prompt:
          type: string
        rule:
          type: string
        userdb:
          type: string
      type: object
    ConfigTFTP:
      properties:
        cache:
          format: int32
          type: integer
        client:
          type: string
        dstfile:
          type: string
        mode:
          type: string
        port:
          format: int32
          type: integer
        retries:
          format: int32
          type: integer
        script:
          type: string
        server:
          type: string
        srcfile:
          type: string
        timeout:
          format: int32
          type: integer
        trace:
          type: string
      type: object
    ConfigTOD:
      properties:
        port:
          format: int32
          type: integer
        retries:
          format: int32
          type: integer
        script:
          type: string
        server:
          type: string
        timeout:
          format: int32
          type: integer
      type: object
    ConfigWEB:
      properties:
        is_persistent_connections:
          format: int32
          type: integer
        password:
          type: string
        port:
          format: int32
          type: integer
        rule:
          type: string
        username:
          type: string
        wsdl:
          type: string
      type: object
    IPAlias:
      properties:
        IP:
          type: string
        interface:
          type: string
        mask:
          type: string
        port:
          format: int32
          type: integer
      type: object
    IPSource:
      properties:
        IP:
          type: string
        port:
          format: int32
          type: integer
      type: object
    SyslogMsg:
      properties:
        hostname:
          type: string
        message:
          type: string
        separator:
          type: string
        sequence:
          type: string
        timestamp:
          type: string
      type: object
    TelnetUser:
      properties:
        groups:
          items:
            type: string
          type: array
        hasPassword:
          format: int32
          type: integer
        password:
          type: string
        username:
          type: string
      type: object
    TimerScript:
      properties:
        arg:
          type: string
        interval:
          format: int32
          type: integer
        script:
          type: string
      type: object
    TrapDest:
      properties:
        IP:
          type: string
        port:
          format: int32
          type: integer
      type: object
    Triplet:
      properties:
        device:
          type: string
        mib:
          type: string
        scenario:
          format: int32
          type: integer
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
