swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: Media Services resource management APIs.
  title: MediaServicesManagementClient
  version: '2015-10-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/mediaservices/resource-manager/Microsoft.Media/stable/2015-10-01/media.json'
      version: '2.0'
  x-providerName: azure.com
  x-serviceName: mediaservices-media
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  apiVersionParameter:
    description: Version of the API to be used with the client request. The current version is 2015-10-01.
    in: query
    name: api-version
    required: true
    type: string
  mediaResourceNameParameter:
    description: Name of the Media Service.
    in: path
    maxLength: 24
    minLength: 3
    name: mediaServiceName
    pattern: '^[a-z0-9]{3,24}$'
    required: true
    type: string
    x-ms-parameter-location: method
  resourceGroupNameParameter:
    description: Name of the resource group within the Azure subscription.
    in: path
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  subscriptionIdParameter:
    description: The unique identifier for a Microsoft Azure subscription.
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  /providers/Microsoft.Media/operations:
    get:
      description: Lists all of the available Media Services REST API operations.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: Operations_List
      parameters:
        - $ref: '#/parameters/apiVersionParameter'
      responses:
        '200':
          description: Success. Returns a list of operations.
          schema:
            $ref: '#/definitions/OperationListResult'
      x-ms-examples:
        OperationsList:
          parameters:
            api-version: '2015-10-01'
          responses:
            '200':
              body:
                value:
                  - display:
                      operation: read
                      provider: Microsoft.Media
                      resource: MediaService
                    name: Microsoft.Media/mediaservices/read
                  - display:
                      operation: write
                      provider: Microsoft.Media
                      resource: MediaService
                    name: Microsoft.Media/mediaservices/write
                  - display:
                      operation: delete
                      provider: Microsoft.Media
                      resource: MediaService
                    name: Microsoft.Media/mediaservices/delete
                  - display:
                      operation: regenerateKey
                      provider: Microsoft.Media
                      resource: MediaService
                    name: Microsoft.Media/mediaservices/regenerateKey/action
                  - display:
                      operation: listKeys
                      provider: Microsoft.Media
                      resource: MediaService
                    name: Microsoft.Media/mediaservices/listKeys/action
                  - display:
                      operation: syncStorageKeys
                      provider: Microsoft.Media
                      resource: MediaService
                    name: Microsoft.Media/mediaservices/syncStorageKeys/action
  '/subscriptions/{subscriptionId}/providers/Microsoft.Media/CheckNameAvailability':
    post:
      description: Checks whether the Media Service resource name is available. The name must be globally unique.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_CheckNameAvailability
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - description: Properties needed to check the availability of a name.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CheckNameAvailabilityInput'
      responses:
        '200':
          description: Success. Returns details about whether a Media Service resource name is available.
          examples:
            application/json:
              message: Already in use by another Media Service instance. Please try again with a name that is not likely to be in use.
              nameAvailable: false
              reason: AlreadyExists
          schema:
            $ref: '#/definitions/CheckNameAvailabilityOutput'
        default:
          description: CheckNameAvailability of a Media Service failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceCheckNameAvailability:
          parameters:
            api-version: '2015-10-01'
            parameters:
              name: contosomedia
              type: mediaservices
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                message: ''
                nameAvailable: true
                reason: None
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices':
    get:
      description: Lists all of the Media Services in a resource group.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_ListByResourceGroup
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Success. Returns a list of all of the Media Services accounts in a resource group.
          examples:
            application/json:
              value:
                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia
                  location: West US
                  name: contosomedia
                  properties:
                    apiEndpoints:
                      - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                        majorVersion: '2'
                    storageAccounts:
                      - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia
                        isPrimary: true
                  type: Microsoft.Media/mediaservices
          schema:
            $ref: '#/definitions/MediaServiceCollection'
        default:
          description: List Media Services failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceListByResourceGroup:
          parameters:
            api-version: '2015-10-01'
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                value:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/contosoresources/providers/Microsoft.Media/mediaservices/contosmedia
                    location: East US
                    name: contosmedia
                    properties:
                      apiEndpoints:
                        - endpoint: 'https://contosmedia.restv2.eastus.media.azure.net/api/'
                          majorVersion: '2'
                      storageAccounts:
                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore
                          isPrimary: true
                    tags: {}
                    type: Microsoft.Media/mediaservices
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/contosoresources/providers/Microsoft.Media/mediaservices/contosmedia2
                    location: West US
                    name: contosmedia2
                    properties:
                      apiEndpoints:
                        - endpoint: 'https://contosmedia2.restv2.westus.media.azure.net/api/'
                          majorVersion: '2'
                      storageAccounts:
                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/microsoft.storage/storageAccounts/contosostore2
                          isPrimary: true
                    tags: {}
                    type: Microsoft.Media/mediaservices
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}':
    delete:
      description: Deletes a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Delete
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. The Media Services account was deleted.
        '204':
          description: No Content. The account name does not exist.
        default:
          description: Delete Media Services failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceDelete:
          parameters:
            api-version: '2015-10-01'
            mediaServiceName: contosmedia
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200': {}
            '204': {}
    get:
      description: Gets a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Get
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. Returns the details of the Media Services account.
          examples:
            application/json:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia
              location: West US
              name: contosomedia
              properties:
                apiEndpoints:
                  - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                    majorVersion: '2'
                storageAccounts:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia
                    isPrimary: true
              type: Microsoft.Media/mediaservices
          schema:
            $ref: '#/definitions/MediaService'
        default:
          description: Get Media Services failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceGet:
          parameters:
            api-version: '2015-10-01'
            mediaServiceName: contosmedia
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/contosoresources/providers/Microsoft.Media/mediaservices/contosmedia
                location: East US
                name: contosmedia
                properties:
                  apiEndpoints:
                    - endpoint: 'https://contosmedia.restv2.eastus.media.azure.net/api/'
                      majorVersion: '2'
                  storageAccounts:
                    - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore
                      isPrimary: true
                tags: {}
                type: Microsoft.Media/mediaservices
    patch:
      description: Updates a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Update
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/mediaResourceNameParameter'
        - description: Media Service properties needed for update.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/MediaService'
      responses:
        '200':
          description: Success. The Media Services account was updated.
          examples:
            application/json:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia
              location: West US
              name: contosomedia
              properties:
                apiEndpoints:
                  - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                    majorVersion: '2'
                storageAccounts:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia
                    isPrimary: true
              type: Microsoft.Media/mediaservices
          schema:
            $ref: '#/definitions/MediaService'
        default:
          description: Update Media Services failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceUpdate:
          parameters:
            api-version: '2015-10-01'
            mediaServiceName: contosmedia
            parameters:
              location: West US
              properties:
                storageAccounts:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore
                    isPrimary: true
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                location: West US
                properties:
                  storageAccounts:
                    - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore
                      isPrimary: true
    put:
      description: Creates a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Create
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/mediaResourceNameParameter'
        - description: Media Service properties needed for creation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/MediaService'
      responses:
        '201':
          description: Success. Returns the new Media Services account.
          examples:
            application/json:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia
              location: West US
              name: contosomedia
              properties:
                apiEndpoints:
                  - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                    majorVersion: '2'
                storageAccounts:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia
                    isPrimary: true
              type: Microsoft.Media/mediaservices
          schema:
            $ref: '#/definitions/MediaService'
        default:
          description: Create Media Services failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceCreate:
          parameters:
            api-version: '2015-10-01'
            mediaServiceName: contosmedia
            parameters:
              location: West US
              properties:
                storageAccounts:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore
                    isPrimary: true
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '201':
              body:
                location: West US
                properties:
                  storageAccounts:
                    - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore
                      isPrimary: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/listKeys':
    post:
      description: Lists the keys for a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_ListKeys
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. The keys for the Media Services account were listed.
          examples:
            application/json:
              primaryAuthEndpoint: 'https://wamsprodglobal001acs.accesscontrol.windows.net/'
              primaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
              scope: 'urn:windowsazuremediaservices'
              secondaryAuthEndpoint: 'https://wamsprodglobal002acs.accesscontrol.windows.net/'
              secondaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
          schema:
            $ref: '#/definitions/ServiceKeys'
        default:
          description: List Media Service keys failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceListKeys:
          parameters:
            api-version: '2015-10-01'
            mediaServiceName: contosmedia
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                primaryAuthEndpoint: 'https://wamsprodglobal001acs.accesscontrol.windows.net/'
                primaryKey: <primary key value>
                scope: 'urn:windowsazuremediaservices'
                secondaryAuthEndpoint: 'https://wamsprodglobal002acs.accesscontrol.windows.net/'
                secondaryKey: <secondary key value>
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/regenerateKey':
    post:
      description: Regenerates a primary or secondary key for a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_RegenerateKey
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/mediaResourceNameParameter'
        - description: Properties needed to regenerate the Media Service key.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/RegenerateKeyInput'
      responses:
        '200':
          description: Success. The Media Services key specified in the input was regenerated.
          examples:
            application/json:
              key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
          schema:
            $ref: '#/definitions/RegenerateKeyOutput'
        default:
          description: Regenerate Media Service key failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceRegenerateKey:
          parameters:
            api-version: '2015-10-01'
            mediaServiceName: contosmedia
            parameters:
              keyType: Primary
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                key: <key value>
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/syncStorageKeys':
    post:
      description: Synchronizes storage account keys for a storage account associated with the Media Service account.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_SyncStorageKeys
      parameters:
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/mediaResourceNameParameter'
        - description: Properties needed to synchronize the keys for a storage account to the Media Service.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/SyncStorageKeysInput'
      responses:
        '200':
          description: Success. The keys for the storage account were synchronized.
        default:
          description: Synch Media Service storage keys failed.
          schema:
            $ref: '#/definitions/ApiError'
      x-ms-examples:
        MediaServiceSyncStorageKeys:
          parameters:
            api-version: '2015-10-01'
            mediaServiceName: contosmedia
            parameters:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore
            resourceGroupName: contosoresources
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200': {}
definitions:
  ApiEndpoint:
    description: The properties for a Media Services REST API endpoint.
    example:
      endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
      majorVersion: '2'
    properties:
      endpoint:
        description: The Media Services REST endpoint.
        type: string
      majorVersion:
        description: The version of Media Services REST API.
        type: string
  ApiError:
    description: The error returned from a failed Media Services REST API call.
    example:
      error:
        code: BadRequest
        message: Name availability check is not supported for type Microsoft.Media/mediaservices.
    properties:
      code:
        description: Error code.
        type: string
      message:
        description: Error message.
        type: string
  CheckNameAvailabilityInput:
    description: The request body for CheckNameAvailability API.
    example:
      name: contosomedia
      type: mediaservices
    properties:
      name:
        description: The name of the resource. A name must be globally unique.
        maxLength: 24
        minLength: 3
        pattern: '^[a-z0-9]{3,24}$'
        type: string
      type:
        $ref: '#/definitions/ResourceType'
        description: The type of the resource - mediaservices.
    required:
      - name
      - type
  CheckNameAvailabilityOutput:
    description: The response body for CheckNameAvailability API.
    properties:
      message:
        description: Specifies the detailed reason if the name is not available.
        type: string
      nameAvailable:
        description: Specifies if the name is available.
        type: boolean
      reason:
        description: Specifies the reason if the name is not available.
        enum:
          - None
          - Invalid
          - AlreadyExists
        type: string
        x-ms-enum:
          modelAsString: false
          name: EntityNameUnavailabilityReason
  MediaService:
    allOf:
      - $ref: '#/definitions/Resource'
    description: The properties of a Media Service resource.
    example:
      location: West US
      properties:
        storageAccounts:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia
            isPrimary: true
    properties:
      properties:
        $ref: '#/definitions/MediaServiceProperties'
        description: The additional properties of a Media Service resource.
        x-ms-client-flatten: true
  MediaServiceCollection:
    description: The collection of Media Service resources.
    properties:
      value:
        description: The collection of Media Service resources.
        items:
          $ref: '#/definitions/MediaService'
        type: array
  MediaServiceProperties:
    description: The additional properties of a Media Service resource.
    properties:
      apiEndpoints:
        description: 'Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.'
        items:
          $ref: '#/definitions/ApiEndpoint'
        readOnly: true
        type: array
      storageAccounts:
        description: The storage accounts for this resource.
        items:
          $ref: '#/definitions/StorageAccount'
        type: array
  Operation:
    description: A Media Services REST API operation
    properties:
      display:
        description: The object that represents the operation.
        properties:
          operation:
            description: 'Operation type: Read, write, delete, etc.'
            readOnly: true
            type: string
          provider:
            description: 'Service provider: Microsoft.Media'
            readOnly: true
            type: string
          resource:
            description: 'Resource on which the operation is performed: Invoice, etc.'
            readOnly: true
            type: string
      name:
        description: 'Operation name: {provider}/{resource}/{operation}'
        readOnly: true
        type: string
    type: object
  OperationListResult:
    description: Result of the request to list Media Services operations.
    properties:
      nextLink:
        description: URL to get the next set of operation list results if there are any.
        readOnly: true
        type: string
      value:
        description: List of Media Services operations supported by the Microsoft.Media resource provider.
        items:
          $ref: '#/definitions/Operation'
        readOnly: true
        type: array
  RegenerateKeyInput:
    description: The request body for a RegenerateKey API.
    example:
      keyType: Primary
    properties:
      keyType:
        description: 'The keyType indicating which key you want to regenerate, Primary or Secondary.'
        enum:
          - Primary
          - Secondary
        type: string
        x-ms-enum:
          modelAsString: false
          name: KeyType
    required:
      - keyType
  RegenerateKeyOutput:
    description: The response body for a RegenerateKey API.
    example:
      key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
    properties:
      key:
        description: The new value of either the primary or secondary key.
        type: string
  Resource:
    description: The Azure Resource Manager resource.
    properties:
      id:
        description: The id of the resource.
        readOnly: true
        type: string
      location:
        description: 'The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).'
        type: string
      name:
        description: The name of the resource.
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Tags to help categorize the resource in the Azure portal.
        type: object
      type:
        description: The type of the resource
        readOnly: true
        type: string
    x-ms-azure-resource: true
  ResourceType:
    description: Type of MediaService resource.
    enum:
      - mediaservices
    type: string
    x-ms-enum:
      modelAsString: false
      name: ResourceType
  ServiceKeys:
    description: The response body for a ListKeys API.
    example:
      primaryAuthEndpoint: 'https://wamsprodglobal001acs.accesscontrol.windows.net/'
      primaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
      scope: 'urn:windowsazuremediaservices'
      secondaryAuthEndpoint: 'https://wamsprodglobal002acs.accesscontrol.windows.net/'
      secondaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
    properties:
      primaryAuthEndpoint:
        description: The primary authorization endpoint.
        type: string
      primaryKey:
        description: The primary key for the Media Service resource.
        type: string
      scope:
        description: The authorization scope.
        type: string
      secondaryAuthEndpoint:
        description: The secondary authorization endpoint.
        type: string
      secondaryKey:
        description: The secondary key for the Media Service resource.
        type: string
  StorageAccount:
    description: The properties of a storage account associated with this resource.
    example:
      id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia
      isPrimary: true
    properties:
      id:
        description: 'The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).'
        type: string
      isPrimary:
        description: Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
        type: boolean
    required:
      - id
      - isPrimary
  SyncStorageKeysInput:
    description: The request  body for a SyncStorageKeys API.
    example:
      id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia
    properties:
      id:
        description: The id of the storage account resource.
        type: string
    required:
      - id
