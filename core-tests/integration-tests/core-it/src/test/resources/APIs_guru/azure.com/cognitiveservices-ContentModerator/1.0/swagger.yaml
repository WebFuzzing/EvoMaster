swagger: '2.0'
schemes:
  - https
host: azure.local
info:
  description: "You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.\r\n\r\nWhen using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB. \r\nText can be at most 1024 characters long. \r\nIf the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue."
  title: Content Moderator Client
  version: '1.0'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/ContentModerator/stable/v1.0/ContentModerator.json'
      version: '2.0'
  x-providerName: azure.com
  x-serviceName: cognitiveservices-ContentModerator
  x-tags:
    - Azure
    - Microsoft
securityDefinitions:
  apim_key:
    in: header
    name: Ocp-Apim-Subscription-Key
    type: apiKey
security:
  - apim_key: []
parameters:
  CacheImage:
    description: Whether to retain the submitted image for future use; defaults to false if omitted.
    in: query
    name: CacheImage
    type: boolean
    x-ms-parameter-location: method
  CallBackEndpoint:
    description: Callback endpoint for posting the create job result.
    in: query
    name: CallBackEndpoint
    type: string
    x-ms-parameter-location: method
  ContentId:
    description: Id/Name to identify the content submitted.
    in: query
    name: ContentId
    required: true
    type: string
    x-ms-parameter-location: method
  ContentType:
    description: 'Image, Text or Video.'
    enum:
      - Image
      - Text
      - Video
    in: query
    name: ContentType
    required: true
    type: string
    x-ms-parameter-location: method
  CreateVideoReviewsBody:
    description: Body for create reviews API
    in: body
    name: CreateVideoReviewsBody
    required: true
    schema:
      description: Schema of the body.
      items:
        description: Schema items of the body.
        properties:
          CallbackEndpoint:
            description: Optional CallbackEndpoint.
            type: string
          Content:
            description: Video content url to review.
            type: string
          ContentId:
            description: Content Identifier.
            type: string
          Metadata:
            description: Optional metadata details.
            items:
              properties:
                Key:
                  description: Your key parameter.
                  type: string
                Value:
                  description: Your value parameter.
                  type: string
              required:
                - Key
                - Value
              type: object
            type: array
          Status:
            description: 'Status of the video(Complete,Unpublished,Pending)'
            enum:
              - Complete
              - Unpublished
              - Pending
            type: string
          Timescale:
            description: Timescale of the video.
            type: integer
          Type:
            description: Type of the content.
            enum:
              - Video
            type: string
          VideoFrames:
            description: Optional metadata details.
            items:
              properties:
                FrameImage:
                  description: Frame image Url.
                  type: string
                Id:
                  description: Id of the frame.
                  type: string
                Metadata:
                  description: Optional metadata details.
                  items:
                    properties:
                      Key:
                        description: Your key parameter.
                        type: string
                      Value:
                        description: Your value parameter.
                        type: string
                    required:
                      - Key
                      - Value
                    type: object
                  type: array
                ReviewerResultTags:
                  items:
                    properties:
                      Key:
                        description: Your key parameter.
                        type: string
                      Value:
                        description: Your value parameter.
                        type: string
                    required:
                      - Key
                      - Value
                    type: object
                  type: array
                Timestamp:
                  description: Timestamp of the frame.
                  type: integer
              required:
                - Id
                - Timestamp
                - FrameImage
              type: object
            type: array
        required:
          - Content
          - ContentId
          - Type
          - Status
        type: object
      type: array
    x-ms-parameter-location: method
  Endpoint:
    description: 'Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).'
    in: path
    name: Endpoint
    required: true
    type: string
    x-ms-parameter-location: client
    x-ms-skip-url-encoding: true
  ImageId:
    description: Id of the image.
    in: path
    name: ImageId
    required: true
    type: string
    x-ms-parameter-location: method
  ImageStreamParameter:
    description: The image file.
    in: body
    name: ImageStream
    required: true
    schema:
      format: file
      type: object
    x-ms-parameter-location: method
  ImageUrlParameter:
    description: The image url.
    in: body
    name: ImageUrl
    required: true
    schema:
      properties:
        DataRepresentation:
          default: URL
          type: string
        Value:
          type: string
      type: object
    x-ms-parameter-location: method
  PII:
    default: false
    description: Detect personal identifiable information.
    in: query
    name: PII
    required: false
    type: boolean
    x-ms-parameter-location: method
  WorkflowName:
    description: Workflow Name that you want to invoke.
    in: query
    name: WorkflowName
    required: true
    type: string
    x-ms-parameter-location: method
  autocorrect:
    default: false
    description: Autocorrect text.
    in: query
    name: autocorrect
    required: false
    type: boolean
    x-ms-parameter-location: method
  body:
    description: Schema of the body.
    in: body
    name: body
    required: true
    schema:
      properties:
        Description:
          description: Description of the list.
          type: string
        Metadata:
          additionalProperties:
            type: string
          description: Metadata of the list.
          type: object
        Name:
          description: Name of the list.
          type: string
      type: object
    x-ms-parameter-location: method
  classify:
    default: false
    description: Classify input.
    in: query
    name: classify
    required: false
    type: boolean
    x-ms-parameter-location: method
  enhanced:
    default: false
    description: |-
      When set to True, the image goes through additional processing to come with additional candidates.

      image/tiff is not supported when enhanced is set to true

      Note: This impacts the response time.
    in: query
    name: enhanced
    type: boolean
    x-ms-parameter-location: method
  label:
    description: The image label.
    in: query
    name: label
    required: false
    type: string
    x-ms-parameter-location: method
  language:
    description: Language of the terms.
    in: query
    name: language
    required: true
    type: string
    x-ms-parameter-location: method
  listId:
    description: List Id of the image list.
    in: path
    name: listId
    required: true
    type: string
    x-ms-parameter-location: method
  listIdQueryParameter:
    description: The list Id.
    in: query
    name: listId
    type: string
    x-ms-parameter-location: method
  reviewId:
    description: Id of the review.
    in: path
    name: reviewId
    required: true
    type: string
    x-ms-parameter-location: method
  subTeam:
    description: 'SubTeam of your team, you want to assign the created review to.'
    in: query
    name: subTeam
    required: false
    type: string
    x-ms-parameter-location: method
  tag:
    description: Tag for the image.
    in: query
    name: tag
    required: false
    type: integer
    x-ms-parameter-location: method
  teamName:
    description: Your team name.
    in: path
    name: teamName
    required: true
    type: string
    x-ms-parameter-location: method
  term:
    description: Term to be deleted
    in: path
    name: term
    required: true
    type: string
    x-ms-parameter-location: method
  textContent:
    description: Content to screen.
    in: body
    name: Text Content
    required: true
    schema:
      format: file
      type: object
    x-ms-parameter-location: method
  textLanguage:
    description: Language of the text.
    in: query
    name: language
    type: string
    x-ms-parameter-location: method
  timescale:
    description: Timescale of the video.
    in: query
    name: timescale
    required: false
    type: integer
    x-ms-parameter-location: method
  transcriptFile:
    description: Transcript file of the video.
    in: body
    name: VTT file
    required: true
    schema:
      format: file
      type: object
    x-ms-parameter-location: method
  transcriptModerationBody:
    description: Body for add video transcript moderation result API
    in: body
    name: transcriptModerationBody
    required: true
    schema:
      description: Schema of the body.
      items:
        description: Schema items of the body.
        properties:
          Terms:
            description: Optional metadata details.
            items:
              properties:
                Index:
                  description: Index of the word
                  type: integer
                Term:
                  description: Detected word.
                  type: string
              required:
                - Index
                - Term
              type: object
            type: array
          Timestamp:
            description: Timestamp of the image.
            type: string
        required:
          - Timestamp
          - Terms
        type: object
      type: array
    x-ms-parameter-location: method
  videoFrameBody:
    description: Body for add video frames API
    in: body
    name: videoFrameBody
    required: true
    schema:
      description: Schema of the body.
      items:
        description: Schema items of the body.
        properties:
          FrameImage:
            description: Content to review.
            type: string
          Metadata:
            description: Optional metadata details.
            items:
              properties:
                Key:
                  description: Your key parameter.
                  type: string
                Value:
                  description: Your value parameter.
                  type: string
              required:
                - Key
                - Value
              type: object
            type: array
          ReviewerResultTags:
            items:
              properties:
                Key:
                  description: Your key parameter.
                  type: string
                Value:
                  description: Your value parameter.
                  type: string
              required:
                - Key
                - Value
              type: object
            type: array
          Timestamp:
            description: Timestamp of the frame.
            type: string
        required:
          - Timestamp
          - FrameImage
        type: object
      type: array
    x-ms-parameter-location: method
paths:
  /contentmoderator/lists/v1.0/imagelists:
    get:
      description: Gets all the Image Lists.
      operationId: ListManagementImageLists_GetAllImageLists
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImageLists'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImageLists
      x-ms-examples:
        Get All Imagelists request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            '200':
              body:
                - Description: List of images with racy content.
                  Id: 99083
                  Metadata:
                    Contentsource: content source A
                    Purpose: task A
                  Name: RacyContentList
                - Description: List of images with abuse content.
                  Id: 89117
                  Metadata:
                    Contentsource: content source B
                    TaggedAs: abuse
                  Name: AbuseContentList
              headers: {}
    post:
      consumes:
        - application/json
      description: Creates an image list.
      operationId: ListManagementImageLists_Create
      parameters:
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/body'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImageList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImageLists
      x-ms-examples:
        Create Imagelist request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of images with racy content
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Racy
              Name: ImageList B
          responses:
            '200':
              body:
                Description: List of images with racy content
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Racy
                Name: ImageList B
              headers: {}
  '/contentmoderator/lists/v1.0/imagelists/{listId}':
    delete:
      description: Deletes image list with the list Id equal to list Id passed.
      operationId: ListManagementImageLists_Delete
      parameters:
        - $ref: '#/parameters/listId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImageLists
      x-ms-examples:
        Delete Imagelist request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: '89003'
          responses:
            '200':
              body: ''
              headers: {}
    get:
      description: Returns the details of the image list with list Id equal to list Id passed.
      operationId: ListManagementImageLists_GetDetails
      parameters:
        - $ref: '#/parameters/listId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImageList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImageLists
      x-ms-examples:
        Get List Id Details request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: '123'
            listId: '123'
          responses:
            '200':
              body:
                Description: sample string 3
                Id: 94557
                Metadata:
                  Sample string 1: sample string 2
                  Sample string 3: sample string 4
                Name: ImageList A
              headers: {}
    put:
      consumes:
        - application/json
      description: Updates an image list with list Id equal to list Id passed.
      operationId: ListManagementImageLists_Update
      parameters:
        - $ref: '#/parameters/listId'
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/body'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImageList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImageLists
      x-ms-examples:
        Update Imagelist request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of images with bad content
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Racy
              Name: ImageList B
            listId: '89003'
          responses:
            '200':
              body:
                Description: List of images.
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Racy
                Name: ImageList B
              headers: {}
  '/contentmoderator/lists/v1.0/imagelists/{listId}/RefreshIndex':
    post:
      consumes:
        - application/json
      description: Refreshes the index of the list with list Id equal to list Id passed.
      operationId: ListManagementImageLists_RefreshIndex
      parameters:
        - $ref: '#/parameters/listId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RefreshIndex'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImageLists
      x-ms-examples:
        Refresh Image Index request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: '89003'
          responses:
            '200':
              body:
                AdvancedInfo: []
                ContentSourceId: '89003'
                IsUpdateSuccess: true
                Status:
                  Code: 3000
                  Description: RefreshIndex successfully completed.
                  Exception: ''
                TrackingId: WE_7be12265b82742749e6b6b1b0_ContentModerator.Preview_e220d7be-49d0-4553-94f6-fa5ad4ae488e
              headers: {}
  '/contentmoderator/lists/v1.0/imagelists/{listId}/images':
    delete:
      description: Deletes all images from the list with list Id equal to list Id passed.
      operationId: ListManagementImage_DeleteAllImages
      parameters:
        - $ref: '#/parameters/listId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImage
      x-ms-examples:
        Delete All Images request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: '89003'
          responses:
            '200':
              body: ''
              headers: {}
    get:
      description: Gets all image Ids from the list with list Id equal to list Id passed.
      operationId: ListManagementImage_GetAllImageIds
      parameters:
        - $ref: '#/parameters/listId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImageIds'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImage
      x-ms-examples:
        Get All Image Ids request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: '89003'
          responses:
            '200':
              body:
                ContentIds:
                  - 89207
                  - 89209
                  - 94162
                ContentSource: '79017'
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                TrackingId: WE_7be12265b8014274baea9219e6cg6b1b0_ContentModerator.Preview_5614wrl328-ba52-40b2-a220-16e55uha78a
              headers: {}
    post:
      consumes:
        - application/json
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Add an image to the list with list Id equal to list Id passed.
      operationId: ListManagementImage_AddImage
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/tag'
        - $ref: '#/parameters/label'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Image'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImage
      x-ms-examples:
        Add Image request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            ImageUrl:
              DataRepresentation: URL
              Value: 'https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            label: test
            listId: '89003'
          responses:
            '200':
              body:
                AdditionalInfo:
                  - Key: Source
                    Value: '81117'
                ContentId: '90102'
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                TrackingId: WE_7be12265b8274274baea18e6b6b1b0_ContentModerator.Preview_e7dfcfe4-af54-2b1c-8a43-e1400c10893b9
              headers: {}
  '/contentmoderator/lists/v1.0/imagelists/{listId}/images/{ImageId}':
    delete:
      description: Deletes an image from the list with list Id and image Id passed.
      operationId: ListManagementImage_DeleteImage
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/ImageId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImage
      x-ms-examples:
        Delete Image request:
          parameters:
            Endpoint: '{Endpoint}'
            ImageId: '34562'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: '89003'
          responses:
            '200':
              body: ''
              headers: {}
  /contentmoderator/lists/v1.0/termlists:
    get:
      description: gets all the Term Lists
      operationId: ListManagementTermLists_GetAllTermLists
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TermLists'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTermLists
      x-ms-examples:
        Get All Termlists request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            '200':
              body:
                - Description: List of racy terms.
                  Id: 99083
                  Metadata:
                    Contentsource: content source A
                    Purpose: task A
                  Name: RacyContentList
                - Description: List of abusive terms.
                  Id: 89117
                  Metadata:
                    Contentsource: content source B
                    TaggedAs: abuse
                  Name: AbuseContentList
              headers: {}
    post:
      consumes:
        - application/json
      description: Creates a Term List
      operationId: ListManagementTermLists_Create
      parameters:
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/body'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TermList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTermLists
      x-ms-examples:
        Create Termlist request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of racy terms.
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Racy
              Name: TermList B
          responses:
            '200':
              body:
                Description: List of racy terms.
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Racy
                Name: TermList B
              headers: {}
  '/contentmoderator/lists/v1.0/termlists/{listId}':
    delete:
      description: Deletes term list with the list Id equal to list Id passed.
      operationId: ListManagementTermLists_Delete
      parameters:
        - $ref: '#/parameters/listId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTermLists
      x-ms-examples:
        Delete Termlist request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: '89003'
          responses:
            '200':
              body: ''
              headers: {}
    get:
      description: Returns list Id details of the term list with list Id equal to list Id passed.
      operationId: ListManagementTermLists_GetDetails
      parameters:
        - $ref: '#/parameters/listId'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TermList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTermLists
      x-ms-examples:
        Get Term ListId Details request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: '89003'
          responses:
            '200':
              body:
                Description: sample string 3
                Id: 89003
                Metadata:
                  Sample string 1: sample string 2
                  Sample string 3: sample string 4
                Name: TermList A
              headers: {}
    put:
      consumes:
        - application/json
      description: Updates an Term List.
      operationId: ListManagementTermLists_Update
      parameters:
        - $ref: '#/parameters/listId'
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/body'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TermList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTermLists
      x-ms-examples:
        Update Termlist request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of offensive terms.
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Offensive
              Name: TermList B
            listId: '89003'
          responses:
            '200':
              body:
                Description: List of offensive terms.
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Offensive
                Name: TermList B
              headers: {}
  '/contentmoderator/lists/v1.0/termlists/{listId}/RefreshIndex':
    post:
      consumes:
        - application/json
      description: Refreshes the index of the list with list Id equal to list ID passed.
      operationId: ListManagementTermLists_RefreshIndex
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/language'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RefreshIndex'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTermLists
      x-ms-examples:
        Refresh Term Index request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: '89003'
          responses:
            '200':
              body:
                AdvancedInfo: []
                ContentSourceId: '89003'
                IsUpdateSuccess: true
                Status:
                  Code: 3000
                  Description: RefreshIndex successfully completed.
                  Exception: ''
                TrackingId: WE_7be12265b82742749e6b6b1b0_ContentModerator.Preview_e220d7be-49d0-4553-94f6-fa5ad4ae488e
              headers: {}
  '/contentmoderator/lists/v1.0/termlists/{listId}/terms':
    delete:
      description: Deletes all terms from the list with list Id equal to the list Id passed.
      operationId: ListManagementTerm_DeleteAllTerms
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/language'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
          schema:
            type: string
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTerm
      x-ms-examples:
        Delete AllTerms request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: '89003'
          responses:
            '204':
              body: ''
              headers: {}
    get:
      description: Gets all terms from the list with list Id equal to the list Id passed.
      operationId: ListManagementTerm_GetAllTerms
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/language'
        - description: The pagination start index.
          in: query
          name: offset
          required: false
          type: integer
        - description: The max limit.
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Terms'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTerm
      x-ms-examples:
        Get All Terms request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: '89003'
          responses:
            '200':
              body:
                Data:
                  Language: eng
                  Status:
                    Code: 3000
                    Description: OK
                    Exception: ''
                  Terms:
                    - Term: testA
                    - Term: testB
                  TrackingId: 1239cc41a-b123-4983-8446-ef1df9a6768
                Paging:
                  Limit: 50
                  Offset: 0
                  Returned: 2
                  Total: 2
              headers: {}
  '/contentmoderator/lists/v1.0/termlists/{listId}/terms/{term}':
    delete:
      description: Deletes a term from the list with list Id equal to the list Id passed.
      operationId: ListManagementTerm_DeleteTerm
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/term'
        - $ref: '#/parameters/language'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
          schema:
            type: string
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTerm
      x-ms-examples:
        Delete Term request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: '89003'
            term: hell
          responses:
            '204':
              body: ''
              headers: {}
    post:
      consumes:
        - application/json
      description: Add a term to the term list with list Id equal to list Id passed.
      operationId: ListManagementTerm_AddTerm
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/term'
        - $ref: '#/parameters/language'
      produces:
        - application/json
      responses:
        '201':
          description: Created
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementTerm
      x-ms-examples:
        Add Term request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: '89003'
            term: hell
          responses:
            '201': {}
  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate:
    post:
      consumes:
        - application/json
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Returns probabilities of the image containing racy or adult content.
      operationId: ImageModeration_Evaluate
      parameters:
        - $ref: '#/parameters/CacheImage'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Evaluate'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces:
    post:
      consumes:
        - application/json
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Returns the list of faces found.
      operationId: ImageModeration_FindFaces
      parameters:
        - $ref: '#/parameters/CacheImage'
      produces:
        - application/json
      responses:
        '200':
          description: The list of faces found.
          schema:
            $ref: '#/definitions/FoundFaces'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/Match:
    post:
      consumes:
        - application/json
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
      operationId: ImageModeration_Match
      parameters:
        - $ref: '#/parameters/listIdQueryParameter'
        - $ref: '#/parameters/CacheImage'
      produces:
        - application/json
      responses:
        '200':
          description: "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>."
          schema:
            $ref: '#/definitions/MatchResponse'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/OCR:
    post:
      consumes:
        - application/json
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.
      operationId: ImageModeration_OCR
      parameters:
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/CacheImage'
        - $ref: '#/parameters/enhanced'
      produces:
        - application/json
      responses:
        '200':
          description: The text found and list of candidate text details.
          schema:
            $ref: '#/definitions/OCR'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessText/DetectLanguage:
    post:
      consumes:
        - text/plain
        - text/html
        - text/xml
        - text/markdown
      description: 'This operation will detect the language of given input content. Returns the <a href="http://www-01.sil.org/iso639-3/codes.asp">ISO 639-3 code</a> for the predominant language comprising the submitted text. Over 110 languages supported.'
      operationId: TextModeration_DetectLanguage
      parameters:
        - description: The content type.
          enum:
            - text/plain
            - text/html
            - text/xml
            - text/markdown
          in: header
          name: Content-Type
          required: true
          type: string
          x-ms-client-name: textContentType
        - $ref: '#/parameters/textContent'
      produces:
        - application/json
      responses:
        '200':
          description: The detected language result.
          schema:
            $ref: '#/definitions/DetectedLanguage'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - TextModeration
      x-ms-examples:
        Detect Language request:
          parameters:
            Content-Type: text/plain
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            Text Content: 'Is this a crap email abcdef@abcd.com, phone: 6657789887, IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052'
          responses:
            '200':
              body:
                DetectedLanguage: eng
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                TrackingId: 2826a49-b976-419e-98e8-c5532c1n78c6
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessText/Screen/:
    post:
      consumes:
        - text/plain
        - text/html
        - text/xml
        - text/markdown
      description: Detects profanity in more than 100 languages and match against custom and shared blacklists.
      operationId: TextModeration_ScreenText
      parameters:
        - $ref: '#/parameters/textLanguage'
        - $ref: '#/parameters/autocorrect'
        - $ref: '#/parameters/PII'
        - $ref: '#/parameters/listIdQueryParameter'
        - $ref: '#/parameters/classify'
        - description: The content type.
          enum:
            - text/plain
            - text/html
            - text/xml
            - text/markdown
          in: header
          name: Content-Type
          required: true
          type: string
          x-ms-client-name: textContentType
        - $ref: '#/parameters/textContent'
      produces:
        - application/json
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/Screen'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      summary: Detect profanity and match against custom and shared blacklists
      tags:
        - TextModeration
      x-ms-examples:
        Detect Language request:
          parameters:
            Content-Type: text/plain
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            PII: false
            Text Content: 'Is this a crap email abcdef@abcd.com, phone: 6657789887, IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052'
            autocorrect: false
            classify: false
            language: eng
            listId: ''
          responses:
            '200':
              body:
                Classification:
                  Category1:
                    Score: 0.00040505084325559437
                  Category2:
                    Score: 0.2234508991241455
                  Category3:
                    Score: 0.9879999756813049
                  ReviewRecommended: true
                Language: eng
                Misrepresentation: []
                NormalizedText: 'Is this a crap email abcdef@ abcd. com, phone: 6657789887, IP: 255. 255. 255. 255, 1 Microsoft Way, Redmond, WA 98052'
                OriginalText: 'Is this a crap email abcdef@abcd.com, phone: 6657789887, IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052'
                PII:
                  Address:
                    - Index: 78
                      Text: '1 Microsoft Way, Redmond, WA 98052'
                  Email:
                    - Detected: abcdef@abcd.com
                      Index: 21
                      SubType: Regular
                      Text: abcdef@abcd.com
                  IPA:
                    - Index: 61
                      SubType: IPV4
                      Text: 255.255.255.255
                  Phone:
                    - CountryCode: US
                      Index: 45
                      Text: '6657789887'
                  SSN:
                    - Index: 45
                      Text: '665778988'
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                Terms:
                  - Index: 10
                    ListId: 0
                    OriginalIndex: 10
                    Term: crap
                TrackingId: 9fdfef70-6ed8-4a88-99a0-5b6d0b8d7108
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/jobs':
    post:
      consumes:
        - application/json
        - image/jpeg
      description: "A job Id will be returned for the content posted on this endpoint. \r\n\r\nOnce the content is evaluated against the Workflow provided the review will be created or ignored based on the workflow expression.\r\n\r\n<h3>CallBack Schemas </h3>\r\n\r\n<p>\r\n<h4>Job Completion CallBack Sample</h4><br/>\r\n\r\n{<br/>\r\n  \"JobId\": \"<Job Id>,<br/>\r\n  \"ReviewId\": \"<Review Id, if the Job resulted in a Review to be created>\",<br/>\r\n  \"WorkFlowId\": \"default\",<br/>\r\n  \"Status\": \"<This will be one of Complete, InProgress, Error>\",<br/>\r\n  \"ContentType\": \"Image\",<br/>\r\n  \"ContentId\": \"<This is the ContentId that was specified on input>\",<br/>\r\n  \"CallBackType\": \"Job\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\",<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n</p>\r\n<p>\r\n<h4>Review Completion CallBack Sample</h4><br/>\r\n\r\n{\r\n  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\": \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\",\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n</p>."
      operationId: Reviews_CreateJob
      parameters:
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/ContentType'
        - $ref: '#/parameters/ContentId'
        - $ref: '#/parameters/WorkflowName'
        - $ref: '#/parameters/CallBackEndpoint'
        - description: The content type.
          enum:
            - application/json
            - image/jpeg
          in: header
          name: Content-Type
          required: true
          type: string
          x-ms-client-name: jobContentType
        - description: Content to evaluate.
          in: body
          name: Content
          required: true
          schema:
            properties:
              ContentValue:
                description: Content to evaluate for a job.
                type: string
            required:
              - ContentValue
            type: object
          x-examples:
            application/json: |-
              {
                "ContentValue": "<Replace with you Image Url>"
              }
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobId'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Create Job request:
          parameters:
            CallBackEndpoint: ''
            Content:
              ContentValue: 'https://moderatorsampleimages.blob.core.windows.net/samples/sample.jpg'
            Content-Type: application/json
            ContentId: ContentID A
            ContentType: Image
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            WorkflowName: TestWorkflow
            teamName: sonaliProdTeam
          responses:
            '200':
              body:
                JobId: '234'
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/jobs/{JobId}':
    get:
      description: Get the Job Details for a Job Id.
      operationId: Reviews_GetJobDetails
      parameters:
        - description: Your Team Name.
          in: path
          name: teamName
          required: true
          type: string
        - description: Id of the job.
          in: path
          name: JobId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Job'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Get Job Details request:
          parameters:
            Endpoint: '{Endpoint}'
            JobId: 201709i96f295aa5748101436064c42ddf
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            teamName: ModeratorTeam
          responses:
            '200':
              body:
                CallBackEndpoint: ''
                Id: 2017213fee37b184345gu9606e5d14e3
                JobExecutionReport:
                  - Msg: Job marked completed and job content has been removed
                    Ts: '2017-09-21T22:00:47.4920565'
                  - Msg: Execution Complete
                    Ts: '2017-09-21T22:00:47.420048'
                  - Msg: Successfully got isadult response from Moderator
                    Ts: '2017-09-21T22:00:47.3900424'
                  - Msg: Getting isadult from Moderator
                    Ts: '2017-09-21T22:00:46.3538907'
                  - Msg: Starting Execution - Try 1
                    Ts: '2017-09-21T22:00:46.1098543'
                ResultMetaData:
                  - Key: adultScore
                    Value: '0.007'
                  - Key: isAdult
                    Value: 'False'
                  - Key: racyScore
                    Value: '0.022'
                  - Key: isRacy
                    Value: 'False'
                ReviewId: ''
                Status: Complete
                TeamName: teamA
                Type: Image
                WorkflowId: default
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews':
    post:
      consumes:
        - application/json
      description: "The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing, results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\": \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\",<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n</p>."
      operationId: Reviews_CreateReviews
      parameters:
        - description: The content type.
          in: header
          name: UrlContentType
          required: true
          type: string
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/subTeam'
        - description: Body for create reviews API
          in: body
          name: createReviewBody
          required: true
          schema:
            description: Schema of the body.
            items:
              description: Schema items of the body.
              properties:
                CallbackEndpoint:
                  description: Optional CallbackEndpoint.
                  type: string
                Content:
                  description: Content to review.
                  type: string
                ContentId:
                  description: Content Identifier.
                  type: string
                Metadata:
                  description: Optional metadata details.
                  items:
                    properties:
                      Key:
                        description: Your key parameter.
                        type: string
                      Value:
                        description: Your value parameter.
                        type: string
                    required:
                      - Key
                      - Value
                    type: object
                  type: array
                Type:
                  description: Type of the content.
                  enum:
                    - Image
                    - Text
                  type: string
              required:
                - Content
                - ContentId
                - Type
              type: object
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReviewList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Create Review request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            UrlContentType: application/json
            createReviewBody:
              - CallbackEndpoint: ''
                Content: 'https://www.w3schools.com/css/trolltunga.jpg'
                ContentId: ContentID A
                Metadata:
                  - Key: string A
                    Value: string B
                Type: Image
            subTeam: SubteamA
            teamName: ModeratorTeam
          responses:
            '200':
              body:
                - 201709i9srfj128775481f9955033096ddf
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}':
    get:
      description: Returns review details for the review Id passed.
      operationId: Reviews_GetReview
      parameters:
        - description: Your Team Name.
          in: path
          name: teamName
          required: true
          type: string
        - description: Id of the review.
          in: path
          name: reviewId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Review'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Get Review request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201709i96f295aa5748101436064c42ddf
            teamName: ModeratorTeam
          responses:
            '200':
              body:
                CallbackEndpoint: ''
                Content: 'https://reviewcontentstoragesea.blob.core.windows.net/ModeratorTeam/IMG_201709i96f295987701f9955036064c42ddf'
                ContentId: contentIdA
                CreatedBy: ModeratorTeam
                Metadata:
                  - Key: string
                    Value: string
                ReviewId: 201709i96f295aa5748101436064c42ddf
                ReviewerResultTags: []
                Status: Pending
                SubTeam: public
                Type: Image
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames':
    get:
      consumes:
        - application/json
      description: "The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing, results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\": \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\",<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n</p>."
      operationId: Reviews_GetVideoFrames
      parameters:
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/reviewId'
        - description: Time stamp of the frame from where you want to start fetching the frames.
          in: query
          name: startSeed
          type: integer
        - description: Number of frames to fetch.
          in: query
          name: noOfRecords
          type: integer
        - description: Get frames filtered by tags.
          in: query
          name: filter
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Frames'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Get Frames Request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: Content moderator
          responses:
            '200':
              body:
                ReviewId: 201711v18ea829372b14f9e9d382621e62429a9
                VideoFrames:
                  - FrameImage: 'https://rtsvccontentwu.blob.core.windows.net/580040/FRM_201711v18ea829372b14f9e9d382621e62429a9_1122.jpg'
                    Metadata:
                      - Key: apiScoreVal
                        Value: '0.206'
                      - Key: a
                        Value: 'False'
                    ReviewerResultTags: []
                    Timestamp: '1122'
              headers: {}
    post:
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      description: "The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing, results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\": \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\",<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n</p>."
      operationId: Reviews_AddVideoFrame
      parameters:
        - $ref: '#/parameters/teamName'
        - description: Id of the review.
          in: path
          name: reviewId
          required: true
          type: string
        - description: Timescale of the video you are adding frames to.
          in: query
          name: timescale
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/publish':
    post:
      consumes:
        - application/json
      description: Publish video review to make it available for review.
      operationId: Reviews_PublishVideoReview
      parameters:
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/reviewId'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        publish video request:
          parameters:
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: Content moderator
          responses:
            '204':
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcript':
    put:
      consumes:
        - text/plain
      description: This API adds a transcript file (text version of all the words spoken in a video) to a video review. The file should be a valid WebVTT format.
      operationId: Reviews_AddVideoTranscript
      parameters:
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/reviewId'
        - description: The content type.
          enum:
            - text/plain
          in: header
          name: Content-Type
          required: true
          type: string
          x-ms-client-name: ContentType
        - $ref: '#/parameters/transcriptFile'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Add transcript request:
          parameters:
            Content-Type: text/plain
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            VTT file
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: Content moderator
          responses:
            '204':
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcriptmoderationresult':
    put:
      consumes:
        - application/json
      description: 'This API adds a transcript screen text result file for a video review. Transcript screen text result file is a result of Screen Text API . In order to generate transcript screen text result file , a transcript file has to be screened for profanity using Screen Text API.'
      operationId: Reviews_AddVideoTranscriptModerationResult
      parameters:
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
          x-ms-client-name: ContentType
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/reviewId'
        - $ref: '#/parameters/transcriptModerationBody'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Transcript moderation result request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v627c579149ec4220bc674214d93f5fe5
            teamName: ModeratorTeam
            transcriptModerationBody:
              - Terms:
                  - Index: 1
                    Term: bad
                Timestamp: '2334'
          responses:
            '204':
              headers: {}
definitions:
  APIError:
    description: Error information returned by the API
    properties:
      Error:
        $ref: '#/definitions/Error'
    type: object
  Address:
    description: Address details.
    properties:
      Index:
        description: Index(Location) of the Address in the input text content.
        type: integer
      Text:
        description: Detected Address.
        type: string
  Candidate:
    description: OCR candidate text.
    properties:
      Confidence:
        description: The confidence level.
        type: number
      Text:
        description: The text found.
        type: string
  Classification:
    description: The classification details of the text.
    properties:
      Category1:
        description: 'The category1 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click here</a> for more details on category classification.'
        properties:
          Score:
            description: The category1 score.
            type: number
      Category2:
        description: 'The category2 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click here</a> for more details on category classification.'
        properties:
          Score:
            description: The category2 score.
            type: number
      Category3:
        description: 'The category3 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click here</a> for more details on category classification.'
        properties:
          Score:
            description: The category3 score.
            type: number
      ReviewRecommended:
        description: The review recommended flag.
        type: boolean
  DetectedLanguage:
    description: Detect language result.
    properties:
      DetectedLanguage:
        description: The detected language.
        type: string
      Status:
        $ref: '#/definitions/Status'
        description: The detect language status
      TrackingId:
        description: The tracking id.
        type: string
  DetectedTerms:
    description: Detected Terms details.
    properties:
      Index:
        description: Index(Location) of the detected profanity term in the input text content.
        type: integer
      ListId:
        description: Matched Terms list Id.
        type: integer
      OriginalIndex:
        description: Original Index(Location) of the detected profanity term in the input text content.
        type: integer
      Term:
        description: Detected profanity term.
        type: string
  Email:
    description: Email Address details.
    properties:
      Detected:
        description: Detected Email Address from the input text content.
        type: string
      Index:
        description: Index(Location) of the Email address in the input text content.
        type: integer
      SubType:
        description: Subtype of the detected Email Address.
        type: string
      Text:
        description: Email Address in the input text content.
        type: string
  Error:
    description: Error body.
    properties:
      Code:
        type: string
      Message:
        type: string
    type: object
  Evaluate:
    description: Evaluate response object.
    properties:
      AdultClassificationScore:
        description: The adult classification score.
        type: number
      AdvancedInfo:
        description: The advanced info.
        items:
          $ref: '#/definitions/KeyValuePair'
        type: array
      CacheID:
        description: The cache id.
        type: string
      IsImageAdultClassified:
        description: Indicates if an image is classified as adult.
        type: boolean
      IsImageRacyClassified:
        description: Indicates if the image is classified as racy.
        type: boolean
      RacyClassificationScore:
        description: The racy classification score.
        type: number
      Result:
        description: Evaluate result.
        type: boolean
      Status:
        $ref: '#/definitions/Status'
        description: The evaluate status
      TrackingId:
        description: The tracking id.
        type: string
  Face:
    description: Coordinates to the found face.
    properties:
      Bottom:
        description: The bottom coordinate.
        type: integer
      Left:
        description: The left coordinate.
        type: integer
      Right:
        description: The right coordinate.
        type: integer
      Top:
        description: The top coordinate.
        type: integer
  FoundFaces:
    description: Request object the contains found faces.
    properties:
      AdvancedInfo:
        description: The advanced info.
        items:
          $ref: '#/definitions/KeyValuePair'
        type: array
      CacheId:
        description: The cache id.
        type: string
      Count:
        description: Number of faces found.
        type: integer
      Faces:
        description: The list of faces.
        items:
          $ref: '#/definitions/Face'
        type: array
      Result:
        description: True if result was found.
        type: boolean
      Status:
        $ref: '#/definitions/Status'
        description: The evaluate status
      TrackingId:
        description: The tracking id.
        type: string
  Frame:
    description: Video frame property details.
    properties:
      FrameImage:
        description: Frame image.
        type: string
      Metadata:
        description: Array of KeyValue.
        items:
          $ref: '#/definitions/KeyValuePair'
        type: array
      ReviewerResultTags:
        description: Reviewer result tags.
        items:
          $ref: '#/definitions/Tag'
        type: array
      Timestamp:
        description: Timestamp of the frame.
        type: string
  Frames:
    description: The response for a Get Frames request.
    properties:
      ReviewId:
        description: Id of the review.
        type: string
      VideoFrames:
        items:
          $ref: '#/definitions/Frame'
        type: array
  IPA:
    description: IP Address details.
    properties:
      Index:
        description: Index(Location) of the IP Address in the input text content.
        type: integer
      SubType:
        description: Subtype of the detected IP Address.
        type: string
      Text:
        description: Detected IP Address.
        type: string
  Image:
    description: Image Properties.
    properties:
      AdditionalInfo:
        description: Advanced info list.
        items:
          properties:
            Key:
              description: Key parameter.
              type: string
            Value:
              description: Value parameter.
              type: string
          type: object
        type: array
      ContentId:
        description: Content Id.
        type: string
      Status:
        $ref: '#/definitions/Status'
        description: Status details.
      TrackingId:
        description: Tracking Id.
        type: string
  ImageIds:
    description: Image Id properties.
    properties:
      ContentIds:
        description: Id of the contents.
        items:
          type: integer
        type: array
      ContentSource:
        description: Source of the content.
        type: string
      Status:
        $ref: '#/definitions/Status'
        description: Get Image status.
        type: object
      TrackingId:
        description: Tracking Id.
        type: string
  ImageList:
    description: Image List Properties.
    properties:
      Description:
        description: Description for image list.
        type: string
      Id:
        description: Image List Id.
        type: integer
      Metadata:
        additionalProperties:
          type: string
        description: Image List Metadata.
        type: object
      Name:
        description: Image List Name.
        type: string
  ImageLists:
    items:
      $ref: '#/definitions/ImageList'
    type: array
  Job:
    description: The Job object.
    properties:
      CallBackEndpoint:
        description: The callback endpoint.
        type: string
      Id:
        description: The job id.
        type: string
      JobExecutionReport:
        description: Job execution report- Array of KeyValue pairs object.
        items:
          $ref: '#/definitions/JobExecutionReportDetails'
        type: array
      ResultMetaData:
        description: Array of KeyValue pairs.
        items:
          $ref: '#/definitions/KeyValuePair'
        type: array
      ReviewId:
        description: Review Id if one is created.
        type: string
      Status:
        description: 'The status string (<Pending, Failed, Completed>).'
        type: string
      TeamName:
        description: The team name associated with the job.
        type: string
      Type:
        description: Type of the content.
        type: string
      WorkflowId:
        description: The Id of the workflow.
        type: string
  JobExecutionReportDetails:
    description: Job Execution Report Values.
    properties:
      Msg:
        description: Message details.
        type: string
      Ts:
        description: Time details.
        type: string
  JobId:
    properties:
      JobId:
        description: Id of the created job.
        type: string
  JobListResult:
    description: The list of job ids.
    properties:
      Value:
        description: The job id.
        items:
          type: string
        type: array
  KeyValuePair:
    description: The key value pair object properties.
    properties:
      Key:
        description: The key parameter.
        type: string
      Value:
        description: The value parameter.
        type: string
  Match:
    description: The match details.
    properties:
      Label:
        description: The label.
        type: string
      MatchId:
        description: The match id.
        type: integer
      Score:
        description: Confidence score of the image match.
        type: number
      Source:
        description: The source.
        type: string
      Tags:
        description: The tags for match details.
        items:
          type: integer
        type: array
  MatchResponse:
    description: The response for a Match request.
    properties:
      CacheID:
        description: The cache id.
        type: string
      IsMatch:
        description: Indicates if there is a match.
        type: boolean
      Matches:
        description: The match details.
        items:
          $ref: '#/definitions/Match'
        type: array
      Status:
        $ref: '#/definitions/Status'
        description: The evaluate status
      TrackingId:
        description: The tracking id.
        type: string
  OCR:
    description: Contains the text found in image for the language specified.
    properties:
      CacheId:
        description: The cache id.
        type: string
      Candidates:
        description: The list of candidate text.
        items:
          $ref: '#/definitions/Candidate'
        type: array
      Language:
        description: The ISO 639-3 code.
        type: string
      Metadata:
        description: Array of KeyValue.
        items:
          $ref: '#/definitions/KeyValuePair'
        type: array
      Status:
        $ref: '#/definitions/Status'
        description: The evaluate status
      Text:
        description: The found text.
        type: string
      TrackingId:
        description: The tracking id.
        type: string
  PII:
    description: Personal Identifier Information details.
    properties:
      Address:
        items:
          $ref: '#/definitions/Address'
        type: array
      Email:
        items:
          $ref: '#/definitions/Email'
        type: array
      IPA:
        items:
          $ref: '#/definitions/IPA'
        type: array
      Phone:
        items:
          $ref: '#/definitions/Phone'
        type: array
      SSN:
        items:
          $ref: '#/definitions/SSN'
        type: array
  Phone:
    description: Phone Property details.
    properties:
      CountryCode:
        description: CountryCode of the detected Phone number.
        type: string
      Index:
        description: Index(Location) of the Phone number in the input text content.
        type: integer
      Text:
        description: Detected Phone number.
        type: string
  RefreshIndex:
    description: Refresh Index Response.
    properties:
      AdvancedInfo:
        description: Advanced info list.
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      ContentSourceId:
        description: Content source Id.
        type: string
      IsUpdateSuccess:
        description: Update success status.
        type: boolean
      Status:
        $ref: '#/definitions/Status'
        description: Refresh index status.
      TrackingId:
        description: Tracking Id.
        type: string
  Review:
    description: The Review object.
    properties:
      CallbackEndpoint:
        description: The callback endpoint.
        type: string
      Content:
        description: The content value.
        type: string
      ContentId:
        description: Id of the content.
        type: string
      CreatedBy:
        description: The reviewer name.
        type: string
      Metadata:
        description: Array of KeyValue.
        items:
          $ref: '#/definitions/KeyValuePair'
        type: array
      ReviewId:
        description: Id of the review.
        type: string
      ReviewerResultTags:
        description: Array of KeyValue with Reviewer set Tags.
        items:
          $ref: '#/definitions/KeyValuePair'
        type: array
      Status:
        description: 'The status string (<Pending, Complete>).'
        type: string
      SubTeam:
        description: Name of the subteam.
        type: string
      Type:
        description: The type of content.
        type: string
  ReviewList:
    description: The list of review ids.
    items:
      type: string
    type: array
  SSN:
    description: Detected SSN details.
    properties:
      Index:
        description: Index(Location) of the SSN in the input text content.
        type: integer
      Text:
        description: Detected SSN in the input text content.
        type: string
  Screen:
    description: The response for a Screen text request.
    properties:
      AutoCorrectedText:
        description: The autocorrected text
        type: string
      Classification:
        $ref: '#/definitions/Classification'
        description: The classification details of the text.
      Language:
        description: Language of the input text content.
        type: string
      Misrepresentation:
        description: The misrepresentation text.
        items:
          type: string
        type: array
      NormalizedText:
        description: The normalized text.
        type: string
      OriginalText:
        description: The original text.
        type: string
      PII:
        $ref: '#/definitions/PII'
        description: Personal Identifier Information details.
      Status:
        $ref: '#/definitions/Status'
        description: The evaluate status.
      Terms:
        items:
          $ref: '#/definitions/DetectedTerms'
        type: array
      TrackingId:
        description: Unique Content Moderator transaction Id.
        type: string
  Status:
    description: Status properties.
    properties:
      Code:
        description: Status code.
        type: integer
      Description:
        description: Status description.
        type: string
      Exception:
        description: Exception status.
        type: string
  Tag:
    description: Tag details.
    properties:
      Key:
        description: The key parameter.
        type: string
      Value:
        description: The value parameter.
        type: string
  TermList:
    description: Term List  Properties.
    properties:
      Description:
        description: Description for term list.
        type: string
      Id:
        description: Term list Id.
        type: integer
      Metadata:
        additionalProperties:
          type: string
        description: Term list metadata.
        type: object
      Name:
        description: Term list name.
        type: string
  TermLists:
    items:
      $ref: '#/definitions/TermList'
    type: array
  Terms:
    description: Terms properties.
    properties:
      Data:
        $ref: '#/definitions/TermsData'
        description: Term data details.
      Paging:
        description: Paging details.
        properties:
          Limit:
            description: Limit details.
            type: integer
          Offset:
            description: Offset details.
            type: integer
          Returned:
            description: Returned text details.
            type: integer
          Total:
            description: Total details.
            type: integer
  TermsData:
    description: All term Id response properties.
    properties:
      Language:
        description: Language of the terms.
        type: string
      Status:
        $ref: '#/definitions/Status'
        description: Term Status.
        type: object
      Terms:
        description: List of terms.
        items:
          $ref: '#/definitions/TermsInList'
        type: array
      TrackingId:
        description: Tracking Id.
        type: string
  TermsInList:
    description: Terms in list Id passed.
    properties:
      Term:
        description: Added term details.
        type: string
x-ms-parameterized-host:
  hostTemplate: '{Endpoint}'
  parameters:
    - $ref: '#/parameters/Endpoint'
  useSchemePrefix: false
x-ms-paths:
  '/contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=stream':
    post:
      consumes:
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Add an image to the list with list Id equal to list Id passed.
      operationId: ListManagementImage_AddImageFileInput
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/tag'
        - $ref: '#/parameters/label'
        - $ref: '#/parameters/ImageStreamParameter'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Image'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImage
  '/contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=url':
    post:
      consumes:
        - application/json
      description: Add an image to the list with list Id equal to list Id passed.
      operationId: ListManagementImage_AddImageUrlInput
      parameters:
        - $ref: '#/parameters/listId'
        - $ref: '#/parameters/tag'
        - $ref: '#/parameters/label'
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/ImageUrlParameter'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Image'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ListManagementImage
      x-ms-examples:
        Add Image request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            ImageUrl:
              DataRepresentation: URL
              Value: 'https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            label: test
            listId: '89003'
          responses:
            '200':
              body:
                AdditionalInfo:
                  - Key: Source
                    Value: '81117'
                ContentId: '90102'
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                TrackingId: WE_7be12265b8274274baea18e6b6b1b0_ContentModerator.Preview_e7dfcfe4-af54-2b1c-8a43-e1400c10893b9
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=stream:
    post:
      consumes:
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Returns probabilities of the image containing racy or adult content.
      operationId: ImageModeration_EvaluateFileInput
      parameters:
        - $ref: '#/parameters/CacheImage'
        - $ref: '#/parameters/ImageStreamParameter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Evaluate'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=url:
    post:
      consumes:
        - application/json
      description: Returns probabilities of the image containing racy or adult content.
      operationId: ImageModeration_EvaluateUrlInput
      parameters:
        - $ref: '#/parameters/CacheImage'
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/ImageUrlParameter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Evaluate'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
      x-ms-examples:
        Evaluate Image request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            ImageUrl:
              DataRepresentation: URL
              Value: 'https://moderatorsampleimages.blob.core.windows.net/samples/sample.jpg'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            '200':
              body:
                AdultClassificationScore: 0.021854378283023834
                AdvancedInfo:
                  - Key: ImageDownloadTimeInMs
                    Value: '2328'
                CacheID: c660dfa6-eba9-4950-aa58-a6967de57ea8_636422189473647994
                IsImageAdultClassified: false
                IsImageRacyClassified: false
                RacyClassificationScore: 0.045791395008563995
                Result: false
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_c6ca58fc-dc30-4961-9526-e8bdfb3b3bf5
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=stream:
    post:
      consumes:
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Returns the list of faces found.
      operationId: ImageModeration_FindFacesFileInput
      parameters:
        - $ref: '#/parameters/CacheImage'
        - $ref: '#/parameters/ImageStreamParameter'
      produces:
        - application/json
      responses:
        '200':
          description: The list of faces found.
          schema:
            $ref: '#/definitions/FoundFaces'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=url:
    post:
      consumes:
        - application/json
      description: Returns the list of faces found.
      operationId: ImageModeration_FindFacesUrlInput
      parameters:
        - $ref: '#/parameters/CacheImage'
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/ImageUrlParameter'
      produces:
        - application/json
      responses:
        '200':
          description: The list of faces found.
          schema:
            $ref: '#/definitions/FoundFaces'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
      x-ms-examples:
        Find Faces request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            ImageUrl:
              DataRepresentation: URL
              Value: 'https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg'
            Ocp-Apim-Subscription-Key: a79e5f9eeafa4f059ac507a93e1a9ff1
          responses:
            '200':
              body:
                AdvancedInfo: []
                Count: 1
                Faces:
                  - Bottom: 82
                    Left: 80
                    Right: 118
                    Top: 44
                Result: true
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_01158625-4fea-4dd5-8f21-5e2657ea2eee
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/Match?overload=stream:
    post:
      consumes:
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
      operationId: ImageModeration_MatchFileInput
      parameters:
        - $ref: '#/parameters/listIdQueryParameter'
        - $ref: '#/parameters/CacheImage'
        - $ref: '#/parameters/ImageStreamParameter'
      produces:
        - application/json
      responses:
        '200':
          description: "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>."
          schema:
            $ref: '#/definitions/MatchResponse'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/Match?overload=url:
    post:
      consumes:
        - application/json
      description: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
      operationId: ImageModeration_MatchUrlInput
      parameters:
        - $ref: '#/parameters/listIdQueryParameter'
        - $ref: '#/parameters/CacheImage'
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/ImageUrlParameter'
      produces:
        - application/json
      responses:
        '200':
          description: "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>."
          schema:
            $ref: '#/definitions/MatchResponse'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
      x-ms-examples:
        Match Image request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            ImageUrl:
              DataRepresentation: URL
              Value: 'https://moderatorsampleimages.blob.core.windows.net/samples/sample.jpg'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            cacheimage: true
            listId: '12345'
          responses:
            '200':
              body:
                CacheID: c660dfa6-eba9-4950-aa58-a6967de57ea8_636422189473647994
                IsMatch: true
                Matches:
                  - Label: ImageA
                    MatchId: 89203
                    Score: 1
                    Source: '89117'
                    Tags: []
                  - Label: ImageB
                    MatchId: 92708
                    Score: 1
                    Source: '89083'
                    Tags: []
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                TrackingId: WE_7be19175b8274274baea9219e6b6b1b0_ContentModerator.Preview_44b1f691-35ee-4d49-a981-0d01d07f18d6
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=stream:
    post:
      consumes:
        - image/gif
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
      description: Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.
      operationId: ImageModeration_OCRFileInput
      parameters:
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/CacheImage'
        - $ref: '#/parameters/enhanced'
        - $ref: '#/parameters/ImageStreamParameter'
      produces:
        - application/json
      responses:
        '200':
          description: The found text and list of candidate text.
          schema:
            $ref: '#/definitions/OCR'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=url:
    post:
      consumes:
        - application/json
      description: Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.
      operationId: ImageModeration_OCRUrlInput
      parameters:
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/CacheImage'
        - $ref: '#/parameters/enhanced'
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/ImageUrlParameter'
      produces:
        - application/json
      responses:
        '200':
          description: The found text and list of candidate text.
          schema:
            $ref: '#/definitions/OCR'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - ImageModeration
      x-ms-examples:
        Image OCR request:
          parameters:
            CacheImage: false
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            ImageUrl:
              DataRepresentation: URL
              Value: 'https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            enhanced: false
            language: eng
          responses:
            '200':
              body:
                Candidates: []
                Language: eng
                Metadata:
                  - Key: ImageDownloadTimeInMs
                    Value: '2239'
                  - Key: ImageSizeInBytes
                    Value: '273405'
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ''
                Text: "IF WE DID \r\nALL \r\nTHE THINGS \r\nWE ARE \r\nCAPABLE \r\nOF DOING, \r\nWE WOULD \r\nLITERALLY \r\nASTOUND \r\nOURSELVE \r\n"
                TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_e68fa0d1-6c83-499d-958c-9abd96263e10
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames?overload=stream':
    post:
      consumes:
        - multipart/form-data
      description: 'Use this method to add frames for a video review.Timescale: This parameter is a factor which is used to convert the timestamp on a frame into milliseconds. Timescale is provided in the output of the Content Moderator video media processor on the Azure Media Services platform.Timescale in the Video Moderation output is Ticks/Second.'
      operationId: Reviews_AddVideoFrameStream
      parameters:
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - description: Your team name.
          in: path
          name: teamName
          required: true
          type: string
        - description: Id of the review.
          in: path
          name: reviewId
          required: true
          type: string
        - description: Timescale of the video .
          in: query
          name: timescale
          required: false
          type: integer
        - description: Zip file containing frame images.
          in: formData
          name: frameImageZip
          required: true
          type: file
        - description: Metadata of the frame.
          in: formData
          name: frameMetadata
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames?overload=url':
    post:
      consumes:
        - application/json
      description: 'Use this method to add frames for a video review.Timescale: This parameter is a factor which is used to convert the timestamp on a frame into milliseconds. Timescale is provided in the output of the Content Moderator video media processor on the Azure Media Services platform.Timescale in the Video Moderation output is Ticks/Second.'
      operationId: Reviews_AddVideoFrameUrl
      parameters:
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/reviewId'
        - $ref: '#/parameters/timescale'
        - $ref: '#/parameters/videoFrameBody'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Add video frame url input request:
          parameters:
            Content-Type: application/json
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: ModeratorTeam
            videoFrameBody:
              - FrameImage: 'https://ae01.alicdn.com/kf/HTB1QMvNMVXXXXbpapXXq6xXFXXXJ/Sexy-Europe-font-b-Racy-b-font-Lingerie-Lace-font-b-Red-b-font-Bow-Bride.jpg'
                Metadata:
                  - Key: apiScoreVal
                    Value: '0.206'
                  - Key: a
                    Value: 'False'
                Timestamp: '2334'
          responses:
            '204':
              headers: {}
  '/contentmoderator/review/v1.0/teams/{teamName}/reviews?overload=video':
    post:
      consumes:
        - application/json
      description: "The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing, results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\": \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\",<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n</p>."
      operationId: Reviews_CreateVideoReviews
      parameters:
        - description: The content type.
          in: header
          name: Content-Type
          required: true
          type: string
        - $ref: '#/parameters/teamName'
        - $ref: '#/parameters/subTeam'
        - $ref: '#/parameters/CreateVideoReviewsBody'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReviewList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
        - Reviews
      x-ms-examples:
        Create video review request:
          parameters:
            Content-Type: application/json
            CreateVideoReviewsBody:
              - CallbackEndpoint: ''
                Content: 'https://rvdevmediaservicetest.streaming.mediaservices.windows.net/6405af61-e9d7-42e9-ac1f-f18ec094dfcb/YouTube_chef_c.ism/manifest'
                ContentId: sample video
                Metadata:
                  - Key: apiScoreVal
                    Value: '0.206'
                  - Key: a
                    Value: 'False'
                  - Key: racyScore
                    Value: '0.151'
                  - Key: r
                    Value: 'False'
                  - Key: ExternalId
                    Value: Video1.mp4
                Status: UnPublished
                Type: Video
                VideoFrames:
                  - FrameImage: 'https://ae01.alicdn.com/kf/HTB1QMvNMVXXXXbpapXXq6xXFXXXJ/Sexy-Europe-font-b-Racy-b-font-Lingerie-Lace-font-b-Red-b-font-Bow-Bride.jpg'
                    Id: frm1
                    Metadata:
                      - Key: apiScoreVal
                        Value: '0.206'
                      - Key: a
                        Value: 'False'
                    ReviewerResultTags: []
                    Timestamp: '2334'
            Endpoint: '{Endpoint}'
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            subTeam: SubteamA
            teamName: ModeratorTeam
          responses:
            '200':
              body:
                - 201709i9srfj128775481f9955033096ddf
              headers: {}
