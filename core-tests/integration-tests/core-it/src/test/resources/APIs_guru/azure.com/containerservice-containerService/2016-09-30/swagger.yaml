swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: The Container Service Client.
  title: ContainerServiceClient
  version: '2016-09-30'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerservice/resource-manager/Microsoft.ContainerService/stable/2016-09-30/containerService.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: containerservice-containerService
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
parameters:
  ApiVersionParameter:
    description: Client Api Version.
    in: query
    name: api-version
    required: true
    type: string
  SubscriptionIdParameter:
    description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices':
    get:
      deprecated: true
      description: 'Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.'
      operationId: ContainerServices_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerServiceListResult'
      summary: Gets a list of container services in the specified subscription.
      tags:
        - ContainerServices
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices':
    get:
      deprecated: true
      description: 'Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.'
      operationId: ContainerServices_ListByResourceGroup
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerServiceListResult'
      summary: Gets a list of container services in the specified resource group.
      tags:
        - ContainerService
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}':
    delete:
      deprecated: true
      description: 'Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.'
      operationId: ContainerServices_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the container service in the specified subscription and resource group.
          in: path
          name: containerServiceName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: Not found
      summary: Deletes the specified container service.
      tags:
        - ContainerService
      x-ms-long-running-operation: true
    get:
      deprecated: true
      description: 'Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. '
      operationId: ContainerServices_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the container service in the specified subscription and resource group.
          in: path
          name: containerServiceName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerService'
      summary: Gets the properties of the specified container service.
      tags:
        - ContainerService
    put:
      deprecated: true
      description: 'Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.'
      operationId: ContainerServices_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the container service in the specified subscription and resource group.
          in: path
          name: containerServiceName
          required: true
          type: string
        - description: Parameters supplied to the Create or Update a Container Service operation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ContainerService'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerService'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ContainerService'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/ContainerService'
      summary: Creates or updates a container service.
      tags:
        - ContainerServices
      x-ms-long-running-operation: true
definitions:
  ContainerService:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Container service.
    properties:
      properties:
        $ref: '#/definitions/ContainerServiceProperties'
        x-ms-client-flatten: true
  ContainerServiceAgentPoolProfile:
    description: Profile for the container service agent pool.
    properties:
      count:
        default: 1
        description: 'Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. '
        format: int32
        maximum: 100
        minimum: 1
        type: integer
      dnsPrefix:
        description: DNS prefix to be used to create the FQDN for the agent pool.
        type: string
      fqdn:
        description: FQDN for the agent pool.
        readOnly: true
        type: string
      name:
        description: Unique name of the agent pool profile in the context of the subscription and resource group.
        type: string
      vmSize:
        description: Size of agent VMs.
        enum:
          - Standard_A0
          - Standard_A1
          - Standard_A2
          - Standard_A3
          - Standard_A4
          - Standard_A5
          - Standard_A6
          - Standard_A7
          - Standard_A8
          - Standard_A9
          - Standard_A10
          - Standard_A11
          - Standard_D1
          - Standard_D2
          - Standard_D3
          - Standard_D4
          - Standard_D11
          - Standard_D12
          - Standard_D13
          - Standard_D14
          - Standard_D1_v2
          - Standard_D2_v2
          - Standard_D3_v2
          - Standard_D4_v2
          - Standard_D5_v2
          - Standard_D11_v2
          - Standard_D12_v2
          - Standard_D13_v2
          - Standard_D14_v2
          - Standard_G1
          - Standard_G2
          - Standard_G3
          - Standard_G4
          - Standard_G5
          - Standard_DS1
          - Standard_DS2
          - Standard_DS3
          - Standard_DS4
          - Standard_DS11
          - Standard_DS12
          - Standard_DS13
          - Standard_DS14
          - Standard_GS1
          - Standard_GS2
          - Standard_GS3
          - Standard_GS4
          - Standard_GS5
        type: string
        x-ms-enum:
          modelAsString: true
          name: ContainerServiceVMSizeTypes
    required:
      - name
      - dnsPrefix
      - count
      - vmSize
  ContainerServiceCustomProfile:
    description: Properties to configure a custom container service cluster.
    properties:
      orchestrator:
        description: The name of the custom orchestrator to use.
        type: string
    required:
      - orchestrator
  ContainerServiceDiagnosticsProfile:
    properties:
      vmDiagnostics:
        $ref: '#/definitions/ContainerServiceVMDiagnostics'
        description: Profile for the container service VM diagnostic agent.
    required:
      - vmDiagnostics
  ContainerServiceLinuxProfile:
    description: Profile for Linux VMs in the container service cluster.
    properties:
      adminUsername:
        description: The administrator username to use for Linux VMs.
        pattern: '^[a-z][a-z0-9_-]*$'
        type: string
      ssh:
        $ref: '#/definitions/ContainerServiceSshConfiguration'
        description: The ssh key configuration for Linux VMs.
    required:
      - adminUsername
      - ssh
  ContainerServiceListResult:
    description: The response from the List Container Services operation.
    properties:
      nextLink:
        description: The URL to get the next set of container service results.
        type: string
      value:
        description: the list of container services.
        items:
          $ref: '#/definitions/ContainerService'
        type: array
  ContainerServiceMasterProfile:
    description: Profile for the container service master.
    properties:
      count:
        default: 1
        description: 'Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.'
        enum:
          - 1
          - 3
          - 5
        format: int32
        type: integer
      dnsPrefix:
        description: DNS prefix to be used to create the FQDN for master.
        type: string
      fqdn:
        description: FQDN for the master.
        readOnly: true
        type: string
    required:
      - dnsPrefix
  ContainerServiceOrchestratorProfile:
    description: Profile for the container service orchestrator.
    properties:
      orchestratorType:
        description: 'The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.'
        enum:
          - Swarm
          - DCOS
          - Custom
          - Kubernetes
        type: string
        x-ms-enum:
          modelAsString: false
          name: ContainerServiceOchestratorTypes
    required:
      - orchestratorType
  ContainerServiceProperties:
    description: Properties of the container service.
    properties:
      agentPoolProfiles:
        description: Properties of the agent pool.
        items:
          $ref: '#/definitions/ContainerServiceAgentPoolProfile'
        type: array
      customProfile:
        $ref: '#/definitions/ContainerServiceCustomProfile'
        description: Properties for custom clusters.
      diagnosticsProfile:
        $ref: '#/definitions/ContainerServiceDiagnosticsProfile'
        description: Properties of the diagnostic agent.
      linuxProfile:
        $ref: '#/definitions/ContainerServiceLinuxProfile'
        description: Properties of Linux VMs.
      masterProfile:
        $ref: '#/definitions/ContainerServiceMasterProfile'
        description: Properties of master agents.
      orchestratorProfile:
        $ref: '#/definitions/ContainerServiceOrchestratorProfile'
        description: Properties of the orchestrator.
      provisioningState:
        description: 'the current deployment or provisioning state, which only appears in the response.'
        readOnly: true
        type: string
      servicePrincipalProfile:
        $ref: '#/definitions/ContainerServiceServicePrincipalProfile'
        description: Properties for cluster service principals.
      windowsProfile:
        $ref: '#/definitions/ContainerServiceWindowsProfile'
        description: Properties of Windows VMs.
    required:
      - masterProfile
      - agentPoolProfiles
      - linuxProfile
  ContainerServiceServicePrincipalProfile:
    description: Information about a service principal identity for the cluster to use for manipulating Azure APIs.
    properties:
      clientId:
        description: The ID for the service principal.
        type: string
      secret:
        description: The secret password associated with the service principal.
        type: string
    required:
      - clientId
      - secret
  ContainerServiceSshConfiguration:
    description: SSH configuration for Linux-based VMs running on Azure.
    properties:
      publicKeys:
        description: the list of SSH public keys used to authenticate with Linux-based VMs.
        items:
          $ref: '#/definitions/ContainerServiceSshPublicKey'
        type: array
    required:
      - publicKeys
  ContainerServiceSshPublicKey:
    description: Contains information about SSH certificate public key data.
    properties:
      keyData:
        description: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
        type: string
    required:
      - keyData
  ContainerServiceVMDiagnostics:
    description: Profile for diagnostics on the container service VMs.
    properties:
      enabled:
        description: Whether the VM diagnostic agent is provisioned on the VM.
        type: boolean
      storageUri:
        description: The URI of the storage account where diagnostics are stored.
        readOnly: true
        type: string
    required:
      - enabled
  ContainerServiceWindowsProfile:
    description: Profile for Windows VMs in the container service cluster.
    properties:
      adminPassword:
        description: The administrator password to use for Windows VMs.
        pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\^&\*\(\)])[a-zA-Z\d!@#$%\^&\*\(\)]{12,123}$'
        type: string
      adminUsername:
        description: The administrator username to use for Windows VMs.
        pattern: '^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$'
        type: string
    required:
      - adminUsername
      - adminPassword
  Resource:
    description: The Resource model definition.
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
      location:
        description: Resource location
        type: string
      name:
        description: Resource name
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
      type:
        description: Resource type
        readOnly: true
        type: string
    required:
      - location
    x-ms-azure-resource: true
