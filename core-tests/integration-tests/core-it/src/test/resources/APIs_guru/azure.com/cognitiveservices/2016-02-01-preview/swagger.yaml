swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: Cognitive Services Management Client
  title: CognitiveServicesManagementClient
  version: 2016-02-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/resource-manager/Microsoft.CognitiveServices/preview/2016-02-01-preview/cognitiveservices.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: cognitiveservices
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
  - text/json
produces:
  - application/json
  - text/json
parameters:
  apiVersionParameter:
    description: Version of the API to be used with the client request. Current version is 2016-02-01-preview
    in: query
    name: api-version
    required: true
    type: string
  subscriptionIdParameter:
    description: Azure Subscription ID.
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/accounts':
    get:
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: CognitiveServicesAccounts_List
      parameters:
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.
            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. 
          examples:
            application/json: |
              {
                "value": [
                  {
                      "id": "{url to resource 1}",
                      "name": "Name1",
                      "type": "Microsoft.CognitiveServices/accounts",
                      "location": "North US"    
                      "kind" : "resource kind",
                          "sku": {
                          "name": "sku code"
                      }, 
                     "etag": "00000000-0000-0000-0000-000000000000",
                      "properties": { }
                  },
                  {
                      "id": "{url to resource 2}",
                      "name": "Name2",
                      "type": "Microsoft.CognitiveServices/accounts",
                      "location": "North US",
                      "kind" : "resource kind",
                          "sku": {
                          "name": "sku code"
                      }, 
                     "etag": "00000000-0000-0000-0000-000000000000",
                      "properties": { }
                  }
                ],
                "nextLink": "{originalRequestUrl}?$skipToken={opaqueString}"
              }
          schema:
            $ref: '#/definitions/CognitiveServicesAccountListResult'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts':
    get:
      description: Returns all the resources of a particular type belonging to a resource group
      operationId: CognitiveServicesAccounts_ListByResourceGroup
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with "value" property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            路 skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            路 top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            路 NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            路 Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          examples:
            application/json: "{\n  \"value\": [\n    {\n        \"id\": \"{url to resource 1}\",\n        \"name\": \"Name1\",\n        \"type\": \"Microsoft.CognitiveServices/accounts\",\n        \"location\": \"North US\"    \n        \"kind\" : \"resource kind\",\n        \"sku\": {\n\t        \"name\": \"sku code\"\n\t  }, \n        \"etag\": \"00000000-0000-0000-0000-000000000000\",\n        \"properties\": { }\n    },\n    {\n        \"id\": \"{url to resource 2}\",\n        \"name\": \"Name2\",\n        \"type\": \"Microsoft.CognitiveServices/accounts\",\n        \"location\": \"North US\",\n        \"kind\" : \"resource kind\",\n        \"sku\": {\n\t        \"name\": \"sku code\"\n\t  }, \n        \"etag\": \"00000000-0000-0000-0000-000000000000\",\n        \"properties\": { }\n    }\n  ],\n  \"nextLink\": \"{originalRequestUrl}?$skipToken={opaqueString}\"\n}"
          schema:
            $ref: '#/definitions/CognitiveServicesAccountListResult'
        default:
          description: 'Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.'
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}':
    delete:
      description: 'Deletes a Cognitive Services account from the resource group. '
      operationId: CognitiveServicesAccounts_Delete
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
          required: true
          type: string
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: A 200 (OK) should be returned if the object exists and was deleted successfully;
        '204':
          description: a 204 (NoContent) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
    get:
      description: Returns a Cognitive Services account specified by the parameters.
      operationId: CognitiveServicesAccounts_GetProperties
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
          required: true
          type: string
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\t路 a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n"
          examples:
            application/json: "{\n  \"id\": \"/subscriptions/{id}/resourceGroups/{group}/providers/{rpns}/{type}/{name}\",\n  \"name\": \"{name}\",\n  \"type\": \"Microsoft.CognitiveServices/accounts\",\n  \"location\": \"North US\",\n  \"tags\": {\n    \"key1\": \"value 1\",\n    \"key2\": \"value 2\"\n   },\n  \"kind\" : \"resource kind\",\n   \"sku\": {\n\t    \"name\": \"sku code\"\n\t} \n  \"etag\": \"00000000-0000-0000-0000-000000000000\",\n  \"properties\": { }\n}"
          schema:
            $ref: '#/definitions/CognitiveServicesAccount'
        default:
          description: 'Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.'
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
    patch:
      description: Updates a Cognitive Services account
      operationId: CognitiveServicesAccounts_Update
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
          required: true
          type: string
        - description: The parameters to provide for the created account.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CognitiveServicesAccountUpdateParameters'
          x-ms-client-flatten: true
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          schema:
            $ref: '#/definitions/CognitiveServicesAccount'
        default:
          description: 'Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.'
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
    put:
      description: Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the keys for developer to access intelligent APIs. It's also the resource type for billing.
      operationId: CognitiveServicesAccounts_Create
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
          required: true
          type: string
        - description: The parameters to provide for the created account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CognitiveServicesAccountCreateParameters'
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: 'If resource is created successfully or already existed, the service should return 200 (OK).'
          schema:
            $ref: '#/definitions/CognitiveServicesAccount'
        '201':
          description: 'If resource is created successfully, the service should return 201 (OK).'
          schema:
            $ref: '#/definitions/CognitiveServicesAccount'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/listKeys':
    post:
      description: Lists the account keys for the specified Cognitive Services account.
      operationId: CognitiveServicesAccounts_ListKeys
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
          required: true
          type: string
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            Returns with a response body containing the subscription keys for the resource: key1
            The first API key for authentication when client calls the API endpoint.

            key2
            The second API key for authentication when client calls the API endpoint.
          examples:
            application/json:
              key1: xxxx
              key2: xxxxx
          schema:
            $ref: '#/definitions/CognitiveServicesAccountKeys'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/regenerateKey':
    post:
      description: Regenerates the specified account key for the specified Cognitive Services account.
      operationId: CognitiveServicesAccounts_RegenerateKey
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
          required: true
          type: string
        - description: regenerate key parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegenerateKeyParameters'
          x-ms-client-flatten: true
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CognitiveServicesAccountKeys'
        default:
          description: Error response describing why the operation failed
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/skus':
    get:
      description: List available SKUs for the requested Cognitive Services account
      operationId: CognitiveServicesAccounts_ListSkus
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
          required: true
          type: string
        - $ref: '#/parameters/apiVersionParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\t路 Free\n\t路 Basic\n\t路 Standard\n\t路 Premium\n"
          examples:
            application/json: |-
              {
                  "value": [
                      {
                          "resourceType": "Microsoft.CognitiveServices/accounts"
                          "sku": {
                              "name": "sku name",
                              "tier": "sku tier"
                          }
                      },
                      {
                          "resourceType": "Microsoft.CognitiveServices/accounts"
                          "sku": {
                              "name": "sku name",
                              "tier": "sku tier"
                          }
                      }
                  ]
              }
          schema:
            $ref: '#/definitions/CognitiveServicesAccountEnumerateSkusResult'
        default:
          description: 'Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.'
          schema:
            $ref: '#/definitions/Error'
      tags:
        - CognitiveServicesAccounts
definitions:
  CognitiveServicesAccount:
    description: 'Cognitive Services Account is an Azure resource representing the provisioned account, its type, location and SKU.'
    properties:
      etag:
        description: Entity Tag
        type: string
      id:
        description: The id of the created account
        type: string
      kind:
        description: Type of cognitive service account.
        type: string
      location:
        description: The location of the resource
        type: string
      name:
        description: The name of the created account
        type: string
      properties:
        $ref: '#/definitions/CognitiveServicesAccountProperties'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
      tags:
        additionalProperties:
          type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
        type: object
      type:
        description: Resource type
        type: string
    type: object
    x-ms-azure-resource: true
  CognitiveServicesAccountCreateParameters:
    description: The parameters to provide for the account.
    properties:
      kind:
        description: Required. Indicates the type of cognitive service account.
        enum:
          - Academic
          - Bing.Autosuggest
          - Bing.Search
          - Bing.Speech
          - Bing.SpellCheck
          - ComputerVision
          - ContentModerator
          - Emotion
          - Face
          - LUIS
          - Recommendations
          - SpeakerRecognition
          - Speech
          - SpeechTranslation
          - TextAnalytics
          - TextTranslation
          - WebLM
        type: string
        x-ms-enum:
          modelAsString: true
          name: Kind
      location:
        description: 'Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update the request will succeed.'
        type: string
      properties:
        $ref: '#/definitions/CognitiveServicesAccountPropertiesCreateParameters'
        description: Must exist in the request. Must not be null.
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
      tags:
        additionalProperties:
          type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
        type: object
    required:
      - sku
      - kind
      - location
      - properties
  CognitiveServicesAccountEnumerateSkusResult:
    description: The list of cognitive services accounts operation response.
    properties:
      value:
        description: Gets the list of Cognitive Services accounts and their properties.
        items:
          $ref: '#/definitions/CognitiveServicesResourceAndSku'
        readOnly: true
        type: array
  CognitiveServicesAccountKeys:
    description: The access keys for the cognitive services account.
    properties:
      key1:
        description: Gets the value of key 1.
        type: string
      key2:
        description: Gets the value of key 2.
        type: string
  CognitiveServicesAccountListResult:
    description: The list of cognitive services accounts operation response.
    properties:
      value:
        description: Gets the list of Cognitive Services accounts and their properties.
        items:
          $ref: '#/definitions/CognitiveServicesAccount'
        readOnly: true
        type: array
  CognitiveServicesAccountProperties:
    properties:
      endpoint:
        description: Endpoint of the created account
        type: string
      provisioningState:
        description: Gets the status of the cognitive services account at the time the operation was called.
        enum:
          - Creating
          - ResolvingDNS
          - Succeeded
          - Failed
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: ProvisioningState
  CognitiveServicesAccountPropertiesCreateParameters:
    description: 'required empty properties object. Must be an empty object, and must exist in the request.'
  CognitiveServicesAccountUpdateParameters:
    description: The parameters to provide for the account.
    properties:
      sku:
        $ref: '#/definitions/Sku'
      tags:
        additionalProperties:
          type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
        type: object
  CognitiveServicesResourceAndSku:
    properties:
      resourceType:
        description: Resource Namespace and Type
        type: string
      sku:
        $ref: '#/definitions/Sku'
  Error:
    properties:
      error:
        $ref: '#/definitions/ErrorBody'
  ErrorBody:
    properties:
      code:
        description: error code
        type: string
      message:
        description: error message
        type: string
    required:
      - code
      - message
  RegenerateKeyParameters:
    description: Regenerate key parameters.
    properties:
      keyName:
        description: key name to generate (Key1|Key2)
        enum:
          - Key1
          - Key2
        type: string
        x-ms-enum:
          modelAsString: false
          name: KeyName
  Sku:
    description: The SKU of the cognitive services account.
    properties:
      name:
        description: 'Gets or sets the sku name. Required for account creation, optional for update.'
        enum:
          - F0
          - P0
          - P1
          - P2
          - S0
          - S1
          - S2
          - S3
          - S4
          - S5
          - S6
        type: string
        x-ms-enum:
          modelAsString: true
          name: SkuName
      tier:
        description: Gets the sku tier. This is based on the SKU name.
        enum:
          - Free
          - Standard
          - Premium
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: SkuTier
    required:
      - name
