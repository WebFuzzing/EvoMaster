swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: Use these REST APIs for querying APIs. Operations and Products by tags in your Azure API Management deployment.
  title: ApiManagementClient
  version: '2018-01-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2018-01-01/apimtagresources.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-apimtagresources
  x-tags:
    - Azure
    - Microsoft
consumes: []
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow.
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters: {}
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources':
    get:
      description: Lists a collection of resources associated with tags.
      operationId: TagResource_ListByService
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
          x-ms-parameter-location: method
        - description: The name of the API Management service.
          in: path
          maxLength: 50
          minLength: 1
          name: serviceName
          pattern: '^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$'
          required: true
          type: string
          x-ms-parameter-location: method
        - description: |-
            | Field       | Supported operators    | Supported functions                         |
            |-------------|------------------------|---------------------------------------------|
            | id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | aid         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | apiName     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | apiRevision | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | path        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | method      | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | urlTemplate | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | terms       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | state       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | isCurrent   | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          in: query
          name: $filter
          required: false
          type: string
        - description: Number of records to return.
          format: int32
          in: query
          minimum: 1
          name: $top
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Number of records to skip.
          format: int32
          in: query
          minimum: 0
          name: $skip
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
        - description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
          in: path
          name: subscriptionId
          required: true
          type: string
      responses:
        '200':
          description: Lists a collection of TagResource entities.
          schema:
            $ref: '#/definitions/TagResourceCollection'
      tags:
        - TagResources
      x-ms-examples:
        ApiManagementListTagResources:
          parameters:
            api-version: '2018-01-01'
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            '200':
              body:
                count: 3
                value:
                  - operation:
                      apiName: Echo API
                      apiRevision: '1'
                      description: A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.
                      id: /apis/echo-api/operations/create-resource
                      method: POST
                      name: Create resource
                      urlTemplate: /resource
                    tag:
                      id: /tags/apitag123
                      name: awesomeTag
                  - api:
                      apiRevision: '1'
                      id: /apis/echo-api
                      isCurrent: true
                      name: Echo API
                      path: echo
                      serviceUrl: 'http://echoapi.cloudapp.net/api'
                    tag:
                      id: /tags/apitag123
                      name: awesomeTag
                  - product:
                      approvalRequired: false
                      description: Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.
                      id: /products/starter
                      name: Starter
                      state: published
                      subscriptionRequired: true
                      subscriptionsLimit: 1
                      terms: ''
                    tag:
                      id: /tags/apitag123
                      name: awesomeTag
      x-ms-odata: '#/definitions/TagResourceContract'
      x-ms-pageable:
        nextLinkName: nextLink
definitions:
  ApiTagResourceContractProperties:
    allOf:
      - description: API base contract details.
        properties:
          apiRevision:
            description: 'Describes the Revision of the Api. If no value is provided, default revision 1 is created'
            maxLength: 100
            minLength: 1
            type: string
          apiRevisionDescription:
            description: Description of the Api Revision.
            maxLength: 256
            type: string
          apiVersion:
            description: Indicates the Version identifier of the API if the API is versioned
            maxLength: 100
            type: string
          apiVersionDescription:
            description: Description of the Api Version.
            maxLength: 256
            type: string
          apiVersionSetId:
            description: A resource identifier for the related ApiVersionSet.
            type: string
          authenticationSettings:
            description: API Authentication Settings.
            properties:
              oAuth2:
                description: API OAuth2 Authentication settings details.
                properties:
                  authorizationServerId:
                    description: OAuth authorization server identifier.
                    type: string
                  scope:
                    description: operations scope.
                    type: string
              openid:
                description: API OAuth2 Authentication settings details.
                properties:
                  bearerTokenSendingMethods:
                    description: How to send token to the server.
                    items:
                      description: 'Form of an authorization grant, which the client uses to request the access token.'
                      enum:
                        - authorizationHeader
                        - query
                      type: string
                      x-ms-enum:
                        modelAsString: true
                        name: bearerTokenSendingMethods
                        values:
                          - description: Access token will be transmitted in the Authorization header using Bearer schema
                            value: authorizationHeader
                          - description: Access token will be transmitted as query parameters.
                            value: query
                    type: array
                  openidProviderId:
                    description: OAuth authorization server identifier.
                    type: string
              subscriptionKeyRequired:
                description: 'Specifies whether subscription key is required during call to this API, true - API is included into closed products only, false - API is included into open products alone, null - there is a mix of products.'
                type: boolean
          description:
            description: Description of the API. May include HTML formatting tags.
            type: string
          isCurrent:
            description: Indicates if API revision is current api revision.
            readOnly: true
            type: boolean
          isOnline:
            description: Indicates if API revision is accessible via the gateway.
            readOnly: true
            type: boolean
          subscriptionKeyParameterNames:
            description: Subscription key parameter names details.
            example:
              subscriptionKeyParameterNames:
                header: customHeaderParameterName
                query: customQueryParameterName
            properties:
              header:
                description: Subscription key header name.
                type: string
              query:
                description: Subscription key query string parameter name.
                type: string
          type:
            description: Type of API.
            enum:
              - http
              - soap
            type: string
            x-ms-client-name: ApiType
            x-ms-enum:
              modelAsString: true
              name: ApiType
    description: API contract properties for the Tag Resources.
    properties:
      id:
        description: 'API identifier in the form /apis/{apiId}.'
        type: string
      name:
        description: API name.
        maxLength: 300
        minLength: 1
        type: string
      path:
        description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
        maxLength: 400
        minLength: 0
        type: string
      protocols:
        description: Describes on which protocols the operations in this API can be invoked.
        items:
          enum:
            - http
            - https
          type: string
          x-ms-enum:
            modelAsString: false
            name: Protocol
        type: array
      serviceUrl:
        description: Absolute URL of the backend service implementing this API.
        maxLength: 2000
        minLength: 1
        type: string
  OperationTagResourceContractProperties:
    description: Operation Entity contract Properties.
    properties:
      apiName:
        description: Api Name.
        readOnly: true
        type: string
      apiRevision:
        description: Api Revision.
        readOnly: true
        type: string
      apiVersion:
        description: Api Version.
        readOnly: true
        type: string
      description:
        description: Operation Description.
        readOnly: true
        type: string
      id:
        description: 'Identifier of the operation in form /operations/{operationId}.'
        type: string
      method:
        description: 'A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.'
        externalDocs:
          description: As defined by RFC.
          url: 'http://www.rfc-editor.org/rfc/rfc7230.txt'
        readOnly: true
        type: string
      name:
        description: Operation name.
        readOnly: true
        type: string
      urlTemplate:
        description: 'Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}'
        readOnly: true
        type: string
  ProductTagResourceContractProperties:
    allOf:
      - description: Product Entity Base Parameters
        properties:
          approvalRequired:
            description: "whether subscription approval is required. If\_false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If\_true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of true."
            type: boolean
          description:
            description: Product description. May include HTML formatting tags.
            maxLength: 1000
            minLength: 1
            type: string
          state:
            description: whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
            enum:
              - notPublished
              - published
            type: string
            x-ms-enum:
              modelAsString: false
              name: ProductState
          subscriptionRequired:
            description: 'Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it''s value is assumed to be true.'
            type: boolean
          subscriptionsLimit:
            description: "Whether the number of subscriptions a user can have to this product at the same time. Set to\_null\_or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of true."
            format: int32
            type: integer
          terms:
            description: Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
            type: string
    description: Product profile.
    properties:
      id:
        description: 'Identifier of the product in the form of /products/{productId}'
        type: string
      name:
        description: Product name.
        maxLength: 300
        minLength: 1
        type: string
    required:
      - name
  TagResourceCollection:
    description: Paged Tag list representation.
    properties:
      count:
        description: Total record count number across all pages.
        format: int64
        type: integer
      nextLink:
        description: Next page link if any.
        type: string
      value:
        description: Page values.
        items:
          $ref: '#/definitions/TagResourceContract'
        type: array
  TagResourceContract:
    description: TagResource contract properties.
    properties:
      api:
        $ref: '#/definitions/ApiTagResourceContractProperties'
        description: Api associated with the tag.
      operation:
        $ref: '#/definitions/OperationTagResourceContractProperties'
        description: Operation associated with the tag.
      product:
        $ref: '#/definitions/ProductTagResourceContractProperties'
        description: Product associated with the tag.
      tag:
        $ref: '#/definitions/TagTagResourceContractProperties'
        description: Tag associated with the resource.
    required:
      - tag
  TagTagResourceContractProperties:
    description: Contract defining the Tag property in the Tag Resource Contract
    properties:
      id:
        description: Tag identifier
        type: string
      name:
        description: Tag Name
        maxLength: 160
        minLength: 1
        type: string
