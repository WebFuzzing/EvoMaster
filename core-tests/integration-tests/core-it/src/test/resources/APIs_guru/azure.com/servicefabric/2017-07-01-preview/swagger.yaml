swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: Azure Service Fabric Resource Provider API Client
  title: ServiceFabricManagementClient
  version: 2017-07-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabric/resource-manager/Microsoft.ServiceFabric/preview/2017-07-01-preview/servicefabric.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: servicefabric
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  api-version:
    description: The version of the API.
    in: query
    name: api-version
    required: true
    type: string
    x-ms-parameter-location: method
  applicationName:
    description: The name of the application resource.
    in: path
    name: applicationName
    required: true
    type: string
    x-ms-parameter-location: method
  applicationTypeName:
    description: The name of the application type name resource
    in: path
    name: applicationTypeName
    required: true
    type: string
    x-ms-parameter-location: method
  clusterNameParameter:
    description: The name of the cluster resource
    in: path
    name: clusterName
    required: true
    type: string
    x-ms-parameter-location: method
  clusterVersion:
    description: The cluster code version
    in: path
    name: clusterVersion
    required: true
    type: string
    x-ms-parameter-location: method
  environment:
    description: 'Cluster operating system, the default means all'
    enum:
      - Windows
      - Linux
    in: path
    name: environment
    required: true
    type: string
    x-ms-parameter-location: method
  locationForClusterCodeVersions:
    description: 'The location for the cluster code versions, this is different from cluster location'
    in: path
    name: location
    required: true
    type: string
    x-ms-parameter-location: method
  resourceGroupNameParameter:
    description: The name of the resource group.
    in: path
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  serviceName:
    description: 'The name of the service resource in the format of {applicationName}~{serviceName}.'
    in: path
    name: serviceName
    required: true
    type: string
    x-ms-parameter-location: method
  subscriptionId:
    description: The customer subscription identifier
    in: path
    name: subscriptionId
    required: true
    type: string
    x-ms-parameter-location: method
  version:
    description: The application type version.
    in: path
    name: version
    required: true
    type: string
    x-ms-parameter-location: method
paths:
  /providers/Microsoft.ServiceFabric/operations:
    get:
      description: ''
      operationId: Operations_List
      parameters:
        - description: The version of the ServiceFabric resource provider api
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: OK. The request has succeeded.
          schema:
            $ref: '#/definitions/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/ErrorModel'
      summary: Lists all of the available ServiceFabric Resource Manager REST API operations.
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters':
    get:
      description: |
        List cluster resource
      operationId: Clusters_List
      parameters:
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
      responses:
        '200':
          description: OK - Get cluster  successfully
          schema:
            $ref: '#/definitions/ClusterListResult'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorModel'
      summary: List cluster resource
      tags:
        - Cluster
      x-ms-examples:
        List clusters:
          parameters:
            api-version: 2017-07-01-preview
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                nextLink: ''
                value:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                    location: eastus
                    name: myCluster
                    properties:
                      addOnFeatures:
                        - RepairManager
                        - DnsService
                      availableClusterVersions:
                        - codeVersion: 6.0.219.9494
                          environment: Windows
                          supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                      azureActiveDirectory:
                        clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                        clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                        tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                      certificate:
                        thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                        thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                        x509StoreName: My
                      clientCertificateCommonNames:
                        - certificateCommonName: abc.com
                          certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                          isAdmin: true
                      clientCertificateThumbprints:
                        - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                          isAdmin: false
                      clusterCodeVersion: 6.0.219.9494
                      clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                      clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                      clusterState: WaitingForNodes
                      diagnosticsStorageAccountConfig:
                        blobEndpoint: 'https://diag.blob.core.windows.net/'
                        protectedAccountKeyName: StorageAccountKey1
                        queueEndpoint: 'https://diag.queue.core.windows.net/'
                        storageAccountName: diag
                        tableEndpoint: 'https://diag.table.core.windows.net/'
                      fabricSettings:
                        - name: UpgradeService
                          parameters:
                            - name: AppPollIntervalInSeconds
                              value: '60'
                      managementEndpoint: 'https://myCluster.eastus.cloudapp.azure.com:19080'
                      nodeTypes:
                        - applicationPorts:
                            endPort: 30000
                            startPort: 20000
                          clientConnectionEndpointPort: 19000
                          durabilityLevel: Bronze
                          ephemeralPorts:
                            endPort: 64000
                            startPort: 49000
                          httpGatewayEndpointPort: 19007
                          isPrimary: true
                          name: nt1vm
                          vmInstanceCount: 5
                      provisioningState: Succeeded
                      reliabilityLevel: Silver
                      reverseProxyCertificate:
                        thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                        thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                        x509StoreName: My
                      upgradeDescription:
                        forceRestart: true
                        healthCheckRetryTimeout: '00:05:00'
                        healthCheckStableDuration: '00:00:30'
                        healthCheckWaitDuration: '00:00:30'
                        healthPolicy:
                          maxPercentUnhealthyApplications: 100
                          maxPercentUnhealthyNodes: 100
                        upgradeDomainTimeout: '00:15:00'
                        upgradeReplicaSetCheckTimeout: '00:10:00'
                        upgradeTimeout: '00:15:00'
                      upgradeMode: Manual
                      vmImage: Windows
                    type: Microsoft.ServiceFabric/clusters
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster2
                    location: eastus
                    name: myCluster2
                    properties:
                      addOnFeatures:
                        - RepairManager
                      availableClusterVersions:
                        - codeVersion: 6.0.127.1
                          environment: Linux
                          supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                      clientCertificateCommonNames: []
                      clientCertificateThumbprints: []
                      clusterCodeVersion: 6.0.127.1
                      clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                      clusterId: 2747e469-b24e-4039-8a0a-46151419523f
                      clusterState: WaitingForNodes
                      diagnosticsStorageAccountConfig:
                        blobEndpoint: 'https://diag.blob.core.windows.net/'
                        protectedAccountKeyName: StorageAccountKey1
                        queueEndpoint: 'https://diag.queue.core.windows.net/'
                        storageAccountName: diag
                        tableEndpoint: 'https://diag.table.core.windows.net/'
                      fabricSettings:
                        - name: UpgradeService
                          parameters:
                            - name: AppPollIntervalInSeconds
                              value: '60'
                      managementEndpoint: 'http://myCluster2.eastus.cloudapp.azure.com:19080'
                      nodeTypes:
                        - applicationPorts:
                            endPort: 30000
                            startPort: 20000
                          clientConnectionEndpointPort: 19000
                          durabilityLevel: Bronze
                          ephemeralPorts:
                            endPort: 64000
                            startPort: 49000
                          httpGatewayEndpointPort: 19007
                          isPrimary: true
                          name: nt1vm
                          vmInstanceCount: 5
                      provisioningState: Succeeded
                      reliabilityLevel: Silver
                      upgradeDescription:
                        deltaHealthPolicy:
                          maxPercentDeltaUnhealthyApplications: 0
                          maxPercentDeltaUnhealthyNodes: 0
                          maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                        forceRestart: false
                        healthCheckRetryTimeout: '00:45:00'
                        healthCheckStableDuration: '00:05:00'
                        healthCheckWaitDuration: '00:05:00'
                        healthPolicy:
                          maxPercentUnhealthyApplications: 100
                          maxPercentUnhealthyNodes: 100
                        upgradeDomainTimeout: '02:00:00'
                        upgradeReplicaSetCheckTimeout: '10675199.02:48:05.4775807'
                        upgradeTimeout: '12:00:00'
                      upgradeMode: Manual
                      vmImage: linux
                    type: Microsoft.ServiceFabric/clusters
              headers: {}
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions':
    get:
      description: |
        List cluster code versions by location
      operationId: ClusterVersions_List
      parameters:
        - $ref: '#/parameters/locationForClusterCodeVersions'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
      responses:
        '200':
          description: OK - List cluster code versions successfully
          schema:
            $ref: '#/definitions/ClusterCodeVersionsListResult'
      summary: List cluster code versions by location
      tags:
        - ClusterVersion
      x-ms-examples:
        List cluster versions:
          parameters:
            api-version: 2017-07-01-preview
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                value:
                  - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                    name: 6.0.219.9494
                    properties:
                      codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                    type: Microsoft.ServiceFabric/locations/environments/clusterVersions
                  - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Linux/clusterVersions/6.0.127.1
                    name: 6.0.127.1
                    properties:
                      codeVersion: 6.0.127.1
                      environment: Linux
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                    type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}':
    get:
      description: |
        Get cluster code versions by location
      operationId: ClusterVersions_Get
      parameters:
        - $ref: '#/parameters/locationForClusterCodeVersions'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
        - $ref: '#/parameters/clusterVersion'
      responses:
        '200':
          description: OK - Get cluster code versions successfully
          schema:
            $ref: '#/definitions/ClusterCodeVersionsListResult'
      summary: Get cluster code versions
      tags:
        - ClusterVersion
      x-ms-examples:
        Get cluster version:
          parameters:
            api-version: 2017-07-01-preview
            clusterVersion: 6.0.219.9494
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                value:
                  - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                    name: 6.0.219.9494
                    properties:
                      codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                    type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions':
    get:
      description: |
        List cluster code versions by environment
      operationId: ClusterVersions_ListByEnvironment
      parameters:
        - $ref: '#/parameters/locationForClusterCodeVersions'
        - $ref: '#/parameters/environment'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
      responses:
        '200':
          description: OK - List cluster code versions successfully
          schema:
            $ref: '#/definitions/ClusterCodeVersionsListResult'
      summary: List cluster code versions by environment
      tags:
        - ClusterVersion
      x-ms-examples:
        List cluster versions by environment:
          parameters:
            api-version: 2017-07-01-preview
            environment: Windows
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                value:
                  - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                    name: 6.0.219.9494
                    properties:
                      codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                    type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}':
    get:
      description: |
        Get cluster code versions by environment
      operationId: ClusterVersions_GetByEnvironment
      parameters:
        - $ref: '#/parameters/locationForClusterCodeVersions'
        - $ref: '#/parameters/environment'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
        - $ref: '#/parameters/clusterVersion'
      responses:
        '200':
          description: OK - Get cluster code versions successfully
          schema:
            $ref: '#/definitions/ClusterCodeVersionsListResult'
      summary: Get cluster code versions by environment
      tags:
        - ClusterVersion
      x-ms-examples:
        Get cluster version by environment:
          parameters:
            api-version: 2017-07-01-preview
            clusterVersion: 6.0.219.9494
            environment: Windows
            location: eastus
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                value:
                  - id: subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/environments/Windows/clusterVersions/6.0.219.9494
                    name: 6.0.219.9494
                    properties:
                      codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                    type: Microsoft.ServiceFabric/locations/environments/clusterVersions
              headers: {}
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}':
    delete:
      description: |
        Delete cluster resource
      operationId: Clusters_Delete
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/clusterNameParameter'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
      responses:
        '200':
          description: OK - cluster deleted successfully
        '204':
          description: NoContent - cluster does not exist
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorModel'
      summary: Delete cluster resource
      tags:
        - Cluster
      x-ms-examples:
        Delete a cluster:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              headers: {}
            '204': {}
    get:
      description: |
        Get cluster resource
      operationId: Clusters_Get
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/clusterNameParameter'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
      responses:
        '200':
          description: OK - Get cluster successfully
          schema:
            $ref: '#/definitions/Cluster'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorModel'
      summary: Get cluster resource
      tags:
        - Cluster
      x-ms-examples:
        Get a cluster:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  addOnFeatures:
                    - RepairManager
                    - DnsService
                  availableClusterVersions:
                    - codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                  azureActiveDirectory:
                    clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                    clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                    tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                  certificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  clientCertificateCommonNames:
                    - certificateCommonName: abc.com
                      certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: true
                  clientCertificateThumbprints:
                    - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: false
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: 'https://diag.blob.core.windows.net/'
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: 'https://diag.queue.core.windows.net/'
                    storageAccountName: diag
                    tableEndpoint: 'https://diag.table.core.windows.net/'
                  fabricSettings:
                    - name: UpgradeService
                      parameters:
                        - name: AppPollIntervalInSeconds
                          value: '60'
                  managementEndpoint: 'https://myCluster.eastus.cloudapp.azure.com:19080'
                  nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                  provisioningState: Succeeded
                  reliabilityLevel: Silver
                  reverseProxyCertificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: true
                    healthCheckRetryTimeout: '00:05:00'
                    healthCheckStableDuration: '00:00:30'
                    healthCheckWaitDuration: '00:00:30'
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: '00:15:00'
                    upgradeReplicaSetCheckTimeout: '00:10:00'
                    upgradeTimeout: '00:15:00'
                  upgradeMode: Manual
                  vmImage: Windows
                type: Microsoft.ServiceFabric/clusters
              headers: {}
    patch:
      description: |
        Update cluster configuration
      operationId: Clusters_Update
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/clusterNameParameter'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
        - description: The parameters which contains the property value and property name which used to update the cluster configuration.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ClusterUpdateParameters'
          x-ms-parameter-location: method
      responses:
        '200':
          description: OK - Cluster updated successfully
          schema:
            $ref: '#/definitions/Cluster'
        '202':
          description: Accepted - Update request accepted; the operation will complete asynchronously.
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorModel'
      summary: Update cluster configuration
      tags:
        - Cluster
      x-ms-examples:
        Patch a cluster:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            parameters:
              properties:
                addOnFeatures: []
                nodeTypes:
                  - applicationPorts:
                      endPort: 30000
                      startPort: 20000
                    clientConnectionEndpointPort: 19000
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 64000
                      startPort: 49000
                    httpGatewayEndpointPort: 19007
                    isPrimary: true
                    name: nt1vm
                    vmInstanceCount: 5
                  - applicationPorts:
                      endPort: 2000
                      startPort: 1000
                    clientConnectionEndpointPort: 0
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 4000
                      startPort: 3000
                    httpGatewayEndpointPort: 0
                    isPrimary: false
                    name: testnt1
                    vmInstanceCount: 3
                reliabilityLevel: Bronze
                upgradeMode: Automatic
              tags:
                a: b
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  addOnFeatures: []
                  availableClusterVersions:
                    - codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                  clientCertificateCommonNames: []
                  clientCertificateThumbprints: []
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: 'https://diag.blob.core.windows.net/'
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: 'https://diag.queue.core.windows.net/'
                    storageAccountName: diag
                    tableEndpoint: 'https://diag.table.core.windows.net/'
                  fabricSettings:
                    - name: UpgradeService
                      parameters:
                        - name: AppPollIntervalInSeconds
                          value: '60'
                  managementEndpoint: 'http://myCluster.eastus.cloudapp.azure.com:19080'
                  nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                    - applicationPorts:
                        endPort: 2000
                        startPort: 1000
                      clientConnectionEndpointPort: 0
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 4000
                        startPort: 3000
                      httpGatewayEndpointPort: 0
                      isPrimary: false
                      name: testnt1
                      vmInstanceCount: 3
                  provisioningState: Succeeded
                  reliabilityLevel: Bronze
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: false
                    healthCheckRetryTimeout: '00:45:00'
                    healthCheckStableDuration: '00:05:00'
                    healthCheckWaitDuration: '00:05:00'
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: '02:00:00'
                    upgradeReplicaSetCheckTimeout: '10675199.02:48:05.4775807'
                    upgradeTimeout: '12:00:00'
                  upgradeMode: Automatic
                tags:
                  a: b
                type: Microsoft.ServiceFabric/clusters
              headers:
                Location: 'http://10.91.140.224/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/operationResults/1ca6e48d-70ca-4e43-b652-3b0522f64d67?api-version=2017-07-01-privatepreview'
                Retry-After: '10'
            '202': {}
      x-ms-long-running-operation: true
    put:
      description: |
        Create cluster resource
      operationId: Clusters_Create
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/clusterNameParameter'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
        - description: The cluster resource.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/Cluster'
          x-ms-parameter-location: method
      responses:
        '200':
          description: OK - Put cluster successfully
          schema:
            $ref: '#/definitions/Cluster'
        '202':
          description: Accepted - Put request accepted; the operation will complete asynchronously.
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorModel'
      summary: Create a ServiceFabric cluster
      tags:
        - Cluster
      x-ms-examples:
        Put a cluster with max parameter:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            parameters:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
              location: eastus
              name: myCluster
              properties:
                addOnFeatures:
                  - RepairManager
                  - DnsService
                azureActiveDirectory:
                  clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                  clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                  tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                certificate:
                  thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                  thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                  x509StoreName: My
                clientCertificateCommonNames:
                  - certificateCommonName: abc.com
                    certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    isAdmin: true
                clientCertificateThumbprints:
                  - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    isAdmin: false
                clusterCodeVersion: 6.0.219.9494
                diagnosticsStorageAccountConfig:
                  blobEndpoint: 'https://diag.blob.core.windows.net/'
                  protectedAccountKeyName: StorageAccountKey1
                  queueEndpoint: 'https://diag.queue.core.windows.net/'
                  storageAccountName: diag
                  tableEndpoint: 'https://diag.table.core.windows.net/'
                fabricSettings:
                  - name: UpgradeService
                    parameters:
                      - name: AppPollIntervalInSeconds
                        value: '60'
                managementEndpoint: 'https://myCluster.eastus.cloudapp.azure.com:19080'
                nodeTypes:
                  - applicationPorts:
                      endPort: 30000
                      startPort: 20000
                    clientConnectionEndpointPort: 19000
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 64000
                      startPort: 49000
                    httpGatewayEndpointPort: 19007
                    isPrimary: true
                    name: nt1vm
                    vmInstanceCount: 5
                reliabilityLevel: Silver
                reverseProxyCertificate:
                  thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                  thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                  x509StoreName: My
                upgradeDescription:
                  deltaHealthPolicy:
                    maxPercentDeltaUnhealthyApplications: 0
                    maxPercentDeltaUnhealthyNodes: 0
                    maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                  forceRestart: true
                  healthCheckRetryTimeout: '00:05:00'
                  healthCheckStableDuration: '00:00:30'
                  healthCheckWaitDuration: '00:00:30'
                  healthPolicy:
                    maxPercentUnhealthyApplications: 100
                    maxPercentUnhealthyNodes: 100
                  upgradeDomainTimeout: '00:15:00'
                  upgradeReplicaSetCheckTimeout: '00:10:00'
                  upgradeTimeout: '00:15:00'
                upgradeMode: Manual
                vmImage: Windows
              type: Microsoft.ServiceFabric/clusters
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  addOnFeatures:
                    - RepairManager
                    - DnsService
                  availableClusterVersions:
                    - codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                  azureActiveDirectory:
                    clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                    clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                    tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                  certificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  clientCertificateCommonNames:
                    - certificateCommonName: abc.com
                      certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: true
                  clientCertificateThumbprints:
                    - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                      isAdmin: false
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: 'https://diag.blob.core.windows.net/'
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: 'https://diag.queue.core.windows.net/'
                    storageAccountName: diag
                    tableEndpoint: 'https://diag.table.core.windows.net/'
                  fabricSettings:
                    - name: UpgradeService
                      parameters:
                        - name: AppPollIntervalInSeconds
                          value: '60'
                  managementEndpoint: 'https://myCluster.eastus.cloudapp.azure.com:19080'
                  nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                  provisioningState: Succeeded
                  reliabilityLevel: Silver
                  reverseProxyCertificate:
                    thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                    thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                    x509StoreName: My
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: true
                    healthCheckRetryTimeout: '00:05:00'
                    healthCheckStableDuration: '00:00:30'
                    healthCheckWaitDuration: '00:00:30'
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: '00:15:00'
                    upgradeReplicaSetCheckTimeout: '00:10:00'
                    upgradeTimeout: '00:15:00'
                  upgradeMode: Manual
                  vmImage: Windows
                type: Microsoft.ServiceFabric/clusters
              headers:
                Location: 'http://10.91.140.224/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/operationResults/4b5f6709-bc12-4365-8df3-894984b2a221?api-version=2017-07-01-privatepreview'
                Retry-After: '10'
            '202': {}
        Put a cluster with min parameter:
          parameters:
            api-version: 2017-07-01-preview
            clusterName: myCluster
            parameters:
              id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
              location: eastus
              name: myCluster
              properties:
                diagnosticsStorageAccountConfig:
                  blobEndpoint: 'https://diag.blob.core.windows.net/'
                  protectedAccountKeyName: StorageAccountKey1
                  queueEndpoint: 'https://diag.queue.core.windows.net/'
                  storageAccountName: diag
                  tableEndpoint: 'https://diag.table.core.windows.net/'
                fabricSettings:
                  - name: UpgradeService
                    parameters:
                      - name: AppPollIntervalInSeconds
                        value: '60'
                managementEndpoint: 'http://myCluster.eastus.cloudapp.azure.com:19080'
                nodeTypes:
                  - applicationPorts:
                      endPort: 30000
                      startPort: 20000
                    clientConnectionEndpointPort: 19000
                    durabilityLevel: Bronze
                    ephemeralPorts:
                      endPort: 64000
                      startPort: 49000
                    httpGatewayEndpointPort: 19007
                    isPrimary: true
                    name: nt1vm
                    vmInstanceCount: 5
                reliabilityLevel: Silver
                upgradeMode: Automatic
              type: Microsoft.ServiceFabric/clusters
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                location: eastus
                name: myCluster
                properties:
                  availableClusterVersions:
                    - codeVersion: 6.0.219.9494
                      environment: Windows
                      supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                  clientCertificateCommonNames: []
                  clientCertificateThumbprints: []
                  clusterCodeVersion: 6.0.219.9494
                  clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                  clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                  clusterState: WaitingForNodes
                  diagnosticsStorageAccountConfig:
                    blobEndpoint: 'https://diag.blob.core.windows.net/'
                    protectedAccountKeyName: StorageAccountKey1
                    queueEndpoint: 'https://diag.queue.core.windows.net/'
                    storageAccountName: diag
                    tableEndpoint: 'https://diag.table.core.windows.net/'
                  fabricSettings:
                    - name: UpgradeService
                      parameters:
                        - name: AppPollIntervalInSeconds
                          value: '60'
                  managementEndpoint: 'http://myCluster.eastus.cloudapp.azure.com:19080'
                  nodeTypes:
                    - applicationPorts:
                        endPort: 30000
                        startPort: 20000
                      clientConnectionEndpointPort: 19000
                      durabilityLevel: Bronze
                      ephemeralPorts:
                        endPort: 64000
                        startPort: 49000
                      httpGatewayEndpointPort: 19007
                      isPrimary: true
                      name: nt1vm
                      vmInstanceCount: 5
                  provisioningState: Succeeded
                  reliabilityLevel: Silver
                  upgradeDescription:
                    deltaHealthPolicy:
                      maxPercentDeltaUnhealthyApplications: 0
                      maxPercentDeltaUnhealthyNodes: 0
                      maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                    forceRestart: false
                    healthCheckRetryTimeout: '00:45:00'
                    healthCheckStableDuration: '00:05:00'
                    healthCheckWaitDuration: '00:05:00'
                    healthPolicy:
                      maxPercentUnhealthyApplications: 100
                      maxPercentUnhealthyNodes: 100
                    upgradeDomainTimeout: '02:00:00'
                    upgradeReplicaSetCheckTimeout: '10675199.02:48:05.4775807'
                    upgradeTimeout: '12:00:00'
                  upgradeMode: Automatic
                type: Microsoft.ServiceFabric/clusters
              headers: {}
            '202': {}
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters':
    get:
      description: |
        List cluster resource by resource group
      operationId: Clusters_ListByResourceGroup
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/api-version'
        - $ref: '#/parameters/subscriptionId'
      responses:
        '200':
          description: OK - Get cluster  successfully
          schema:
            $ref: '#/definitions/ClusterListResult'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorModel'
      summary: List cluster resource by resource group
      tags:
        - Cluster
      x-ms-examples:
        List cluster by resource group:
          parameters:
            api-version: 2017-07-01-preview
            resourceGroupName: resRg
            subscriptionId: 00000000-0000-0000-0000-000000000000
          responses:
            '200':
              body:
                value:
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster
                    location: eastus
                    name: myCluster
                    properties:
                      addOnFeatures:
                        - RepairManager
                        - DnsService
                      availableClusterVersions:
                        - codeVersion: 6.0.219.9494
                          environment: Windows
                          supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                      azureActiveDirectory:
                        clientApplication: d151ad89-4bce-4ae8-b3d1-1dc79679fa75
                        clusterApplication: 5886372e-7bf4-4878-a497-8098aba608ae
                        tenantId: 6abcc6a0-8666-43f1-87b8-172cf86a9f9c
                      certificate:
                        thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                        thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                        x509StoreName: My
                      clientCertificateCommonNames:
                        - certificateCommonName: abc.com
                          certificateIssuerThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                          isAdmin: true
                      clientCertificateThumbprints:
                        - certificateThumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                          isAdmin: false
                      clusterCodeVersion: 6.0.219.9494
                      clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                      clusterId: 92584666-9889-4ae8-8d02-91902923d37f
                      clusterState: WaitingForNodes
                      diagnosticsStorageAccountConfig:
                        blobEndpoint: 'https://diag.blob.core.windows.net/'
                        protectedAccountKeyName: StorageAccountKey1
                        queueEndpoint: 'https://diag.queue.core.windows.net/'
                        storageAccountName: diag
                        tableEndpoint: 'https://diag.table.core.windows.net/'
                      fabricSettings:
                        - name: UpgradeService
                          parameters:
                            - name: AppPollIntervalInSeconds
                              value: '60'
                      managementEndpoint: 'https://myCluster.eastus.cloudapp.azure.com:19080'
                      nodeTypes:
                        - applicationPorts:
                            endPort: 30000
                            startPort: 20000
                          clientConnectionEndpointPort: 19000
                          durabilityLevel: Bronze
                          ephemeralPorts:
                            endPort: 64000
                            startPort: 49000
                          httpGatewayEndpointPort: 19007
                          isPrimary: true
                          name: nt1vm
                          vmInstanceCount: 5
                      provisioningState: Succeeded
                      reliabilityLevel: Silver
                      reverseProxyCertificate:
                        thumbprint: 5F3660C715EBBDA31DB1FFDCF508302348DE8E7A
                        thumbprintSecondary: 361A93445450CC8F2FF747F74500E8044942DAFD
                        x509StoreName: My
                      upgradeDescription:
                        forceRestart: true
                        healthCheckRetryTimeout: '00:05:00'
                        healthCheckStableDuration: '00:00:30'
                        healthCheckWaitDuration: '00:00:30'
                        healthPolicy:
                          maxPercentUnhealthyApplications: 100
                          maxPercentUnhealthyNodes: 100
                        upgradeDomainTimeout: '00:15:00'
                        upgradeReplicaSetCheckTimeout: '00:10:00'
                        upgradeTimeout: '00:15:00'
                      upgradeMode: Manual
                      vmImage: Windows
                    type: Microsoft.ServiceFabric/clusters
                  - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster2
                    location: eastus
                    name: myCluster2
                    properties:
                      addOnFeatures:
                        - RepairManager
                      availableClusterVersions:
                        - codeVersion: 6.0.127.1
                          environment: Linux
                          supportExpiryUtc: '9999-12-31T23:59:59.9999999'
                      clientCertificateCommonNames: []
                      clientCertificateThumbprints: []
                      clusterCodeVersion: 6.0.127.1
                      clusterEndpoint: 'https://eastus.servicefabric.azure.com'
                      clusterId: 2747e469-b24e-4039-8a0a-46151419523f
                      clusterState: WaitingForNodes
                      diagnosticsStorageAccountConfig:
                        blobEndpoint: 'https://diag.blob.core.windows.net/'
                        protectedAccountKeyName: StorageAccountKey1
                        queueEndpoint: 'https://diag.queue.core.windows.net/'
                        storageAccountName: diag
                        tableEndpoint: 'https://diag.table.core.windows.net/'
                      fabricSettings:
                        - name: UpgradeService
                          parameters:
                            - name: AppPollIntervalInSeconds
                              value: '60'
                      managementEndpoint: 'http://myCluster2.eastus.cloudapp.azure.com:19080'
                      nodeTypes:
                        - applicationPorts:
                            endPort: 30000
                            startPort: 20000
                          clientConnectionEndpointPort: 19000
                          durabilityLevel: Bronze
                          ephemeralPorts:
                            endPort: 64000
                            startPort: 49000
                          httpGatewayEndpointPort: 19007
                          isPrimary: true
                          name: nt1vm
                          vmInstanceCount: 5
                      provisioningState: Succeeded
                      reliabilityLevel: Silver
                      upgradeDescription:
                        deltaHealthPolicy:
                          maxPercentDeltaUnhealthyApplications: 0
                          maxPercentDeltaUnhealthyNodes: 0
                          maxPercentUpgradeDomainDeltaUnhealthyNodes: 0
                        forceRestart: false
                        healthCheckRetryTimeout: '00:45:00'
                        healthCheckStableDuration: '00:05:00'
                        healthCheckWaitDuration: '00:05:00'
                        healthPolicy:
                          maxPercentUnhealthyApplications: 100
                          maxPercentUnhealthyNodes: 100
                        upgradeDomainTimeout: '02:00:00'
                        upgradeReplicaSetCheckTimeout: '10675199.02:48:05.4775807'
                        upgradeTimeout: '12:00:00'
                      upgradeMode: Manual
                      vmImage: linux
                    type: Microsoft.ServiceFabric/clusters
              headers: {}
definitions:
  AddOnFeatures:
    description: Available cluster add-on features
    enum:
      - RepairManager
      - DnsService
      - BackupRestoreService
    type: string
  ApplicationHealthPolicy:
    description: |
      Defines a health policy used to evaluate the health of an application or one of its children entities.
    properties:
      ConsiderWarningAsError:
        default: false
        description: Indicates whether warnings are treated with the same severity as errors.
        type: boolean
      DefaultServiceTypeHealthPolicy:
        $ref: '#/definitions/ServiceTypeHealthPolicy'
      MaxPercentUnhealthyDeployedApplications:
        default: 0
        description: |
          The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
          The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
          This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
          The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
        type: integer
      ServiceTypeHealthPolicyMap:
        $ref: '#/definitions/ServiceTypeHealthPolicyMap'
    type: object
  ApplicationMetricDescription:
    description: |
      Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.
    properties:
      MaximumCapacity:
        description: |
          The maximum node capacity for Service Fabric application.
          This is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.
          If set to zero, capacity for this metric is unlimited on each node.
          When creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
          When updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
        format: int64
        type: integer
      Name:
        description: The name of the metric.
        type: string
      ReservationCapacity:
        description: |
          The node reservation capacity for Service Fabric application.
          This is the amount of load which is reserved on nodes which have instances of this application.
          If MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.
          If set to zero, no capacity is reserved for this metric.
          When setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.
        format: int64
        type: integer
      TotalApplicationCapacity:
        description: |
          The total metric capacity for Service Fabric application.
          This is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.
          When creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.
        format: int64
        type: integer
    type: object
  ApplicationMetricDescriptionList:
    description: List of application capacity metric description.
    items:
      $ref: '#/definitions/ApplicationMetricDescription'
    type: array
  ApplicationParameter:
    description: Describes an application parameter override to be applied when creating or upgrading an application.
    properties:
      Key:
        description: The name of the parameter.
        type: string
      Value:
        description: The value of the parameter.
        type: string
    required:
      - Key
      - Value
    type: object
  ApplicationParameterList:
    description: List of application parameters with overridden values from their default values specified in the application manifest.
    items:
      $ref: '#/definitions/ApplicationParameter'
    type: array
  ApplicationProperties:
    allOf:
      - $ref: '#/definitions/ApplicationUpdateProperties'
    description: The application resource properties.
    properties:
      provisioningState:
        description: 'The current deployment or provisioning state, which only appears in the response'
        readOnly: true
        type: string
      typeName:
        $ref: '#/definitions/ApplicationTypeName'
  ApplicationResource:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: The application resource.
    properties:
      properties:
        $ref: '#/definitions/ApplicationProperties'
        x-ms-client-flatten: true
  ApplicationResourceList:
    description: The list of application resources.
    properties:
      value:
        items:
          $ref: '#/definitions/ApplicationResource'
        type: array
  ApplicationResourceUpdate:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: The application resource for patch operations.
    properties:
      properties:
        $ref: '#/definitions/ApplicationUpdateProperties'
        x-ms-client-flatten: true
  ApplicationTypeName:
    description: The application type name as defined in the application manifest.
    type: string
  ApplicationTypeParameterList:
    description: List of application type parameters that can be overridden when creating or updating the application.
    items:
      $ref: '#/definitions/ApplicationParameter'
    type: array
  ApplicationTypeProperties:
    description: The application type name properties
    properties:
      provisioningState:
        description: 'The current deployment or provisioning state, which only appears in the response.'
        readOnly: true
        type: string
  ApplicationTypeResource:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: The application type name resource
    properties:
      properties:
        $ref: '#/definitions/ApplicationTypeProperties'
        x-ms-client-flatten: true
  ApplicationTypeResourceList:
    description: The list of application type names.
    properties:
      value:
        items:
          $ref: '#/definitions/ApplicationTypeResource'
        type: array
  ApplicationTypeVersion:
    description: The version of the application type as defined in the application manifest.
    type: string
  ApplicationUpdateProperties:
    description: The application resource properties for patch operations.
    properties:
      maximumNodes:
        default: 0
        description: 'The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.'
        format: int64
        minimum: 0
        type: integer
      metrics:
        $ref: '#/definitions/ApplicationMetricDescriptionList'
      minimumNodes:
        description: 'The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.'
        format: int64
        minimum: 0
        type: integer
      parameters:
        $ref: '#/definitions/ApplicationParameterList'
      removeApplicationCapacity:
        description: The version of the application type
        type: boolean
      typeVersion:
        $ref: '#/definitions/ApplicationTypeVersion'
      upgradePolicy:
        $ref: '#/definitions/ApplicationUpgradePolicy'
  ApplicationUpgradePolicy:
    description: Describes the policy for a monitored application upgrade.
    properties:
      applicationHealthPolicy:
        $ref: '#/definitions/ApplicationHealthPolicy'
      forceRestart:
        $ref: '#/definitions/ForceRestart'
      rollingUpgradeMonitoringPolicy:
        $ref: '#/definitions/RollingUpgradeMonitoringPolicy'
      upgradeReplicaSetCheckTimeout:
        $ref: '#/definitions/UpgradeReplicaSetCheckTimeout'
  AvailableOperationDisplay:
    description: Operation supported by Service Fabric resource provider
    properties:
      description:
        description: Operation description
        type: string
      operation:
        description: The operation that can be performed.
        type: string
      provider:
        description: The name of the provider.
        type: string
      resource:
        description: The resource on which the operation is performed
        type: string
  AzureActiveDirectory:
    description: The settings to enable AAD authentication on the cluster.
    properties:
      clientApplication:
        description: Azure active directory client application id.
        type: string
      clusterApplication:
        description: Azure active directory cluster application id.
        type: string
      tenantId:
        description: Azure active directory tenant id.
        type: string
  CertificateDescription:
    description: Describes the certificate details.
    properties:
      thumbprint:
        description: Thumbprint of the primary certificate.
        type: string
      thumbprintSecondary:
        description: Thumbprint of the secondary certificate.
        type: string
      x509StoreName:
        description: The local certificate store location.
        enum:
          - AddressBook
          - AuthRoot
          - CertificateAuthority
          - Disallowed
          - My
          - Root
          - TrustedPeople
          - TrustedPublisher
        type: string
    required:
      - thumbprint
  ClientCertificateCommonName:
    description: Describes the client certificate details using common name.
    properties:
      certificateCommonName:
        description: The common name of the client certificate.
        type: string
      certificateIssuerThumbprint:
        description: The issuer thumbprint of the client certificate.
        type: string
      isAdmin:
        description: Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
        type: boolean
    required:
      - certificateCommonName
      - isAdmin
      - certificateIssuerThumbprint
  ClientCertificateThumbprint:
    description: Describes the client certificate details using thumbprint.
    properties:
      certificateThumbprint:
        description: The thumbprint of the client certificate.
        type: string
      isAdmin:
        description: Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
        type: boolean
    required:
      - certificateThumbprint
      - isAdmin
  Cluster:
    allOf:
      - description: The cluster resource properties
      - $ref: '#/definitions/Resource'
      - properties:
          properties:
            $ref: '#/definitions/ClusterProperties'
            description: The cluster resource properties
            x-ms-client-flatten: true
        type: object
    description: |
      The cluster resource
    type: object
  ClusterCodeVersionsListResult:
    description: The list results of the ServiceFabric runtime versions.
    properties:
      nextLink:
        description: The URL to use for getting the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/ClusterCodeVersionsResult'
        type: array
  ClusterCodeVersionsResult:
    description: The result of the ServiceFabric runtime versions
    properties:
      id:
        description: The identification of the result
        type: string
      name:
        description: The name of the result
        type: string
      properties:
        $ref: '#/definitions/ClusterVersionDetails'
        x-ms-client-flatten: true
      type:
        description: The result resource type
        type: string
  ClusterEnvironment:
    description: 'Cluster operating system, the default will be Windows'
    enum:
      - Windows
      - Linux
    type: string
  ClusterHealthPolicy:
    description: Defines a health policy used to evaluate the health of the cluster or of a cluster node.
    properties:
      maxPercentUnhealthyApplications:
        description: 'The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10. '
        maximum: 100
        minimum: 0
        type: integer
      maxPercentUnhealthyNodes:
        description: 'The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10. '
        maximum: 100
        minimum: 0
        type: integer
  ClusterListResult:
    description: Cluster list results
    properties:
      nextLink:
        description: The URL to use for getting the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/Cluster'
        type: array
  ClusterProperties:
    description: Describes the cluster resource properties.
    properties:
      addOnFeatures:
        description: The list of add-on features to enable in the cluster.
        items:
          $ref: '#/definitions/AddOnFeatures'
        type: array
      availableClusterVersions:
        description: The Service Fabric runtime versions available for this cluster.
        items:
          $ref: '#/definitions/ClusterVersionDetails'
        type: array
      azureActiveDirectory:
        $ref: '#/definitions/AzureActiveDirectory'
        description: The AAD authentication settings of the cluster.
      certificate:
        $ref: '#/definitions/CertificateDescription'
        description: 'The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client.'
      clientCertificateCommonNames:
        description: The list of client certificates referenced by common name that are allowed to manage the cluster.
        items:
          $ref: '#/definitions/ClientCertificateCommonName'
        type: array
      clientCertificateThumbprints:
        description: The list of client certificates referenced by thumbprint that are allowed to manage the cluster.
        items:
          $ref: '#/definitions/ClientCertificateThumbprint'
        type: array
      clusterCodeVersion:
        description: 'The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to ''Manual''. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.'
        type: string
      clusterEndpoint:
        description: The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.
        readOnly: true
        type: string
      clusterId:
        description: A service generated unique identifier for the cluster resource.
        readOnly: true
        type: string
      clusterState:
        $ref: '#/definitions/ClusterState'
      diagnosticsStorageAccountConfig:
        $ref: '#/definitions/DiagnosticsStorageAccountConfig'
        description: The storage account information for storing Service Fabric diagnostic logs.
      fabricSettings:
        description: The list of custom fabric settings to configure the cluster.
        items:
          $ref: '#/definitions/SettingsSectionDescription'
        type: array
      managementEndpoint:
        description: The http management endpoint of the cluster.
        type: string
      nodeTypes:
        description: The list of node types in the cluster.
        items:
          $ref: '#/definitions/NodeTypeDescription'
        type: array
      provisioningState:
        description: The provisioning state of the cluster resource.
        enum:
          - Updating
          - Succeeded
          - Failed
          - Canceled
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ProvisioningState
      reliabilityLevel:
        $ref: '#/definitions/ReliabilityLevel'
      reverseProxyCertificate:
        $ref: '#/definitions/CertificateDescription'
        description: The server certificate used by reverse proxy.
      upgradeDescription:
        $ref: '#/definitions/ClusterUpgradePolicy'
        description: The policy to use when upgrading the cluster.
      upgradeMode:
        $ref: '#/definitions/UpgradeMode'
      vmImage:
        description: The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
        type: string
    required:
      - managementEndpoint
      - nodeTypes
  ClusterPropertiesUpdateParameters:
    description: Describes the cluster resource properties that can be updated during PATCH operation.
    properties:
      addOnFeatures:
        description: The list of add-on features to enable in the cluster.
        items:
          $ref: '#/definitions/AddOnFeatures'
        type: array
      certificate:
        $ref: '#/definitions/CertificateDescription'
        description: 'The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client.'
      clientCertificateCommonNames:
        description: The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.
        items:
          $ref: '#/definitions/ClientCertificateCommonName'
        type: array
      clientCertificateThumbprints:
        description: The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.
        items:
          $ref: '#/definitions/ClientCertificateThumbprint'
        type: array
      clusterCodeVersion:
        description: 'The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to ''Manual''. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.'
        type: string
      fabricSettings:
        description: The list of custom fabric settings to configure the cluster. This will overwrite the existing list.
        items:
          $ref: '#/definitions/SettingsSectionDescription'
        type: array
      nodeTypes:
        description: The list of node types in the cluster. This will overwrite the existing list.
        items:
          $ref: '#/definitions/NodeTypeDescription'
        type: array
      reliabilityLevel:
        description: 'The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).'
        enum:
          - Bronze
          - Silver
          - Gold
        type: string
      reverseProxyCertificate:
        $ref: '#/definitions/CertificateDescription'
        description: The server certificate used by reverse proxy.
      upgradeDescription:
        $ref: '#/definitions/ClusterUpgradePolicy'
        description: The policy to use when upgrading the cluster.
      upgradeMode:
        description: The upgrade mode of the cluster. This indicates if the cluster should be automatically upgraded when new Service Fabric runtime version is available.
        enum:
          - Automatic
          - Manual
        type: string
  ClusterState:
    description: |
      The current state of the cluster.

        - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
        - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
        - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
        - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.
        - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.
        - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.
        - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.
        - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.
        - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.
        - Ready - Indicates that the cluster is in a stable state.
    enum:
      - WaitingForNodes
      - Deploying
      - BaselineUpgrade
      - UpdatingUserConfiguration
      - UpdatingUserCertificate
      - UpdatingInfrastructure
      - EnforcingClusterVersion
      - UpgradeServiceUnreachable
      - AutoScale
      - Ready
    type: string
  ClusterUpdateParameters:
    description: Cluster update request
    properties:
      properties:
        $ref: '#/definitions/ClusterPropertiesUpdateParameters'
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Cluster update parameters
        type: object
  ClusterUpgradeDeltaHealthPolicy:
    description: Describes the delta health policies for the cluster upgrade.
    properties:
      maxPercentDeltaUnhealthyApplications:
        description: The maximum allowed percentage of applications health degradation allowed during cluster upgrades. The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.
        maximum: 100
        minimum: 0
        type: integer
      maxPercentDeltaUnhealthyNodes:
        description: The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
        maximum: 100
        minimum: 0
        type: integer
      maxPercentUpgradeDomainDeltaUnhealthyNodes:
        description: 'The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. '
        maximum: 100
        minimum: 0
        type: integer
    required:
      - maxPercentDeltaUnhealthyApplications
      - maxPercentDeltaUnhealthyNodes
      - maxPercentUpgradeDomainDeltaUnhealthyNodes
  ClusterUpgradePolicy:
    description: Describes the policy used when upgrading the cluster.
    properties:
      deltaHealthPolicy:
        $ref: '#/definitions/ClusterUpgradeDeltaHealthPolicy'
        description: The delta health policy used when upgrading the cluster.
      forceRestart:
        description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
        type: boolean
      healthCheckRetryTimeout:
        description: 'The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
        type: string
      healthCheckStableDuration:
        description: 'The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
        type: string
      healthCheckWaitDuration:
        description: 'The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
        type: string
      healthPolicy:
        $ref: '#/definitions/ClusterHealthPolicy'
        description: The cluster health policy used when upgrading the cluster.
      upgradeDomainTimeout:
        description: 'The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
        type: string
      upgradeReplicaSetCheckTimeout:
        description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
        type: string
      upgradeTimeout:
        description: 'The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
        type: string
    required:
      - healthCheckRetryTimeout
      - healthCheckStableDuration
      - healthCheckWaitDuration
      - healthPolicy
      - upgradeDomainTimeout
      - upgradeReplicaSetCheckTimeout
      - upgradeTimeout
  ClusterVersionDetails:
    description: The detail of the Service Fabric runtime version result
    properties:
      codeVersion:
        description: The Service Fabric runtime version of the cluster.
        type: string
      environment:
        $ref: '#/definitions/ClusterEnvironment'
        description: Indicates if this version is for Windows or Linux operating system.
      supportExpiryUtc:
        description: The date of expiry of support of the version.
        type: string
  CorrelationSchemeList:
    description: A list that describes the correlation of the service with other services.
    items:
      $ref: '#/definitions/ServiceCorrelationDescription'
    type: array
  DiagnosticsStorageAccountConfig:
    description: The storage account information for storing Service Fabric diagnostic logs.
    properties:
      blobEndpoint:
        description: The blob endpoint of the azure storage account.
        type: string
      protectedAccountKeyName:
        description: The protected diagnostics storage key name.
        type: string
      queueEndpoint:
        description: The queue endpoint of the azure storage account.
        type: string
      storageAccountName:
        description: The Azure storage account name.
        type: string
      tableEndpoint:
        description: The table endpoint of the azure storage account.
        type: string
    required:
      - blobEndpoint
      - protectedAccountKeyName
      - queueEndpoint
      - storageAccountName
      - tableEndpoint
  DurabilityLevel:
    description: |
      The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

        - Bronze - No privileges. This is the default.
        - Silver - The infrastructure jobs can be paused for a duration of 30 minutes per UD.
        - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.
    enum:
      - Bronze
      - Silver
      - Gold
    type: string
  EndpointRangeDescription:
    description: Port range details
    properties:
      endPort:
        description: End port of a range of ports
        type: integer
      startPort:
        description: Starting port of a range of ports
        type: integer
    required:
      - endPort
      - startPort
  ErrorModel:
    description: The error details.
    properties:
      code:
        description: The error code.
        type: string
      message:
        description: The error message.
        type: string
  ForceRestart:
    default: false
    description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
    type: boolean
  HealthCheckRetryTimeout:
    default: PT0H10M0S
    description: 'The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  HealthCheckStableDuration:
    default: PT0H2M0S
    description: 'The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  HealthCheckWaitDuration:
    default: '0'
    description: 'The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  MoveCost:
    description: |
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    enum:
      - Zero
      - Low
      - Medium
      - High
    type: string
  NamedPartitionSchemeDescription:
    allOf:
      - $ref: '#/definitions/PartitionSchemeDescription'
      - description: NamedPartitionSchemeDescription
        type: object
    description: Describes the named partition scheme of the service.
    properties:
      Count:
        description: The number of partitions.
        type: integer
      Names:
        description: 'Array of size specified by the ‘Count’ parameter, for the names of the partitions.'
        items:
          type: string
        type: array
    required:
      - Count
      - Names
    x-ms-discriminator-value: Named
  NodeTypeDescription:
    description: 'Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.'
    properties:
      applicationPorts:
        $ref: '#/definitions/EndpointRangeDescription'
        description: The range of ports from which cluster assigned port to Service Fabric applications.
      capacities:
        additionalProperties:
          description: Capacity tag value
          type: string
        description: 'The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.'
        type: object
      clientConnectionEndpointPort:
        description: The TCP cluster management endpoint port.
        type: integer
      durabilityLevel:
        $ref: '#/definitions/DurabilityLevel'
      ephemeralPorts:
        $ref: '#/definitions/EndpointRangeDescription'
        description: The range of ephemeral ports that nodes in this node type should be configured with.
      httpGatewayEndpointPort:
        description: The HTTP cluster management endpoint port.
        type: integer
      isPrimary:
        description: The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters.
        type: boolean
      name:
        description: The name of the node type.
        type: string
      placementProperties:
        additionalProperties:
          description: Placement tag value
          type: string
        description: 'The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.'
        type: object
      reverseProxyEndpointPort:
        description: The endpoint used by reverse proxy.
        type: integer
      vmInstanceCount:
        description: The number of nodes in the node type. This count should match the capacity property in the corresponding VirtualMachineScaleSet resource.
        maximum: 2147483647
        minimum: 1
        type: integer
    required:
      - clientConnectionEndpointPort
      - httpGatewayEndpointPort
      - isPrimary
      - name
      - vmInstanceCount
  OperationListResult:
    description: Describes the result of the request to list Service Fabric operations.
    properties:
      nextLink:
        description: URL to get the next set of operation list results if there are any.
        readOnly: true
        type: string
      value:
        description: List of Service Fabric operations supported by the Microsoft.ServiceFabric resource provider.
        items:
          $ref: '#/definitions/OperationResult'
        type: array
  OperationResult:
    description: Available operation list result
    properties:
      display:
        $ref: '#/definitions/AvailableOperationDisplay'
        description: The object that represents the operation.
      name:
        description: The name of the operation.
        type: string
      nextLink:
        description: The URL to use for getting the next set of results.
        type: string
      origin:
        description: Origin result
        type: string
  PartitionScheme:
    description: |
      Enumerates the ways that a service can be partitioned. Possible values are:

      - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.
      - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.
      - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    enum:
      - Invalid
      - Singleton
      - UniformInt64Range
      - Named
    type: string
  PartitionSchemeDescription:
    description: Describes how the service is partitioned.
    discriminator: PartitionScheme
    properties:
      PartitionScheme:
        $ref: '#/definitions/PartitionScheme'
    required:
      - PartitionScheme
    type: object
  ProxyResource:
    description: The resource model definition for proxy-only resource.
    properties:
      id:
        description: Azure resource ID.
        readOnly: true
        type: string
      location:
        description: Resource location.
        type: string
      name:
        description: Azure resource name.
        readOnly: true
        type: string
      type:
        description: Azure resource type.
        readOnly: true
        type: string
    required:
      - location
    x-ms-azure-resource: true
  ReliabilityLevel:
    description: |
      The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

        - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
        - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
        - Silver - Run the System services with a target replica set count of 5.
        - Gold - Run the System services with a target replica set count of 7.
        - Platinum - Run the System services with a target replica set count of 9.
    enum:
      - None
      - Bronze
      - Silver
      - Gold
      - Platinum
    type: string
  Resource:
    description: The resource model definition.
    properties:
      id:
        description: Azure resource ID.
        readOnly: true
        type: string
      location:
        description: Resource location.
        type: string
      name:
        description: Azure resource name.
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags.
        type: object
      type:
        description: Azure resource type.
        readOnly: true
        type: string
    required:
      - location
    x-ms-azure-resource: true
  RollingUpgradeMonitoringPolicy:
    description: The policy used for monitoring the application upgrade
    properties:
      healthCheckRetryTimeout:
        $ref: '#/definitions/HealthCheckRetryTimeout'
      healthCheckStableDuration:
        $ref: '#/definitions/HealthCheckStableDuration'
      healthCheckWaitDuration:
        $ref: '#/definitions/HealthCheckWaitDuration'
      upgradeDomainTimeout:
        $ref: '#/definitions/UpgradeDomainTimeout'
      upgradeTimeout:
        $ref: '#/definitions/UpgradeTimeout'
  ServiceCorrelationDescription:
    description: Creates a particular correlation between services.
    properties:
      Scheme:
        $ref: '#/definitions/ServiceCorrelationScheme'
      ServiceName:
        $ref: '#/definitions/ServiceName'
    required:
      - Scheme
      - ServiceName
    type: object
  ServiceCorrelationScheme:
    description: |
      The service correlation scheme. Possible values are following.

        - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
        - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
        - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
        - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
    enum:
      - Invalid
      - Affinity
      - AlignedAffinity
      - NonAlignedAffinity
    type: string
  ServiceKind:
    description: |
      The kind of service (Stateless or Stateful). Following are the possible values.

      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.
      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    enum:
      - Invalid
      - Stateless
      - Stateful
    type: string
  ServiceLoadMetricDescription:
    description: Specifies a metric to load balance a service during runtime.
    properties:
      DefaultLoad:
        description: 'Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.'
        type: integer
      Name:
        description: 'The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.'
        type: string
      PrimaryDefaultLoad:
        description: 'Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.'
        type: integer
      SecondaryDefaultLoad:
        description: 'Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.'
        type: integer
      Weight:
        $ref: '#/definitions/ServiceLoadMetricWeight'
    required:
      - Name
    type: object
  ServiceLoadMetricWeight:
    description: |
      Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

        - Zero - Disables resource balancing for this metric. This value is zero.
        - Low - Specifies the metric weight of the service load as Low. The value is 1.
        - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
        - High - Specifies the metric weight of the service load as High. The value is 3.
    enum:
      - Zero
      - Low
      - Medium
      - High
    type: string
  ServiceLoadMetricsList:
    description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    items:
      $ref: '#/definitions/ServiceLoadMetricDescription'
    type: array
  ServiceName:
    description: 'The full name of the service with ''fabric:'' URI scheme.'
    type: string
  ServicePlacementPoliciesList:
    description: A list that describes the correlation of the service with other services.
    items:
      $ref: '#/definitions/ServicePlacementPolicyDescription'
    type: array
  ServicePlacementPolicyDescription:
    description: Describes the policy to be used for placement of a Service Fabric service.
    discriminator: Type
    properties:
      Type:
        $ref: '#/definitions/ServicePlacementPolicyType'
    required:
      - Type
    type: object
  ServicePlacementPolicyType:
    description: |
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    enum:
      - Invalid
      - InvalidDomain
      - RequiredDomain
      - PreferredPrimaryDomain
      - RequiredDomainDistribution
      - NonPartiallyPlaceService
    type: string
  ServiceProperties:
    allOf:
      - $ref: '#/definitions/ServicePropertiesBase'
    description: The service resource properties.
    discriminator: serviceKind
    properties:
      partitionDescription:
        $ref: '#/definitions/PartitionSchemeDescription'
      provisioningState:
        description: 'The current deployment or provisioning state, which only appears in the response'
        readOnly: true
        type: string
      serviceKind:
        $ref: '#/definitions/ServiceKind'
      serviceTypeName:
        description: The name of the service type
        type: string
    required:
      - serviceKind
  ServicePropertiesBase:
    description: The common service resource properties.
    properties:
      correlationScheme:
        $ref: '#/definitions/CorrelationSchemeList'
      defaultMoveCost:
        $ref: '#/definitions/MoveCost'
      placementConstraints:
        description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        type: string
      serviceLoadMetrics:
        $ref: '#/definitions/ServiceLoadMetricsList'
      servicePlacementPolicies:
        $ref: '#/definitions/ServicePlacementPoliciesList'
  ServiceResource:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: The service resource.
    properties:
      properties:
        $ref: '#/definitions/ServiceProperties'
        x-ms-client-flatten: true
  ServiceResourceList:
    description: The list of service resources.
    properties:
      value:
        items:
          $ref: '#/definitions/ServiceResource'
        type: array
  ServiceResourceUpdate:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: The service resource for patch operations.
    properties:
      properties:
        $ref: '#/definitions/ServiceUpdateProperties'
        x-ms-client-flatten: true
  ServiceTypeDeltaHealthPolicy:
    description: |
      Service health policy
    properties:
      maxPercentDeltaUnhealthyServices:
        description: Maximum percentage of unhealthy services in cluster
        maximum: 100
        minimum: 0
        type: integer
    type: object
  ServiceTypeHealthPolicy:
    description: |
      Represents the health policy used to evaluate the health of services belonging to a service type.
    properties:
      MaxPercentUnhealthyPartitionsPerService:
        default: 0
        description: |
          The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100

          The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.
          If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.
          The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.
          The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.
        type: integer
      MaxPercentUnhealthyReplicasPerPartition:
        default: 0
        description: |
          The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.

          The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.
          If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.
          The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.
          The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.
        type: integer
      MaxPercentUnhealthyServices:
        default: 0
        description: |
          The maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.

          The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.
          If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.
          This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.
          The computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.
        type: integer
    type: object
  ServiceTypeHealthPolicyMap:
    description: |
      Defines a ServiceTypeHealthPolicy per service type name.

      The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.

      If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
    items:
      $ref: '#/definitions/ServiceTypeHealthPolicyMapItem'
    type: array
  ServiceTypeHealthPolicyMapItem:
    description: |
      Defines an item in ServiceTypeHealthPolicyMap.
    properties:
      Key:
        description: The key of the service type health policy map item. This is the name of the service type.
        type: string
      Value:
        $ref: '#/definitions/ServiceTypeHealthPolicy'
    required:
      - Key
      - Value
    type: object
  ServiceUpdateProperties:
    allOf:
      - $ref: '#/definitions/ServicePropertiesBase'
    description: The service resource properties for patch operations.
    discriminator: serviceKind
    properties:
      serviceKind:
        $ref: '#/definitions/ServiceKind'
    required:
      - serviceKind
  SettingsParameterDescription:
    description: Describes a parameter in fabric settings of the cluster.
    properties:
      name:
        description: The parameter name of fabric setting.
        type: string
      value:
        description: The parameter value of fabric setting.
        type: string
    required:
      - name
      - value
  SettingsSectionDescription:
    description: Describes a section in the fabric settings of the cluster.
    properties:
      name:
        description: The section name of the fabric settings.
        type: string
      parameters:
        description: The collection of parameters in the section.
        items:
          $ref: '#/definitions/SettingsParameterDescription'
        type: array
    required:
      - name
      - parameters
  SingletonPartitionSchemeDescription:
    allOf:
      - $ref: '#/definitions/PartitionSchemeDescription'
      - description: SingletonPartitionSchemeDescription
        type: object
    description: 'Describes the partition scheme of a singleton-partitioned, or non-partitioned service.'
    x-ms-discriminator-value: Singleton
  StatefulServiceProperties:
    allOf:
      - $ref: '#/definitions/ServiceProperties'
    description: The properties of a stateful service resource.
    properties:
      hasPersistedState:
        description: 'A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.'
        type: boolean
      minReplicaSetSize:
        description: The minimum replica set size as a number.
        minimum: 1
        type: integer
      quorumLossWaitDuration:
        description: 'The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).'
        format: date-time
        type: string
      replicaRestartWaitDuration:
        description: 'The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s).'
        format: date-time
        type: string
      standByReplicaKeepDuration:
        description: 'The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s).'
        format: date-time
        type: string
      targetReplicaSetSize:
        description: The target replica set size as a number.
        minimum: 1
        type: integer
    x-ms-discriminator-value: Stateful
  StatefulServiceUpdateProperties:
    allOf:
      - $ref: '#/definitions/ServiceUpdateProperties'
    description: The properties of a stateful service resource for patch operations.
    properties:
      minReplicaSetSize:
        description: The minimum replica set size as a number.
        minimum: 1
        type: integer
      quorumLossWaitDuration:
        description: 'The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).'
        format: date-time
        type: string
      replicaRestartWaitDuration:
        description: 'The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s).'
        format: date-time
        type: string
      standByReplicaKeepDuration:
        description: 'The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s).'
        format: date-time
        type: string
      targetReplicaSetSize:
        description: The target replica set size as a number.
        minimum: 1
        type: integer
    x-ms-discriminator-value: Stateful
  StatelessServiceProperties:
    allOf:
      - $ref: '#/definitions/ServiceProperties'
    description: The properties of a stateless service resource.
    properties:
      instanceCount:
        description: The instance count.
        minimum: -1
        type: integer
    x-ms-discriminator-value: Stateless
  StatelessServiceUpdateProperties:
    allOf:
      - $ref: '#/definitions/ServiceUpdateProperties'
    description: The properties of a stateless service resource for patch operations.
    properties:
      instanceCount:
        description: The instance count.
        minimum: -1
        type: integer
    x-ms-discriminator-value: Stateless
  UniformInt64RangePartitionSchemeDescription:
    allOf:
      - $ref: '#/definitions/PartitionSchemeDescription'
      - description: UniformInt64RangePartitionSchemeDescription
        type: object
    description: Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
    properties:
      Count:
        description: The number of partitions.
        type: integer
      HighKey:
        description: |
          String indicating the upper bound of the partition key range that
          should be split between the partition ‘Count’
        type: string
      LowKey:
        description: |
          String indicating the lower bound of the partition key range that
          should be split between the partition ‘Count’
        type: string
    required:
      - Count
      - LowKey
      - HighKey
    x-ms-discriminator-value: UniformInt64Range
  UpgradeDomainTimeout:
    default: P10675199DT02H48M05.4775807S
    description: 'The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  UpgradeMode:
    description: |
      The upgrade mode of the cluster when new Service Fabric runtime version is available.

        - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
        - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
    enum:
      - Automatic
      - Manual
    type: string
  UpgradeReplicaSetCheckTimeout:
    default: 42949672925
    description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
    format: int64
    type: integer
  UpgradeTimeout:
    default: P10675199DT02H48M05.4775807S
    description: 'The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  VersionProperties:
    description: The properties of the version resource.
    properties:
      appPackageUrl:
        description: The URL to the application package
        type: string
      defaultParameterList:
        $ref: '#/definitions/ApplicationTypeParameterList'
        readOnly: true
      provisioningState:
        description: 'The current deployment or provisioning state, which only appears in the response'
        readOnly: true
        type: string
    required:
      - appPackageUrl
  VersionResource:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: A version resource for the specified application type name.
    properties:
      properties:
        $ref: '#/definitions/VersionProperties'
        x-ms-client-flatten: true
  VersionResourceList:
    description: The list of version resources for the specified application type name.
    properties:
      value:
        items:
          $ref: '#/definitions/VersionResource'
        type: array
