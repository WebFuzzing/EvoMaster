swagger: "2.0"
schemes:
  - http
host: api.wedpax.com
info:
  title: Wedpax
  version: v1
  x-apisguru-categories:
    - social
  x-origin:
    - format: swagger
      url: http://api.wedpax.com/swagger/v1/swagger.json
      version: "2.0"
  x-providerName: wedpax.com
securityDefinitions:
  bearerAuth:
    description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization: Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
paths:
  /api/ServiceQuery/Get:
    get:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: CurrentPage
          required: false
          type: integer
        - format: int32
          in: query
          name: PageSize
          required: false
          type: integer
        - in: query
          name: Sorting.PropertyName
          required: false
          type: string
        - in: query
          name: Sorting.OrderByDescending
          required: false
          type: boolean
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[WeddingVendorDto]"
      tags:
        - ServiceQuery
  /api/ServiceQuery/Search:
    get:
      consumes: []
      operationId: Search
      parameters:
        - in: query
          name: City
          required: false
          type: string
        - format: int32
          in: query
          name: CatgoryId
          required: false
          type: integer
        - format: int32
          in: query
          name: PageNumber
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/ServiceListModel"
            type: array
            uniqueItems: false
      tags:
        - ServiceQuery
  /api/ServiceQuery/UserService:
    get:
      consumes: []
      operationId: UserService
      parameters:
        - format: int64
          in: query
          name: serviceId
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UpdateWeddingVendorDto"
      tags:
        - ServiceQuery
  /api/ServiceQuery/UserServices:
    get:
      consumes: []
      operationId: UserServices
      parameters:
        - format: int64
          in: query
          name: userId
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/UserServicesDto"
            type: array
            uniqueItems: false
      tags:
        - ServiceQuery
  /api/TokenAuth/Authenticate:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: Authenticate
      parameters:
        - in: body
          name: model
          required: false
          schema:
            $ref: "#/definitions/AuthenticateModel"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AuthenticateResultModel"
      tags:
        - TokenAuth
  /api/TokenAuth/ExternalAuthenticate:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: ExternalAuthenticate
      parameters:
        - in: body
          name: model
          required: false
          schema:
            $ref: "#/definitions/ExternalAuthenticateModel"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ExternalAuthenticateResultModel"
      tags:
        - TokenAuth
  /api/TokenAuth/GetExternalAuthenticationProviders:
    get:
      consumes: []
      operationId: GetExternalAuthenticationProviders
      parameters: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/ExternalLoginProviderInfoModel"
            type: array
            uniqueItems: false
      tags:
        - TokenAuth
  /api/TokenAuth/Login:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: Login
      parameters:
        - in: body
          name: model
          required: false
          schema:
            $ref: "#/definitions/LoginModel"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AuthenticateResultModel"
      tags:
        - TokenAuth
  /api/TokenAuth/RefreshToken:
    get:
      consumes: []
      operationId: RefreshToken
      parameters:
        - in: query
          name: userName
          required: false
          type: string
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AuthenticateResultModel"
      tags:
        - TokenAuth
  /api/services/app/Account/IsTenantAvailable:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: IsTenantAvailable
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/IsTenantAvailableInput"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/IsTenantAvailableOutput"
      tags:
        - Account
  /api/services/app/Account/Register:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: Register
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/RegisterInput"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RegisterOutput"
      tags:
        - Account
  /api/services/app/AddressServices/Create:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/GeoDetailsCreateDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeoDetailsDto"
      tags:
        - AddressServices
  /api/services/app/AddressServices/Delete:
    delete:
      consumes: []
      parameters:
        - format: int64
          in: query
          name: Id
          required: false
          type: integer
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - AddressServices
  /api/services/app/AddressServices/Get:
    get:
      consumes: []
      parameters:
        - format: int64
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeoDetailsDto"
      tags:
        - AddressServices
  /api/services/app/AddressServices/GetAll:
    get:
      consumes: []
      parameters:
        - in: query
          name: Sorting
          required: false
          type: string
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 0
          name: SkipCount
          required: false
          type: integer
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 1
          name: MaxResultCount
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[GeoDetailsDto]"
      tags:
        - AddressServices
  /api/services/app/AddressServices/GetCities:
    get:
      consumes: []
      operationId: GetCities
      parameters:
        - format: int32
          in: query
          name: provinceId
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/CityDto"
            type: array
            uniqueItems: false
      tags:
        - AddressServices
  /api/services/app/AddressServices/GetProvince:
    get:
      consumes: []
      operationId: GetProvince
      parameters: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/ProvinceDto"
            type: array
            uniqueItems: false
      tags:
        - AddressServices
  /api/services/app/AddressServices/Update:
    put:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/GeoDetailsUpdateDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeoDetailsDto"
      tags:
        - AddressServices
  /api/services/app/CategoryService/Create:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: categoryDto
          required: false
          schema:
            $ref: "#/definitions/ServiceCategroyCreateDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/CategoryService/Delete:
    delete:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - CategoryService
  /api/services/app/CategoryService/Get:
    get:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetAll:
    get:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: TotalCount
          required: false
          type: integer
        - collectionFormat: multi
          in: query
          items: {}
          name: Items
          required: false
          type: array
          uniqueItems: false
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[ServiceCategoryDto]"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetById:
    get:
      consumes: []
      operationId: GetById
      parameters:
        - format: int32
          in: query
          name: id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceCategory"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetByName:
    get:
      consumes: []
      operationId: GetByName
      parameters:
        - in: query
          name: title
          required: false
          type: string
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetCategories:
    get:
      consumes: []
      operationId: GetCategories
      parameters: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/ServiceCategoryDto"
            type: array
            uniqueItems: false
      tags:
        - CategoryService
  /api/services/app/CategoryService/Update:
    put:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ServiceCategoryUpdateDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/Configuration/ChangeUiTheme:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: ChangeUiTheme
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ChangeUiThemeInput"
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - Configuration
  /api/services/app/Role/Create:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/CreateRoleDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RoleDto"
      tags:
        - Role
  /api/services/app/Role/Delete:
    delete:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - Role
  /api/services/app/Role/Get:
    get:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RoleDto"
      tags:
        - Role
  /api/services/app/Role/GetAll:
    get:
      consumes: []
      parameters:
        - in: query
          name: Keyword
          required: false
          type: string
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 0
          name: SkipCount
          required: false
          type: integer
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 1
          name: MaxResultCount
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[RoleDto]"
      tags:
        - Role
  /api/services/app/Role/GetAllPermissions:
    get:
      consumes: []
      operationId: GetAllPermissions
      parameters: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ListResultDto[PermissionDto]"
      tags:
        - Role
  /api/services/app/Role/GetRoleForEdit:
    get:
      consumes: []
      operationId: GetRoleForEdit
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRoleForEditOutput"
      tags:
        - Role
  /api/services/app/Role/GetRolesAsync:
    get:
      consumes: []
      operationId: GetRolesAsync
      parameters:
        - in: query
          name: Permission
          required: false
          type: string
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ListResultDto[RoleListDto]"
      tags:
        - Role
  /api/services/app/Role/Update:
    put:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/RoleDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RoleDto"
      tags:
        - Role
  /api/services/app/ServiceFacilityService/Create:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ServiceFacilityCreateDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceFacilityDto"
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/Delete:
    delete:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/Get:
    get:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceFacilityDto"
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/GetAll:
    get:
      consumes: []
      parameters:
        - collectionFormat: multi
          in: query
          items: {}
          name: input
          required: false
          type: array
          uniqueItems: false
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[ServiceFacilityDto]"
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/GetFacilities:
    get:
      consumes: []
      operationId: GetFacilities
      parameters: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/ServiceFacilityDto"
            type: array
            uniqueItems: false
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/GetServiceFacility:
    get:
      consumes: []
      operationId: GetServiceFacility
      parameters:
        - collectionFormat: multi
          in: query
          items:
            format: int32
            type: integer
          name: facilities
          required: false
          type: array
          uniqueItems: false
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/ServiceFacilityDto"
            type: array
            uniqueItems: false
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/Update:
    put:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ServiceFacilityUpdateDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ServiceFacilityDto"
      tags:
        - ServiceFacilityService
  /api/services/app/Session/GetCurrentLoginInformations:
    get:
      consumes: []
      operationId: GetCurrentLoginInformations
      parameters: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCurrentLoginInformationsOutput"
      tags:
        - Session
  /api/services/app/Tenant/Create:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/CreateTenantDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TenantDto"
      tags:
        - Tenant
  /api/services/app/Tenant/Delete:
    delete:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - Tenant
  /api/services/app/Tenant/Get:
    get:
      consumes: []
      parameters:
        - format: int32
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TenantDto"
      tags:
        - Tenant
  /api/services/app/Tenant/GetAll:
    get:
      consumes: []
      parameters:
        - in: query
          name: Keyword
          required: false
          type: string
        - in: query
          name: IsActive
          required: false
          type: boolean
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 0
          name: SkipCount
          required: false
          type: integer
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 1
          name: MaxResultCount
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[TenantDto]"
      tags:
        - Tenant
  /api/services/app/Tenant/Update:
    put:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/TenantDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TenantDto"
      tags:
        - Tenant
  /api/services/app/User/AddManagerToUserRoles:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: AddManagerToUserRoles
      parameters:
        - in: body
          name: user
          required: false
          schema:
            $ref: "#/definitions/User"
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/ChangeLanguage:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: ChangeLanguage
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ChangeUserLanguageDto"
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/ChangePassword:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: ChangePassword
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ChangePasswordDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
      tags:
        - User
  /api/services/app/User/ConfrimCode:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: ConfrimCode
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ConfirmCodeDto"
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/Create:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/CreateUserDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserDto"
      tags:
        - User
  /api/services/app/User/Delete:
    delete:
      consumes: []
      parameters:
        - format: int64
          in: query
          name: Id
          required: false
          type: integer
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/Get:
    get:
      consumes: []
      parameters:
        - format: int64
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserDto"
      tags:
        - User
  /api/services/app/User/GetAll:
    get:
      consumes: []
      parameters:
        - in: query
          name: Keyword
          required: false
          type: string
        - in: query
          name: IsActive
          required: false
          type: boolean
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 0
          name: SkipCount
          required: false
          type: integer
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 1
          name: MaxResultCount
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[UserDto]"
      tags:
        - User
  /api/services/app/User/GetRoles:
    get:
      consumes: []
      operationId: GetRoles
      parameters: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ListResultDto[RoleDto]"
      tags:
        - User
  /api/services/app/User/GetToEntity:
    get:
      consumes: []
      operationId: GetToEntity
      parameters:
        - format: int64
          in: query
          name: userId
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
      tags:
        - User
  /api/services/app/User/ProhibitPermission:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: ProhibitPermission
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ProhibitPermissionInput"
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/ResetPassword:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      operationId: ResetPassword
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/ResetPasswordDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
      tags:
        - User
  /api/services/app/User/Update:
    put:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: input
          required: false
          schema:
            $ref: "#/definitions/UserDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserDto"
      tags:
        - User
  /api/services/app/WeddingVendorServices/Create:
    post:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: model
          required: false
          schema:
            $ref: "#/definitions/CreateWeddingVendorDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WeddingVendorDto"
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/Delete:
    delete:
      consumes: []
      parameters:
        - format: int64
          in: query
          name: Id
          required: false
          type: integer
      produces: []
      responses:
        "200":
          description: Success
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/Get:
    get:
      consumes: []
      parameters:
        - format: int64
          in: query
          name: Id
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WeddingVendorDto"
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/GetAll:
    get:
      consumes: []
      parameters:
        - in: query
          name: Sorting
          required: false
          type: string
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 0
          name: SkipCount
          required: false
          type: integer
        - format: int32
          in: query
          maximum: 2147483647
          minimum: 1
          name: MaxResultCount
          required: false
          type: integer
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PagedResultDto[WeddingVendorDto]"
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/Update:
    put:
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      parameters:
        - in: body
          name: model
          required: false
          schema:
            $ref: "#/definitions/UpdateWeddingVendorDto"
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WeddingVendorDto"
      tags:
        - WeddingVendorServices
definitions:
  ApplicationInfoDto:
    properties:
      features:
        additionalProperties:
          type: boolean
        type: object
      releaseDate:
        format: date-time
        type: string
      version:
        type: string
    type: object
  AuthenticateModel:
    properties:
      password:
        maxLength: 32
        minLength: 0
        type: string
      rememberClient:
        type: boolean
      userNameOrEmailAddress:
        maxLength: 256
        minLength: 0
        type: string
    required:
      - userNameOrEmailAddress
      - password
    type: object
  AuthenticateResultModel:
    properties:
      accessToken:
        type: string
      encryptedAccessToken:
        type: string
      expireInSeconds:
        format: int32
        type: integer
      roles:
        items:
          type: string
        type: array
        uniqueItems: false
      userId:
        format: int64
        type: integer
    type: object
  BaseServices:
    properties:
      capacity:
        format: int32
        type: integer
      category:
        $ref: "#/definitions/ServiceCategory"
      categoryId:
        format: int32
        type: integer
      creationTime:
        format: date-time
        type: string
      description:
        minLength: 20
        type: string
      geoDetails:
        $ref: "#/definitions/GeoDetails"
      id:
        format: int64
        type: integer
      images:
        items:
          $ref: "#/definitions/ServiceImages"
        type: array
        uniqueItems: false
      mainImage:
        type: string
      phone:
        type: string
      status:
        type: boolean
      title:
        type: string
      user:
        $ref: "#/definitions/User"
    required:
      - description
      - user
      - categoryId
      - images
      - category
    type: object
  ChangePasswordDto:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    required:
      - currentPassword
      - newPassword
    type: object
  ChangeUiThemeInput:
    properties:
      theme:
        maxLength: 32
        minLength: 0
        type: string
    required:
      - theme
    type: object
  ChangeUserLanguageDto:
    properties:
      languageName:
        type: string
    required:
      - languageName
    type: object
  CityDto:
    properties:
      id:
        format: int32
        type: integer
      title:
        type: string
    type: object
  ConfirmCodeDto:
    properties:
      code:
        format: int32
        type: integer
      userName:
        type: string
    required:
      - userName
      - code
    type: object
  CreateRoleDto:
    properties:
      description:
        maxLength: 5000
        minLength: 0
        type: string
      displayName:
        maxLength: 64
        minLength: 0
        type: string
      grantedPermissions:
        items:
          type: string
        type: array
        uniqueItems: false
      name:
        maxLength: 32
        minLength: 0
        type: string
      normalizedName:
        type: string
    required:
      - name
      - displayName
    type: object
  CreateTenantDto:
    properties:
      adminEmailAddress:
        maxLength: 256
        minLength: 0
        type: string
      connectionString:
        maxLength: 1024
        minLength: 0
        type: string
      isActive:
        type: boolean
      name:
        maxLength: 128
        minLength: 0
        type: string
      tenancyName:
        maxLength: 64
        minLength: 0
        pattern: ^[a-zA-Z][a-zA-Z0-9_-]{1,}$
        type: string
    required:
      - tenancyName
      - name
      - adminEmailAddress
    type: object
  CreateUserDto:
    properties:
      userName:
        maxLength: 256
        minLength: 0
        type: string
    required:
      - userName
    type: object
  CreateWeddingVendorDto:
    properties:
      base64Images:
        items:
          $ref: "#/definitions/ImageData"
        type: array
        uniqueItems: false
      capacity:
        format: int32
        type: integer
      categoryId:
        format: int32
        type: integer
      description:
        minLength: 20
        type: string
      lat:
        format: double
        type: number
      lng:
        format: double
        type: number
      mainImage:
        type: string
      phone:
        type: string
      serviceFacilities:
        items:
          format: int32
          type: integer
        type: array
        uniqueItems: false
      title:
        maxLength: 60
        minLength: 3
        type: string
      userId:
        format: int64
        type: integer
    required:
      - title
      - description
      - categoryId
    type: object
  ExternalAuthenticateModel:
    properties:
      authProvider:
        maxLength: 128
        minLength: 0
        type: string
      providerAccessCode:
        type: string
      providerKey:
        maxLength: 256
        minLength: 0
        type: string
    required:
      - authProvider
      - providerKey
      - providerAccessCode
    type: object
  ExternalAuthenticateResultModel:
    properties:
      accessToken:
        type: string
      encryptedAccessToken:
        type: string
      expireInSeconds:
        format: int32
        type: integer
      waitingForActivation:
        type: boolean
    type: object
  ExternalLoginProviderInfoModel:
    properties:
      clientId:
        type: string
      name:
        type: string
    type: object
  FlatPermissionDto:
    properties:
      description:
        type: string
      displayName:
        type: string
      name:
        type: string
    type: object
  GeoDetails:
    properties:
      address:
        type: string
      baseServices:
        $ref: "#/definitions/BaseServices"
      city:
        type: string
      country:
        type: string
      creationTime:
        format: date-time
        type: string
      district:
        type: string
      id:
        format: int64
        type: integer
      lat:
        format: double
        type: number
      lng:
        format: double
        type: number
      locality:
        type: string
      place:
        type: string
      province:
        type: string
      serviceId:
        format: int64
        type: integer
    type: object
  GeoDetailsCreateDto:
    properties:
      lat:
        format: double
        type: number
      lng:
        format: double
        type: number
      phone:
        type: string
      serviceId:
        format: int64
        type: integer
    required:
      - serviceId
      - lat
      - lng
      - phone
    type: object
  GeoDetailsDto:
    properties:
      address:
        type: string
      area:
        type: string
      city:
        type: string
      country:
        type: string
      district:
        type: string
      id:
        format: int64
        type: integer
    type: object
  GeoDetailsUpdateDto:
    properties:
      id:
        format: int64
        type: integer
      lat:
        format: double
        type: number
      lng:
        format: double
        type: number
      phone:
        type: string
      serviceId:
        format: int64
        type: integer
    required:
      - serviceId
      - lat
      - lng
      - phone
    type: object
  GetCurrentLoginInformationsOutput:
    properties:
      application:
        $ref: "#/definitions/ApplicationInfoDto"
      tenant:
        $ref: "#/definitions/TenantLoginInfoDto"
      user:
        $ref: "#/definitions/UserLoginInfoDto"
    type: object
  GetRoleForEditOutput:
    properties:
      grantedPermissionNames:
        items:
          type: string
        type: array
        uniqueItems: false
      permissions:
        items:
          $ref: "#/definitions/FlatPermissionDto"
        type: array
        uniqueItems: false
      role:
        $ref: "#/definitions/RoleEditDto"
    type: object
  ImageData:
    properties:
      content:
        type: string
      fileType:
        type: string
      id:
        type: string
      isMain:
        type: boolean
    type: object
  IsTenantAvailableInput:
    properties:
      tenancyName:
        maxLength: 64
        minLength: 0
        type: string
    required:
      - tenancyName
    type: object
  IsTenantAvailableOutput:
    properties:
      state:
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
      tenantId:
        format: int32
        type: integer
    type: object
  "ListResultDto[PermissionDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/PermissionDto"
        type: array
        uniqueItems: false
    type: object
  "ListResultDto[RoleDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/RoleDto"
        type: array
        uniqueItems: false
    type: object
  "ListResultDto[RoleListDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/RoleListDto"
        type: array
        uniqueItems: false
    type: object
  LoginModel:
    properties:
      mobileNumber:
        maxLength: 11
        minLength: 0
        type: string
      password:
        type: string
    required:
      - mobileNumber
    type: object
  "PagedResultDto[GeoDetailsDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/GeoDetailsDto"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  "PagedResultDto[RoleDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/RoleDto"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  "PagedResultDto[ServiceCategoryDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/ServiceCategoryDto"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  "PagedResultDto[ServiceFacilityDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/ServiceFacilityDto"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  "PagedResultDto[TenantDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/TenantDto"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  "PagedResultDto[UserDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/UserDto"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  "PagedResultDto[WeddingVendorDto]":
    properties:
      items:
        items:
          $ref: "#/definitions/WeddingVendorDto"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  PermissionDto:
    properties:
      description:
        type: string
      displayName:
        type: string
      id:
        format: int64
        type: integer
      name:
        type: string
    type: object
  ProhibitPermissionInput:
    properties:
      permissionName:
        type: string
      userId:
        format: int64
        type: integer
    type: object
  ProvinceDto:
    properties:
      id:
        format: int32
        type: integer
      title:
        type: string
    type: object
  RegisterInput:
    properties:
      userName:
        maxLength: 256
        minLength: 0
        type: string
    required:
      - userName
    type: object
  RegisterOutput:
    properties:
      canLogin:
        type: boolean
    type: object
  ResetPasswordDto:
    properties:
      adminPassword:
        type: string
      newPassword:
        type: string
      userId:
        format: int64
        type: integer
    required:
      - adminPassword
      - userId
      - newPassword
    type: object
  RoleDto:
    properties:
      description:
        maxLength: 5000
        minLength: 0
        type: string
      displayName:
        maxLength: 64
        minLength: 0
        type: string
      grantedPermissions:
        items:
          type: string
        type: array
        uniqueItems: false
      id:
        format: int32
        type: integer
      name:
        maxLength: 32
        minLength: 0
        type: string
      normalizedName:
        type: string
    required:
      - name
      - displayName
    type: object
  RoleEditDto:
    properties:
      description:
        maxLength: 5000
        minLength: 0
        type: string
      displayName:
        maxLength: 64
        minLength: 0
        type: string
      id:
        format: int32
        type: integer
      isStatic:
        type: boolean
      name:
        maxLength: 32
        minLength: 0
        type: string
    required:
      - name
      - displayName
    type: object
  RoleListDto:
    properties:
      creationTime:
        format: date-time
        type: string
      displayName:
        type: string
      id:
        format: int32
        type: integer
      isDefault:
        type: boolean
      isStatic:
        type: boolean
      name:
        type: string
    type: object
  ServiceCategory:
    properties:
      baseServices:
        items:
          $ref: "#/definitions/BaseServices"
        type: array
        uniqueItems: false
      children:
        items:
          $ref: "#/definitions/ServiceCategory"
        type: array
        uniqueItems: false
      creationTime:
        format: date-time
        type: string
      icon:
        type: string
      id:
        format: int32
        type: integer
      parentId:
        format: int32
        type: integer
      title:
        type: string
    required:
      - title
    type: object
  ServiceCategoryDto:
    properties:
      children:
        items:
          $ref: "#/definitions/ServiceCategoryDto"
        type: array
        uniqueItems: false
      icon:
        type: string
      id:
        format: int32
        type: integer
      parentId:
        format: int32
        type: integer
      title:
        type: string
    required:
      - title
    type: object
  ServiceCategoryUpdateDto:
    properties:
      children:
        items:
          $ref: "#/definitions/ServiceCategoryDto"
        type: array
        uniqueItems: false
      icon:
        type: string
      id:
        format: int32
        type: integer
      parent:
        $ref: "#/definitions/ServiceCategoryDto"
      parentId:
        format: int32
        type: integer
      title:
        type: string
    required:
      - title
    type: object
  ServiceCategroyCreateDto:
    properties:
      icon:
        type: string
      id:
        format: int32
        type: integer
      parent:
        $ref: "#/definitions/ServiceCategoryDto"
      parentId:
        format: int32
        type: integer
      title:
        type: string
    required:
      - title
    type: object
  ServiceFacilityCreateDto:
    properties:
      icon:
        type: string
      title:
        type: string
    required:
      - title
    type: object
  ServiceFacilityDto:
    properties:
      icon:
        type: string
      id:
        format: int32
        type: integer
      title:
        type: string
    type: object
  ServiceFacilityUpdateDto:
    properties:
      icon:
        type: string
      id:
        format: int32
        type: integer
      title:
        type: string
    type: object
  ServiceImages:
    properties:
      alt:
        type: string
      baseServices:
        $ref: "#/definitions/BaseServices"
      creationTime:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      isMain:
        type: boolean
      serviceId:
        format: int64
        type: integer
      state:
        type: boolean
      thumbUrl:
        type: string
      title:
        type: string
      url:
        type: string
    required:
      - url
      - thumbUrl
      - title
      - alt
    type: object
  ServiceListModel:
    properties:
      address:
        type: string
      capacity:
        format: int32
        type: integer
      facilityDtos:
        items:
          $ref: "#/definitions/ServiceFacilityDto"
        type: array
        uniqueItems: false
      id:
        format: int64
        type: integer
      images:
        items:
          type: string
        type: array
        uniqueItems: false
      priceType:
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      rate:
        format: int32
        type: integer
      title:
        type: string
    type: object
  Setting:
    properties:
      creationTime:
        format: date-time
        type: string
      creatorUserId:
        format: int64
        type: integer
      id:
        format: int64
        type: integer
      lastModificationTime:
        format: date-time
        type: string
      lastModifierUserId:
        format: int64
        type: integer
      name:
        maxLength: 256
        minLength: 0
        type: string
      tenantId:
        format: int32
        type: integer
      userId:
        format: int64
        type: integer
      value:
        maxLength: 2000
        minLength: 0
        type: string
    required:
      - name
    type: object
  TenantDto:
    properties:
      id:
        format: int32
        type: integer
      isActive:
        type: boolean
      name:
        maxLength: 128
        minLength: 0
        type: string
      tenancyName:
        maxLength: 64
        minLength: 0
        pattern: ^[a-zA-Z][a-zA-Z0-9_-]{1,}$
        type: string
    required:
      - tenancyName
      - name
    type: object
  TenantLoginInfoDto:
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      tenancyName:
        type: string
    type: object
  UpdateWeddingVendorDto:
    properties:
      base64Images:
        items:
          $ref: "#/definitions/ImageData"
        type: array
        uniqueItems: false
      capacity:
        format: int32
        type: integer
      categoryId:
        format: int32
        type: integer
      description:
        minLength: 20
        type: string
      facilityDtos:
        items:
          $ref: "#/definitions/ServiceFacilityDto"
        type: array
        uniqueItems: false
      id:
        format: int64
        type: integer
      lat:
        format: double
        type: number
      lng:
        format: double
        type: number
      mainImage:
        type: string
      phone:
        type: string
      title:
        maxLength: 60
        minLength: 3
        type: string
      userId:
        format: int64
        type: integer
    required:
      - title
      - description
      - categoryId
    type: object
  User:
    properties:
      accessFailedCount:
        format: int32
        type: integer
      authenticationSource:
        maxLength: 64
        minLength: 0
        type: string
      claims:
        items:
          $ref: "#/definitions/UserClaim"
        type: array
        uniqueItems: false
      code:
        format: int32
        type: integer
      concurrencyStamp:
        maxLength: 128
        minLength: 0
        type: string
      creationTime:
        format: date-time
        type: string
      creatorUser:
        $ref: "#/definitions/User"
      creatorUserId:
        format: int64
        type: integer
      deleterUser:
        $ref: "#/definitions/User"
      deleterUserId:
        format: int64
        type: integer
      deletionTime:
        format: date-time
        type: string
      emailAddress:
        maxLength: 256
        minLength: 0
        type: string
      emailConfirmationCode:
        maxLength: 328
        minLength: 0
        type: string
      expireTime:
        format: date-time
        type: string
      fullName:
        readOnly: true
        type: string
      id:
        format: int64
        type: integer
      isActive:
        type: boolean
      isDeleted:
        type: boolean
      isEmailConfirmed:
        type: boolean
      isLockoutEnabled:
        type: boolean
      isPhoneNumberConfirmed:
        type: boolean
      isTwoFactorEnabled:
        type: boolean
      lastModificationTime:
        format: date-time
        type: string
      lastModifierUser:
        $ref: "#/definitions/User"
      lastModifierUserId:
        format: int64
        type: integer
      lockoutEndDateUtc:
        format: date-time
        type: string
      logins:
        items:
          $ref: "#/definitions/UserLogin"
        type: array
        uniqueItems: false
      name:
        maxLength: 64
        minLength: 0
        type: string
      normalizedEmailAddress:
        maxLength: 256
        minLength: 0
        type: string
      normalizedUserName:
        maxLength: 256
        minLength: 0
        type: string
      password:
        maxLength: 128
        minLength: 0
        type: string
      passwordResetCode:
        maxLength: 328
        minLength: 0
        type: string
      permissions:
        items:
          $ref: "#/definitions/UserPermissionSetting"
        type: array
        uniqueItems: false
      phoneNumber:
        maxLength: 32
        minLength: 0
        type: string
      roles:
        items:
          $ref: "#/definitions/UserRole"
        type: array
        uniqueItems: false
      securityStamp:
        maxLength: 128
        minLength: 0
        type: string
      settings:
        items:
          $ref: "#/definitions/Setting"
        type: array
        uniqueItems: false
      surname:
        maxLength: 64
        minLength: 0
        type: string
      tenantId:
        format: int32
        type: integer
      tokens:
        items:
          $ref: "#/definitions/UserToken"
        type: array
        uniqueItems: false
      userName:
        maxLength: 256
        minLength: 0
        type: string
    required:
      - normalizedUserName
      - normalizedEmailAddress
      - userName
      - emailAddress
      - name
      - surname
      - password
    type: object
  UserClaim:
    properties:
      claimType:
        maxLength: 256
        minLength: 0
        type: string
      claimValue:
        type: string
      creationTime:
        format: date-time
        type: string
      creatorUserId:
        format: int64
        type: integer
      id:
        format: int64
        type: integer
      tenantId:
        format: int32
        type: integer
      userId:
        format: int64
        type: integer
    type: object
  UserDto:
    properties:
      code:
        format: int32
        type: integer
      creationTime:
        format: date-time
        type: string
      emailAddress:
        maxLength: 256
        minLength: 0
        type: string
      expireTime:
        format: date-time
        type: string
      fullName:
        type: string
      id:
        format: int64
        type: integer
      isActive:
        type: boolean
      isExist:
        type: boolean
      lastLoginTime:
        format: date-time
        type: string
      name:
        maxLength: 64
        minLength: 0
        type: string
      roleNames:
        items:
          type: string
        type: array
        uniqueItems: false
      surname:
        maxLength: 64
        minLength: 0
        type: string
      userName:
        maxLength: 256
        minLength: 0
        type: string
    required:
      - userName
      - name
      - surname
      - emailAddress
    type: object
  UserLogin:
    properties:
      id:
        format: int64
        type: integer
      loginProvider:
        maxLength: 128
        minLength: 0
        type: string
      providerKey:
        maxLength: 256
        minLength: 0
        type: string
      tenantId:
        format: int32
        type: integer
      userId:
        format: int64
        type: integer
    required:
      - loginProvider
      - providerKey
    type: object
  UserLoginInfoDto:
    properties:
      emailAddress:
        type: string
      id:
        format: int64
        type: integer
      name:
        type: string
      surname:
        type: string
      userName:
        type: string
    type: object
  UserPermissionSetting:
    properties:
      creationTime:
        format: date-time
        type: string
      creatorUserId:
        format: int64
        type: integer
      id:
        format: int64
        type: integer
      isGranted:
        type: boolean
      name:
        maxLength: 128
        minLength: 0
        type: string
      tenantId:
        format: int32
        type: integer
      userId:
        format: int64
        type: integer
    required:
      - name
    type: object
  UserRole:
    properties:
      creationTime:
        format: date-time
        type: string
      creatorUserId:
        format: int64
        type: integer
      id:
        format: int64
        type: integer
      roleId:
        format: int32
        type: integer
      tenantId:
        format: int32
        type: integer
      userId:
        format: int64
        type: integer
    type: object
  UserServicesDto:
    properties:
      mainImage:
        type: string
      serviceId:
        format: int64
        type: integer
      status:
        type: boolean
      title:
        type: string
    type: object
  UserToken:
    properties:
      expireDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      loginProvider:
        maxLength: 128
        minLength: 0
        type: string
      name:
        maxLength: 128
        minLength: 0
        type: string
      tenantId:
        format: int32
        type: integer
      userId:
        format: int64
        type: integer
      value:
        maxLength: 512
        minLength: 0
        type: string
    type: object
  WeddingVendorDto:
    properties:
      categoryId:
        format: int32
        type: integer
      creationTime:
        format: date-time
        type: string
      description:
        type: string
      id:
        format: int64
        type: integer
      mainImage:
        type: string
      title:
        type: string
      userDto:
        $ref: "#/definitions/UserDto"
    type: object
