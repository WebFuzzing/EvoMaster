openapi: 3.0.0
servers:
  - url: https://api.beezup.com
info:
  contact:
    email: help@beezup.com
  description: |-
    # The REST API of BeezUP system
    ## Overview
    The REST APIs provide programmatic access to read and write BeezUP data. 
    Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !

    The main features are:
    - Register and manage your account
    - Create and manage and share your stores with your friends/co-workers.
    - Import your product catalog and schedule the auto importation
    - Search the channels your want to use
    - Configure your channels for your catalogs to export your product information:
        - cost and general settings
        - category and columns mappings
        - your will be able to create and manage your custom column
        - put in place exlusion filters based on simple conditions on your product data
        - override product values
        - get product vision for a channel catalog scope
    - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product.
    - Automatize your optimisation by using rules!
    - And of course... Manage your orders harvested from all your marketplaces:
        - Synchronize your orders in an uniformized way
        - Get the available actions and update the order status
    - ...and more!

    ## Authentication credentials
    The public API with the base path **/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials.
    We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).

    The user API with the base path **/v2/user** requires a token which is available on this page:
    https://go.beezup.com/Account/MyAccount

    ## Things to keep in mind
    ### API Rate Limits
    - The BeezUP REST API is limited to 100 calls/minute.

    ### Media type
    The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.

    ### Required content type
    The required and default encoding for the request and responses is UTF8.

    ### Required date time format
    All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.

    ### Base URL
    The Base URL of the BeezUP API Order Management REST API conforms to the following template.

    https://api.beezup.com

    All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.

    You can test our API on https://api-docs.beezup.com/swagger-ui\\
    You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
  license:
    name: BeezUP
    url: https://www.beezup.com/
  title: "BeezUP Merchant API "
  version: "2.0"
  x-apisguru-categories:
    - ecommerce
  x-logo:
    backgroundColor: "#FFFFFF"
    url: https://avatars0.githubusercontent.com/u/25665430
  x-origin:
    - format: openapi
      url: https://api-docs.beezup.com/swagger.json
      version: "3.0"
  x-providerName: beezup.com
externalDocs:
  description: Find the documentation for BeezUP's API here
  url: https://api-docs.beezup.com/
tags:
  - name: Public - Security - Security
    x-displayName: Security
  - name: Public - Channels - Public Channels
    x-displayName: Public Channels
  - name: Public - List of Values - LOV
    x-displayName: LOV
  - name: User - List of Values - LOV
    x-displayName: LOV
  - name: Customer - Global
    x-displayName: Global
  - name: Customer - Account
    x-displayName: Account
  - name: Customer - Security
    x-displayName: Security
  - name: Customer - Stores
    x-displayName: Stores
  - name: Customer - Shares
    x-displayName: Shares
  - name: Customer - Alerts
    x-displayName: Alerts
  - name: Customer - Rights
    x-displayName: Rights
  - name: Customer - Friends
    x-displayName: Friends
  - name: Customer - Contracts
    x-displayName: Contracts
  - name: Customer - Invoices
    x-displayName: Invoices
  - name: Catalogs - Auto
    x-displayName: Auto
  - name: Catalogs - Global
    x-displayName: Global
  - name: Catalogs - Importation Process
    x-displayName: Importation Process
  - name: Catalogs - Importation Catalog Info
    x-displayName: Importation Catalog Info
  - name: Catalogs - Catalog
    x-displayName: Catalog
  - name: Channels - Channels Global
    x-displayName: Channels Global
  - name: Channel Catalogs - Global
    x-displayName: Global
  - name: Channel Catalogs - Settings
    x-displayName: Settings
  - name: Channel Catalogs - Column Mappings
    x-displayName: Column Mappings
  - name: Channel Catalogs - Categories
    x-displayName: Categories
  - name: Channel Catalogs - Exclusion Filters
    x-displayName: Exclusion Filters
  - name: Channel Catalogs - Products
    x-displayName: Products
  - name: Channel Catalogs - Products Overrides
    x-displayName: Products Overrides
  - name: Channel Catalogs - Products Optimisation
    x-displayName: Products Optimisation
  - name: Channel Catalogs - Exportations
    x-displayName: Exportations
  - name: Marketplaces - Channel catalogs - Global
    x-displayName: Global
  - name: Marketplaces - Channel catalogs - Publications
    x-displayName: Publications
  - name: Marketplaces - Channel catalogs - Settings
    x-displayName: Settings
  - name: Marketplaces - Orders - Global
    x-displayName: Global
  - name: Marketplaces - Orders - AutoTransitions
    x-displayName: AutoTransitions
  - name: Marketplaces - Orders - List
    x-displayName: List
  - name: Marketplaces - Orders - Order
    x-displayName: Order
  - name: Marketplaces - Orders - Batches
    x-displayName: Batches
  - name: Marketplaces - Orders - Exports
    x-displayName: Exports
  - name: Marketplaces - Orders V3 - Global
    x-displayName: Global
  - name: Marketplaces - Orders V3 - List
    x-displayName: List
  - name: Marketplaces - Orders V3 - Order
    x-displayName: Order
  - name: Marketplaces - Orders V3 - Batches
    x-displayName: Batches
  - name: Marketplaces - Orders - Subscriptions - Subscriptions
    x-displayName: Subscriptions
  - name: OM Invoice - API - Settings
    x-displayName: Settings
  - name: OM Invoice - API - Generation
    x-displayName: Generation
  - name: Analytics - Global
    x-displayName: Global
  - name: Analytics - Tracking
    x-displayName: Tracking
  - name: Analytics - Statistics
    x-displayName: Statistics
  - name: Analytics - Optimisations
    x-displayName: Optimisations
  - name: Analytics - Reports
    x-displayName: Reports
  - name: Analytics - Rules
    x-displayName: Rules
  - name: Channel Catalogs - Legacy Tracking - Global
    x-displayName: Global
paths:
  /orders/v3/batches/changeOrders:
    post:
      deprecated: false
      description: |
        The purpose of this operation is to reduce the amount of request to the API. 
        Max 100 items per call.
      operationId: ChangeOrderListV3
      parameters:
        - $ref: "#/components/parameters/userNameInQueryParameter"
        - $ref: "#/components/parameters/testModeInQueryParameter"
      requestBody:
        $ref: "#/components/requestBodies/changeOrderListRequest"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchOrderOperationResponse"
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested too many batch operations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "Send a batch of operations to change your marketplace Order information: accept, ship, etc.  (max 100 items per call)"
      tags:
        - Marketplaces - Orders V3 - Batches
  "/orders/v3/batches/changeOrders/{changeOrderType}":
    post:
      deprecated: false
      description: |
        The purpose of this operation is to reduce the amount of request to the API. 
        Max 100 items per call.
      operationId: ChangeOrderListV2
      parameters:
        - $ref: "#/components/parameters/userNameInQueryParameter"
        - $ref: "#/components/parameters/testModeInQueryParameter"
        - $ref: "#/components/parameters/changeOrderTypeParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/changeOrderListRequestV2"
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchOrderOperationResponse"
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested too many batch operations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "Send a batch of operations to change your marketplace Order information: accept, ship, etc.  (max 100 items per call)"
      tags:
        - Marketplaces - Orders V3 - Batches
  /orders/v3/batches/clearMerchantOrderInfos:
    post:
      deprecated: false
      description: The purpose of this operation is to reduce the amount of request to the API.
      operationId: ClearMerchantOrderInfoListV3
      parameters:
        - $ref: "#/components/parameters/testModeInQueryParameter"
      requestBody:
        $ref: "#/components/requestBodies/clearMerchantOrderInfoListRequest"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchOrderOperationResponse"
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested too many batch operations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Send a batch of operations to clear an Order's merchant information (max 100 items per call)
      tags:
        - Marketplaces - Orders V3 - Batches
  /orders/v3/batches/setMerchantOrderInfos:
    post:
      description: The purpose of this operation is to reduce the amount of request to the API.
      operationId: SetMerchantOrderInfoListV3
      parameters:
        - $ref: "#/components/parameters/testModeInQueryParameter"
      requestBody:
        $ref: "#/components/requestBodies/setMerchantOrderInfoListRequest"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchOrderOperationResponse"
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested too many batch operations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Send a batch of operations to set an Order's merchant information  (max 100 items per call)
      tags:
        - Marketplaces - Orders V3 - Batches
  /orders/v3/harvest:
    post:
      deprecated: false
      operationId: HarvestAllV3
      parameters:
        - description: The StoreId to filter by
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: false
          schema:
            format: StoreId
            type: string
      responses:
        "202":
          description: Successfully sent harvest request to all marketplaces
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Store could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Failed to send harvest request because allowed rate limits have been exceeded
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Send harvest request to all your marketplaces
      tags:
        - Marketplaces - Orders V3 - Global
  /orders/v3/list/full:
    post:
      deprecated: false
      description: |
        The purpose of this operation is to reduce the amount of request to the API.\
        \
        Previous implmentation of this feature only returned a partial (light) version of the Orders. The purpose of this API is to reduce the number of incoming requests by returning the complete (full) Order and Order Item(s) properties.
      operationId: GetOrderListFullV3
      parameters:
        - description: Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size
          in: header
          name: Accept-Encoding
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/orderListRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderListFullWithLinks"
          description: Successfully fetched the full list of Orders
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Could not process request for given parameters values. Please check error message for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get a paginated list of all Orders with all Order and Order Item(s) properties
      tags:
        - Marketplaces - Orders V3 - List
  /orders/v3/list/light:
    post:
      deprecated: false
      operationId: GetOrderListLightV3
      requestBody:
        $ref: "#/components/requestBodies/orderListRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderListLightWithLinks"
          description: Successfully fetched the list of Orders
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Could not process request for given parameters values. Please check error message for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get a paginated list of all Orders without details
      tags:
        - Marketplaces - Orders V3 - List
  /orders/v3/lov/orderManagementReadyMarketplaceBusinessCode:
    get:
      description: Get the list of MarketplaceBusinessCode ready for Order Management
      operationId: GetOrderManagementReadyMarketplaceBusinessCode
      parameters:
        - $ref: "#/components/parameters/acceptLanguageParameter"
        - $ref: "#/components/parameters/storeIdsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oMReadyMarketplaceBusinessCodeResponse"
          description: Successfully fetched current synchronization status
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Store could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      tags:
        - Marketplaces - Orders V3 - Global
  /orders/v3/status:
    get:
      description: Get current synchronization status between your marketplaces and BeezUP accounts
      operationId: GetMarketplaceAccountsSynchronizationV3
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
        - $ref: "#/components/parameters/storeIdsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountSynchronizationList"
          description: Successfully fetched the list of MarketplaceBusinessCode ready for Order Management
        "304":
          $ref: "#/components/responses/304_NotModified"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Invalid store id
        default:
          $ref: "#/components/responses/GeneralError"
      tags:
        - Marketplaces - Orders V3 - Global
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/harvest":
    post:
      deprecated: false
      operationId: HarvestAccount
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - in: query
          name: marketplaceOrderId
          schema:
            type: string
        - in: query
          name: beezUPOrderId
          schema:
            type: string
      responses:
        "202":
          description: Successfully sent Order harvest request
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Account Or beezUPOrderId could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Failed to send harvest request because allowed rate limits have been exceeded
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Send harvest request for an Account
      tags:
        - Marketplaces - Orders V3 - Order
      x-validation:
        - statusCode: "401"
          validatorName: userAuthorized
        - statusCode: "404"
          validatorName: accountExists
        - statusCode: "404"
          validatorName: beezUPOrderIdExists
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}":
    get:
      deprecated: false
      operationId: GetOrderV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderWithLinks"
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: |
                ETag value to identify the current version of requested Order\
                For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: |
                Last modification UTC date of the order\
                For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                format: date-time
                type: string
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get full Order and Order Item(s) properties
      tags:
        - Marketplaces - Orders V3 - Order
    head:
      deprecated: false
      description: |
        The purpose of this operation is to reduce the bandwith usage by getting just the meta information about the order (ETag, Last-Modified) with the body.
        This could be useful
      operationId: HeadOrderV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: |
                ETag value to identify the current version of requested Order\
                For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: |
                Last modification UTC date of the order\
                For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                format: date-time
                type: string
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the meta information about the order (ETag, Last-Modified)
      tags:
        - Marketplaces - Orders V3 - Order
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo":
    post:
      deprecated: false
      operationId: ClearMerchantOrderInfoV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/testModeInQueryParameter"
      responses:
        "202":
          description: Clear Order merchant order info accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Could not update Order merchant information. Please see body for more information.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Clear an Order's merchant information
      tags:
        - Marketplaces - Orders V3 - Order
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest":
    post:
      deprecated: false
      operationId: HarvestOrderV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
      responses:
        "202":
          description: Successfully sent Order harvest request
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Failed to send harvest request because allowed rate limits have been exceeded
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Send harvest request for a single Order
      tags:
        - Marketplaces - Orders V3 - Order
      x-validation:
        - statusCode: "401"
          validatorName: userAuthorized
        - statusCode: "404"
          validatorName: orderExists
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history":
    get:
      deprecated: false
      operationId: GetOrderHistoryV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderHistory"
          description: Successfully fetched Order history
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get an Order's harvest and change history
      tags:
        - Marketplaces - Orders V3 - Order
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history/{orderChangeExecutionUUID}":
    get:
      deprecated: false
      description: This operation will help you to know the status of your order change operation
      operationId: GetOrderChangeReportingV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - description: The order change execution id
          in: path
          name: orderChangeExecutionUUID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changeOrderReporting"
          description: Successfully fetched Order change reporting
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the order change reporting
      tags:
        - Marketplaces - Orders V3 - Order
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo":
    post:
      deprecated: false
      operationId: SetMerchantOrderInfoV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/testModeInQueryParameter"
      requestBody:
        $ref: "#/components/requestBodies/setMerchantOrderInfoRequest"
      responses:
        "202":
          description: Set Order merchant order info accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Could not update Order merchant information. Please see body for more information.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Set an Order's merchant information
      tags:
        - Marketplaces - Orders V3 - Order
  "/orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}":
    post:
      deprecated: false
      operationId: ChangeOrderV3
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/changeOrderTypeParameter"
        - $ref: "#/components/parameters/userNameInQueryParameter"
        - $ref: "#/components/parameters/testModeInQueryParameter"
      requestBody:
        $ref: "#/components/requestBodies/changeOrderRequest"
      responses:
        "202":
          description: Order change request accepted
          headers:
            Location:
              description: Indicate the address you should follow to know the status of your order change operation
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Invalid order change request, could not be send to the marketplace. Please check the body of this request.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Requested Order could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: |
            Already processing a change request for this Order.\
            Please refresh your clients Order information and retry later.
          headers:
            Location:
              description: Indicate the address you should follow to know the status of the existing order change operation
              schema:
                type: string
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        "412":
          $ref: "#/components/responses/412_PreConditionFailed"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change your marketplace Order Information (accept, ship, etc.)
      tags:
        - Marketplaces - Orders V3 - Order
  /v2/public/channels/:
    get:
      description: Use this operation to get the correct link to the channels and to the list of values
      operationId: GetChannelsIndex
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicChannelIndex"
          description: Channel list regrouped by country and links to list of values
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get public channel index
      tags:
        - Public - Channels - Public Channels
  "/v2/public/channels/{countryIsoCode}":
    get:
      operationId: GetChannels
      parameters:
        - description: |
            The country iso code alpha 3 based on this: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Decoding_table \
            To know which country are available you have to use the operation: GetChannelsByCountry
          in: path
          name: countryIsoCode
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/acceptEncodingRequiredParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    channels:
                      - homeUrl: http://www.amazon.fr
                        logoUrl: http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png
                        name: Amazon Direct FRA
                        types:
                          - Marketplace
              schema:
                $ref: "#/components/schemas/publicChannelInfoList"
          description: The channel list for one country
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Channel country not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: The channel list for one country
      tags:
        - Public - Channels - Public Channels
  /v2/public/lov/:
    get:
      operationId: GetPublicLovIndex
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicLovIndex"
          description: Get the list names
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        "304":
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get all list names
      tags:
        - Public - List of Values - LOV
  "/v2/public/lov/{listName}":
    get:
      operationId: GetPublicListOfValues
      parameters:
        - description: The list of value name your want to get
          in: path
          name: listName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/acceptLanguageParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicListOfValuesResponse"
          description: The list of values
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            Content-Language:
              description: Indicates the language use in the response
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        "304":
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: List not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the list of values related to this list name
      tags:
        - Public - List of Values - LOV
  /v2/public/security/login:
    post:
      description: User Login - The login will give your tokens
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiCredentials"
          description: Your tokens
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Bad Request
        "403":
          description: Invalid credentials
        "500":
          $ref: "#/components/responses/GeneralError"
      summary: Login
      tags:
        - Public - Security - Security
  /v2/public/security/lostpassword:
    post:
      description: Lost password - Your password will be regenerated and sent to your email
      operationId: LostPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BeezUP.Common.Email"
        description: Your email
        required: true
      responses:
        "204":
          description: New password sent
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Bad Request
        "404":
          description: Email not found
        "500":
          $ref: "#/components/responses/GeneralError"
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Problem with SMTP service
      summary: Lost password
      tags:
        - Public - Security - Security
  /v2/public/security/register:
    post:
      description: User Registration - Create a new user on BeezUP
      operationId: Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerRequest"
        required: true
      responses:
        "204":
          description: Customer registered
        "400":
          description: Email or password is invalid. Disposable email are refused.
        "409":
          description: Email already used
        "500":
          $ref: "#/components/responses/GeneralError"
      summary: User Registration
      tags:
        - Public - Security - Security
  /v2/user/analytics/:
    get:
      operationId: AnalyticsIndex
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/analyticsIndex"
          description: Analytics API operation index
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the Analytics API operation index
      tags:
        - Analytics - Global
  /v2/user/analytics/reports/byday:
    post:
      description: Get the report by day for a StoreId
      operationId: GetStoreReportByDayPerStore
      requestBody:
        $ref: "#/components/requestBodies/reportByDayRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportByDayPerStoreResponse"
          description: Your reporting by day
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the report by day for a StoreId
      tags:
        - Analytics - Statistics
  /v2/user/analytics/tracking/status:
    get:
      description: |
        Clicks and orders are eventually consistent. \
        This operation gets the current global state of projections.
      operationId: GetTrackingStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trackingStatus"
          description: The tracking status informations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the global synchronization status of clicks and orders
      tags:
        - Analytics - Tracking
  "/v2/user/analytics/{storeId}":
    get:
      operationId: AnalyticsStoreIndex
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/analyticsStoreIndex"
          description: Analytics API operation index for one store
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the Analytics API operation index for one store
      tags:
        - Analytics - Global
  "/v2/user/analytics/{storeId}/optimisations/all/{actionName}":
    post:
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product related to this request. \
        This operation is used at the bottom of the analytics page result.
      operationId: OptimiseAll
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/optimisationActionNameGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/optimiseAllRequest"
        required: true
      responses:
        "204":
          description: Products optimisatized
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Optimise all products
      tags:
        - Analytics - Optimisations
  "/v2/user/analytics/{storeId}/optimisations/bycategory/{catalogCategoryId}/{actionName}":
    post:
      description: |
        /!\ WARNING /!\ \
        This operation will reenable or disable products's category for every channel indicated in the body.
      operationId: OptimiseByCategory
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The category identifier concerned by this optimisation
          in: path
          name: catalogCategoryId
          required: true
          schema:
            format: guid
            type: string
        - $ref: "#/components/parameters/optimisationActionNameGeneralParameters"
      requestBody:
        $ref: "#/components/requestBodies/OptimiseByCategoryRequest"
      responses:
        "204":
          description: Products optimisatized
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Optimise products by category
      tags:
        - Analytics - Optimisations
  "/v2/user/analytics/{storeId}/optimisations/bychannel/{channelId}/{actionName}":
    post:
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product on this channel.
      operationId: OptimiseByChannel
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The channel identifier concerned by this optimisation
          in: path
          name: channelId
          required: true
          schema:
            format: guid
            type: string
        - $ref: "#/components/parameters/optimisationActionNameGeneralParameters"
      responses:
        "204":
          description: Products optimisatized
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Optimise products by channel
      tags:
        - Analytics - Optimisations
  "/v2/user/analytics/{storeId}/optimisations/byproduct/{productId}/{actionName}":
    post:
      description: |
        /!\ WARNING /!\ \
        This operation will reenable or disable this product for every channel indicated in the body.
      operationId: OptimiseByProduct
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The product identifier concerned by this optimisation
          in: path
          name: productId
          required: true
          schema:
            format: guid
            type: string
        - $ref: "#/components/parameters/optimisationActionNameGeneralParameters"
      requestBody:
        $ref: "#/components/requestBodies/OptimiseByCategoryRequest"
      responses:
        "204":
          description: Product(s) optimisatized
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Optimise product
      tags:
        - Analytics - Optimisations
  "/v2/user/analytics/{storeId}/optimisations/copy":
    post:
      operationId: CopyOptimisation
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/copyOptimisationRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/copyOptimisationResponse"
          description: Products optimisatisation copied
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Copy product optimisations between 2 channels
      tags:
        - Analytics - Optimisations
  "/v2/user/analytics/{storeId}/optimisations/{actionName}":
    post:
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product related to this request. \
        This operation is used at the bottom of the analytics page result.
      operationId: Optimise
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/optimisationActionNameGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/optimiseRequest"
        required: true
      responses:
        "204":
          description: Products optimisatized
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Optimise products by page
      tags:
        - Analytics - Optimisations
  "/v2/user/analytics/{storeId}/reports/bycategory":
    post:
      description: Get the report by category
      operationId: GetStoreReportByCategory
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportByCategoryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportByCategoryResponse"
          description: Your reporting by channel
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the report by category
      tags:
        - Analytics - Statistics
  "/v2/user/analytics/{storeId}/reports/bychannel":
    post:
      description: Get the report by channel
      operationId: GetStoreReportByChannel
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportByChannelRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportByChannelResponse"
          description: Your reporting by channel
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the report by channel
      tags:
        - Analytics - Statistics
  "/v2/user/analytics/{storeId}/reports/byday":
    post:
      description: Get the report by day for a StoreId
      operationId: GetStoreReportByDay
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        $ref: "#/components/requestBodies/reportByDayRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportByDayResponse"
          description: Your reporting by day
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the report by day for a StoreId
      tags:
        - Analytics - Statistics
  "/v2/user/analytics/{storeId}/reports/byproduct":
    post:
      description: Get the report by product
      operationId: GetStoreReportByProduct
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportByProductRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportByProductResponse"
          description: Your reporting by product
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the report by product
      tags:
        - Analytics - Statistics
  "/v2/user/analytics/{storeId}/reports/filters":
    get:
      operationId: GetReportFilters
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportFilterList"
          description: Report filter list
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get report filter list for the given store
      tags:
        - Analytics - Reports
  "/v2/user/analytics/{storeId}/reports/filters/{reportFilterId}":
    delete:
      operationId: DeleteReportFilter
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/reportFilterIdOnlyGeneralParameters"
      responses:
        "204":
          description: Report filter deleted
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: This report filter is used by rule. In the error message you will find the rule identifier.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Report filter not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete the report filter
      tags:
        - Analytics - Reports
    get:
      operationId: GetReportFilter
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/reportFilterIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportFilter"
          description: Report filter
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Report filter not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the report filter description
      tags:
        - Analytics - Reports
    put:
      operationId: SaveReportFilter
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/reportFilterIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/saveReportFilterRequest"
        required: true
      responses:
        "204":
          description: Report filter saved
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: This report filter is used by rule. In the error message you will find the rule identifier.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: This report filter identifier is already used by another store, please check your identifiers.
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Report filter name already exists
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Save the report filter
      tags:
        - Analytics - Reports
  "/v2/user/analytics/{storeId}/rules":
    get:
      operationId: GetRules
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ruleList"
          description: Rule list
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Gets the list of rules for a given store
      tags:
        - Analytics - Rules
    post:
      operationId: CreateRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createRuleRequest"
        required: true
      responses:
        "204":
          description: Rule created
        "400":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Period on filter cannot be custom or filter does not exist
        "401":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        "403":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Reached the maximum amount of rules allowed for your offer. Please upgrade your offer or contact us.
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Rule creation
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/executions":
    get:
      operationId: GetRulesExecutions
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The page to retrieve
          in: query
          name: pageNumber
          required: true
          schema:
            default: "1"
            minimum: 1
            type: integer
        - description: The count of rule history to retrieve
          in: query
          name: pageSize
          required: true
          schema:
            default: "10"
            maximum: 100
            minimum: 10
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ruleExecutionReportings"
          description: Rules executions list
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the rules execution history
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/run":
    post:
      operationId: RunRules
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "204":
          description: All rules executed.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Run all rules for this store
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/{ruleId}":
    delete:
      operationId: DeleteRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      responses:
        "204":
          description: Rule deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete Rule
      tags:
        - Analytics - Rules
    get:
      operationId: GetRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rule"
          description: Get Rule
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Gets the rule
      tags:
        - Analytics - Rules
    patch:
      operationId: UpdateRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateRuleRequest"
        required: true
      responses:
        "204":
          description: Rule updated
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Filter does not exist or period on filter cannot be custom
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Update Rule
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/{ruleId}/disable":
    post:
      operationId: DisableRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      responses:
        "204":
          description: Rule disabled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Disable rule
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/{ruleId}/enable":
    post:
      operationId: EnableRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      responses:
        "204":
          description: Rune enabled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Enable rule
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/{ruleId}/movedown":
    post:
      operationId: MoveDownRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      responses:
        "204":
          description: Rule moved down
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Priority can only be changed when more than one rule is defined
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Move the rule down
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/{ruleId}/moveup":
    post:
      operationId: MoveUpRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      responses:
        "204":
          description: Rule moved up
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Priority can only be changed when more than one rule is defined
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Move the rule up
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/rules/{ruleId}/run":
    post:
      operationId: RunRule
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ruleIdOnlyGeneralParameters"
      responses:
        "204":
          description: Rule executed
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule is not enabled. Please enable this run before trying to run it.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rule not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Run rule
      tags:
        - Analytics - Rules
  "/v2/user/analytics/{storeId}/tracking/clicks":
    get:
      operationId: GetStoreTrackedClicks
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The amount of clicks to retrieve
          in: query
          name: count
          required: false
          schema:
            default: "100"
            maximum: 100
            minimum: 5
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trackedClicks"
          description: Click list
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the latest tracked clicks
      tags:
        - Analytics - Tracking
  "/v2/user/analytics/{storeId}/tracking/externalorders":
    get:
      operationId: GetStoreTrackedExternalOrders
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The amount of external orders to retrieve
          in: query
          name: count
          required: false
          schema:
            default: "100"
            maximum: 100
            minimum: 5
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trackedExternalOrders"
          description: External Order list
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the latest tracked external orders
      tags:
        - Analytics - Tracking
  "/v2/user/analytics/{storeId}/tracking/orders":
    get:
      operationId: GetStoreTrackedOrders
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The amount of orders to retrieve
          in: query
          name: count
          required: false
          schema:
            default: "100"
            maximum: 100
            minimum: 5
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trackedOrders"
          description: Order list
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the latest tracked orders
      tags:
        - Analytics - Tracking
  "/v2/user/analytics/{storeId}/tracking/status":
    get:
      description: |
        Clicks and orders are eventually consistent. \
        This operation gets the current state of projections for a store.
      operationId: GetStoreTrackingStatus
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/storeTrackingStatus"
          description: Store Tracking Status
        "404":
          $ref: "#/components/responses/StoreNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the synchronization status of clicks and orders of a store
      tags:
        - Analytics - Tracking
  /v2/user/catalogs/:
    get:
      description: The operation will give you all the operations you will be able to do and all the LOV used in this API.
      operationId: CatalogIndex
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/catalogIndex"
          description: OK
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the index of the catalog API
      tags:
        - Catalogs - Global
  /v2/user/catalogs/beezupColumns:
    get:
      description: Get the BeezUP columns, this columns are used for mapping during the manual catalog importation process.
      operationId: Catalog_GetBeezUPColumns
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/beezUPColumnConfiguration"
                type: array
          description: The catalog API index
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the BeezUP columns
      tags:
        - Catalogs - Global
  /v2/user/catalogs/importations:
    get:
      operationId: Importation_GetReportingsAllStores
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importationsPerStoreResponse"
          description: The last importation reportings
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: UserId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the latest catalog importation reporting for all your stores
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}":
    get:
      description: The operation will give you all the operations you will be able to do on this store for this API.
      operationId: CatalogStoreIndex
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/catalogStoreIndex"
          description: The catalog index
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the index of the catalog API for this store
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/autoImport":
    delete:
      operationId: Auto_DeleteAutoImport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "204":
          description: Auto import deleted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when the catalog auto import is not configured.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete Auto Import
      tags:
        - Catalogs - Auto
    get:
      operationId: Auto_GetAutoImportConfiguration
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/autoImportConfiguration"
          description: Auto import configuration
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId or Auto Import configuration not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the auto import configuration
      tags:
        - Catalogs - Auto
  "/v2/user/catalogs/{storeId}/autoImport/activate":
    post:
      description: Once you have made your fist manual catalog importation with success, you can call this operation to import it automatically. No parameter required, we know which one it is.
      operationId: Importation_ActivateAutoImport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "204":
          description: Auto import activated
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when the user tries to auto import a local file.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: When a catalog importation is already in progress!
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Activate the auto importation of the last successful manual catalog importation.
      tags:
        - Catalogs - Auto
  "/v2/user/catalogs/{storeId}/autoImport/pause":
    post:
      operationId: Auto_PauseAutoImport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "204":
          description: Auto import paused
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when the catalog auto import is not configured.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Pause Auto Import
      tags:
        - Catalogs - Auto
  "/v2/user/catalogs/{storeId}/autoImport/resume":
    post:
      operationId: Auto_ResumeAutoImport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "204":
          description: Auto import resumed
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when the catalog auto import is not configured.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Resume Auto Import
      tags:
        - Catalogs - Auto
  "/v2/user/catalogs/{storeId}/autoImport/scheduling/interval":
    post:
      operationId: Auto_ConfigureAutoImportInterval
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configureAutoImportIntervalRequest"
        required: true
      responses:
        "204":
          description: Auto import scheduling interval saved
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            
            When the min catalog Auto Import scheduling interval delay has been reached.
            When the max catalog Auto Import count has been reached.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure Auto Import Interval
      tags:
        - Catalogs - Auto
  "/v2/user/catalogs/{storeId}/autoImport/scheduling/schedules":
    post:
      operationId: Auto_ScheduleAutoImport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/scheduleAutoImportRequest"
        required: true
      responses:
        "204":
          description: Auto import scheduling saved
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            
            When the max catalog Auto Import count has been reached.
            When the min catalog Auto Import scheduling interval delay has been reached.
            When the max catalog Auto Import count has been reached.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure Auto Import Schedules
      tags:
        - Catalogs - Auto
  "/v2/user/catalogs/{storeId}/autoImport/start":
    post:
      operationId: Auto_StartAutoImport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "202":
          $ref: "#/components/responses/importStarted"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when the catalog auto import is not configured.
            When a user column name is duplicate.
            When the catalog column name are duplicate.
            When the BeezUP column have duplicate mapping.
            Occurs when the required beezup column is not mapped to any column.
            Occurs when the category hierarchy is not correctly mapped.
            Occurs when the duplicate strategy on {catalogColumnName} is not found.
            When the user tries to import to ofen the catalog file to download count max limit has been reached.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: An importation is already in progress
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Start Auto Import Manually
      tags:
        - Catalogs - Auto
  "/v2/user/catalogs/{storeId}/catalogColumns":
    get:
      operationId: Catalog_GetCatalogColumns
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/catalogColumnList"
          description: Catalog column list
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get catalog column list
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/catalogColumns/{columnId}/rename":
    post:
      operationId: Catalog_ChangeCatalogColumnUserName
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/catalogColumnId"
      requestBody:
        $ref: "#/components/requestBodies/changeUserColumnNameRequest"
      responses:
        "204":
          description: Catalog column user name changed
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: When a user column name is duplicate.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog column is not found.
        "409":
          $ref: "#/components/responses/importAlreadyInProgress"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change Catalog Column User Name
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/categories":
    get:
      operationId: Catalog_GetCategories
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: Indicates that the client accepts that the response will be compressed to reduce traffic size.
          in: header
          name: Accept-Encoding
          required: true
          schema:
            items:
              type: string
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categoryList"
          description: Categories
          headers:
            Content-Encoding:
              description: Indicates the compression use in the response
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get category list
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/customColumns":
    get:
      operationId: Catalog_GetCustomColumns
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customColumnList"
          description: Custom column list
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get custom column list
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/customColumns/computeExpression":
    post:
      operationId: Catalog_ComputeExpression
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/computeExpressionRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Compute an expression
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Occurs when the expression cannot be computed
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Compute the expression for this catalog.
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/customColumns/{columnId}":
    delete:
      operationId: Catalog_DeleteCustomColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "204":
          description: Custom column deleted
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when the parent category is not found.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong store.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: When a catalog importation is already in progress!
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete custom column
      tags:
        - Catalogs - Catalog
    put:
      operationId: Catalog_SaveCustomColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/customColumnId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createCustomColumnRequest"
        required: true
      responses:
        "204":
          description: Custom column saved
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a catalog custom column id is already used by a catalog column.
            When the catalog custom column count limit has been reached.
        "404":
          description: Occurs when a user tries to work on the wrong store.
        "409":
          $ref: "#/components/responses/importAlreadyInProgress"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Create or replace a custom column
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/customColumns/{columnId}/expression":
    get:
      operationId: Catalog_GetCustomColumnExpression
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "200":
          content:
            application/json:
              schema:
                example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan
                type: string
          description: Encrypted expression
        "404":
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog custom column is not found.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the encrypted custom column expression
      tags:
        - Catalogs - Catalog
    put:
      operationId: Catalog_ChangeCustomColumnExpression
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/customColumnId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/changeCustomColumnExpressionRequest"
        required: true
      responses:
        "204":
          description: Custom column expression saved
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when the user try to change a custom column related to a Category. If you want to change this custom column expression you have to make a new manual importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog custom column is not found.
        "409":
          $ref: "#/components/responses/importAlreadyInProgress"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change custom column expression
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/customColumns/{columnId}/rename":
    post:
      operationId: Catalog_ChangeCustomColumnUserName
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/customColumnId"
      requestBody:
        $ref: "#/components/requestBodies/changeUserColumnNameRequest"
      responses:
        "204":
          description: Custom column renamed
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: When a user column name is duplicate.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog column is not found.
        "409":
          $ref: "#/components/responses/importAlreadyInProgress"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change Custom Column User Name
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/importations":
    get:
      operationId: Importation_GetReportings
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importationsResponse"
          description: The last importation reportings
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the latest catalog importation reporting
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/start":
    post:
      operationId: Importation_StartManualUpdate
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/startManualImportRequest"
        required: true
      responses:
        "202":
          $ref: "#/components/responses/importStarted"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Missing Input configuration in the request
            Occurs when there is a duplicate file number in the input configuration
            Occurs when there is a duplicate file Uri in the input configuration
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        "409":
          $ref: "#/components/responses/importAlreadyInProgress"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Start Manual Import
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}":
    get:
      operationId: Importation_GetImportationMonitoring
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importationMonitoring"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ExecutionId not found or not yet synchronized. If not synchronized within 30 sec after the import has been started, please contact our support
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the importation status
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}/cancel":
    post:
      operationId: Importation_Cancel
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "204":
          description: Catalog importation canceled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Cancel importation
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns":
    get:
      operationId: Importation_GetDetectedCatalogColumns
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detectedCatalogColumnList"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get detected catalog columns during this importation.
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}":
    post:
      operationId: Importation_ConfigureCatalogColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configureCatalogColumnCatalogRequest"
        required: true
      responses:
        "204":
          description: Catalog column configured. This operation has no impact on the current catalog until you commit the catalog importation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            
            When the catalog column name is not found
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure catalog column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/ignore":
    post:
      operationId: Importation_IgnoreColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "204":
          description: Catalog column ignored. This operation has no impact on the current catalog until you commit the catalog importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Ignore Column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/map":
    post:
      operationId: Importation_MapCatalogColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/catalogColumnId"
      requestBody:
        $ref: "#/components/requestBodies/mapBeezUPColumnRequest"
      responses:
        "204":
          description: Catalog column mapped. This operation has no impact on the current catalog until you commit the catalog importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Map catalog column to a BeezUP column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/reattend":
    post:
      operationId: Importation_ReattendColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "204":
          description: Catalog column reattended. This operation has no impact on the current catalog until you commit the catalog importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Reattend Column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/unmap":
    post:
      operationId: Importation_UnmapCatalogColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/catalogColumnId"
      responses:
        "204":
          description: Catalog Column unmapped. This operation has no impact on the current catalog until you commit the catalog importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Unmap catalog column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/commit":
    post:
      operationId: Importation_Commit
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "204":
          description: Catalog importation committed
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Commit Importation
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}/commitColumns":
    post:
      operationId: Importation_CommitColumns
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "204":
          description: Columns configuration have been committed. This operation has no impact on the current catalog until you commit the catalog importation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            When a user column name is duplicate.
            When the catalog column name are duplicate.
            When the BeezUP column have duplicate mapping.
            Occurs when the required beezup column is not mapped to any column.
            Occurs when the category hierarchy is not correctly mapped.
            When the catalog column count limit has been reached.
            When the catalog custom column count limit has been reached.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Commit columns
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}/configureRemainingCatalogColumns":
    post:
      description: This operation should be used after you have mapped the required BeezUP Columns
      operationId: Importation_ConfigureRemainingCatalogColumns
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "204":
          description: Remaining catalog columns have been configured. This operation has no impact on the current catalog until you commit the catalog importation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            When a user column name is duplicate.
            When the catalog column name are duplicate.
            When the BeezUP column have duplicate mapping.
            Occurs when the required beezup column is not mapped to any column.
            Occurs when the category hierarchy is not correctly mapped.
            Occurs when the duplicate strategy on {catalogColumnName} is not found.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure remaining catalog columns
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns":
    get:
      operationId: Importation_GetCustomColumns
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importationCustomColumnList"
          description: Custom columns of current Importation successfully retrieved
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get custom columns currently place in this importation
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}":
    delete:
      operationId: Importation_DeleteCustomColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "204":
          description: When the custom column for this importation is correctly deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete Custom Column
      tags:
        - Catalogs - Importation Catalog Info
    put:
      operationId: Importation_SaveCustomColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/changeCustomColumnRequest"
        required: true
      responses:
        "204":
          description: Custom column configured. This operation has no impact on the current catalog until you commit the catalog importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Create or replace a custom column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/expression":
    get:
      operationId: Importation_GetCustomColumnExpression
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "200":
          content:
            application/json:
              schema:
                example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan
                type: string
          description: Encrypted expression
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the encrypted custom column expression in this importation
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/map":
    post:
      operationId: Importation_MapCustomColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      requestBody:
        $ref: "#/components/requestBodies/mapBeezUPColumnRequest"
      responses:
        "204":
          description: Custom column mapped. This operation has no impact on the current catalog until you commit the catalog importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Map custom column to a BeezUP column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/unmap":
    post:
      operationId: Importation_UnmapCustomColumn
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "204":
          description: Custom column unmapped. This operation has no impact on the current catalog until you commit the catalog importation.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Unmap custom column
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}":
    get:
      operationId: Importation_GetProductSample
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/productSampleIndex"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productSample"
          description: OK
        "404":
          description: |-
            ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support
                  schema:
            $ref: 'https://api.beezup.com/swaggerhub/domains/BeezUP/api.beezup.com/v2#/definitions/BeezUP.Common.ErrorResponseMessage'
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the product sample related to this importation with all columns (catalog and custom)
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}/customColumns/{columnId}":
    get:
      description: /!\ Use this operation only when you just changed the custom column expression and you want to get a precise the property value. Otherwise use the operation Importation_GetProductSample which will give you all property values
      operationId: Importation_GetProductSampleCustomColumnValue
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
        - $ref: "#/components/parameters/productSampleIndex"
        - $ref: "#/components/parameters/customColumnId"
      responses:
        "200":
          content:
            application/json:
              schema:
                example: A value computed from a expression
                type: string
          description: Product sample custom column value
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support
          headers:
            Retry-After:
              description: The duration in second to wait before polling this resource
              schema:
                default: "5"
                minimum: 5
                type: integer
              x-example: "5"
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get product sample custom column value related to this importation.
      tags:
        - Catalogs - Importation Catalog Info
  "/v2/user/catalogs/{storeId}/importations/{executionId}/products/list":
    post:
      operationId: Importation_GetProductsReport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/getImportationProductsReportRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getImportationProductsReportResponse"
          description: Get Products Report Response
        "404":
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
        "409":
          description: Report Not ready Yet. Please retry in a few minutes.
      summary: Importation Get Products Report
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}/report":
    get:
      operationId: Importation_GetReport
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getImportationReportResponse"
          description: Get Report Response
        "404":
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
        "409":
          description: Report Not ready Yet. Please retry in a few minutes.
      summary: Importation Get Report
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/importations/{executionId}/technicalProgression":
    get:
      operationId: Importation_TechnicalProgression
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/executionId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importationTechnicalProgression"
          description: When the technical progression is correctly retrived
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when this importation is already finished.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get technical progression
      tags:
        - Catalogs - Importation Process
  "/v2/user/catalogs/{storeId}/inputConfiguration":
    get:
      operationId: Importation_GetManualUpdateLastInputConfig
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lastManualImportInputConfiguration"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId or Manual Update last configuration not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the last input configuration
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/products":
    get:
      operationId: Catalog_GetProductBySku
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The product sku you want to get
          in: query
          name: sku
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
          description: Product
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId or Product not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get product by Sku
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/products/list":
    post:
      operationId: Catalog_GetProducts
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/getProductsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productList"
          description: Product list
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get product list
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/products/random":
    get:
      description: We will return 10 products randomly selected with all product values
      operationId: Catalog_GetRandomProducts
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/randomProductList"
          description: Random product list
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get random product list
      tags:
        - Catalogs - Catalog
  "/v2/user/catalogs/{storeId}/products/{productId}":
    get:
      operationId: Catalog_GetProductByProductId
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The product identifier you want to get
          in: path
          name: productId
          required: true
          schema:
            format: guid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
          description: Product
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get product by ProductId
      tags:
        - Catalogs - Catalog
  /v2/user/channelCatalogs/:
    get:
      operationId: GetChannelCatalogs
      parameters:
        - description: The store identifier
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: false
          schema:
            format: guid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogList"
          description: OK
        default:
          $ref: "#/components/responses/GeneralError"
      summary: List all your current channel catalogs
      tags:
        - Channel Catalogs - Global
    post:
      operationId: AddChannelCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addChannelCatalogRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/links.GetChannelCatalogLink"
          description: When the channel has been successfully added for this store
          headers:
            Location:
              description: The new location
              schema:
                type: string
              x-example: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            Retry-After:
              description: The duration in second to wait before polling this resource
              schema:
                default: "5"
                minimum: 5
                type: integer
              x-example: "5"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: StoreId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Add a new channel catalog
      tags:
        - Channel Catalogs - Global
  /v2/user/channelCatalogs/filterOperators:
    get:
      operationId: GetChannelCatalogFilterOperators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/filterOperator"
                type: array
          description: Channel catalog  filter operator list
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog filter operators
      tags:
        - Channel Catalogs - Global
  /v2/user/channelCatalogs/products:
    post:
      operationId: GetChannelCatalogProductByChannelCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/channelCatalogProductByChannelCatalogRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogProductByChannelCatalogResponse"
          description: The channel catalog product by channel catalog
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog products related to these channel catalogs
      tags:
        - Channel Catalogs - Products
  "/v2/user/channelCatalogs/{channelCatalogId}":
    delete:
      operationId: DeleteChannelCatalog
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "204":
          description: Channel catalog deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete the channel catalog
      tags:
        - Channel Catalogs - Global
    get:
      operationId: GetChannelCatalog
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalog"
          description: Channel catalog
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the channel catalog information
      tags:
        - Channel Catalogs - Global
  "/v2/user/channelCatalogs/{channelCatalogId}/categories":
    get:
      operationId: GetChannelCatalogCategories
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogCategoryConfigurationList"
          description: Channel catalog category mappings
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog categories
      tags:
        - Channel Catalogs - Categories
  "/v2/user/channelCatalogs/{channelCatalogId}/categories/configure":
    post:
      operationId: ConfigureChannelCatalogCategory
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configureCategoryRequest"
        required: true
      responses:
        "204":
          description: Channel catalog category configured
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: BadRequest. See Error Response for more details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure channel catalog category
      tags:
        - Channel Catalogs - Categories
  "/v2/user/channelCatalogs/{channelCatalogId}/categories/disableMapping":
    post:
      operationId: DisableChannelCatalogCategoryMapping
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "204":
          description: Channel catalog category mapping disabled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Disable a channel catalog category mapping
      tags:
        - Channel Catalogs - Categories
  "/v2/user/channelCatalogs/{channelCatalogId}/categories/reenableMapping":
    post:
      operationId: ReenableChannelCatalogCategoryMapping
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "204":
          description: Channel catalog category mapping reenabled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Reenable a channel catalog category mapping
      tags:
        - Channel Catalogs - Categories
  "/v2/user/channelCatalogs/{channelCatalogId}/columnMappings":
    put:
      operationId: ConfigureChannelCatalogColumnMappings
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/channelCatalogColumnMappingList"
        required: true
      responses:
        "204":
          description: Channel catalog column mappings configured
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure channel catalog column mappings
      tags:
        - Channel Catalogs - Column Mappings
  "/v2/user/channelCatalogs/{channelCatalogId}/disable":
    post:
      operationId: DisableChannelCatalog
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "204":
          description: Channel catalog disabled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Disable a channel catalog
      tags:
        - Channel Catalogs - Settings
  "/v2/user/channelCatalogs/{channelCatalogId}/enable":
    post:
      operationId: EnableChannelCatalog
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "204":
          description: Channel catalog enabled
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/upgradeOfferRequired"
          description: You have to upgrade your offer to activate this channel catalog
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Enable a channel catalog
      tags:
        - Channel Catalogs - Settings
  "/v2/user/channelCatalogs/{channelCatalogId}/exclusionFilters":
    get:
      operationId: GetChannelCatalogExclusionFilters
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exclusionFiltersResponse"
          description: Channel catalog exclusion filter list
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog exclusion filters
      tags:
        - Channel Catalogs - Exclusion Filters
    put:
      operationId: ConfigureChannelCatalogExclusionFilters
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/exclusionFilters"
        required: true
      responses:
        "204":
          description: Channel catalog exclusion filter list configured
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: BadRequest. See Error Response for more details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure channel catalog exclusion filters
      tags:
        - Channel Catalogs - Exclusion Filters
  "/v2/user/channelCatalogs/{channelCatalogId}/exportations/cache":
    get:
      operationId: GetChannelCatalogExportationCacheInfo
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogExportCacheInfoResponse"
          description: Channel catalog exportation cache information
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the exportation cache information
      tags:
        - Channel Catalogs - Exportations
  "/v2/user/channelCatalogs/{channelCatalogId}/exportations/cache/clear":
    post:
      operationId: ClearChannelCatalogExportationCache
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "204":
          description: Channel catalog exportation cache cleared
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Clear the exportation cache
      tags:
        - Channel Catalogs - Exportations
  "/v2/user/channelCatalogs/{channelCatalogId}/exportations/history":
    get:
      operationId: GetChannelCatalogExportationHistory
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/pageNumberQueryStrngParameter"
        - $ref: "#/components/parameters/pageSizeQueryStrngParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogExportationHistory"
          description: Channel catalog exportation history
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the exportation history
      tags:
        - Channel Catalogs - Exportations
  "/v2/user/channelCatalogs/{channelCatalogId}/products":
    post:
      operationId: GetChannelCatalogProductInfoList
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      requestBody:
        $ref: "#/components/requestBodies/getChannelCatalogProductInfoListRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogProductInfoList"
          description: Channel catalog product information
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog product information list
      tags:
        - Channel Catalogs - Products
  "/v2/user/channelCatalogs/{channelCatalogId}/products/counters":
    get:
      operationId: GetChannelCatalogProductsCounters
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogProductsCounters"
          description: Channel catalog products' counters
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog products' counters
      tags:
        - Channel Catalogs - Products
  "/v2/user/channelCatalogs/{channelCatalogId}/products/export":
    post:
      operationId: ExportChannelCatalogProductInfoList
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/exportFormatInQueryGeneralParameter"
      requestBody:
        $ref: "#/components/requestBodies/getChannelCatalogProductInfoListRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    href: https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx
                    method: GET
              schema:
                $ref: "#/components/schemas/BeezUP.Common.Link3"
          description: Channel catalog product information list exported
          headers:
            Location:
              description: |
                To indicate the url of the export file
                Example: https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx
              schema:
                type: string
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Export channel catalog product information list
      tags:
        - Channel Catalogs - Products
  "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}":
    get:
      operationId: GetChannelCatalogProductInfo
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/productIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogProductInfo"
          description: Channel catalog product information
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalog or ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog product information
      tags:
        - Channel Catalogs - Products
  "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/disable":
    post:
      description: |
        By default a all your catalog products are exposed to the channel.
        You can disable a product by using this operation.
        /!\ In case of massive optimisation we recommand you to use the analytics api
      operationId: DisableChannelCatalogProduct
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/productIdParameter"
      responses:
        "204":
          description: Channel catalog product disabled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId Or ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Disable channel catalog product
      tags:
        - Channel Catalogs - Products Optimisation
  "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides":
    put:
      operationId: OverrideChannelCatalogProductValues
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/productIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/productOverrides"
        required: true
      responses:
        "204":
          description: Channel catalog product overriden
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: BadRequest. See Error Response for more details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId or ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Override channel catalog product values
      tags:
        - Channel Catalogs - Products Overrides
  "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/copy":
    get:
      operationId: GetChannelCatalogProductValueOverrideCopy
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/productIdParameter"
      responses:
        "204":
          description: placeholder. will be completed soon.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalog or ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get channel catalog product value override compatibilities status
      tags:
        - Channel Catalogs - Products Overrides
    post:
      operationId: ConfigureChannelCatalogProductValueOverrideCopy
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/productIdParameter"
      responses:
        "204":
          description: Channel catalog product value override deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId or ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Copy channel catalog product value override
      tags:
        - Channel Catalogs - Products Overrides
  "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/{channelColumnId}":
    delete:
      operationId: DeleteChannelCatalogProductValueOverride
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/productIdParameter"
        - description: The channel column identifier
          example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
          in: path
          name: channelColumnId
          required: true
          schema:
            format: guid
            type: string
      responses:
        "204":
          description: Channel catalog product value override deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId or ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete a specific channel catalog product value override
      tags:
        - Channel Catalogs - Products Overrides
  "/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/reenable":
    post:
      description: |
        By default a all your catalog products are exposed to the channel.
        You can reenable a product by using this operation.
        /!\ In case of massive optimisation we recommand you to use the analytics api
      operationId: ReenableChannelCatalogProduct
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
        - $ref: "#/components/parameters/productIdParameter"
      responses:
        "204":
          description: Channel catalog product reenabled
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: ChannelCatalogId or ProductId not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Reenable channel catalog product
      tags:
        - Channel Catalogs - Products Optimisation
  "/v2/user/channelCatalogs/{channelCatalogId}/settings/cost":
    put:
      operationId: ConfigureChannelCatalogCostSettings
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/costSettings"
        required: true
      responses:
        "204":
          description: Channel catalog cost settings configured
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure channel catalog cost settings
      tags:
        - Channel Catalogs - Settings
  "/v2/user/channelCatalogs/{channelCatalogId}/settings/general":
    put:
      operationId: ConfigureChannelCatalogGeneralSettings
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/generalSettings"
        required: true
      responses:
        "204":
          description: Channel catalog general settings configured
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure channel catalog general settings
      tags:
        - Channel Catalogs - Settings
  /v2/user/channels/:
    get:
      operationId: GetAvailableChannels
      parameters:
        - description: The store identifier
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: true
          schema:
            format: guid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/channelHeader"
                type: array
          description: Available channel list for this store
      summary: List all available channel for this store
      tags:
        - Channels - Channels Global
  "/v2/user/channels/{channelId}":
    get:
      operationId: GetChannelInfo
      parameters:
        - $ref: "#/components/parameters/channelIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelInfo"
          description: Channel information
      summary: Get channel information
      tags:
        - Channels - Channels Global
  "/v2/user/channels/{channelId}/categories":
    get:
      operationId: GetChannelCategories
      parameters:
        - $ref: "#/components/parameters/channelIdParameter"
        - description: Indicates that the client accepts that the response will be compressed to reduce traffic size.
          in: header
          name: Accept-Encoding
          required: true
          schema:
            items:
              type: string
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelRootCategory"
          description: Channel categories
          headers:
            Content-Encoding:
              description: Indicates the compression use in the response
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
      summary: Get channel categories
      tags:
        - Channels - Channels Global
  "/v2/user/channels/{channelId}/columns":
    post:
      operationId: GetChannelColumns
      parameters:
        - $ref: "#/components/parameters/channelIdParameter"
        - description: Indicates that the client accepts that the response will be compressed to reduce traffic size.
          in: header
          name: Accept-Encoding
          required: true
          schema:
            items:
              type: string
            type: array
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/BeezUP.Common.ChannelColumnId"
              type: array
        description: Allow you to filter the channel column identifier list your want to get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/channelColumn"
                type: array
          description: Channel columns
          headers:
            Content-Encoding:
              description: Indicates the compression use in the response
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
      summary: Get channel columns
      tags:
        - Channels - Channels Global
  /v2/user/customer/:
    get:
      operationId: GetCustomerIndex
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customerIndex"
          description: OK
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: The index of all operations and LOV
      tags:
        - Customer - Global
  /v2/user/customer/account:
    get:
      operationId: GetUserAccountInfo
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountInfo"
          description: User account information
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get user account information
      tags:
        - Customer - Account
  /v2/user/customer/account/activate:
    post:
      operationId: ActivateUserAccount
      requestBody:
        content:
          application/json:
            schema:
              format: guid
              type: string
        description: The email activation id received by email.
        required: true
      responses:
        "204":
          description: User account activated.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Invalid email activation id
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: User account already activated.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Activate the user account
      tags:
        - Customer - Account
  /v2/user/customer/account/changeEmail:
    post:
      operationId: ChangeEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/changeEmailRequest"
        required: true
      responses:
        "204":
          description: Email updated
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: New email does not respect the emails's constraints
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change user email
      tags:
        - Customer - Account
  /v2/user/customer/account/changePassword:
    post:
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/changePasswordRequest"
        required: true
      responses:
        "204":
          description: Password updated
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Old password is invalid or the new password does not respect the password's constraints
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change user password
      tags:
        - Customer - Account
  /v2/user/customer/account/companyInfo:
    put:
      operationId: SaveCompanyInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/companyInfo"
        required: true
      responses:
        "204":
          description: Company information saved
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Bad request or invalid VATNumber.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: User not found or unauthorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change company information
      tags:
        - Customer - Account
  /v2/user/customer/account/creditCardInfo:
    get:
      operationId: GetCreditCardInfo
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/creditCardInfoResponse"
          description: User credit card information
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Credit Card not found
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: We are unable to get your credit card info. This is a temporary state. Please retry later
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get credit card information
      tags:
        - Customer - Account
    put:
      operationId: SaveCreditCardInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/creditCardInfo"
        description: Credit card info
        required: true
      responses:
        "202":
          description: The credit card information has been accepted for processing, the authorization will be processed shortly.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: BadRequest
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Communication problem with our payment service
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Save user credit card info
      tags:
        - Customer - Account
  /v2/user/customer/account/personalInfo:
    put:
      operationId: SavePersonalInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/personalInfo"
        required: true
      responses:
        "204":
          description: User account information updated
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Bad Request
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Save user personal information
      tags:
        - Customer - Account
  /v2/user/customer/account/profilePictureInfo:
    get:
      operationId: GetProfilePictureInfo
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/profilePictureInfoResponse"
          description: Profile picture information
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get profile picture information
      tags:
        - Customer - Account
    put:
      operationId: SaveProfilePictureInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profilePictureInfo"
        required: true
      responses:
        "204":
          description: User profile picture information saved.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: BadRequest (Url invalid)
        "413":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: The picture size is too large
        "415":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: The content type of the image must be an image
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Change user picture information
      tags:
        - Customer - Account
  /v2/user/customer/account/resendEmailActivation:
    post:
      operationId: ResendEmailActivation
      responses:
        "204":
          description: Email activation resent
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Email activation not sent because of email problem. Ensure that your email is the correct one.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Email activation not available because user account already activated.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Email activation sent recently, must retry later. (One per hour)
          headers:
            Retry-After:
              description: The duration in second to wait before making another request
              schema:
                default: "60"
                type: integer
              x-example: "60"
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Email activate send failed because of our email service. Ensure that your email is the correct one otherwise please contact our support if the problem persists.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Resend email activation
      tags:
        - Customer - Account
  /v2/user/customer/billingPeriods:
    get:
      operationId: GetBillingPeriods
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/billingPeriodList"
          description: Get the billing periods conditions
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get billing periods conditions
      tags:
        - Customer - Contracts
  /v2/user/customer/contracts:
    get:
      operationId: GetContracts
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contracts"
          description: Contract list
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get contract list
      tags:
        - Customer - Contracts
    post:
      description: |
        Now you are ready to create your contract. Before that, please ensure that you check the offer with the same request parameterts. /offers
      operationId: CreateContract
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createContract"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createContractResponse"
          description: New contract has been created. Some warnings can be present in response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Bad request. (Invalid billing period, invalid offer, etc.)
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: The contract is not modifiable or the coupon offer has been already used
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Create a new contract
      tags:
        - Customer - Contracts
  /v2/user/customer/contracts/current/disableAutoRenewal:
    post:
      description: By default your contract are automatically renew. By calling this operation you can disable the auto renewal.
      operationId: TerminateCurrentContract
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/terminateContract"
        description: Indicate the termination reason
        required: true
      responses:
        "204":
          description: Your current contract termination has been scheduled
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Invalid reason type
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: No current contract
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Schedule termination of your current contract at the end of the commitment.
      tags:
        - Customer - Contracts
  /v2/user/customer/contracts/current/reenableAutoRenewal:
    post:
      description: By calling this operation you can re-enable the auto renewal.
      operationId: ReactivateCurrentContract
      responses:
        "204":
          description: Your current contract has been resumed
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: No current contract
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Reactivate your terminated contract.
      tags:
        - Customer - Contracts
  /v2/user/customer/contracts/next:
    delete:
      operationId: DeleteNextContract
      responses:
        "204":
          description: Next contract has been deleted
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete your next contract
      tags:
        - Customer - Contracts
  "/v2/user/customer/friends/{userId}":
    get:
      operationId: GetFriendInfo
      parameters:
        - description: Your friend user id
          in: path
          name: userId
          required: true
          schema:
            format: guid
            type: string
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userFriendInfo"
          description: Get friend info
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: User not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get friend information
      tags:
        - Customer - Friends
  /v2/user/customer/invoices:
    get:
      operationId: GetInvoices
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoiceList"
          description: Get all invoices of a customer
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get all your invoices
      tags:
        - Customer - Invoices
  /v2/user/customer/offers:
    get:
      operationId: GetStandardOffers
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/standardOffers"
          description: Get all standard offers
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get all standard offers
      tags:
        - Customer - Contracts
    post:
      description: |
        Get the offer pricing then you can create your contract with the same request parameters. /v2/user/customer/contracts
      operationId: GetOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/offerRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offer"
          description: Get the offer proposal considering your current contract
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Bad request. (Invalid billing period, invalid offer, etc.). You cannot get a pricing for a free offer.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: You current contract is not modifiable. Please choose another offer.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get offer pricing
      tags:
        - Customer - Contracts
  /v2/user/customer/security/logout:
    post:
      description: Log out the current user from go2
      operationId: Logout
      responses:
        "204":
          description: User logout
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Log out the current user from go2
      tags:
        - Customer - Security
  /v2/user/customer/stores:
    get:
      operationId: GetStores
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/storeList"
          description: Store list
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get store list
      tags:
        - Customer - Stores
    post:
      operationId: CreateStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createStoreRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/links.getStoreLink"
          description: The store has been created successfully. The http header Location contains the new resource url. The body contains the link to the new resource.
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessagePaymentRequired"
          description: The maximum amount of store has been reached. Please upgrade your contract.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: The customer has a store with the same name
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Create a new store
      tags:
        - Customer - Stores
  "/v2/user/customer/stores/{storeId}":
    delete:
      operationId: DeleteStore
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "204":
          description: Store deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or customer not the owner
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete a store
      tags:
        - Customer - Stores
    get:
      operationId: GetStore
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/store"
          description: The store information
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get store's information
      tags:
        - Customer - Stores
    patch:
      description: |
        Update some store's information. FYI, you cannot change the country.
      operationId: UpdateStore
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateStoreRequest"
        required: true
      responses:
        "204":
          description: Store updated
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or customer not the owner
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: The store name already used
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Update some store's information.
      tags:
        - Customer - Stores
  "/v2/user/customer/stores/{storeId}/alerts":
    get:
      operationId: GetStoreAlerts
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/storeAlerts"
          description: User account alerts information
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get store's alerts
      tags:
        - Customer - Alerts
    post:
      description: You just have to send the alert you want to update, does not need all alerts. (PARTIAL UPDATE ACCEPTED)
      operationId: SaveStoreAlerts
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/saveStoreAlertsRequest"
        required: true
      responses:
        "204":
          description: Store alerts saved
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: BadRequest
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Save store alerts
      tags:
        - Customer - Alerts
  "/v2/user/customer/stores/{storeId}/rights":
    get:
      operationId: GetRights
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/functionalityRightInfo"
                type: array
          description: The store's rights
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get store's rights
      tags:
        - Customer - Rights
  "/v2/user/customer/stores/{storeId}/shares":
    get:
      operationId: GetStoreShares
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/storeShares"
          description: The sharing list of the store
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or customer not the owner
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get shares related to this store
      tags:
        - Customer - Shares
    post:
      operationId: ShareStore
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/friendEmail"
        description: Your friend's email
        required: true
      responses:
        "204":
          description: Store shared
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessagePaymentRequired"
          description: Free offer is not allowed to share store.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Only the owner of the store can make this operation or user not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Share a store to another user
      tags:
        - Customer - Shares
  "/v2/user/customer/stores/{storeId}/shares/{userId}":
    delete:
      operationId: DeleteStoreShare
      parameters:
        - $ref: "#/components/parameters/storeIdOnlyGeneralParameters"
        - description: The friend user id
          in: path
          name: userId
          required: true
          schema:
            format: guid
            type: string
      responses:
        "204":
          description: Share deleted
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Store not found or customer not the owner
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete a share of a store to another user
      tags:
        - Customer - Shares
  /v2/user/customer/zendeskToken:
    get:
      description: "Zendesk token - Generates a JWT token to access BeezUP restricted Help Center in SSO as described here: https://support.zendesk.com/hc/en-us/articles/222874768-Using-restricted-Help-Center-content-with-the-Web-Widget"
      operationId: ZendeskToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/zendeskToken"
          description: A JWT token to connect the Zendesk Web Widget
        "500":
          $ref: "#/components/responses/GeneralError"
      summary: Zendesk token
      tags:
        - Customer - Security
  /v2/user/legacyTracking/channelCatalogs/:
    get:
      operationId: GetLegacyTrackingChannelCatalogs
      parameters:
        - description: The store identifier
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: false
          schema:
            format: guid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/legacyTrackingChannelCatalogList"
          description: OK
        default:
          $ref: "#/components/responses/GeneralError"
      summary: List all your current channel catalogs configured to use legacy tracking format
      tags:
        - Channel Catalogs - Legacy Tracking - Global
  "/v2/user/legacyTracking/channelCatalogs/{channelCatalogId}":
    get:
      operationId: GetLegacyTrackingChannelCatalog
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/legacyTrackingChannelCatalog"
          description: Channel catalog configured to use legacy tracking format
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Channel catalog not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the channel catalog configured to use legacy tracking format information
      tags:
        - Channel Catalogs - Legacy Tracking - Global
  "/v2/user/legacyTracking/channelCatalogs/{channelCatalogId}/migrate":
    post:
      operationId: MigrateLegacyTrackingChannelCatalog
      parameters:
        - $ref: "#/components/parameters/channelCatalogIdParameter"
      responses:
        "204":
          description: Channel catalog migrated
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Channel catalog not found or not authorized
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Migrate a channel catalog to current tracking format
      tags:
        - Channel Catalogs - Legacy Tracking - Global
  /v2/user/lov/:
    get:
      operationId: GetUserLovIndex
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userLovIndex"
          description: Get the list names
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        "304":
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get all list names
      tags:
        - User - List of Values - LOV
  "/v2/user/lov/{listName}":
    get:
      operationId: GetUserListOfValues
      parameters:
        - description: The list of value name your want to get
          in: path
          name: listName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/acceptLanguageParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userListOfValuesResponse"
          description: The list of values
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            Content-Language:
              description: Indicates the language use in the response
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        "304":
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                items:
                  type: string
                type: array
              style: simple
              x-s2o-warning: Nested collectionFormats are not supported
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: List not found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the list of values related to this list name
      tags:
        - User - List of Values - LOV
  /v2/user/marketplaces/channelcatalogs/:
    get:
      operationId: GetMarketplaceChannelCatalogs
      parameters:
        - description: The StoreId to filter by
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: false
          schema:
            format: guid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/marketplaceChannelCatalogList"
          description: Marketplace channel catalog list
        "404":
          description: Store not found
      summary: Get your marketplace channel catalog list
      tags:
        - Marketplaces - Channel catalogs - Global
  "/v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/history":
    get:
      deprecated: false
      operationId: GetPublications
      parameters:
        - description: Marketplace Technical Code to query (required)
          in: path
          name: marketplaceTechnicalCode
          required: true
          schema:
            type: string
          x-lov: MarketplaceTechnicalCode
        - description: Account Id to query (required)
          in: path
          name: accountId
          required: true
          schema:
            format: int32
            type: integer
        - description: Channel Catalog Id by which to filter (optional)
          in: query
          name: channelCatalogId
          required: false
          schema:
            format: guid
            type: string
        - description: Amount of entries to fetch (optional, default set to 10)
          in: query
          name: count
          required: false
          schema:
            default: "10"
            format: int32
            maximum: 100
            minimum: 10
            type: integer
        - description: Publication types by which to filter (optional)
          explode: false
          in: query
          name: publicationTypes
          required: true
          schema:
            items:
              enum:
                - PublishProducts
                - PublishOffers
                - Unpublish
              format: publicationType
              type: string
            type: array
          style: form
          x-lov: MarketplacePublicationType
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountPublications"
          description: Successfully fetched channel catalog settings
        "400":
          description: Feature only available for Amazon, Ebay, CDiscount and Mirakl marketplaces
        "404":
          description: Requested account, marketplace or authorization for current user not found
        "503":
          $ref: "#/components/responses/processingResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Fetch the publication history for an account, sorted by descending start date
      tags:
        - Marketplaces - Channel catalogs - Publications
  "/v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/publish":
    post:
      deprecated: false
      operationId: PublishCatalogToMarketplace
      parameters:
        - description: Marketplace Technical Code to query (required)
          in: path
          name: marketplaceTechnicalCode
          required: true
          schema:
            type: string
          x-lov: MarketplaceTechnicalCode
        - description: Account Id to query (required)
          in: path
          name: accountId
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/publishCatalogToMarketplaceRequest"
        required: true
      responses:
        "202":
          description: Publication request accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: One or more channel catalog marketplace property keys or values are invalid for requested marketplace channel catalog. See response for details.
        "404":
          description: Requested account, marketplace or authorization for current user not found
        "503":
          $ref: "#/components/responses/processingResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[PREVIEW] Launch a publication of the catalog to the marketplace"
      tags:
        - Marketplaces - Channel catalogs - Publications
      x-releaseStatus: PREVIEW
  "/v2/user/marketplaces/channelcatalogs/{channelCatalogId}/properties":
    get:
      operationId: GetChannelCatalogMarketplaceProperties
      parameters:
        - in: path
          name: channelCatalogId
          required: true
          schema:
            format: guid
            type: string
        - in: query
          name: redirectionPageUrl
          required: true
          schema:
            format: uri
            type: string
        - $ref: "#/components/parameters/acceptLanguageParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogMarketplaceProperties"
          description: Successfully fetched channel catalog properties
        "404":
          description: Marketplace channel Catalog not found
        "503":
          $ref: "#/components/responses/processingResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the marketplace properties for a channel catalog
      tags:
        - Marketplaces - Channel catalogs - Settings
  "/v2/user/marketplaces/channelcatalogs/{channelCatalogId}/settings":
    get:
      operationId: GetChannelCatalogMarketplaceSettings
      parameters:
        - description: Channel Catalog Id to query (required)
          in: path
          name: channelCatalogId
          required: true
          schema:
            format: guid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/channelCatalogMarketplaceSettings"
          description: Successfully fetched channel catalog settings
        "404":
          description: Marketplace channel catalog not found
        "503":
          $ref: "#/components/responses/processingResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the marketplace settings for a channel catalog
      tags:
        - Marketplaces - Channel catalogs - Settings
    post:
      description: |
        Allow you to configure your marketplace settings.
        Partial update accepted.
      operationId: SetChannelCatalogMarketplaceSettings
      parameters:
        - description: Channel Catalog Id to query
          in: path
          name: channelCatalogId
          required: true
          schema:
            format: guid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/setChannelCatalogMarketplaceSettingsRequest"
        description: Settings to save
        required: true
      responses:
        "204":
          description: Successfully saved channel catalog marketplace settings
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: One or more channel catalog marketplace property keys or values are invalid for requested marketplace channel catalog. See response for details.
        "404":
          description: Marketplace channel catalog not found
        "503":
          $ref: "#/components/responses/processingResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Save new marketplace settings for a channel catalog
      tags:
        - Marketplaces - Channel catalogs - Settings
  /v2/user/marketplaces/orders/:
    get:
      deprecated: true
      operationId: GetOrderIndex
      parameters:
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderIndex"
          description: Order index
        "304":
          $ref: "#/components/responses/304_NotModified"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Get all actions you can do on the order API"
      tags:
        - Marketplaces - Orders - Global
      x-releaseStatus: DEPRECATED
      x-tagGroups: Martketplaces Orders
  /v2/user/marketplaces/orders/automaticTransitions:
    get:
      deprecated: false
      operationId: GetAutomaticTransitions
      parameters:
        - description: The StoreId to filter by
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: false
          schema:
            format: guid
            type: string
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/automaticTransitionInfoList"
          description: Successfully fetched list of configured automatic Order status transitions
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Store could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get list of configured automatic Order status transitions
      tags:
        - Marketplaces - Orders - AutoTransitions
    post:
      deprecated: false
      operationId: ConfigureAutomaticTransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configureAutomaticTransitionRequest"
        required: true
      responses:
        "204":
          description: Successfully confirugred new or existing automatic Order status transition
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested automatic Order status transition could not be configured
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Configure new or existing automatic Order status transition
      tags:
        - Marketplaces - Orders - AutoTransitions
  "/v2/user/marketplaces/orders/batches/changeOrders/{changeOrderType}":
    post:
      deprecated: true
      description: |
        The purpose of this operation is to reduce the amount of request to the API. 
        Max 100 items per call.
      operationId: ChangeOrderList
      parameters:
        - $ref: "#/components/parameters/changeOrderTypeParameter"
        - $ref: "#/components/parameters/userNameInQueryParameter"
        - $ref: "#/components/parameters/testModeInQueryParameter"
      requestBody:
        $ref: "#/components/requestBodies/changeOrderListRequest"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchOrderOperationResponse"
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested too many batch operations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Send a batch of operations to change your marketplace Order information: accept, ship, etc.  (max 100 items per call)"
      tags:
        - Marketplaces - Orders - Batches
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/batches/clearMerchantOrderInfos:
    post:
      deprecated: true
      description: The purpose of this operation is to reduce the amount of request to the API.
      operationId: ClearMerchantOrderInfoList
      requestBody:
        $ref: "#/components/requestBodies/clearMerchantOrderInfoListRequest"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchOrderOperationResponse"
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested too many batch operations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Send a batch of operations to clear an Order's merchant information (max 100 items per call)"
      tags:
        - Marketplaces - Orders - Batches
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/batches/setMerchantOrderInfos:
    post:
      deprecated: true
      description: The purpose of this operation is to reduce the amount of request to the API.
      operationId: SetMerchantOrderInfoList
      requestBody:
        $ref: "#/components/requestBodies/setMerchantOrderInfoListRequest"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchOrderOperationResponse"
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested too many batch operations
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Send a batch of operations to set an Order's merchant information  (max 100 items per call)"
      tags:
        - Marketplaces - Orders - Batches
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/exportations:
    get:
      deprecated: false
      operationId: GetOrderExportations
      parameters:
        - $ref: "#/components/parameters/pageNumberQueryStrngParameter"
        - $ref: "#/components/parameters/pageSizeQueryStrngParameter"
        - description: The store identifier to regroup the order exportations
          in: query
          name: storeId
          required: true
          schema:
            format: guid
            type: string
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderExportations"
          description: Successfully fetched the list of Order report exportations
        "304":
          $ref: "#/components/responses/304_NotModified"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Could not process request for given parameters values. Please check error message for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get a paginated list of Order report exportations
      tags:
        - Marketplaces - Orders - Exports
    post:
      deprecated: false
      description: A new file will be generated containing a summary of all the Orders matching the requested filter settings.
      operationId: ExportOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/exportOrderListRequest"
        required: true
      responses:
        "202":
          description: Successfully requested new Order report exportation generation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Could not process request for given parameters values. Please check error message for more details.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: No orders have been found for this request.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Request a new Order report exportation to be generated
      tags:
        - Marketplaces - Orders - Exports
  /v2/user/marketplaces/orders/harvest:
    post:
      deprecated: true
      operationId: HarvestAll
      parameters:
        - description: The StoreId to filter by
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: false
          schema:
            format: guid
            type: string
      responses:
        "202":
          description: Successfully sent harvest request to all marketplaces
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Store could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Failed to send harvest request because allowed rate limits have been exceeded
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Send harvest request to all your marketplaces"
      tags:
        - Marketplaces - Orders - Global
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/invoices/getPdfInvoice:
    post:
      operationId: GetOrderInvoicePdf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/getOrderInvoicePdfFromHtmlInvoiceUrlRequest"
        required: true
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: The PDF version of the HTML invoice URL in the request
        "403":
          $ref: "#/components/responses/ownerIdNotAuthorizedResponse"
        "404":
          $ref: "#/components/responses/orderInvoiceNotFound"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Returns the PDF version of the invoice
      tags:
        - OM Invoice - API - Generation
  /v2/user/marketplaces/orders/invoices/settings/design:
    get:
      operationId: GetOrderInvoiceDesignSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderInvoiceDesignSettings"
          description: Design successfully retrieved
        "403":
          $ref: "#/components/responses/ownerIdNotAuthorizedResponse"
        "404":
          $ref: "#/components/responses/orderInvoiceDesignSettingsNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get Order Invoice design settings
      tags:
        - OM Invoice - API - Settings
    put:
      operationId: SaveOrderInvoiceDesignSettings
      requestBody:
        $ref: "#/components/requestBodies/orderInvoiceDesignSettings"
      responses:
        "204":
          description: Design successfully saved
        "400":
          $ref: "#/components/responses/saveOrderInvoiceDesignSettingsBadRequestResponse"
        "403":
          $ref: "#/components/responses/ownerIdNotAuthorizedResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Save Order Invoice design settings
      tags:
        - OM Invoice - API - Settings
  /v2/user/marketplaces/orders/invoices/settings/design/preview:
    post:
      operationId: GetOrderInvoiceDesignSettingsPreview
      parameters:
        - description: Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size
          in: header
          name: Accept-Encoding
          required: true
          schema:
            items:
              type: string
            type: string
          style: simple
      requestBody:
        $ref: "#/components/requestBodies/orderInvoiceDesignSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getOrderInvoiceDesignPreviewResponse"
          description: Design Preview successfully retrieved
        "403":
          $ref: "#/components/responses/ownerIdNotAuthorizedResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: View a preview an Order Invoice using custom design settings
      tags:
        - OM Invoice - API - Settings
  /v2/user/marketplaces/orders/invoices/settings/general:
    get:
      operationId: GetOrderInvoiceGeneralSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getOrderInvoiceGeneralSettingsResponse"
          description: Settings successfully retrieved
        "403":
          $ref: "#/components/responses/ownerIdNotAuthorizedResponse"
        "404":
          $ref: "#/components/responses/orderInvoiceGeneralSettingsNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get Order Invoice general settings
      tags:
        - OM Invoice - API - Settings
    put:
      operationId: SaveOrderInvoiceGeneralSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/orderInvoiceGeneralSettings"
        required: true
      responses:
        "204":
          description: General Settings successfully saved
        "400":
          $ref: "#/components/responses/saveOrderInvoiceGeneralSettingsBadRequestResponse"
        "403":
          $ref: "#/components/responses/ownerIdNotAuthorizedResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Save Order Invoice general settings
      tags:
        - OM Invoice - API - Settings
  "/v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/generate":
    post:
      operationId: GenerateOrderInvoice
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCode"
        - $ref: "#/components/parameters/accountId"
        - $ref: "#/components/parameters/beezUPOrderUUID"
        - $ref: "#/components/parameters/userNameInQueryParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/generateOrderInvoiceRequest"
        required: true
      responses:
        "202":
          description: Request Accepted.
          headers:
            Location:
              description: The location of the generated invoice. Might take a few seconds to be available
              schema:
                type: string
              x-example: http://blob.com/generated.html
        "403":
          $ref: "#/components/responses/orderGenerateForbiddenResponse"
        "404":
          $ref: "#/components/responses/orderNotFoundResponse"
        "409":
          $ref: "#/components/responses/orderInvoiceConflictResponse"
        "429":
          $ref: "#/components/responses/orderGenerateTooManyRequestsResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Generate an Order Invoice
      tags:
        - OM Invoice - API - Generation
  "/v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/preview":
    post:
      operationId: GetOrderInvoicePreview
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCode"
        - $ref: "#/components/parameters/accountId"
        - $ref: "#/components/parameters/beezUPOrderUUID"
        - description: Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size
          in: header
          name: Accept-Encoding
          required: true
          schema:
            items:
              type: string
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/previewOrderInvoiceRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/previewOrderInvoiceResponse"
          description: Order Invoice preview successfully returned.
        "403":
          $ref: "#/components/responses/orderGenerateForbiddenResponse"
        "404":
          $ref: "#/components/responses/orderNotFoundResponse"
        "409":
          $ref: "#/components/responses/orderInvoiceConflictResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: View a preview an Order Invoice
      tags:
        - OM Invoice - API - Generation
  /v2/user/marketplaces/orders/list/full:
    post:
      deprecated: true
      description: |
        DEPRECATED - Use /orders/v3 instead
        The purpose of this operation is to reduce the amount of request to the API.\
        \
        Previous implmentation of this feature only returned a partial (light) version of the Orders. The purpose of this API is to reduce the number of incoming requests by returning the complete (full) Order and Order Item(s) properties.
      operationId: GetOrderListFull
      parameters:
        - description: Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size
          in: header
          name: Accept-Encoding
          required: true
          schema:
            items:
              type: string
            type: array
          style: simple
      requestBody:
        $ref: "#/components/requestBodies/orderListRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderListFull"
          description: Successfully fetched the full list of Orders
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Could not process request for given parameters values. Please check error message for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Get a paginated list of all Orders with all Order and Order Item(s) properties"
      tags:
        - Marketplaces - Orders - List
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/list/light:
    post:
      deprecated: true
      description: Use /orders/v3 instead
      operationId: GetOrderListLight
      requestBody:
        $ref: "#/components/requestBodies/orderListRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderListLight"
          description: Successfully fetched the list of Orders
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Could not process request for given parameters values. Please check error message for more details.
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Get a paginated list of all Orders without details"
      tags:
        - Marketplaces - Orders - List
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/status:
    get:
      deprecated: true
      description: Use /orders/v3
      operationId: GetMarketplaceAccountsSynchronization
      parameters:
        - description: The StoreId to filter by
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
          in: query
          name: storeId
          required: false
          schema:
            format: guid
            type: string
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountSynchronizationList"
          description: Successfully fetched current synchronization status
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Store could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Get current synchronization status between your marketplaces and BeezUP accounts"
      tags:
        - Marketplaces - Orders - Global
      x-releaseStatus: DEPRECATED
      x-tagGroups: Martketplaces Orders
  /v2/user/marketplaces/orders/subscriptions/:
    get:
      deprecated: false
      operationId: GetSubscriptionList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/subscriptionIndex"
                type: array
          description: The subscription list
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the subscription list
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      x-basePath: /v2/user/marketplaces/orders/subscriptions
  "/v2/user/marketplaces/orders/subscriptions/{id}":
    delete:
      deprecated: false
      operationId: DeleteSubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdPathParameter"
      responses:
        "202":
          description: Subscription deletion accepted
        "404":
          $ref: "#/components/responses/subscriptionNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Delete a subscription to the orders
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
    get:
      operationId: GetSubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdPathParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscriptionIndex"
          description: Subscription info
        "404":
          $ref: "#/components/responses/subscriptionNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get a subscription to the orders
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
    post:
      description: Please take a look at this sequence diagram to understand the subscription process to follow [here](https://www.websequencediagrams.com/files/render?link=SBYbeIc8NGshk6ooCbmjoBLIMl4fIGO1xjJbPBQAglBo0n6BwEReh7NXQiPSjOTX)
      operationId: CreateSubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createSubscriptionRequest"
        required: true
      responses:
        "202":
          description: Subscription creation accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Invalid subscription request.
        "404":
          $ref: "#/components/responses/subscriptionNotFoundResponse"
        "409":
          $ref: "#/components/responses/subscriptionAlreadyExistsResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Creates a subscription to the orders
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
  "/v2/user/marketplaces/orders/subscriptions/{id}/activate":
    post:
      description: |
        At this moment, BeezUP will ensure that your callback url is respecting this specification: 
        - https://app.swaggerhub.com/apis/BeezUP/public_marketplaces_orders_subscriptions_consumer-dev/1.0#/Subscriptions/Verification

        After that we will send you the orders related to your subscription, respecting this specification: 
        - https://app.swaggerhub.com/apis/BeezUP/public_marketplaces_orders_subscriptions_consumer-dev/1.0#/Subscriptions/PushOrders
      operationId: ActivateSubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/activateSubscriptionRequest"
      responses:
        "202":
          description: Subscription activation accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseMessage"
          description: Activation subscription request is invalid
        "404":
          $ref: "#/components/responses/subscriptionNotFoundResponse"
        "503":
          $ref: "#/components/responses/orderSubscriptionTargetNotAvailableResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Activate a subscription to the orders
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
  "/v2/user/marketplaces/orders/subscriptions/{id}/deactivate":
    post:
      operationId: DeactivateSubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdPathParameter"
      responses:
        "202":
          description: Subscription deactivation accepted
        "404":
          $ref: "#/components/responses/subscriptionNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Deactivate a subscription to the orders
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
  "/v2/user/marketplaces/orders/subscriptions/{id}/reporting":
    get:
      operationId: GetSubscriptionPushReporting
      parameters:
        - $ref: "#/components/parameters/subscriptionIdPathParameter"
        - in: query
          name: pageNumber
          required: false
          schema:
            format: PageNumber
            minimum: 1
            type: integer
        - in: query
          name: pageSize
          required: false
          schema:
            format: PageSize
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/subscriptionPushReporting"
                type: array
          description: Subscription push reporting info
          headers:
            Link:
              description: Based on the RFC 5988 - Web Linking, the page navigation will be indicated here with the rel=next, rel=previous, rel=first, rel=last, the pageNumber and the pageSize will be indicated in the link param
              schema:
                items:
                  type: string
                type: array
              style: simple
            X-Total-Count:
              description: The total item count related to this query
              schema:
                type: integer
        "404":
          $ref: "#/components/responses/subscriptionNotFoundResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Get the push reporting related to this subscription
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
  "/v2/user/marketplaces/orders/subscriptions/{id}/retry":
    post:
      description: In case your subscription consumption is unavailable and your subscription is still active you can ask to retry immediatly to push orders instead of waiting the next scheduled retry date
      operationId: RetryPushOrders
      parameters:
        - $ref: "#/components/parameters/subscriptionIdPathParameter"
      responses:
        "202":
          description: Retry push orders request accepted
        "404":
          $ref: "#/components/responses/subscriptionNotFoundResponse"
        "409":
          $ref: "#/components/responses/retryRejectedResponse"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: Force retry push orders immediatly
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
  "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}":
    get:
      deprecated: true
      description: DEPRECATED - Use /orders/v3 instead
      operationId: GetOrder
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: |
                ETag value to identify the current version of requested Order\
                For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: |
                Last modification UTC date of the order\
                For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                format: date-time
                type: string
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] DEPRECATED - Get full Order and Order Item(s) properties"
      tags:
        - Marketplaces - Orders - Order
      x-releaseStatus: DEPRECATED
    head:
      deprecated: true
      description: |
        DEPRECATED - Use /orders/v3 instead
        The purpose of this operation is to reduce the bandwith usage by getting just the meta information about the order (ETag, Last-Modified) with the body.
        This could be useful
      operationId: HeadOrder
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: |
                ETag value to identify the current version of requested Order\
                For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: |
                Last modification UTC date of the order\
                For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                format: date-time
                type: string
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] DEPRECATED - Get the meta information about the order (ETag, Last-Modified)"
      tags:
        - Marketplaces - Orders - Order
      x-releaseStatus: DEPRECATED
  "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo":
    post:
      deprecated: true
      operationId: ClearMerchantOrderInfo
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
      responses:
        "204":
          description: Successfully cleared Order merchant order info set
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Could not update Order merchant information. Please see body for more information.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Clear an Order's merchant information"
      tags:
        - Marketplaces - Orders - Order
      x-releaseStatus: DEPRECATED
  "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest":
    post:
      deprecated: true
      operationId: HarvestOrder
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
      responses:
        "202":
          description: Successfully sent Order harvest request
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Order could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Failed to send harvest request because allowed rate limits have been exceeded
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Send harvest request for a single Order"
      tags:
        - Marketplaces - Orders - Order
      x-releaseStatus: DEPRECATED
  "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history":
    get:
      deprecated: true
      operationId: GetOrderHistory
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/ifNoneMatchParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderHistory"
          description: Successfully fetched Order history
        "304":
          $ref: "#/components/responses/304_NotModified"
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Get an Order's harvest and change history"
      tags:
        - Marketplaces - Orders - Order
      x-releaseStatus: DEPRECATED
  "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo":
    post:
      deprecated: true
      operationId: SetMerchantOrderInfo
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
      requestBody:
        $ref: "#/components/requestBodies/setMerchantOrderInfoRequest"
      responses:
        "204":
          description: Successfully set Order merchant order info set
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Could not update Order merchant information. Please see body for more information.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Order could not be found
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Set an Order's merchant information"
      tags:
        - Marketplaces - Orders - Order
      x-releaseStatus: DEPRECATED
  "/v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}":
    post:
      deprecated: true
      operationId: ChangeOrder
      parameters:
        - $ref: "#/components/parameters/marketplaceTechnicalCodeParameter"
        - $ref: "#/components/parameters/accountIdParameter"
        - $ref: "#/components/parameters/beezUPOrderIdParameter"
        - $ref: "#/components/parameters/changeOrderTypeParameter"
        - $ref: "#/components/parameters/userNameInQueryParameter"
        - $ref: "#/components/parameters/testModeInQueryParameter"
        - $ref: "#/components/parameters/ifMatchParameter"
      requestBody:
        $ref: "#/components/requestBodies/changeOrderRequest"
      responses:
        "202":
          description: Order change request accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Invalid order change request, could not be send to the marketplace. Please check the body of this request.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: Requested Order could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
          description: |
            Already processing a change request for this Order.\
            Please refresh your clients Order information and retry later.
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              schema:
                type: integer
        "412":
          $ref: "#/components/responses/412_PreConditionFailed"
        default:
          $ref: "#/components/responses/GeneralError"
      summary: "[DEPRECATED] Change your marketplace Order Information (accept, ship, etc.)"
      tags:
        - Marketplaces - Orders - Order
      x-releaseStatus: DEPRECATED
components:
  parameters:
    acceptEncodingRequiredParameter:
      description: Allows the client to indicate whether it accepts a compressed encoding to reduce traffic size.
      in: header
      name: Accept-Encoding
      required: true
      schema:
        items:
          type: string
        type: array
      style: simple
    acceptLanguageParameter:
      description: Indicates that the client accepts the following languages.
      in: header
      name: Accept-Language
      required: false
      schema:
        items:
          type: string
        type: array
      style: simple
    accountId:
      description: The Account Identifier
      in: path
      name: accountId
      required: true
      schema:
        format: MarketplaceAccountId
        type: string
    accountIdParameter:
      example: "1001"
      in: path
      name: accountId
      required: true
      schema:
        format: int32
        type: integer
    beezUPOrderIdParameter:
      description: The BeezUP Order identifier
      example: "00000000000000000000000000000000000000000000000"
      in: path
      name: beezUPOrderId
      required: true
      schema:
        format: uuid
        type: string
    beezUPOrderUUID:
      description: The BeezUP Order UUID
      in: path
      name: beezUPOrderUUID
      required: true
      schema:
        format: BeezUPOrderUUID
        type: string
    catalogColumnId:
      description: The catalog column identifier
      in: path
      name: columnId
      required: true
      schema:
        format: guid
        type: string
    changeOrderTypeParameter:
      description: The Order change type
      in: path
      name: changeOrderType
      required: true
      schema:
        type: string
      x-lov: OrderChangeBusinessOperationType
    channelCatalogIdParameter:
      description: The channel catalog identifier
      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
      in: path
      name: channelCatalogId
      required: true
      schema:
        format: guid
        type: string
    channelIdParameter:
      description: The channel identifier
      example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
      in: path
      name: channelId
      required: true
      schema:
        format: guid
        type: string
    customColumnId:
      description: The custom column identifier
      in: path
      name: columnId
      required: true
      schema:
        format: guid
        type: string
    executionId:
      description: The execution identifier of you catalog importation
      in: path
      name: executionId
      required: true
      schema:
        format: guid
        type: string
    exportFormatInQueryGeneralParameter:
      description: The file type of the exportation
      in: query
      name: format
      required: true
      schema:
        enum:
          - xlsx
          - csv
        type: string
    groupIdParameter:
      description: The exclusion filter group identifier
      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
      in: path
      name: groupId
      required: true
      schema:
        format: guid
        type: string
    ifMatchParameter:
      description: |
        ETag value to identify the last known version of requested resource.\
        To ensure that you are making a change on the lastest version of the resource.\
        For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
      in: header
      name: If-Match
      required: true
      schema:
        type: string
    ifNoneMatchParameter:
      description: |
        ETag value to identify the last known version of requested resource.\
        To avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\
        If the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\
        For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
      in: header
      name: If-None-Match
      required: false
      schema:
        type: string
    marketplaceTechnicalCode:
      description: The Marketplace Technical Code
      in: path
      name: marketplaceTechnicalCode
      required: true
      schema:
        format: MarketplaceTechnicalCode
        type: string
    marketplaceTechnicalCodeParameter:
      description: The marketplace technical code
      example: Amazon
      in: path
      name: marketplaceTechnicalCode
      required: true
      schema:
        type: string
    optimisationActionNameGeneralParameters:
      in: path
      name: actionName
      required: true
      schema:
        enum:
          - reenable
          - disable
        format: optimisationActionName
        type: string
    pageNumberQueryStrngParameter:
      description: The page number you want to get
      example: "1"
      in: query
      name: pageNumber
      required: true
      schema:
        format: int32
        minimum: 1
        type: integer
    pageSizeQueryStrngParameter:
      description: The entry count you want to get
      example: "25"
      in: query
      name: pageSize
      required: true
      schema:
        format: int32
        maximum: 100
        minimum: 25
        type: integer
    productIdParameter:
      description: The product identifier
      example: 578419df-1bbf-41a6-96fa-862e42182b67
      in: path
      name: productId
      required: true
      schema:
        format: guid
        type: string
    productSampleIndex:
      description: Index of the product sample. Starting from 0 to 99.
      in: path
      name: productSampleIndex
      required: true
      schema:
        format: int32
        maximum: 99
        minimum: 0
        type: integer
    reportFilterIdOnlyGeneralParameters:
      description: Your report filter identifier
      in: path
      name: reportFilterId
      required: true
      schema:
        format: guid
        type: string
    ruleIdOnlyGeneralParameters:
      description: Your rule identifier
      in: path
      name: ruleId
      required: true
      schema:
        format: guid
        type: string
    storeIdOnlyGeneralParameters:
      description: Your store identifier
      in: path
      name: storeId
      required: true
      schema:
        format: guid
        type: string
    storeIdsParameter:
      description: StoredIds to filter
      explode: false
      in: query
      name: storeIds
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    subscriptionIdPathParameter:
      in: path
      name: id
      required: true
      schema:
        format: SubscriptionId
        type: string
    testModeInQueryParameter:
      description: If true, the operation will be not be sent to marketplace. But the validation will be taken in account.
      example: "false"
      in: query
      name: testMode
      required: false
      schema:
        default: "false"
        type: boolean
    userNameInQueryParameter:
      description: Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login.
      in: query
      name: userName
      required: true
      schema:
        type: string
  requestBodies:
    OptimiseByCategoryRequest:
      content:
        application/json:
          schema:
            example:
              - a2d38563-50f0-43f1-be2b-b16e7ec4f007
            items:
              format: guid
              type: string
            maxItems: 1
            minItems: 1
            type: array
            uniqueItems: true
      description: The channel identifier list concerned by this optimisation
    changeOrderListRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/changeOrderListRequest"
      required: true
    changeOrderRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/changeOrderRequest"
    changeUserColumnNameRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/changeUserColumnNameRequest"
      required: true
    clearMerchantOrderInfoListRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/clearMerchantOrderInfoListRequest"
      required: true
    getChannelCatalogProductInfoListRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/getChannelCatalogProductInfoListRequest"
      description: The channel catalog product list filter
      required: true
    mapBeezUPColumnRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/mapBeezUPColumnRequest"
      required: true
    orderInvoiceDesignSettings:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/orderInvoiceDesignSettings"
      required: true
    orderListRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/orderListRequest"
      required: true
    reportByDayRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/reportByDayRequest"
      required: true
    setMerchantOrderInfoListRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/setMerchantOrderInfoListRequest"
      required: true
    setMerchantOrderInfoRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/setMerchantOrderInfoRequest"
      required: true
  responses:
    304_NotModified:
      description: The ETag sent in the http header If-None-Match did not change. So you are up to date !
      headers:
        ETag:
          description: |
            ETag value to identify the current version of the resource\
            For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
        Last-Modified:
          description: |
            Last modification UTC date of the resource\
            For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
          schema:
            format: date-time
            type: string
    412_PreConditionFailed:
      description: The ETag sent in the http header If-Match did not match with the current version. Please refresh the information related to this resource.
      headers:
        ETag:
          description: |
            The ETag value to identify the resource.\
            For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
      description: Invalid request
    GeneralError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
      description: Occurs when something goes wrong
    StoreNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
      description: Store or resource not found
    importAlreadyInProgress:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/importAlreadyInProgressResponse"
      description: A catalog importation is already in progress!
    importStarted:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/links.Importation_GetImportationMonitoringLink"
      description: Catalog importation started
      headers:
        Location:
          description: The location of the new resource to poll
          schema:
            type: string
          x-example: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c
        Retry-After:
          description: The duration in second to wait before polling this resource
          schema:
            default: "5"
            minimum: 5
            type: integer
          x-example: "5"
    orderGenerateForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        OwnerId not authorized
        The required order invoice settings have not been set
        BeezUPOrderStatus forbidden
      x-exceptions:
        - UserNotOwnerException
        - OrderInvoiceDesignSettingsNotFoundException
        - OrderInvoiceGeneralSettingsNotFoundException
        - OrderInvoiceGenerationBeezUPOrderStatusForbiddenException
    orderGenerateTooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        Too many Requests. Please retry in a few seconds
      x-exceptions:
        - OrderInvoiceTooManyRequestsException
    orderInvoiceConflictResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        The InvoiceNumber is already used
        There is already an invoice for this order
      x-exceptions:
        - OrderInvoiceNumberAlreadyUsedException
        - OrderAlreadyHasInvoiceException
    orderInvoiceDesignSettingsNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        The order invoice design is not found
      x-exceptions:
        - OrderInvoiceDesignSettingsNotFoundException
    orderInvoiceGeneralSettingsNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        The order invoice general settings are not found
      x-exceptions:
        - OrderInvoiceGeneralSettingsNotFoundException
    orderInvoiceNotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        The order invoice does not exist
      x-exceptions:
        - OrderInvoiceNotFoundException
    orderNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        The order cannot be retrieved
      x-exceptions:
        - OrderNotFoundException
    orderSubscriptionTargetNotAvailableResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: The target url is not available
      x-exceptions:
        - OrderSubscriptionTargetNotAvailableException
    ownerIdNotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: The ownerId is not found or not authorized
      x-exceptions:
        - UserNotOwnerException
    processingResponse:
      description: The marketplace configuration related to this channel catalog is currently in progress. Please retry later.
      headers:
        Retry-After:
          description: Indicate the duration to before the next retry in second.
          schema:
            format: int32
            type: integer
          x-example: "120"
    retryRejectedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: The subscription is deactivated or your subscription consumption availability status is available.
      x-exceptions:
        - OrderSubscriptionRetryRejectedException
    saveOrderInvoiceDesignSettingsBadRequestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        The design did not pass the validation
      x-exceptions:
        - OrderInvoiceDesignSettingsValidationFailedException
    saveOrderInvoiceGeneralSettingsBadRequestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: |
        The settingsgeneral did not pass the validation
      x-exceptions:
        - OrderInvoiceGeneralSettingsValidationFailedException
    subscriptionAlreadyExistsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: The subscription id is already used.
      x-exceptions:
        - OrderSubscriptionAlreadyExistsException
    subscriptionNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorResponseMessage"
      description: The subscription is not found
      x-exceptions:
        - OrderSubscriptionNotFoundException
  schemas:
    BeezUP.Common.AdditionalProductFilters:
      additionalProperties:
        $ref: "#/components/schemas/BeezUP.Common.AdditionalProductFiltersValue"
      description: |
        Describe a filter on a product's column.
        The key is the column identifier of your catalog or a custom column.
      type: object
    BeezUP.Common.AdditionalProductFiltersValue:
      example:
        672644c7-5bd0-4e25-88c1-1f732bda5e4c:
          operatorName: GreaterTo
          values:
            - "100"
      properties:
        operatorName:
          $ref: "#/components/schemas/BeezUP.Common.ProductColumnFilterOperatorName"
        values:
          description: |
            Must be null if the operator is "IsNull" or "IsNotNull".
            Can contains multiple value in case of "InList" operator. Otherwise a single value is expected.
          example:
            - My value
          items:
            type: string
          type: array
      type: object
    BeezUP.Common.ApiSettingsStatus:
      enum:
        - warning
        - success
        - failed
      example: success
      type: string
    BeezUP.Common.BeezUPColumnName:
      description: The BeezUP column name
      example: CategoryFirstLevel
      type: string
    BeezUP.Common.CatalogCategoryFilter:
      properties:
        categoryPath:
          description: Indicates on which catalog category path you want to make the filter
          example:
            - Maison
            - Chambre
          items:
            type: string
          type: array
      type: object
    BeezUP.Common.CatalogCategoryId:
      description: The catalog category identifier
      example: 81a058a6-0451-4b79-84ef-94c58d0ed4ac
      format: guid
      type: string
    BeezUP.Common.CatalogCategoryPath:
      description: The catalog category path
      example:
        - Vêtements
        - Femmes
        - Chaussures
      items:
        type: string
      type: array
    BeezUP.Common.CatalogColumnId:
      description: The catalog column identifier (catalog or custom column)
      example: bea7c21e-948b-4ac3-9ffd-4396e62c4163
      format: guid
      type: string
    BeezUP.Common.CatalogColumnUserName:
      description: The catalog column named by the user (catalog or custom column)
      example: My title
      type: string
    BeezUP.Common.ChannelBasicInfo:
      description: The basic info related to a channel
      properties:
        channelId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        channelImageUrl:
          $ref: "#/components/schemas/BeezUP.Common.HttpUrl"
        channelName:
          $ref: "#/components/schemas/BeezUP.Common.ChannelName"
      required:
        - channelId
        - channelName
        - channelImageUrl
      type: object
    BeezUP.Common.ChannelCatalogId:
      description: The channel catalog identifier
      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
      format: guid
      type: string
    BeezUP.Common.ChannelCategoryFilter:
      properties:
        categoryPath:
          description: Indicates on which channel category path you want to make the filter
          example:
            - Home
            - Bedroom
          items:
            type: string
          type: array
      type: object
    BeezUP.Common.ChannelCategoryId:
      example: 24f508da-a069-4467-b9d3-15baebe9bac7
      format: guid
      type: string
    BeezUP.Common.ChannelCategoryPath:
      description: The channel category path
      example:
        - Clothing
        - Women
        - Shoes
      items:
        type: string
      type: array
    BeezUP.Common.ChannelColumnId:
      description: The channel column identifier
      example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
      format: guid
      type: string
    BeezUP.Common.ChannelColumnName:
      description: The channel column name
      example: NAME
      type: string
    BeezUP.Common.ChannelId:
      description: The channel identifier
      example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
      format: guid
      type: string
    BeezUP.Common.ChannelName:
      description: The channel name
      example: Amazon FRA
      type: string
    BeezUP.Common.ColumnDataType:
      default: String
      description: Data type of the column, will be used for parsing and for consolidation proces
      enum:
        - String
        - Url
        - Text
        - Decimal
        - DateTime
        - Int
        - SpecialInt
        - InStock
        - Unknown
        - ImageUrl
      example: String
      type: string
    BeezUP.Common.ColumnImportance:
      default: Optional
      description: Importance of the column
      enum:
        - Required
        - Recommended
        - Optional
      example: Required
      type: string
    BeezUP.Common.CountryIsoCodeAlpha3:
      description: The country iso code alpha 3 <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3">(ISO 3166-1_alpha-3)</a>
      example: FRA
      type: string
      x-lov: Country
    BeezUP.Common.CurrencyCode:
      description: |
        The currency code <a href="https://en.wikipedia.org/wiki/ISO_4217">(ISO 4217)</a>
      example: EUR
      type: string
    BeezUP.Common.DocUrl:
      description: The documentation related to this operation.
      example: https://api-docs.beezup.com/#operation/EnableChannelCatalog
      format: uri
      type: string
    BeezUP.Common.Email:
      description: The email
      example: paulsimon@mysupercompany.com
      format: email
      pattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
      type: string
    BeezUP.Common.ErrorResponseMessage:
      properties:
        errors:
          items:
            $ref: "#/components/schemas/BeezUP.Common.UserErrorMessage"
          type: array
          uniqueItems: false
      required:
        - errors
      type: object
    BeezUP.Common.ErrorSummary:
      properties:
        errorArguments:
          additionalProperties:
            type: string
          type: object
        errorCode:
          type: string
        errorGuid:
          format: uuid
          type: string
        errorMessage:
          type: string
        exceptionDetail:
          $ref: "#/components/schemas/BeezUP.Common.ExceptionDetail"
        objectName:
          type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        source:
          type: string
        technicalErrorMessage:
          type: string
        utcDate:
          format: date-time
          type: string
      type: object
    BeezUP.Common.ExceptionDetail:
      properties:
        helpLink:
          type: string
        message:
          type: string
        stackTrace:
          type: string
        type:
          type: string
      type: object
    BeezUP.Common.Href:
      description: Indicate the relative uri for this link
      example: /v2/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}
      type: string
    BeezUP.Common.HttpMethod:
      default: GET
      description: Indicate the http method to use on this link
      enum:
        - GET
        - POST
        - PATCH
        - DELETE
        - PUT
        - HEAD
      example: GET
      type: string
    BeezUP.Common.HttpUrl:
      description: The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
      example: http://www.mydomain.com
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
    BeezUP.Common.InfoSummaries:
      properties:
        errors:
          items:
            $ref: "#/components/schemas/BeezUP.Common.ErrorSummary"
          type: array
        informations:
          items:
            $ref: "#/components/schemas/BeezUP.Common.InfoSummary"
          type: array
        successes:
          items:
            $ref: "#/components/schemas/BeezUP.Common.SuccessSummary"
          type: array
        warnings:
          items:
            $ref: "#/components/schemas/BeezUP.Common.WarningSummary"
          type: array
      type: object
    BeezUP.Common.InfoSummary:
      properties:
        informationArguments:
          additionalProperties:
            type: string
          type: object
        informationCode:
          type: string
        informationMessage:
          type: string
        objectName:
          type: string
        propertyName:
          type: string
        propertyValue:
          type: string
      type: object
    BeezUP.Common.LOVLink3:
      description: Describe the way you have to follow to get access to the LOV
      properties:
        href:
          description: Indicate the uri to the list of value
          example: /v2/public/Go2CultureName
          format: uri
          type: string
        method:
          $ref: "#/components/schemas/BeezUP.Common.HttpMethod"
      required:
        - href
      type: object
    BeezUP.Common.Link3:
      properties:
        allOptionalParamsProvided:
          description: indicates whether all optionals params have been provided
          type: boolean
        allRequiredParamsProvided:
          description: indicates whether all required params have been provided
          type: boolean
        description:
          description: The description of the link
          example: This is a description link
          type: string
        docUrl:
          $ref: "#/components/schemas/BeezUP.Common.DocUrl"
        href:
          $ref: "#/components/schemas/BeezUP.Common.Href"
        info:
          $ref: "#/components/schemas/BeezUP.Common.InfoSummaries"
        label:
          description: The label corresponding to the link. This label is automatically translated based on the Accept-Language http header.
          example: The translated label
          type: string
        method:
          $ref: "#/components/schemas/BeezUP.Common.HttpMethod"
        operationId:
          $ref: "#/components/schemas/BeezUP.Common.OperationId"
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/BeezUP.Common.LinkParameter3"
          type: object
        urlTemplated:
          description: indicates whether the href is templated or not
          type: boolean
      required:
        - href
      type: object
    BeezUP.Common.LinkParameter3:
      properties:
        description:
          description: description of the parameter
          example: the store identifier
          type: string
        in:
          $ref: "#/components/schemas/BeezUP.Common.ParameterIn"
        label:
          description: The label corresponding to the link parameter. This label is automatically translated based on the Accept-Language http header.
          example: The translated label
          type: string
        lovLink:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        lovRequired:
          description: If true, you MUST indicate a value from the list of values otherwise it's a freetext
          example: "true"
          type: boolean
        properties:
          additionalProperties:
            $ref: "#/components/schemas/BeezUP.Common.LinkParameterProperty3"
          description: If the parameter is an object with flexible properties (additionProperties/dictionary), we will describe the properties of the object.
          example:
            shipOrder:
              type: string
          type: object
        required:
          default: "false"
          example: "true"
          type: boolean
        schema:
          description: schema of the parameter
          example: orderListRequest
          type: string
        type:
          $ref: "#/components/schemas/BeezUP.Common.ParameterType"
        value:
          description: The value of the parameter. It can be an integer a string or an object.
          type: object
      required:
        - in
      type: object
    BeezUP.Common.LinkParameterProperty3:
      properties:
        description:
          description: description of the parameter
          example: the store identifier
          type: string
        label:
          description: The label corresponding to the link parameter property. This label is automatically translated based on the Accept-Language http header.
          example: The translated label
          type: string
        lovLink:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        lovRequired:
          description: If true, you MUST use indicate a value from the list of values otherwise it's a freetext
          example: "true"
          type: boolean
        required:
          example: "true"
          type: boolean
        schema:
          description: schema of the parameter
          example: orderListRequest
          type: string
        type:
          $ref: "#/components/schemas/BeezUP.Common.ParameterType"
        value:
          description: The value of the parameter. It can be an integer a string or an object.
          type: object
      required:
        - type
      type: object
    BeezUP.Common.ListOfValueItem:
      description: This object is used by LOV apis
      properties:
        codeIdentifier:
          example: FRA
          type: string
        intIdentifier:
          example: "1"
          format: int32
          type: integer
        position:
          example: "1"
          format: int32
          type: integer
        translationText:
          example: France
          type: string
      required:
        - codeIdentifier
        - intIdentifier
      type: object
    BeezUP.Common.MarketplaceAccountId:
      description: The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
      example: "1234"
      format: int32
      type: integer
    BeezUP.Common.MarketplaceBusinessCode:
      description: In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code.
      example: GOSPORT
      type: string
      x-lov: MarketplaceBusinessCode
    BeezUP.Common.MarketplaceTechnicalCode:
      description: The technical code of the marketplace.
      example: Amazon
      type: string
      x-lov: OMMarketplaceTechnicalCode
    BeezUP.Common.OperationId:
      description: The operationId to call.
      example: GetOrder
      type: string
    BeezUP.Common.PageNumber:
      default: "1"
      description: Indicates the page number
      example: "1"
      format: int32
      minimum: 1
      type: integer
    BeezUP.Common.PageSize:
      default: "100"
      description: Indicate the item count per page
      example: "100"
      format: int32
      maximum: 100
      minimum: 25
      type: integer
    BeezUP.Common.PaginationResult:
      example:
        entryCount: "25"
        links:
          first:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            parameters:
              - in: body
                name: request
                schema: orderListRequest
                type: object
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageNumber: "1"
                  pageSize: "25"
          last:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            parameters:
              - in: body
                name: request
                schema: orderListRequest
                type: object
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageNumber: "38"
                  pageSize: "25"
          next:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            parameters:
              - in: body
                name: request
                schema: orderListRequest
                type: object
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageNumber: "2"
                  pageSize: "25"
        pageCount: "38"
        totalEntryCount: "943"
      properties:
        entryCount:
          description: The entry count currently returned
          example: "25"
          minimum: 0
          type: integer
        links:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResultLinks"
        pageCount:
          description: The page count
          example: "38"
          minimum: 0
          type: integer
        totalEntryCount:
          description: The total entry count
          example: "943"
          minimum: 0
          type: integer
      required:
        - entryCount
        - pageCount
        - totalEntryCount
        - links
      type: object
    BeezUP.Common.PaginationResultLinks:
      description: The navigation links 'first', 'last', 'next', 'previous'
      properties:
        first:
          $ref: "#/components/schemas/BeezUP.Common.Link3"
        last:
          $ref: "#/components/schemas/BeezUP.Common.Link3"
        next:
          $ref: "#/components/schemas/BeezUP.Common.Link3"
        previous:
          $ref: "#/components/schemas/BeezUP.Common.Link3"
      required:
        - first
        - last
      type: object
    BeezUP.Common.ParameterIn:
      description: |
        * path: if the parameter must be pass in the path uri
        * header: if the parameter must be passed in http header
        * query: if the parameter must be passed in querystring
        * body: if the paramter must be passed in the body
      enum:
        - path
        - header
        - query
        - body
      example: path
      type: string
    BeezUP.Common.ParameterType:
      default: string
      description: The value type of the parameter
      enum:
        - string
        - integer
        - number
        - boolean
        - object
        - array
        - date
        - date-time
      example: string
      type: string
    BeezUP.Common.ProductBasicInfo:
      description: The basic information related to a product
      properties:
        productExists:
          description: Indicates if the product still exists in your catalog
          example: "true"
          type: boolean
        productId:
          description: The product identifier
          example: 00000000-0000-0000-0000-000000000000
          format: guid
          type: string
        productImageUrl:
          description: The product image Url
          example: http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg
          format: uri
          type: string
        productSku:
          description: The product SKU
          example: SKU1234
          type: string
        productTitle:
          description: The product tile
          example: My supert product
          type: string
      required:
        - productId
        - productSku
        - productTitle
        - productExists
      type: object
    BeezUP.Common.ProductColumnFilterOperatorName:
      description: Indicate the operator you want to make on the columnId
      type: string
      x-lov: ProductColumnFilterOperatorName
    BeezUP.Common.ProductId:
      description: The product identifier
      example: 578419df-1bbf-41a6-96fa-862e42182b67
      format: guid
      type: string
    BeezUP.Common.StoreId:
      description: The store identifier
      example: 64f43358-63a1-47f7-97ec-0301fc39956b
      format: guid
      type: string
    BeezUP.Common.SuccessSummary:
      properties:
        objectName:
          type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        successArguments:
          additionalProperties:
            type: string
          type: object
        successCode:
          type: string
        successMessage:
          type: string
      type: object
    BeezUP.Common.UserErrorMessage:
      properties:
        arguments:
          description: a dictionary string/object
          items:
            properties:
              name:
                description: The key of the parameter
                example: currentCatalogImportationId
                type: string
              value:
                description: The value of the parameter. Depending to the type.
                type: object
            required:
              - name
              - value
            type: object
          type: array
        code:
          description: the error code. The error code can be a pattern containing the argument's name
          example: CatalogImportationAlreadyInProgress(ExecutionId currentCatalogImportationId)
          type: string
        cultureName:
          description: If the error is translated, the culture name will be indicated
          example: en
          type: string
          x-lov: Go2CultureName
        docUrl:
          $ref: "#/components/schemas/BeezUP.Common.DocUrl"
        message:
          description: The error message
          example: |
            There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527
          type: string
      required:
        - code
        - message
      type: object
    BeezUP.Common.UserId:
      description: The user identifier
      example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
      format: guid
      type: string
    BeezUP.Common.WarningSummary:
      properties:
        technicalErrorMessage:
          type: string
        warningArguments:
          additionalProperties:
            type: string
          type: object
        warningCode:
          type: string
        warningMessage:
          type: string
      type: object
    LOVLink3:
      description: Describe the way you have to follow to get access to the LOV
      properties:
        href:
          description: Indicate the uri to the list of value
          example: /merchant/lov/v1/Go2CultureName
          format: uri
          type: string
        method:
          $ref: "#/components/schemas/httpMethod"
      required:
        - href
      type: object
      x-exclude: true
    accountId:
      description: The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
      example: "1234"
      format: int32
      type: integer
    accountInfo:
      properties:
        companyInfo:
          $ref: "#/components/schemas/companyInfo"
        email:
          $ref: "#/components/schemas/BeezUP.Common.Email"
        info:
          $ref: "#/components/schemas/BeezUP.Common.InfoSummaries"
        links:
          $ref: "#/components/schemas/accountInfoLinks"
        personalInfo:
          $ref: "#/components/schemas/personalInfo"
        profilePictureUrl:
          $ref: "#/components/schemas/profilePictureUrl"
        status:
          $ref: "#/components/schemas/accountStatus"
        userId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
      required:
        - userId
        - email
        - status
        - links
      type: object
    accountInfoLinks:
      description: The different actions you can make on this account
      properties:
        activateUserAccount:
          $ref: "#/components/schemas/links.activateUserAccountLink"
        changeEmail:
          $ref: "#/components/schemas/links.changeEmailLink"
        changePassword:
          $ref: "#/components/schemas/links.changePasswordLink"
        getCreditCardInfo:
          $ref: "#/components/schemas/links.getCreditCardInfoLink"
        getProfilePictureInfo:
          $ref: "#/components/schemas/links.getProfilePictureInfoLink"
        saveCompanyInfo:
          $ref: "#/components/schemas/links.saveCompanyInfoLink"
        saveCreditCardInfo:
          $ref: "#/components/schemas/links.saveCreditCardInfoLink"
        savePersonalInfo:
          $ref: "#/components/schemas/links.savePersonalInfoLink"
        saveProfilePictureInfo:
          $ref: "#/components/schemas/links.saveProfilePictureInfoLink"
        self:
          $ref: "#/components/schemas/links.getUserAccountInfoLink"
      required:
        - self
        - savePersonalInfo
        - changeEmail
        - changePassword
        - getProfilePictureInfo
        - saveCompanyInfo
        - saveProfilePictureInfo
        - getCreditCardInfo
        - saveCreditCardInfo
      type: object
    accountPublications:
      description: The publication history for an account
      properties:
        links:
          $ref: "#/components/schemas/accountPublicationsLinks"
        publications:
          description: The recent publications for the requested account
          example:
            - feeds:
                - endUtcDate: 2016-02-13T12:02:00Z
                  errorMessage: ""
                  exportedProducts: "10142"
                  failedItems: "1"
                  feedType: Offers
                  htmlReportGenerationErrorMessage: ""
                  htmlReportUrl: http://www.myreporthtml.com
                  processingStatus: Done
                  publishedItems: "10041"
                  publishedItemsWithWarning: "123"
                  startUtcDate: 2016-02-13T12:01:11Z
                  transmittedItems: "10042"
                - endUtcDate: 2016-02-13T12:02:00Z
                  errorMessage: ""
                  exportedProducts: "10142"
                  failedItems: "1"
                  feedType: Inventory
                  htmlReportGenerationErrorMessage: ""
                  htmlReportUrl: http://www.myreporthtml.com
                  processingStatus: Done
                  publishedItems: "10041"
                  publishedItemsWithWarning: "123"
                  startUtcDate: 2016-02-13T12:01:11Z
                  transmittedItems: "10042"
                - errorMessage: ""
                  exportedProducts: "10142"
                  failedItems: "1"
                  feedType: Pricing
                  htmlReportGenerationErrorMessage: ""
                  htmlReportUrl: http://www.myreporthtml.com
                  processingStatus: InProgress
                  publishedItems: "10041"
                  publishedItemsWithWarning: "123"
                  startUtcDate: 2016-02-13T12:01:11Z
                  transmittedItems: "10042"
              publicationType: PublishOffers
            - feeds:
                - endUtcDate: 2016-02-13T12:02:00Z
                  errorMessage: ""
                  exportedProducts: "10142"
                  failedItems: "1"
                  feedType: Product
                  htmlReportGenerationErrorMessage: ""
                  htmlReportUrl: http://www.myreporthtml.com
                  processingStatus: Done
                  publishedItems: "10041"
                  publishedItemsWithWarning: "123"
                  startUtcDate: 2016-02-13T12:01:11Z
                  transmittedItems: "10042"
                - endUtcDate: 2016-02-13T12:02:00Z
                  errorMessage: ""
                  exportedProducts: "10142"
                  failedItems: "1"
                  feedType: Inventory
                  htmlReportGenerationErrorMessage: ""
                  htmlReportUrl: http://www.myreporthtml.com
                  processingStatus: Done
                  publishedItems: "10041"
                  publishedItemsWithWarning: "123"
                  startUtcDate: 2016-02-13T12:01:11Z
                  transmittedItems: "10042"
                - errorMessage: ""
                  exportedProducts: "10142"
                  failedItems: "1"
                  feedType: Pricing
                  htmlReportGenerationErrorMessage: ""
                  htmlReportUrl: http://www.myreporthtml.com
                  processingStatus: InProgress
                  publishedItems: "10041"
                  publishedItemsWithWarning: "123"
                  startUtcDate: 2016-02-13T12:01:11Z
                  transmittedItems: "10042"
              publicationType: PublishProducts
          items:
            $ref: "#/components/schemas/publicationReporting"
          type: array
      required:
        - links
        - publications
      type: object
    accountPublicationsLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetPublicationsLink"
      required:
        - self
      type: object
    accountStatus:
      description: |
        The account status
        * Active:  When the account is active
        * SystemBlocked:  When all stores on the account are blocked by the system
        * UserBlocked: When all stores on the account are blocked on GO not on the system
        * NotActivated: When the email is not verified
      enum:
        - Active
        - SystemBlocked
        - UserBlocked
        - NotActivated
      example: Active
      type: string
    accountSynchronization:
      properties:
        accountId:
          $ref: "#/components/schemas/accountId"
        completedHarvestSynchroUtcDate:
          format: date-time
          type: string
        marketplaceBusinessCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceBusinessCode"
        marketplaceTechnicalCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceTechnicalCode"
      required:
        - accountId
        - marketplaceTechnicalCode
        - marketplaceBusinessCode
      type: object
    accountSynchronizationList:
      properties:
        accountSynchronizations:
          items:
            $ref: "#/components/schemas/accountSynchronization"
          type: array
      type: object
    accountingEmails:
      description: Your company accounting emails
      example:
        - myaccountemail@mysupercompany.com
      items:
        $ref: "#/components/schemas/BeezUP.Common.Email"
      type: array
    activateSubscriptionRequest:
      properties:
        recoverBeginPeriodOrderLastModificationUtcDate:
          description: If set, the date must be in the past the subscription will recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time.
          format: date-time
          type: string
        recoverEndPeriodOrderLastModificationUtcDate:
          description: |-
            If end period set, first the date must be in the past, the subscription will recover existing orders using the begin and the end period order last modification date. 
            If end period is not set and the begin period is set, then you will recover existing orders from the past using the begin period last modification date and after than you will continue to receive new/updated orders in real-time.
            If begin/end period are not set then you will receive new/updated orders in real-time.
            REMARK: The begin period is required if the end period is fulfilled.
            REMARK: If the end period is order last modification date is indicated then once we have push all orders to your target url the subscription will be desactivated.
          format: date-time
          type: string
      type: object
      x-format: Message
    addChannelCatalogRequest:
      properties:
        channelId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        storeId:
          $ref: "#/components/schemas/BeezUP.Common.StoreId"
      required:
        - channelId
        - storeId
      type: object
    additionalAnalyticsProductColumnFilters:
      additionalProperties:
        $ref: "#/components/schemas/analyticsProductColumnFilter"
      description: |
        Describes a filter on a product's column.
        The key is the column identifier of your catalog or a custom column.
      type: object
    address:
      description: Your address
      example: 21 jump street
      type: string
    alertEnabled:
      description: Is the alert enable ?
      example: "true"
      type: boolean
    alertId:
      description: Alert identifier
      example: "8"
      format: int32
      type: integer
    alertName:
      description: The alert name
      example: NoImportSinceXDays
      type: string
    alertPropertyId:
      description: The property identifier of the alert
      example: "2"
      format: int32
      type: integer
    alertPropertyValue:
      description: The property value
      example: "2"
      type: string
    analyticsIndex:
      description: The Analytics API operation index.
      properties:
        links:
          $ref: "#/components/schemas/analyticsIndexLinks"
        lovLinks:
          $ref: "#/components/schemas/analyticsIndexLovLinks"
        stores:
          items:
            $ref: "#/components/schemas/analyticsStoreIndex"
          type: array
      required:
        - links
        - stores
      type: object
    analyticsIndexLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.AnalyticsIndexLink"
        trackingStatus:
          $ref: "#/components/schemas/links.GetTrackingStatusLink"
      required:
        - self
      type: object
    analyticsIndexLovLinks:
      properties:
        analyticsNumericalProductColumnFilterOperatorNameLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        analyticsProductColumnFilterOperatorNameLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        analyticsStringProductColumnFilterOperatorNameLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        performanceIndicatorFilterOperatorNameLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        performanceIndicatorFormulaOperatorNameLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        performanceIndicatorFormulaParameterTypeLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        performanceIndicatorTypeForReportsByCategoryLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        performanceIndicatorTypeForReportsByChannelLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        performanceIndicatorTypeForReportsByProductLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        performanceIndicatorTypeLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        storeOptimisationRuleExecutionStatusLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
      type: object
    analyticsProductColumnFilter:
      example:
        672644c7-5bd0-4e25-88c1-1f732bda5e4c:
          operatorName: NumericalGreaterThan
          values:
            - "100"
      properties:
        operatorName:
          $ref: "#/components/schemas/analyticsProductColumnFilterOperatorName"
        values:
          description: |
            Must be null if the operator is "IsNull" or "IsNotNull".
            Can contains multiple value in case of "InList" operator. Otherwise a single value is expected.
          example:
            - My value
          items:
            type: string
          type: array
      required:
        - operatorName
      type: object
    analyticsProductColumnFilterOperatorName:
      description: Indicate the operator you want to apply on the columnId
      type: string
      x-lov: AnalyticsProductColumnFilterOperatorName
    analyticsProductColumnFilters:
      properties:
        additionalAnalyticsProductColumnFilters:
          $ref: "#/components/schemas/additionalAnalyticsProductColumnFilters"
        sku:
          description: The product sku filter
          example: M1234
          type: string
        title:
          description: The product title filter
          example: Refrigérateur
          type: string
      type: object
    analyticsStoreIndex:
      properties:
        links:
          $ref: "#/components/schemas/analyticsStoreIndexLinks"
      required:
        - links
      type: object
    analyticsStoreIndexLinks:
      properties:
        optimise:
          $ref: "#/components/schemas/links.OptimiseLink"
        optimiseAll:
          $ref: "#/components/schemas/links.OptimiseAllLink"
        optimiseByCategory:
          $ref: "#/components/schemas/links.OptimiseByCategoryLink"
        optimiseByChannel:
          $ref: "#/components/schemas/links.OptimiseByChannelLink"
        optimiseByProduct:
          $ref: "#/components/schemas/links.OptimiseByProductLink"
        reportByCategory:
          $ref: "#/components/schemas/links.GetStoreReportByCategoryLink"
        reportByChannel:
          $ref: "#/components/schemas/links.GetStoreReportByChannelLink"
        reportByDay:
          $ref: "#/components/schemas/links.GetStoreReportByDayLink"
        reportByProduct:
          $ref: "#/components/schemas/links.GetStoreReportByProductLink"
        reportFilters:
          $ref: "#/components/schemas/links.GetReportFiltersLink"
        rules:
          $ref: "#/components/schemas/links.GetRulesLink"
        self:
          $ref: "#/components/schemas/links.AnalyticsIndexLink"
        trackedClicks:
          $ref: "#/components/schemas/links.GetStoreTrackedClicksLink"
        trackedExternalOrders:
          $ref: "#/components/schemas/links.GetStoreTrackedExternalOrdersLink"
        trackedOrders:
          $ref: "#/components/schemas/links.GetStoreTrackedOrdersLink"
        trackingStatus:
          $ref: "#/components/schemas/links.GetStoreTrackingStatusLink"
      required:
        - self
        - trackingStatus
        - trackedClicks
        - trackedOrders
        - reportFilters
      type: object
    apiCredential:
      description: Your api credential
      properties:
        primaryToken:
          description: The primary token to be used in the next call in the user scope API
          example: 3b22980d8d1143c6ba7adf4e55b9a153
          type: string
        productName:
          description: The product name related to this credential
          example: UserAPI
          type: string
        secondaryToken:
          description: The secondary token. Could be usefull if you want to share your access with someone else.
          example: 162ae17fd52044c38cce3388ea5b0c91
          type: string
      type: object
    apiCredentials:
      properties:
        credentials:
          description: Your API credential list
          example:
            - primaryToken: 3b22980d8d1143c6ba7adf4e55b9a153
              productName: UserApi
              secondaryToken: 162ae17fd52044c38cce3388ea5b0c91
          items:
            $ref: "#/components/schemas/apiCredential"
          type: array
      type: object
    autoImportConfiguration:
      properties:
        duplicateProductConfiguration:
          $ref: "#/components/schemas/duplicateProductValueConfiguration"
        input:
          $ref: "#/components/schemas/inputConfiguration"
        inputConfiguredByUserId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
        pauseStatusChangedByUserId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
        pauseStatusChangedUtcDate:
          description: Indicate when the pause status has changed in UTC date.
          example: 2017-04-01T13:21:42Z
          format: date-time
          type: string
        paused:
          default: "false"
          description: Indicate if the auto import is in pause or not.
          example: "false"
          type: boolean
        scheduledByUserId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
        schedulingLocalTimeZoneName:
          default: Romance Standard Time
          description: Indicate the time zone name of the scheduling. If the scheduling type is "Schedule"
          example: Romance Standard Time
          type: string
        schedulingType:
          $ref: "#/components/schemas/schedulingType"
        schedulingValue:
          description: Indicate the scheduling value. If the scheduling type is Interval then the value will be a duration otherwise the values will be the time.
          example:
            - 21:00:00
            - 23:00:00
            - 08:30:00
          items:
            type: string
          minItems: 1
          type: array
      required:
        - input
        - inputConfiguredByUserId
        - schedulingType
        - schedulingValue
        - paused
        - duplicateProductConfiguration
      type: object
    autoImportConfigurationLinks:
      properties:
        activate:
          $ref: "#/components/schemas/links.Importation_ActivateAutoImportLink"
        pause:
          $ref: "#/components/schemas/links.Auto_PauseAutoImportLink"
        resume:
          $ref: "#/components/schemas/links.Auto_ResumeAutoImportLink"
        schedule:
          $ref: "#/components/schemas/links.Auto_ScheduleAutoImportLink"
        scheduleInterval:
          $ref: "#/components/schemas/links.Auto_ConfigureAutoImportIntervalLink"
        self:
          $ref: "#/components/schemas/links.Auto_GetAutoImportConfigurationLink"
        start:
          $ref: "#/components/schemas/links.Auto_StartAutoImportLink"
      required:
        - self
      type: object
    automaticTransition:
      properties:
        accountId:
          $ref: "#/components/schemas/accountId"
        enabled:
          example: "false"
          type: boolean
        marketplaceTechnicalCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceTechnicalCode"
        orderStatusTransitionId:
          example: "1234"
          format: int32
          type: integer
      required:
        - marketplaceTechnicalCode
        - accountId
        - orderStatusTransitionId
        - enabled
      type: object
    automaticTransitionInfo:
      allOf:
        - $ref: "#/components/schemas/automaticTransition"
        - properties:
            beezUPOrderStatus:
              $ref: "#/components/schemas/beezUPOrderStatus"
            businessOperationType:
              $ref: "#/components/schemas/businessOperationType"
            links:
              $ref: "#/components/schemas/automaticTransitionInfoLinks"
            marketplaceBusinessCode:
              $ref: "#/components/schemas/BeezUP.Common.MarketplaceBusinessCode"
          required:
            - marketplaceTechnicalCode
            - marketplaceBusinessCode
            - accountId
            - beezUPOrderStatus
            - businessOperationType
            - orderStatusTransitionId
            - enabled
          type: object
    automaticTransitionInfoLinks:
      properties:
        configure:
          $ref: "#/components/schemas/links.ConfigureAutomaticTransitionsLink"
      required:
        - configure
      type: object
    automaticTransitionInfoList:
      properties:
        automaticTransitionInfos:
          items:
            $ref: "#/components/schemas/automaticTransitionInfo"
          type: array
        links:
          $ref: "#/components/schemas/automaticTransitionInfoListLinks"
      required:
        - links
      type: object
    automaticTransitionInfoListLinks:
      properties:
        configure:
          $ref: "#/components/schemas/links.ConfigureAutomaticTransitionsLink"
        self:
          $ref: "#/components/schemas/links.GetAutomaticTransitionsLink"
      required:
        - self
        - configure
      type: object
    batchOrderOperationResponse:
      description: The response given by the batch operation
      properties:
        operations:
          items:
            $ref: "#/components/schemas/orderOperationResponse"
          type: array
      required:
        - operations
      type: object
    beezUPColumnConfiguration:
      description: Describe a BeezUP column
      properties:
        beezUPColumnName:
          $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
        canBeTruncated:
          $ref: "#/components/schemas/canBeTruncated"
        columnDataType:
          $ref: "#/components/schemas/BeezUP.Common.ColumnDataType"
        columnImportance:
          $ref: "#/components/schemas/BeezUP.Common.ColumnImportance"
        description:
          description: Describe the BeezUP column
          example: Use for big text, like description
          type: string
        displayGroupName:
          $ref: "#/components/schemas/displayGroupName"
        unique:
          default: "false"
          description: "/!\\ ONLY AVAILABLE ON CATALOG COLUMN NOT ON CUSTOM COLUMNS!!\r

            If true, an error happen at the second occurence of the same value for this column\r

            This information will be used during the importation process and later for mapping proposal"
          example: "false"
          type: boolean
      required:
        - beezUPColumnName
        - columnImportance
        - displayGroupName
      type: object
    beezUPMarketplaceAccountId:
      description: The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
      example: "1234"
      format: int32
      type: integer
    beezUPMarketplaceBusinessCode:
      description: In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code.
      example: GOSPORT
      type: string
      x-lov: MarketplaceBusinessCode
    beezUPMarketplaceTechnicalCode:
      description: The technical code of the marketplace.
      example: Amazon
      type: string
      x-lov: MarketplaceTechnicalCode
    beezUPOrderId:
      description: The BeezUP Order identifier
      example: "00000000000000000000000000000000000000000000000"
      format: uuid
      type: string
    beezUPOrderStatus:
      description: BeezUP order status. Unified for all marketplaces.
      example: Shipped
      type: string
      x-lov: BeezUPOrderState
    beezUPTimeZoneId:
      description: The time zone identifier based on the list of values /v2/user/lov/BeezUPTimeZone
      example: "79"
      format: int32
      type: integer
      x-lov: BeezUPTimeZone
    billingPeriod:
      properties:
        billingPeriodInMonth:
          description: The billing period in month
          example: "12"
          format: int32
          type: integer
        discountPercentage:
          description: The discount percentage related to this billing period
          example: "20.0"
          format: double
          type: number
      required:
        - billingPeriodInMonth
        - discountPercentage
      type: object
    billingPeriodInMonth:
      description: Can be null. The billing period in month based on /billingPeriods
      example: "12"
      format: int32
      minimum: 1
      type: integer
    billingPeriodList:
      properties:
        billingPeriods:
          description: The billing period list
          example:
            - billingPeriodInMonth: "12"
              discountPercentage: "20"
          items:
            $ref: "#/components/schemas/billingPeriod"
          type: array
        links:
          $ref: "#/components/schemas/billingPeriodListLinks"
      required:
        - links
        - billingPeriods
      type: object
    billingPeriodListLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.getBillingPeriodsLink"
      type: object
    bonusInfo:
      properties:
        amount:
          example: "12.34"
          format: double
          type: number
        bonusType:
          $ref: "#/components/schemas/bonusType"
      required:
        - bonusType
        - amount
      type: object
    bonusType:
      enum:
        - OnlinePaymentMethodBonus
        - PreviousInvoiceProrataBonus
        - PreviousContractBonus
      type: string
    businessOperationType:
      example: ShipOrder
      type: string
      x-lov: OrderChangeBusinessOperationType
    canBeTruncated:
      default: "false"
      description: If the size of the value is greater than the limit we can truncate the value instead of failing...
      example: "false"
      type: boolean
    cardNumber:
      description: Card number
      example: "1234567890091234"
      type: string
    cardVerificationCode:
      description: Card Verification Code
      example: "123"
      type: string
    catalogColumn:
      description: The catalog column configuration
      example:
        catalogColumnName: SKU
        configuration:
          beezUPColumnName: CategoryFirstLevel
          canBeTruncated: "false"
          columnCultureName: fr-FR
          columnDataType: String
          columnFormat: MM/dd/yyyy
          columnImportance: Required
          displayGroupName: Category
        duplicateProductValueConfiguration:
          compareOptions: IgnoreCase
          strategy: KeepFirstDuplicateProductOnly
        id: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
        ignored: "true"
        userColumName: My SKU
      properties:
        catalogColumnName:
          $ref: "#/components/schemas/catalogColumnName"
        configuration:
          $ref: "#/components/schemas/columnConfiguration"
        duplicateProductValueConfiguration:
          $ref: "#/components/schemas/duplicateProductValueConfiguration"
        id:
          $ref: "#/components/schemas/columnId"
        ignored:
          default: "false"
          description: IF true, the product values of this column will be not taken in account during the importation process
          type: boolean
        links:
          $ref: "#/components/schemas/catalogColumnLinks"
        userColumName:
          $ref: "#/components/schemas/userColumName"
      required:
        - id
        - catalogColumnName
        - userColumName
        - configuration
        - links
      type: object
    catalogColumnLinks:
      properties:
        rename:
          $ref: "#/components/schemas/links.Catalog_ChangeCatalogColumnUserNameLink"
      type: object
    catalogColumnList:
      properties:
        catalogColumns:
          items:
            $ref: "#/components/schemas/catalogColumn"
          type: array
      required:
        - catalogColumns
      type: object
    catalogColumnName:
      description: The catalog column name
      example: SKU
      type: string
    catalogIndex:
      properties:
        links:
          $ref: "#/components/schemas/catalogIndexLinks"
        lovLinks:
          $ref: "#/components/schemas/catalogIndexLOVLinks"
        storeLinks:
          $ref: "#/components/schemas/catalogStoreIndexList"
      required:
        - links
        - lovLinks
      type: object
    catalogIndexLOVLinks:
      properties:
        beezUPColumnDataTypeLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        beezUPColumnDisplayGroupLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        beezUPColumnImportanceLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        beezUPColumnLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        compareOptionLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        duplicateProductValueStrategyLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
      required:
        - beezUPColumnLov
        - beezUPColumnDataTypeLov
        - beezUPColumnImportanceLov
        - beezUPColumnDisplayGroupLov
        - duplicateProductValueStrategyLov
        - compareOptionLov
      type: object
    catalogIndexLinks:
      properties:
        beezUPColumns:
          $ref: "#/components/schemas/links.Catalog_GetBeezUPColumnsLink"
        self:
          $ref: "#/components/schemas/links.CatalogIndexLink"
      required:
        - self
        - beezUPColumns
      type: object
    catalogStoreIndex:
      properties:
        links:
          $ref: "#/components/schemas/catalogStoreIndexLinks"
        status:
          $ref: "#/components/schemas/catalogStoreStatus"
      required:
        - links
        - status
      type: object
    catalogStoreIndexLinks:
      properties:
        autoImportInfo:
          $ref: "#/components/schemas/links.Auto_GetAutoImportConfigurationLink"
        catalogColumns:
          $ref: "#/components/schemas/links.Catalog_GetCatalogColumnsLink"
        categories:
          $ref: "#/components/schemas/links.Catalog_GetCategoriesLink"
        computeExpression:
          $ref: "#/components/schemas/links.Catalog_ComputeExpressionLink"
        customColumns:
          $ref: "#/components/schemas/links.Catalog_GetCustomColumnsLink"
        importations:
          $ref: "#/components/schemas/links.Importation_GetReportingsLink"
        inputConfiguration:
          $ref: "#/components/schemas/links.Importation_GetManualUpdateLastInputConfigLink"
        products:
          $ref: "#/components/schemas/links.Catalog_GetProductsLink"
        randomProducts:
          $ref: "#/components/schemas/links.Catalog_GetRandomProductsLink"
        self:
          $ref: "#/components/schemas/links.CatalogStoreIndexLink"
        startImportation:
          $ref: "#/components/schemas/links.Importation_StartManualUpdateLink"
      required:
        - self
      type: object
    catalogStoreIndexList:
      properties:
        links:
          additionalProperties:
            $ref: "#/components/schemas/catalogStoreIndex"
          description: The key is the store identifier.
          type: object
      type: object
    catalogStoreStatus:
      description: |
        Indicates the status of the catalog store.
        * OK: If the latest importation is a success!
        * Failed: If the latest importation has failed !
        * Outdated: If the latest succeed importation is later than 1 day.
      enum:
        - OK
        - Failed
        - Outdated
      example: OK
      type: string
    category:
      description: The catalog category
      properties:
        categoryId:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryId"
        categoryPath:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryPath"
        selfProductCount:
          description: The product count related to this category
          example: "101"
          format: int32
          type: integer
        totalProductCount:
          description: The total product count related to this category and his sub categories
          example: "101"
          format: int32
          type: integer
      required:
        - categoryPath
        - totalProductCount
        - selfProductCount
    categoryList:
      description: The object which contains the category list
      properties:
        categories:
          description: The category list
          items:
            $ref: "#/components/schemas/category"
          type: array
      required:
        - categories
      type: object
    categoryMappingState:
      description: The category mapping state of the channel catalog
      properties:
        status:
          $ref: "#/components/schemas/categoryMappingStatus"
        uncategorizedProductCount:
          description: Indicates the uncategorized product count
          example: "101"
          format: int32
          type: integer
        withoutCategoryCostProductCount:
          description: Indicates the count of products without cost defined
          example: "42"
          format: int32
          type: integer
      type: object
    categoryMappingStatus:
      enum:
        - warning
        - success
        - failed
      example: success
      type: string
    changeCustomColumnExpressionRequest:
      description: The request message to change the custom column expression
      properties:
        encryptedBlocklyExpression:
          $ref: "#/components/schemas/encryptedBlocklyExpression"
        encryptedExpression:
          $ref: "#/components/schemas/encryptedExpression"
      required:
        - encryptedExpression
        - encryptedBlocklyExpression
      type: object
    changeCustomColumnRequest:
      description: The message request to change a custom column expression an user name
      properties:
        encryptedBlocklyExpression:
          $ref: "#/components/schemas/encryptedBlocklyExpression"
        encryptedExpression:
          $ref: "#/components/schemas/encryptedExpression"
        userColumName:
          $ref: "#/components/schemas/userColumName"
      required:
        - encryptedExpression
        - encryptedBlocklyExpression
        - userColumName
      type: object
    changeEmailRequest:
      properties:
        newEmail:
          $ref: "#/components/schemas/BeezUP.Common.Email"
      required:
        - newEmail
      type: object
    changeOrderListRequest:
      description: Contains all change order operations you want to make.  (max 100 items per call)
      properties:
        changeOrders:
          description: The change order operations
          items:
            $ref: "#/components/schemas/changeOrderListRequestItem"
          maxLength: 100
          minLength: 1
          type: array
      required:
        - changeOrders
      type: object
    changeOrderListRequestItem:
      description: Contains the order identifier and the change order request
      properties:
        changeOrderRequest:
          $ref: "#/components/schemas/changeOrderRequest"
        order:
          $ref: "#/components/schemas/orderIdentifierWithETag"
      required:
        - order
      type: object
    changeOrderListRequestItemV2:
      description: Contains the order identifier and the change order request
      properties:
        changeOrderRequest:
          $ref: "#/components/schemas/changeOrderRequest"
        order:
          $ref: "#/components/schemas/orderIdentifier"
      required:
        - order
      type: object
    changeOrderListRequestV2:
      description: Contains all change order operations you want to make.  (max 100 items per call)
      properties:
        changeOrders:
          description: The change order operations
          items:
            $ref: "#/components/schemas/changeOrderListRequestItemV2"
          maxLength: 100
          minLength: 1
          type: array
      required:
        - changeOrders
      type: object
    changeOrderReporting:
      description: The reporting related to a change order operation
      properties:
        changeOrderType:
          $ref: "#/components/schemas/businessOperationType"
        creationUtcDate:
          description: The creation UTC date of the execution
          example: 2017-04-01T13:10:03Z
          format: date-time
          type: string
        details:
          additionalProperties:
            type: object
          type: object
        errorMessage:
          description: The error message during the execution
          example: This is an error message
          type: string
        executionUUID:
          $ref: "#/components/schemas/executionUUID"
        ipAddress:
          description: The IP address who request this operation
          example: 127.0.0.1
          type: string
        lastUpdateUtcDate:
          description: The last update UTC date of the execution
          example: 2017-04-01T13:10:05Z
          format: date-time
          type: string
        processingStatus:
          description: The processing status of the execution
          example: Done
          type: string
        sourceType:
          $ref: "#/components/schemas/sourceType"
        sourceUserId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
        sourceUserName:
          example: Guillaume Tell
          type: string
        testMode:
          description: This operation was a test
          example: "false"
          type: boolean
      type: object
    changeOrderRequest:
      additionalProperties:
        type: string
      description: All properties with the prefix order_ are translated in the list of values /user/lov#OrderMetaInfoPosted
      example:
        order_Shipping_CarrierName: La poste
        order_Shipping_EstimatedDeliveryDate: 2014-09-24T09:58:00Z
        order_Shipping_FulfillmentDate: 2014-09-23T09:58:00Z
        order_Shipping_ShipperTrackingNumber: 1H01845163783
        order_Shipping_ShippingUrl: https://trackingpackage.com?number=1H01845163783
      type: object
    changePasswordRequest:
      properties:
        newPassword:
          description: Your new password. Which must respect the same constraints as the user registeration
          format: password
          type: string
        oldPassword:
          description: Your current password
          format: password
          type: string
      required:
        - oldPassword
        - newPassword
      type: object
    changeUserColumnNameRequest:
      description: The message request for the change user column name
      properties:
        userColumName:
          $ref: "#/components/schemas/userColumName"
      required:
        - userColumName
      type: object
    channelCatalog:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.ChannelBasicInfo"
        - description: The channel catalog
          properties:
            categoryMappingSettings:
              $ref: "#/components/schemas/channelCatalogCategoryMappingSettings"
            channelCatalogId:
              $ref: "#/components/schemas/BeezUP.Common.ChannelCatalogId"
            channelCategorySettings:
              $ref: "#/components/schemas/channelCategorySettings"
            channelCostSettings:
              $ref: "#/components/schemas/channelCostSettings"
            columnMappings:
              $ref: "#/components/schemas/channelCatalogColumnMappingListWithName"
            costSettings:
              $ref: "#/components/schemas/costSettings"
            enabled:
              description: Indicates if the channel catalog is enable
              example: "true"
              type: boolean
            exclusionFilters:
              $ref: "#/components/schemas/exclusionFilters"
            exportUrl:
              $ref: "#/components/schemas/BeezUP.Common.HttpUrl"
            generalSettings:
              $ref: "#/components/schemas/generalSettings"
            isMarketplace:
              description: Indicates if this channel catalog is related to a marketplace
              example: "true"
              type: boolean
            links:
              $ref: "#/components/schemas/channelCatalogLinks"
            state:
              $ref: "#/components/schemas/channelCatalogState"
            storeId:
              $ref: "#/components/schemas/BeezUP.Common.StoreId"
            types:
              description: The channel type list related to the channel
              example:
                - Marketplace
              items:
                type: string
              type: array
          required:
            - channelCatalogId
            - channelId
            - channelName
            - channelImageUrl
            - types
            - storeId
            - enabled
            - state
            - links
            - generalSettings
            - channelCostSettings
            - channelCategorySettings
            - isMarketplace
          type: object
    channelCatalogCategoryConfiguration:
      description: |
        Represent a mapping between a catalog category path and a channel category path.
        The cost on this mapping can be applied.
      properties:
        autoMapNewSubCategories:
          description: Great feature! In case of mapping to parent catalog category, you can ask to automatically map new sub catalog category in the next importation to this channel category path.
          example: "true"
          type: boolean
        catalogCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryPath"
        channelCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCategoryPath"
        costValue:
          $ref: "#/components/schemas/channelCatalogCategoryCostValue"
      required:
        - autoMapNewSubCategories
        - catalogCategoryPath
      type: object
    channelCatalogCategoryConfigurationInfo:
      description: For all catalog categories the current mapping applied
      properties:
        catalogCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryPath"
        channelCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCategoryPath"
        costValue:
          $ref: "#/components/schemas/channelCatalogCategoryCostValue"
        links:
          $ref: "#/components/schemas/channelCatalogCategoryMappingInfoLinks"
      required:
        - catalogCategoryPath
        - links
      type: object
    channelCatalogCategoryConfigurationList:
      properties:
        channelCatalogCategoryConfigurations:
          items:
            $ref: "#/components/schemas/channelCatalogCategoryConfigurationInfo"
          type: array
        costStatus:
          $ref: "#/components/schemas/costStatus"
        links:
          $ref: "#/components/schemas/channelCatalogCategoryMappingsLinks"
        mappingStatus:
          $ref: "#/components/schemas/mappingStatus"
      required:
        - links
        - channelCatalogCategoryConfigurations
        - mappingStatus
        - costStatus
      type: object
    channelCatalogCategoryCostValue:
      description: In case of CPC_ByCategory or CPA_ByCategory cost type, you have to indicate the cost value.
      example: "10.21"
      format: decimal
      type: number
    channelCatalogCategoryMappingInfoLinks:
      properties:
        configureCategories:
          $ref: "#/components/schemas/links.ConfigureChannelCatalogCategoryLink"
      type: object
    channelCatalogCategoryMappingSettings:
      properties:
        categoryMappingDisabledByMerchant:
          description: Optional parameter. Indicates that you have decided to do not map your categories with the channel's categories.
          example: "false"
          type: boolean
      type: object
    channelCatalogCategoryMappingsLinks:
      description: The action you can do on the category mappings
      properties:
        disable:
          $ref: "#/components/schemas/links.DisableChannelCatalogCategoryMappingLink"
        reenable:
          $ref: "#/components/schemas/links.ReenableChannelCatalogCategoryMappingLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogCategoriesLink"
      required:
        - self
      type: object
    channelCatalogColumnMapping:
      description: Represent a mapping between a channel column (considering channel category mapping) and a catalog column
      properties:
        catalogColumnId:
          $ref: "#/components/schemas/BeezUP.Common.CatalogColumnId"
        channelCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCategoryPath"
        channelColumnId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelColumnId"
      required:
        - channelColumnId
      type: object
    channelCatalogColumnMappingList:
      description: The column mapping list between a channel and a catalog
      items:
        $ref: "#/components/schemas/channelCatalogColumnMapping"
      type: array
    channelCatalogColumnMappingListWithName:
      description: The column mapping list between a channel and a catalog
      items:
        $ref: "#/components/schemas/channelCatalogColumnMappingWithName"
      type: array
    channelCatalogColumnMappingWithName:
      allOf:
        - $ref: "#/components/schemas/channelCatalogColumnMapping"
        - properties:
            catalogBeezUPColumnName:
              $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
            catalogColumnName:
              $ref: "#/components/schemas/BeezUP.Common.CatalogColumnUserName"
            channelBeezUPColumnName:
              $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
            channelColumnName:
              $ref: "#/components/schemas/BeezUP.Common.ChannelColumnName"
          required:
            - channelColumnId
            - channelColumnName
          type: object
    channelCatalogExportCacheInfo:
      properties:
        cacheStatus:
          description: The cache status
          example: ReadyForGeneration
          type: string
          x-lov: ChannelCatalogExportCacheStatus
        expirationUtcDate:
          description: The expiration UTC date of the cache
          example: 2014-08-25T08:02:31.584Z
          format: date-time
          type: string
        feedUrl:
          description: The feed url
          example: https://www.scootmotoshop.com/feed.xml
          type: string
        lastContentChangeUtcDate:
          description: The last content change UTC date
          example: 2014-08-25T07:30:31.584Z
          format: date-time
          type: string
        lastUpdateUtcDate:
          description: The last update UTC date of the cache
          example: 2014-08-25T07:32:31.584Z
          format: date-time
          type: string
      required:
        - cacheStatus
      type: object
    channelCatalogExportCacheInfoResponse:
      properties:
        cacheInfo:
          $ref: "#/components/schemas/channelCatalogExportCacheInfo"
        links:
          $ref: "#/components/schemas/channelCatalogExportCacheInfoResponseLinks"
      required:
        - cacheInfo
        - links
      type: object
    channelCatalogExportCacheInfoResponseLinks:
      properties:
        clear:
          $ref: "#/components/schemas/links.ClearChannelCatalogExportationCacheLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogExportationCacheInfoLink"
      required:
        - self
      type: object
    channelCatalogExportationHistory:
      properties:
        exportations:
          items:
            $ref: "#/components/schemas/channelCatalogExportationReporting"
          type: array
        links:
          $ref: "#/components/schemas/channelCatalogExportationHistoryLinks"
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
      required:
        - links
        - exportations
      type: object
    channelCatalogExportationHistoryLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogExportationHistoryLink"
      type: object
    channelCatalogExportationReporting:
      properties:
        cacheStatus:
          description: The cache status during the exportation
          example: Available
          type: string
          x-lov: ChannelCatalogExportationCacheGenerationStatus
        clientIpAddress:
          description: The IP address of the client who requests this exportation
          example: 42.101.42.101
          type: string
        clientUserAgent:
          description: The http header User-Agent sent by the client who requests this operation
          example: Wget/1.13.4 (linux-gnu)
          type: string
        exportationDuration:
          description: |
            The exportation duration. \
            '00:01:00' measn 1 minute.
          example: 00:01:00
          pattern: (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])
          type: string
        exportationUtcDate:
          description: The exportation UTC date
          example: 2014-08-25T07:32:31.584Z
          format: date-time
          type: string
        exportedProductCount:
          description: The exportated product count during this exportation
          example: "10142"
          format: int32
          type: integer
      required:
        - exportationUtcDate
        - clientIpAddress
        - clientUserAgent
      type: object
    channelCatalogLinks:
      description: Indicates the actions you can do on a channel catalog
      properties:
        categoryMappings:
          $ref: "#/components/schemas/links.GetChannelCatalogCategoriesLink"
        channelInfo:
          $ref: "#/components/schemas/externalLinks.GetChannelInfoLink"
        configureColumnMappings:
          $ref: "#/components/schemas/links.ConfigureChannelCatalogColumnMappingsLink"
        configureCostSettings:
          $ref: "#/components/schemas/links.ConfigureChannelCatalogCostSettingsLink"
        configureGeneralSettings:
          $ref: "#/components/schemas/links.ConfigureChannelCatalogGeneralSettingsLink"
        delete:
          $ref: "#/components/schemas/links.DeleteChannelCatalogLink"
        disable:
          $ref: "#/components/schemas/links.DisableChannelCatalogLink"
        disableCategoryMappings:
          $ref: "#/components/schemas/links.DisableChannelCatalogCategoryMappingLink"
        enable:
          $ref: "#/components/schemas/links.EnableChannelCatalogLink"
        exclusionFilters:
          $ref: "#/components/schemas/links.GetChannelCatalogExclusionFiltersLink"
        exportationCacheInfo:
          $ref: "#/components/schemas/links.GetChannelCatalogExportationCacheInfoLink"
        marketplaceSettings:
          $ref: "#/components/schemas/externalLinks.GetChannelCatalogMarketplaceSettingsLink"
        products:
          $ref: "#/components/schemas/links.GetChannelCatalogProductInfoListLink"
        reenableCategoryMappings:
          $ref: "#/components/schemas/links.ReenableChannelCatalogCategoryMappingLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogLink"
      required:
        - self
      type: object
    channelCatalogList:
      description: This is the index of the channel catalog API
      properties:
        channelCatalogs:
          additionalProperties:
            $ref: "#/components/schemas/channelCatalog"
          description: The channel catalog list. The key is the channel catalog identifier
          type: object
        links:
          $ref: "#/components/schemas/channelCatalogListLinks"
        lovLinks:
          $ref: "#/components/schemas/channelCatalogListLovLinks"
      type: object
    channelCatalogListLinks:
      description: |
        Indicates how global actions you can do like how to create a channel catalog, exclusion filter operators, etc...
      properties:
        add:
          $ref: "#/components/schemas/links.AddChannelCatalogLink"
        beezUPColumns:
          $ref: "#/components/schemas/externalLinks.Catalog_GetBeezUPColumnsLink"
        filterOperators:
          $ref: "#/components/schemas/links.GetChannelCatalogFilterOperatorsLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogsLink"
      type: object
    channelCatalogListLovLinks:
      properties:
        channelCatalogExclusionFilterOperatorLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        channelCatalogExportCacheStatusLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
      type: object
    channelCatalogMarketplaceBooleanProperty:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceProperty"
        - properties:
            default:
              description: Indicate the default values of the property
              example: "false"
              type: boolean
          type: object
    channelCatalogMarketplaceBooleanSetting:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceSetting"
        - properties:
            value:
              description: Channel catalog marketplace property values
              example: "false"
              type: boolean
          type: object
    channelCatalogMarketplaceIntegerProperty:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceProperty"
        - properties:
            default:
              description: Indicate the default values of the property
              example:
                - "201"
              items:
                type: integer
              type: array
          type: object
    channelCatalogMarketplaceIntegerSetting:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceSetting"
        - properties:
            values:
              description: Channel catalog marketplace property values
              example:
                - "201"
              items:
                type: integer
              type: array
          type: object
    channelCatalogMarketplaceNumberProperty:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceProperty"
        - properties:
            default:
              description: Indicate the default values of the property
              example:
                - "201.69"
              items:
                type: number
              type: array
          type: object
    channelCatalogMarketplaceNumberSetting:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceSetting"
        - properties:
            values:
              description: Channel catalog marketplace property values
              example:
                - "201.69"
              items:
                type: number
              type: array
          type: object
    channelCatalogMarketplaceProperties:
      properties:
        info:
          $ref: "#/components/schemas/BeezUP.Common.InfoSummaries"
        links:
          $ref: "#/components/schemas/channelCatalogMarketplacePropertiesLinks"
        propertyGroups:
          description: The groups settings with constraints
          example:
            - name: AccountInformations
              position: "1"
              properties:
                - name: EbayToken
                  position: "1"
                  readOnly: "true"
                  values:
                    - AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX
                - name: PayPalEmailAddress
                  pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
                  position: "2"
                  required: true
                  x-pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
            - displayGroupCode: AnnounceTitle
              displayGroupPosition: "2"
              properties:
                - name: Postalcode
                  position: "1"
                  required: true
                - lovLink:
                    href: /v2/user/lov/Country_eBay
                  lovRequired: "true"
                  name: Country
                  position: "2"
                  required: true
                - lovLink:
                    href: /v2/user/lov/ReturnsWithinDuration_eBay
                  lovRequired: "true"
                  name: ReturnsWithinOption
                  position: "3"
                  required: true
                - lovLink:
                    href: /v2/user/lov/FRA_ShippingService_eBay
                  lovRequired: "true"
                  name: ShippingService
                  position: "4"
                  required: true
                - lovLink:
                    href: /v2/user/lov/Currency_eBay
                  lovRequired: "true"
                  name: Currency
                  position: "5"
                  required: true
                - lovLink:
                    href: /v2/user/lov/PaymentMethods_eBay
                  lovRequired: "true"
                  maxItems: 2
                  minItems: 1
                  name: PaymentMethods
                  position: "6"
                  required: true
            - displayGroupCode: SalesConditions
              displayGroupPosition: "3"
              properties:
                - lovLink:
                    href: /v2/user/lov/ReturnsAcceptedOption_eBay
                  lovRequired: "true"
                  name: ReturnsAcceptedOption
                  position: "1"
                  required: true
                - lovLink:
                    href: /v2/user/lov/ShippingCostPaidByOption_eBay
                  lovRequired: "true"
                  name: ShippingCostPaidByOption
                  position: "2"
                  required: true
                - lovLink:
                    href: /v2/user/lov/RefundOption_eBay
                  lovRequired: "true"
                  name: RefundOption
                  position: "3"
                  required: true
                - lovLink:
                    href: /v2/user/lov/ReturnsWithinDuration_eBay
                  lovRequired: "true"
                  name: ReturnsWithinOption
                  position: "4"
                  required: true
                - maxLength: 5000
                  name: ReturnDescription
                  position: "5"
                  required: false
            - displayGroupCode: HTML
              displayGroupPosition: "4"
              properties:
                - maxLength: 50000
                  name: Template_HTML
                  position: "1"
                  required: false
            - displayGroupCode: OrdersRetrievalOptions
              displayGroupPosition: "5"
              properties:
                - description: If true allows to retireve one marketplace country only
                  name: RetrieveOnlyOneCountry
                  position: "1"
                  required: false
                  type: boolean
          items:
            $ref: "#/components/schemas/channelCatalogMarketplacePropertyGroup"
          type: array
      required:
        - links
        - propertyGroups
      type: object
    channelCatalogMarketplacePropertiesLinks:
      properties:
        externalConfigurationPage:
          $ref: "#/components/schemas/externalLinks.GetExternalConfigurationPageLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogMarketplacePropertiesLink"
        settings:
          $ref: "#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink"
      required:
        - self
      type: object
    channelCatalogMarketplaceProperty:
      description: Model for fetching a channel catalog marketplace property
      discriminator:
        propertyName: discriminatorType
      properties:
        description:
          description: Indicate the description of the property
          example: If true allows to retireve one marketplace country only
          type: string
        discriminatorType:
          $ref: "#/components/schemas/channelCatalogMarketplacePropertyDiscriminatorType"
        info:
          $ref: "#/components/schemas/BeezUP.Common.InfoSummaries"
        lovLink:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        lovRequired:
          default: "false"
          description: Indicates if the property value must be in the list of value.
          example: "true"
          type: boolean
        maxItems:
          default: "1"
          description: Indicates the maximum item count of the property value
          example: "2"
          format: int32
          minimum: 1
          type: integer
        maxLength:
          description: Indicates the maximum size of the property value
          example: "500"
          format: int32
          minimum: 1
          type: integer
        minItems:
          default: "1"
          description: Indicates the minimum item count of the property value.
          example: "1"
          format: int32
          minimum: 0
          type: integer
        minLength:
          default: "0"
          description: Indicates the minimum size of the property value
          example: "1"
          format: int32
          minimum: 0
          type: integer
        name:
          $ref: "#/components/schemas/channelCatalogMarketplacePropertyName"
        offerIdRequired:
          description: Indicates the offer identifier required to configure this property.
          example: "10"
          type: integer
        pattern:
          description: Channel catalog marketplace setting value format validation regular expression
          example: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
          type: string
        position:
          description: Indicate the position of the property in the display group
          example: "1"
          minimum: 1
          type: integer
        readOnly:
          default: "false"
          description: Indicate if the value cannot be changed. This is used for example for ebay token that should not be changed.
          example: "false"
          type: boolean
        required:
          default: "false"
          description: Indicate if the property is required or not
          example: "true"
          type: boolean
        type:
          $ref: "#/components/schemas/type"
        visible:
          default: "true"
          description: Indicates if this property should be displayed in the configuration page.
          example: "true"
          type: boolean
      required:
        - name
        - position
        - readOnly
        - required
        - visible
        - type
        - discriminatorType
      type: object
    channelCatalogMarketplacePropertyDiscriminatorType:
      enum:
        - channelCatalogMarketplaceStringProperty
        - channelCatalogMarketplaceIntegerProperty
        - channelCatalogMarketplaceBooleanProperty
        - channelCatalogMarketplaceNumberProperty
      example: string
      type: string
    channelCatalogMarketplacePropertyGroup:
      properties:
        name:
          description: Indicate the code identifier of the group
          example: AccountInformations
          type: string
          x-lov: MarketplaceStorePropertyGroup
        position:
          description: Indicate the position of the group
          example: "1"
          minimum: 1
          type: integer
        properties:
          example:
            - name: EbayToken
              position: "1"
              readOnly: "true"
              values:
                - AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX
            - name: PaypalAddress
              pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
              position: "2"
              required: true
              x-pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
          items:
            $ref: "#/components/schemas/channelCatalogMarketplaceProperty"
          type: array
      required:
        - name
        - position
        - properties
    channelCatalogMarketplacePropertyName:
      description: Channel catalog marketplace property name
      example: PaypalAddress
      type: string
      x-lov: MarketplaceStoreProperty
    channelCatalogMarketplaceSetting:
      description: Model for fetching a channel catalog marketplace setting
      discriminator:
        propertyName: discriminatorType
      properties:
        discriminatorType:
          $ref: "#/components/schemas/channelCatalogMarketplaceSettingDiscriminatorType"
        name:
          $ref: "#/components/schemas/channelCatalogMarketplacePropertyName"
      required:
        - name
        - discriminatorType
      type: object
    channelCatalogMarketplaceSettingArray:
      example:
        - name: Country
          values:
            - FR
        - name: Currency
          values:
            - EUR
        - name: ListingDuration
          values:
            - GTC
        - name: PaymentMethods
          values:
            - CCAccepted
        - name: PayPalEmailAddress
          values:
            - pascal@ixeoline.com
        - name: PostalCode
          values:
            - "69630"
        - name: RefundOption
          values:
            - MoneyBackOrExchange
        - name: ReturnsAcceptedOption
          values:
            - ReturnsAccepted
        - name: ReturnsWithinOption
          values:
            - Days_10
        - name: ShippingCostPaidByOption
          values:
            - Buyer
        - name: ShippingService
          values:
            - FR_ColiposteColissimo
      items:
        $ref: "#/components/schemas/channelCatalogMarketplaceSetting"
      type: array
    channelCatalogMarketplaceSettingDiscriminatorType:
      enum:
        - channelCatalogMarketplaceStringSetting
        - channelCatalogMarketplaceIntegerSetting
        - channelCatalogMarketplaceBooleanSetting
        - channelCatalogMarketplaceNumberSetting
      example: string
      type: string
    channelCatalogMarketplaceSettings:
      description: The channel catalog marketplace settings
      properties:
        links:
          $ref: "#/components/schemas/channelCatalogMarketplaceSettingsLinks"
        settings:
          example:
            - name: Country
              values:
                - FR
            - name: Currency
              values:
                - EUR
            - name: ListingDuration
              values:
                - GTC
            - name: PaymentMethods
              values:
                - CCAccepted
            - name: PayPalEmailAddress
              values:
                - pascal@ixeoline.com
            - name: PostalCode
              values:
                - "69630"
            - name: RefundOption
              values:
                - MoneyBackOrExchange
            - name: ReturnsAcceptedOption
              values:
                - ReturnsAccepted
            - name: ReturnsWithinOption
              values:
                - Days_10
            - name: ShippingCostPaidByOption
              values:
                - Buyer
            - name: ShippingService
              values:
                - FR_ColiposteColissimo
          items:
            $ref: "#/components/schemas/channelCatalogMarketplaceSetting"
          type: array
      required:
        - links
        - settings
      type: object
    channelCatalogMarketplaceSettingsLinks:
      properties:
        save:
          $ref: "#/components/schemas/links.SetChannelCatalogMarketplaceSettingsLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink"
      required:
        - self
        - save
      type: object
    channelCatalogMarketplaceStringProperty:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceProperty"
        - properties:
            default:
              description: Indicate the default values of the property
              example:
                - My default value
              items:
                type: string
              type: array
          type: object
    channelCatalogMarketplaceStringSetting:
      allOf:
        - $ref: "#/components/schemas/channelCatalogMarketplaceSetting"
        - properties:
            values:
              description: Channel catalog marketplace property values
              example:
                - myemail@mydomain.com
              items:
                type: string
              type: array
          type: object
    channelCatalogProductByChannelCatalogRequest:
      properties:
        channelCatalogIds:
          description: The list of channel catalog identifier
          items:
            $ref: "#/components/schemas/BeezUP.Common.ChannelCatalogId"
          type: array
        productId:
          $ref: "#/components/schemas/BeezUP.Common.ProductId"
        storeId:
          $ref: "#/components/schemas/BeezUP.Common.StoreId"
      required:
        - storeId
        - productId
        - channelCatalogIds
      type: object
    channelCatalogProductByChannelCatalogResponse:
      properties:
        channelCatalogs:
          additionalProperties:
            $ref: "#/components/schemas/channelCatalogProductInfo"
          description: The channel catalog product by channel catalog. The key is the channel catalog identifier
          type: object
      type: object
    channelCatalogProductFilters:
      properties:
        additionalProductFilters:
          $ref: "#/components/schemas/BeezUP.Common.AdditionalProductFilters"
        catalogEans:
          description: The catalog product EAN filter (multiple values)
          items:
            type: string
          type: array
        catalogMpns:
          description: The catalog product MPN filter (multiple values)
          items:
            type: string
          type: array
        catalogSkus:
          description: The catalog product SKU filter (multiple values)
          items:
            type: string
          type: array
        channelEans:
          description: The channel product EAN filter (multiple values)
          items:
            type: string
          type: array
        channelMpns:
          description: The channel product MPN filter (multiple values)
          items:
            type: string
          type: array
        channelSkus:
          description: The channel product SKU filter (multiple values)
          items:
            type: string
          type: array
        title:
          description: The product title filter
          example: Refrigérateur
          type: string
      type: object
    channelCatalogProductInfo:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.ProductBasicInfo"
        - description: The channel catalog product information
          properties:
            disabled:
              default: "false"
              description: Indicates if the product has been disabled or not
              example: "false"
              type: boolean
            excluded:
              default: "false"
              description: Indicates if the product has been excluded by a exclusion filter
              example: "true"
              type: boolean
            excludedBy:
              example:
                - Exclude sony products
              items:
                $ref: "#/components/schemas/exclusionFilterName"
              type: array
            links:
              $ref: "#/components/schemas/channelCatalogProductInfoLinks"
            overrides:
              $ref: "#/components/schemas/productOverridesWithCatalogValues"
            uncategorized:
              description: Indicates if the product's category has been NOT mapped to a channel category
              example: "true"
              type: boolean
          required:
            - productId
            - productExists
            - overrides
            - disabled
            - uncategorized
            - excluded
            - links
          type: object
    channelCatalogProductInfoLinks:
      description: Indicates the differents actions you can do on a channel product
      properties:
        disable:
          $ref: "#/components/schemas/links.DisableChannelCatalogProductLink"
        override:
          $ref: "#/components/schemas/links.OverrideChannelCatalogProductValuesLink"
        reenable:
          $ref: "#/components/schemas/links.ReenableChannelCatalogProductLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogProductInfoLink"
      required:
        - self
        - override
      type: object
    channelCatalogProductInfoList:
      description: The channel catalog product info list
      properties:
        links:
          $ref: "#/components/schemas/channelCatalogProductInfoListLinks"
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
        productInfos:
          items:
            $ref: "#/components/schemas/channelCatalogProductInfo"
          type: array
      required:
        - paginationResult
        - links
        - productInfos
      type: object
    channelCatalogProductInfoListLinks:
      properties:
        export:
          $ref: "#/components/schemas/links.ExportChannelCatalogProductInfoListLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogProductInfoListLink"
      required:
        - self
      type: object
    channelCatalogProductsCounters:
      description: The channel catalog products counters. For each counter you will have a count.
      properties:
        disabledProductCountExcludingUncategorized:
          description: Disabled product count EXCLUDING uncategorized products on existing products.
          example: "150"
          format: int32
          type: integer
        disabledProductCountIncludingUncategorized:
          description: Disabled product count INCLUDING uncategorized products on existing products.
          example: "169"
          format: int32
          type: integer
        excludedProductCountExcludingUncategorizedAndDisabled:
          description: Excluded product count EXCLUDING uncategorized products AND disabled products on existing products.
          example: "50"
          format: int32
          type: integer
        excludedProductCountIncludingUncategorizedAndDisabled:
          description: Excluded product count INCLUDING uncategorized products AND disabled products on existing products.
          example: "66"
          format: int32
          type: integer
        existingProductCount:
          description: Imported product count currently in your catalog.
          example: "1000"
          format: int32
          type: integer
        uncategorizedProductCount:
          description: Product count WITHOUT category mapped on existing products.
          example: "250"
          format: int32
          type: integer
      type: object
    channelCatalogState:
      description: Channel Catalog State
      properties:
        apiSettingsStatus:
          $ref: "#/components/schemas/BeezUP.Common.ApiSettingsStatus"
        categoryMappingState:
          $ref: "#/components/schemas/categoryMappingState"
        columnMappingStatus:
          $ref: "#/components/schemas/columnMappingStatus"
        exportedProductCount:
          example: "101"
          format: int32
          type: integer
      required:
        - exportedProductCount
        - columnMappingStatus
        - categoryMappingState
      type: object
    channelCategory:
      description: The channel category
      properties:
        channelCategoryChannelCode:
          $ref: "#/components/schemas/channelCategoryChannelCode"
        channelCategoryColumnOverrides:
          $ref: "#/components/schemas/channelCategoryColumnOverrides"
        channelCategoryDefaultCost:
          $ref: "#/components/schemas/channelCategoryDefaultCost"
        channelCategoryId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCategoryId"
        channelCategoryLevel:
          $ref: "#/components/schemas/channelCategoryLevel"
        channelCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCategoryPath"
      required:
        - channelCategoryId
        - channelCategoryPath
        - channelCategoryLevel
      type: object
    channelCategoryChannelCode:
      description: The channel category channel code identifier
      example: "1342"
      type: string
    channelCategoryColumnOverride:
      properties:
        channelColumnDescription:
          $ref: "#/components/schemas/channelColumnDescription"
        channelColumnId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelColumnId"
        channelColumnName:
          $ref: "#/components/schemas/BeezUP.Common.ChannelColumnName"
        configuration:
          $ref: "#/components/schemas/channelColumnConfiguration"
        restrictedValues:
          $ref: "#/components/schemas/channelColumnRestrictedValues"
        showInMapping:
          $ref: "#/components/schemas/channelColumnShowInMapping"
      required:
        - channelColumnId
        - channelColumnName
        - showInMapping
        - configuration
      type: object
    channelCategoryColumnOverrides:
      additionalProperties:
        $ref: "#/components/schemas/channelCategoryColumnOverride"
      description: The channel category column overrides
      type: object
    channelCategoryDefaultCost:
      description: The default cost on this channel category
      example: "10.42"
      format: decimal
      type: number
    channelCategoryLevel:
      description: The channel category level starting from 1
      example: "3"
      format: int32
      maximum: 9
      minimum: 1
      type: integer
    channelCategorySettings:
      properties:
        mappingLeafRequired:
          description: Indicates if the category mapping is required on category path leaf or not
          example: "true"
          type: boolean
        mappingRequired:
          description: Indicates if the category mapping is required, otherwise you can map the categories but it will not block the publication of your catalog
          example: "true"
          type: boolean
      type: object
    channelColumn:
      description: The channel column
      properties:
        channelColumnDescription:
          $ref: "#/components/schemas/channelColumnDescription"
        channelColumnId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelColumnId"
        channelColumnName:
          $ref: "#/components/schemas/BeezUP.Common.ChannelColumnName"
        configuration:
          $ref: "#/components/schemas/channelColumnConfiguration"
        position:
          description: The position of the column starting from 1
          example: "1"
          type: integer
        restrictedValues:
          $ref: "#/components/schemas/channelColumnRestrictedValues"
        showInMapping:
          $ref: "#/components/schemas/channelColumnShowInMapping"
      required:
        - channelColumnId
        - channelColumnName
        - showInMapping
        - position
        - configuration
      type: object
    channelColumnConfiguration:
      description: The channel column configuration. The BeezUP Column Name is optional. If the BeezUP column is mapped we will indicate the data type and column importance of the BeezUP column.
      properties:
        beezUPColumnName:
          $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
        columnDataType:
          $ref: "#/components/schemas/BeezUP.Common.ColumnDataType"
        columnImportance:
          $ref: "#/components/schemas/BeezUP.Common.ColumnImportance"
      required:
        - columnImportance
        - columnDataType
      type: object
    channelColumnDescription:
      description: The channel column description
      example: Please enter the base prices (price per unit) according to <a href="http://www.gesetze-im-internet.de/pangv/__2.html">Article PAngV</a>
      type: string
    channelColumnRestrictedValues:
      additionalProperties:
        type: string
      description: |
        The restricted values. The key will be the restricted value identifier (format:guid) and the value will be the restriced value
      type: object
    channelColumnShowInMapping:
      description: Indicates if this column must shown in the mapping page or not
      example: "true"
      type: boolean
    channelCostSettings:
      description: Indicate the default configuration of the cost on this channel.
      properties:
        costType:
          $ref: "#/components/schemas/costType"
        globalCostValue:
          description: In case of global cost type, you have to indicate the cost value.
          example: "10.21"
          format: decimal
          type: number
      required:
        - costType
      type: object
    channelFirstLevelCategory:
      description: The first level category with his sub categories
      properties:
        channelCategoryChannelCode:
          $ref: "#/components/schemas/channelCategoryChannelCode"
        channelCategoryColumnOverrides:
          $ref: "#/components/schemas/channelCategoryColumnOverrides"
        channelCategoryDefaultCost:
          $ref: "#/components/schemas/channelCategoryDefaultCost"
        channelCategoryId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCategoryId"
        channelCategoryLevel:
          $ref: "#/components/schemas/channelCategoryLevel"
        channelCategoryName:
          description: The channel category name
          example: Clothing
          type: string
        subCategories:
          items:
            $ref: "#/components/schemas/channelCategory"
          type: array
      required:
        - channelCategoryId
        - channelCategoryName
        - channelCategoryLevel
      type: object
    channelHeader:
      description: The available channel
      properties:
        channelId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        channelLogoUrl:
          $ref: "#/components/schemas/BeezUP.Common.HttpUrl"
        channelName:
          $ref: "#/components/schemas/BeezUP.Common.ChannelName"
        links:
          $ref: "#/components/schemas/channelHeaderLinks"
        types:
          description: The type list related to a channel
          example:
            - Marketplace
          items:
            type: string
          type: array
      required:
        - channelId
        - channelName
        - channelLogoUrl
        - links
        - types
      type: object
    channelHeaderLinks:
      description: The links related to an available channel
      properties:
        self:
          $ref: "#/components/schemas/links.GetChannelInfoLink"
      type: object
    channelInfo:
      properties:
        beezUPOffer:
          description: Indicate the BeezUP offer
          example: First month free
          type: string
        channelDescription:
          description: Indicae a description to the channel
          example: Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia dolorum, animi voluptatibus maiores, assumenda maxime illum, labore quae quas ducimus laudantium provident veritatis doloremque dignissimos eum. Error magni illum autem.
          type: string
        channelId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        channelLogoUrl:
          $ref: "#/components/schemas/BeezUP.Common.HttpUrl"
        channelName:
          $ref: "#/components/schemas/BeezUP.Common.ChannelName"
        details:
          properties:
            businessModel:
              description: The business model of the channel
              example: CPC
              type: string
            category:
              description: The channel category
              example: "NULL"
              type: string
            channelType:
              description: The channel type
              example: Comparator
              type: string
            costs:
              description: The cost's description of the channel
              example: CPC variation from 0.10€ to 0.20€
              type: string
            homeUrl:
              description: The home url of the channel
              example: http://www.achetezfacile.com
              format: uri
              type: string
            subscriptionLink:
              description: The subscription link to the channel
              example: |
                By Email at : stephanie.gregis@m6.fr
              type: string
            trackingType:
              description: The tracking type
              example: Redirect
              type: string
          type: object
        keyNumbers:
          properties:
            categories:
              description: The estimated category count of the channel
              example: NC
              type: string
            products:
              description: The estimated product count of the channel
              example: 1M
              type: string
            stores:
              description: The estimated store count of the channel
              example: "3000"
              type: string
            viewsPerMonth:
              description: The estimated view count per month of the channel
              example: 3M
              type: string
          type: object
        salesContact:
          properties:
            email:
              description: Indicate the sales contact email
              example: stephanie.gregis@m6.fr
              format: email
              type: string
            name:
              description: Indicate the BeezUP offer
              example: Stéphanie Gregis
              type: string
            phoneNumber:
              description: The sales contact phone number
              example: 0033 6 08 87 85 45
              type: string
          type: object
        technicalContact:
          properties:
            email:
              description: The technical contact email
              example: pierre.guedon@m6.fr
              type: string
            name:
              description: The technical contact name
              example: Pierre Guédon
              type: string
            phoneNumber:
              description: The technical contact phone number
              example: NC
              type: string
          type: object
      required:
        - channelId
        - channelName
      type: object
    channelRootCategory:
      description: Get channel first level category list
      properties:
        firstLevelCategories:
          items:
            $ref: "#/components/schemas/channelFirstLevelCategory"
          type: array
      required:
        - firstLevelCategories
      type: object
    city:
      description: Your address city
      example: New-York
      type: string
    clearMerchantOrderInfoListRequest:
      properties:
        orders:
          example:
            - accountId: "1234"
              beezUPOrderId: "0"
              marketplaceTechnicalCode: Amazon
            - accountId: "5678"
              beezUPOrderId: "0"
              marketplaceTechnicalCode: Amazon
            - accountId: "9876"
              beezUPOrderId: "0"
              marketplaceTechnicalCode: Ebay
          items:
            $ref: "#/components/schemas/orderIdentifier"
          maxItems: 100
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - orders
      type: object
    clickIncludedAndAdditionalClickPrice:
      properties:
        additionalClickPrice:
          description: The additional click price
          format: double
          type: number
        clickIncluded:
          description: The click included
          format: int32
          type: integer
      type: object
    clickIncludedAndVariablePrice:
      properties:
        clickIncluded:
          description: Click included
          format: int32
          type: integer
        variablePrice:
          description: The pricing applied for this range
          format: double
          type: number
      type: object
    columnConfiguration:
      description: Indicates the configuration applied on the column (catalog or custom) during the importation process.
      properties:
        beezUPColumnName:
          $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
        canBeTruncated:
          $ref: "#/components/schemas/canBeTruncated"
        columnCultureName:
          $ref: "#/components/schemas/columnCultureName"
        columnDataType:
          $ref: "#/components/schemas/BeezUP.Common.ColumnDataType"
        columnFormat:
          $ref: "#/components/schemas/columnFormat"
        columnImportance:
          $ref: "#/components/schemas/BeezUP.Common.ColumnImportance"
        displayGroupName:
          $ref: "#/components/schemas/displayGroupName"
      required:
        - columnImportance
        - columnDataType
      type: object
    columnCultureName:
      description: If non null, culture used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
      example: fr-FR
      type: string
    columnFormat:
      description: If non null, format used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
      example: MM/dd/yyyy
      type: string
    columnId:
      description: The catalog column identifier
      example: 8f6671d6-a9bc-4de0-a0c4-4643b0c3f871
      format: guid
      type: string
    columnMappingStatus:
      enum:
        - warning
        - success
        - failed
      example: success
      type: string
    company:
      description: Your company name
      example: My super company
      type: string
    companyInfo:
      properties:
        accountingEmails:
          $ref: "#/components/schemas/accountingEmails"
        address:
          $ref: "#/components/schemas/address"
        city:
          $ref: "#/components/schemas/city"
        company:
          $ref: "#/components/schemas/company"
        countryIsoCodeAlpha3:
          $ref: "#/components/schemas/BeezUP.Common.CountryIsoCodeAlpha3"
        postalCode:
          $ref: "#/components/schemas/postalCode"
        vatNumber:
          $ref: "#/components/schemas/vatNumber"
      required:
        - company
        - address
        - postalCode
        - city
        - countryIsoCodeAlpha3
      type: object
    compareOptions:
      default: None
      description: Indicate how the product sku are compared for the duplication check.
      enum:
        - None
        - IgnoreCase
        - IgnoreNonSpace
        - IgnoreSymbols
        - OrdinalIgnoreCase
        - StringSort
        - Ordinal
      example: IgnoreCase
      type: string
    compressionFormatStrategy:
      description: Indicate the compression type
      enum:
        - None
        - Zip
        - TarGz
        - Gzip
        - Bzip2
        - Rar
      example: None
      type: string
    computeExpressionRequest:
      description: The request message to compute an expression based on the provided product values
      properties:
        encryptedExpression:
          $ref: "#/components/schemas/encryptedExpression"
        productValues:
          $ref: "#/components/schemas/productValues"
      required:
        - productValues
        - encryptedExpression
      type: object
    configureAutoImportIntervalRequest:
      description: The message request to configure the auto import interval
      properties:
        interval:
          description: Indicate the interval in time span. (i.e. "04:00:00" for every 4 hours)
          example: 04:00:00
          pattern: (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])
          type: string
      required:
        - interval
      type: object
    configureAutomaticTransitionRequest:
      properties:
        automaticTransitions:
          items:
            $ref: "#/components/schemas/automaticTransition"
          minLength: 1
          type: array
      required:
        - automaticTransitions
      type: object
    configureCatalogColumnCatalogRequest:
      description: The request to configure a catalog column
      properties:
        catalogColumn:
          $ref: "#/components/schemas/catalogColumn"
      required:
        - catalogColumn
      type: object
    configureCategoryRequest:
      description: The request message to make a mapping between catalog category path and a channel category path
      properties:
        channelCatalogCategories:
          items:
            $ref: "#/components/schemas/channelCatalogCategoryConfiguration"
          type: array
        overrideSubCategoryMappings:
          description: Great feature! In case of mapping to parent channel category, you can ask to override the mapping of all sub channel category to this catalog category path
          example: "true"
          type: boolean
      required:
        - overrideSubCategoryMappings
        - channelCatalogCategories
      type: object
    consumptionAvailabilityStatus:
      description: The subscription consumption status
      enum:
        - Available
        - Degraded
        - Unavailable
      type: string
    contractBillingPeriodInfo:
      description: Describe the billing period information related to the offer.
      properties:
        amountBillingPeriodDiscount:
          description: The amount discounted related to the billing period
          example: "20.0"
          format: double
          type: number
        billingPeriodInMonth:
          $ref: "#/components/schemas/billingPeriodInMonth"
        billingPeriodPercentDiscount:
          description: The discount percent related to the billing period
          example: "10.0"
          format: double
          type: number
      type: object
    contractBonusInfo:
      description: Describe the bonus information related to your current contract.
      properties:
        bonuses:
          items:
            $ref: "#/components/schemas/bonusInfo"
          type: array
      required:
        - bonuses
      type: object
    contractClickInfo:
      description: Describe the click information related to the offer.
      properties:
        additionalClickPrice:
          description: The addition click price in the offer
          example: "0.001"
          format: double
          type: number
        clickIncluded:
          description: The click included in the offer
          example: "5000"
          format: int32
          type: integer
        initialOfferClickIncluded:
          description: The click included in your current contract
          example: "5000"
          format: int32
          type: integer
      type: object
    contractCommitmentInfo:
      description: Describe the commitment information related to the offer.
      properties:
        commercialCreatorUserId:
          description: The commercial that is responsible of the creation of your account
          example: 6e07814d-26a9-494b-91b2-e5ed0b9aba8c
          format: guid
          type: string
        commercialUserId:
          description: Your current commercial user id
          example: 0ddc2b79-10fe-4071-8161-42faa897082f
          format: guid
          type: string
        commitmentCalculatedFinishDate:
          description: The commitment end date related to the offer
          example: 2017-06-02
          format: date
          type: string
        commitmentPeriodInMonth:
          description: The commitment period in month related to the offer
          example: "1"
          format: int32
          type: integer
        contractType:
          description: "Internal usage: Old offer type. Your contract type"
          example: "1234"
          format: int32
          type: integer
        couponOfferCode:
          $ref: "#/components/schemas/couponOfferCode"
        currentContractId:
          description: Your current contract id
          example: dce56457-aa23-478d-8d76-b56eb9be799f
          format: guid
          type: string
        currentContractTerminationDate:
          description: The current contract termination date
          example: 2017-06-02
          format: date
          type: string
        currentCustomerPaymentMethod:
          $ref: "#/components/schemas/paymentMethod"
        fixedAndVariableClickInfo:
          $ref: "#/components/schemas/fixedAndVariableClickModelInfo"
        isCustomerWantsToTerminateHisContract:
          description: If true, this means you want to leave us and that's sad... :'-(
          example: "false"
          type: boolean
        isModelMustBeTransmittedInNewContract:
          description: "Internal usage: Old offer type. Is the current contract model needs to be converted into a new contract type"
          example: "false"
          type: boolean
        minBillingPeriodInMonths:
          description: The minimum billing period in month authorized for this offer.
          example: "1"
          format: int32
          type: integer
        model:
          description: "Interal usage: Old offer type. The model description"
          example: BLABLA
          type: string
        newContractStartDate:
          description: The start date related to the offer
          example: 2017-05-01T13:02:24
          format: date-time
          type: string
        offerId:
          $ref: "#/components/schemas/offerId"
        offerName:
          description: The offer Name
          example: Premium
          type: string
        paymentDelayInDays:
          description: The payment delay in days related to the offer
          example: "1"
          format: int32
          type: integer
        paymentMethodAuthorized:
          $ref: "#/components/schemas/paymentMethod"
        requestedPaymentMethod:
          $ref: "#/components/schemas/paymentMethod"
        trialPeriodFinishDate:
          description: The trial period end date related to the offer
          format: date
          type: string
        trialPeriodInMonth:
          description: The trial period in month related to the offer
          example: "0"
          format: int32
          type: integer
        variableModelInfo:
          $ref: "#/components/schemas/variableModelInfo"
      type: object
    contractDiscountInfo:
      description: Describe the discount information related to the offer.
      properties:
        amountCodePromoDiscount:
          description: The discount amount
          example: "101.42"
          format: double
          type: number
        amountCodePromoDiscountPerMonth:
          description: The amount discounted per month
          example: "101.42"
          format: double
          type: number
        couponDiscountCode:
          description: The discount code
          example: I-LOVE-BEEZUP
          type: string
        couponDiscountId:
          description: "Internal use: The discount id"
          example: "1"
          format: int32
          type: integer
        customerHasActualDiscount:
          description: Do you have currently a discount on your contract ?
          example: "true"
          type: boolean
        discountDurationInMonth:
          description: Duration of the discount in month
          example: "1"
          format: int32
          type: integer
        isCouponDiscountLinkedToCouponOffer:
          description: Is this discount is related to a coupon offer
          example: "true"
          type: boolean
        percentDiscount:
          description: Percentage of the discount
          example: "20.0"
          format: double
          type: number
        promotionalCodeValidity:
          $ref: "#/components/schemas/promotionalCodeValidity"
      type: object
    contractId:
      description: Your contract identifier
      example: 7098487a-86f6-4322-b8a5-b67f7363b3e7
      format: guid
      type: string
    contractInfo:
      description: Describe the conditions of a contract
      properties:
        additionalClickPrice:
          description: Additional click price
          format: double
          type: number
        billingPeriodInMonth:
          description: The billing period in month
          format: int32
          type: integer
        billingPeriodPercentDiscount:
          description: The percent discount related to the billing period
          format: double
          type: number
        clickIncluded:
          description: The click included
          format: int32
          type: integer
        commitmentCalculatedFinishUtcDate:
          description: The calculated end date of commitment
          format: date-time
          type: string
        commitmentPeriodInMonth:
          description: The commitment period in month
          format: int32
          type: integer
        contractId:
          $ref: "#/components/schemas/contractId"
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        discountDurationInMonth:
          description: The discount duration in month
          format: int32
          type: integer
        discountEndUtcDate:
          description: The end of your discount
          format: date-time
          type: string
        fixedAndVariableClickInfo:
          $ref: "#/components/schemas/fixedAndVariableClickModelInfo"
        fixedPrice:
          description: The fixed price of your contract
          format: double
          type: number
        ipUserCreation:
          description: The IP of the user who creates the contract
          type: string
        ipUserModification:
          description: The IP of the user who modified the contract
          type: string
        isCommitmentRenewalAutomatically:
          description: Is commitment is automatically renewed
          type: boolean
        isModifiableContract:
          description: Is the contract is modifiable ?
          type: boolean
        offerId:
          $ref: "#/components/schemas/offerId"
        offerName:
          description: The offer name based on /offers
          type: string
        percentDiscount:
          description: The percent of the discount
          format: double
          type: number
        startUtcDate:
          description: The start date of your contract
          format: date-time
          type: string
        storeCount:
          $ref: "#/components/schemas/storeCount"
        trialPeriodInMonth:
          description: The trial period in month
          format: int32
          type: integer
        variableModelInfo:
          $ref: "#/components/schemas/variableModelInfo"
      type: object
    contractMoneyInfo:
      description: Describe the pricing information related to the offer.
      properties:
        amountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount:
          description: The amount excluding taxes and excluding code promo discount including billing period discount.
          format: double
          type: number
        amountExcludingTaxesAndExcludingDiscounts:
          description: The amount excluding taxes and excluding discounts.
          format: double
          type: number
        amountExcludingTaxesIncludingDiscounts:
          description: The amount excluding taxes including discounts.
          format: double
          type: number
        amountExcludingTaxesIncludingDiscountsPerMonth:
          description: The amount excluding taxes including discounts per month.
          format: double
          type: number
        amountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount:
          description: The amount including taxes excluding discount including billing period discount.
          format: double
          type: number
        amountIncludingTaxesIncludingDiscounts:
          description: The amount including taxes including discounts.
          format: double
          type: number
        amountTaxesExcludingDiscountIncludingBillingPeriodDiscount:
          description: The taxes excluding discount including billing period discount.
          format: double
          type: number
        amountTaxesIncludingDiscounts:
          description: Taxes including discounts.
          format: double
          type: number
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        initialOfferFixedPrice:
          description: The initial offer fixed price.
          format: double
          type: number
        vatPercent:
          description: The VAT percent.
          format: double
          type: number
      type: object
    contractStoreInfo:
      description: Describe the store information related to the offer.
      properties:
        additionalStorePrice:
          description: The additional store price.
          format: double
          type: number
        maxStoreCount:
          description: The maximum store count related to the offer.
          format: int32
          type: integer
        minStoreCount:
          description: The minimum store count related to the offer.
          format: int32
          type: integer
        ownedStoreCount:
          description: The owned store count.
          format: int32
          type: integer
        storeCount:
          $ref: "#/components/schemas/storeCount"
        storeIncluded:
          description: The store count included in the offer.
          format: int32
          type: integer
      type: object
    contractTerminationReason:
      description: The termination reason, if your current contract is scheduled to be terminated.
      example: I'm crazy, I want to leave your splendid service...
      type: string
    contractTerminationReasonType:
      description: The contract termination reason type identifier, if your current contract is scheduled to be terminated. The value is based on the list of values /user/lov/ContractTerminationReason
      example: "1"
      format: int32
      type: integer
      x-lov: ContractTerminationReason
    contracts:
      properties:
        current:
          $ref: "#/components/schemas/currentContractInfo"
        links:
          $ref: "#/components/schemas/contractsLinks"
        next:
          $ref: "#/components/schemas/nextContractInfo"
      required:
        - links
      type: object
    contractsLinks:
      properties:
        create:
          $ref: "#/components/schemas/links.createContractLink"
        self:
          $ref: "#/components/schemas/links.getContractsLink"
      type: object
    copyOptimisationRequest:
      description: Copy the optimisation between 2 channels
      properties:
        channelIdSource:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        channelIdTarget:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        keepExistingOptimisation:
          description: If true the existing optimisation will be kept
          example: "false"
          type: boolean
      required:
        - channelIdSource
        - channelIdTarget
        - keepExistingOptimisation
      type: object
    copyOptimisationResponse:
      description: Products optimisatisation copied
      properties:
        catalogProductCount:
          description: The catalog product count
          example: "101"
          type: integer
        channel:
          $ref: "#/components/schemas/BeezUP.Common.ChannelBasicInfo"
        enabledProductCount:
          description: The enabled product count
          example: "101"
          type: integer
      required:
        - channel
        - catalogProductCount
        - enabledProductCount
      type: object
    costSettings:
      description: |
        If this property is not indicated please force the user to configure the cost settings.
        Defines the cost type you have on this channel with the cost value.
      properties:
        costType:
          $ref: "#/components/schemas/costType"
        globalCostValue:
          description: In case of global cost type, you have to indicate the cost value.
          example: "10.21"
          format: decimal
          type: number
      required:
        - costType
      type: object
    costStatus:
      enum:
        - required
        - optional
        - notConfigurable
      example: required
      type: string
    costType:
      description: |
        CPC means cost per click.
        CPA means cost per action.
        You can have CPC/CPA with a global cost value.
        You can have CPC/CPA by category the cost value MUST be null
        You can have global fixed price.
      enum:
        - CPC_Global
        - CPA_Global
        - CPC_ByCategory
        - CPA_ByCategory
        - Fixed_Global
      example: Fixed_Global
      type: string
    couponDiscountCode:
      description: The coupon discount code
      example: I-LOVE-BEEZUP
      type: string
    couponOfferCode:
      description: Your special coupon offer identifier
      example: 04efc310-bc25-4710-a83a-faf200284fe5
      format: guid
      type: string
    createContract:
      allOf:
        - $ref: "#/components/schemas/offerRequest"
    createContractResponse:
      properties:
        info:
          $ref: "#/components/schemas/BeezUP.Common.InfoSummaries"
        links:
          $ref: "#/components/schemas/createContractResponseLinks"
      type: object
    createContractResponseLinks:
      properties:
        contracts:
          $ref: "#/components/schemas/links.getContractsLink"
        self:
          $ref: "#/components/schemas/links.createContractLink"
      type: object
    createCustomColumnRequest:
      description: The request message to create a custom column
      properties:
        displayGroupName:
          $ref: "#/components/schemas/displayGroupName"
        encryptedBlocklyExpression:
          $ref: "#/components/schemas/encryptedBlocklyExpression"
        encryptedExpression:
          $ref: "#/components/schemas/encryptedExpression"
        userColumnName:
          $ref: "#/components/schemas/userColumName"
      required:
        - userColumnName
        - encryptedExpression
        - encryptedBlocklyExpression
        - displayGroupName
      type: object
    createRuleRequest:
      properties:
        endUtcDate:
          description: The end validity utc date of the rule
          example: 2017-09-30T10:42:40.001Z
          format: date-time
          type: string
        optimisationActionName:
          $ref: "#/components/schemas/optimisationActionName"
        reportFilterId:
          description: The report filter to use for the rule
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
          format: guid
          type: string
        ruleName:
          description: The name of the rule
          example: My rule
          type: string
        startUtcDate:
          description: The start validity utc date of the rule
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
        - optimisationActionName
        - ruleName
        - reportFilterId
      type: object
    createStoreRequest:
      description: The request to create a store. The store identifier is optional, if null it will be automatically computed.
      properties:
        countryIsoCodeAlpha3:
          $ref: "#/components/schemas/storeCountryIsoCodeAlpha3"
        id:
          $ref: "#/components/schemas/BeezUP.Common.StoreId"
        name:
          $ref: "#/components/schemas/storeName"
        sectors:
          $ref: "#/components/schemas/storeSectors"
        url:
          $ref: "#/components/schemas/storeUrl"
      required:
        - name
        - url
        - countryIsoCodeAlpha3
        - sectors
      type: object
    createSubscriptionRequest:
      properties:
        merchantApplicationName:
          $ref: "#/components/schemas/subscriptionMerchantApplicationName"
        merchantApplicationVersion:
          $ref: "#/components/schemas/subscriptionMerchantApplicationVersion"
        merchantEmailAlert:
          $ref: "#/components/schemas/email"
        name:
          $ref: "#/components/schemas/subscriptionName"
        targetUrl:
          $ref: "#/components/schemas/httpUrl"
      required:
        - targetUrl
        - name
        - merchantApplicationName
        - merchantApplicationVersion
      type: object
      x-format: Message
    credential:
      description: Provides the credentials
      properties:
        password:
          description: The password
          example: MyPassword
          format: password
          type: string
        userName:
          description: The user name
          example: MyLogin
          type: string
      required:
        - userName
      type: object
    creditCardInfo:
      properties:
        cardNumber:
          $ref: "#/components/schemas/cardNumber"
        cardVerificationCode:
          $ref: "#/components/schemas/cardVerificationCode"
        expirationMonth:
          $ref: "#/components/schemas/expirationMonth"
        expirationYear:
          $ref: "#/components/schemas/expirationYear"
      required:
        - cardNumber
        - cardVerificationCode
        - expirationMonth
        - expirationYear
      type: object
    creditCardInfoResponse:
      properties:
        creditCardInfo:
          $ref: "#/components/schemas/creditCardInfoWithCardType"
        currentPaymentMethod:
          $ref: "#/components/schemas/paymentMethod"
        info:
          $ref: "#/components/schemas/BeezUP.Common.InfoSummaries"
        links:
          $ref: "#/components/schemas/creditCardInfoResponseLinks"
      required:
        - links
        - currentPaymentMethod
      type: object
    creditCardInfoResponseLinks:
      description: The different actions you can make on this offer
      properties:
        saveCreditCardInfo:
          $ref: "#/components/schemas/links.saveCreditCardInfoLink"
        self:
          $ref: "#/components/schemas/links.getCreditCardInfoLink"
      required:
        - self
        - saveCreditCardInfo
      type: object
    creditCardInfoWithCardType:
      properties:
        cardNumber:
          $ref: "#/components/schemas/cardNumber"
        cardType:
          description: "Your credit card type. Example: VISA, MasterCard, etc..."
          example: VISA
          type: string
        expirationMonth:
          $ref: "#/components/schemas/expirationMonth"
        expirationYear:
          $ref: "#/components/schemas/expirationYear"
      required:
        - cardNumber
        - expirationMonth
        - expirationYear
        - cardType
    csvSeparator:
      default: ;
      description: Indicate the separator of the values in the CSV file. Generally ";"
      example: ;
      type: string
    cultureName:
      description: If the error is translated, the culture name will be indicated
      example: en
      type: string
      x-exclude: true
      x-lov: Go2CultureName
    currencyCode:
      description: |
        The currency code <a href="https://en.wikipedia.org/wiki/ISO_4217">(ISO 4217)</a>
      example: EUR
      pattern: ^[A-Z]{3}$
      type: string
      x-exclude: true
      x-pattern: ^[A-Z]{3}$
    currentContractInfo:
      allOf:
        - $ref: "#/components/schemas/contractInfo"
        - description: Get the conditions of your current contract
          properties:
            links:
              $ref: "#/components/schemas/currentContractInfoLinks"
          required:
            - links
          type: object
    currentContractInfoLinks:
      properties:
        disable:
          $ref: "#/components/schemas/links.terminateCurrentContractLink"
        reenable:
          $ref: "#/components/schemas/links.reactivateCurrentContractLink"
      type: object
    customColumn:
      description: The custom column configuration
      properties:
        catalogColumnDependencies:
          items:
            $ref: "#/components/schemas/catalogColumnName"
          type: array
        configuration:
          $ref: "#/components/schemas/columnConfiguration"
        id:
          $ref: "#/components/schemas/columnId"
        links:
          $ref: "#/components/schemas/customColumnLinks"
        userColumName:
          $ref: "#/components/schemas/userColumName"
      required:
        - id
        - userColumName
        - configuration
        - links
      type: object
    customColumnLinks:
      properties:
        delete:
          $ref: "#/components/schemas/links.Catalog_DeleteCustomColumnLink"
        expression:
          $ref: "#/components/schemas/links.Catalog_GetCustomColumnExpressionLink"
        rename:
          $ref: "#/components/schemas/links.Catalog_ChangeCustomColumnUserNameLink"
        save:
          $ref: "#/components/schemas/links.Catalog_SaveCustomColumnLink"
        saveExpression:
          $ref: "#/components/schemas/links.Catalog_ChangeCustomColumnExpressionLink"
      required:
        - save
        - delete
        - rename
        - expression
        - saveExpression
      type: object
    customColumnList:
      properties:
        customColumns:
          items:
            $ref: "#/components/schemas/customColumn"
          type: array
        links:
          $ref: "#/components/schemas/customColumnListLinks"
      required:
        - links
        - customColumns
      type: object
    customColumnListLinks:
      properties:
        add:
          $ref: "#/components/schemas/links.Catalog_SaveCustomColumnLink"
        self:
          $ref: "#/components/schemas/links.Catalog_GetCustomColumnsLink"
      required:
        - self
      type: object
    customerIndex:
      description: The index of the customer API
      properties:
        links:
          $ref: "#/components/schemas/customerIndexLinks"
        lovLinks:
          $ref: "#/components/schemas/customerIndexLovLinks"
      required:
        - links
        - lovLinks
      type: object
    customerIndexLinks:
      description: Gives you want you can do on this API
      properties:
        accountInfo:
          $ref: "#/components/schemas/links.getUserAccountInfoLink"
        billingPeriods:
          $ref: "#/components/schemas/links.getBillingPeriodsLink"
        contracts:
          $ref: "#/components/schemas/links.getContractsLink"
        friendInfo:
          $ref: "#/components/schemas/links.getFriendInfoLink"
        getOffer:
          $ref: "#/components/schemas/links.getOfferLink"
        invoices:
          $ref: "#/components/schemas/links.getInvoicesLink"
        logout:
          $ref: "#/components/schemas/links.logoutLink"
        self:
          $ref: "#/components/schemas/links.GetCustomerIndexLink"
        standardOffers:
          $ref: "#/components/schemas/links.getStandardOffersLink"
        stores:
          $ref: "#/components/schemas/links.getStoresLink"
      required:
        - self
        - accountInfo
        - billingPeriods
        - standardOffers
        - friendInfo
      type: object
    customerIndexLovLinks:
      properties:
        activeOfferLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        beezUPTimeZoneLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        contractTerminationReasonLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        countryLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        customerStatusLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        invoicePaymentStatusLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        offerLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        storeCountryLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        storeSectorLov:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
      type: object
    dateSearchType:
      default: Modification
      description: Indicates on which date you want to make the filter
      enum:
        - Modification
        - Purchase
        - MarketPlaceModification
      type: string
    detectedCatalogColumn:
      allOf:
        - $ref: "#/components/schemas/catalogColumn"
        - description: The catalog column detected during the first parsing step
          properties:
            links:
              $ref: "#/components/schemas/detectedCatalogColumnLinks"
          required:
            - id
            - catalogColumnName
            - links
          type: object
    detectedCatalogColumnLinks:
      properties:
        configure:
          $ref: "#/components/schemas/links.Importation_ConfigureCatalogColumnLink"
        ignore:
          $ref: "#/components/schemas/links.Importation_IgnoreColumnLink"
        map:
          $ref: "#/components/schemas/links.Importation_MapCatalogColumnLink"
        reattend:
          $ref: "#/components/schemas/links.Importation_ReattendColumnLink"
        unmap:
          $ref: "#/components/schemas/links.Importation_UnmapCatalogColumnLink"
      type: object
    detectedCatalogColumnList:
      description: The list of detected catalog column
      properties:
        detectedCatalogColumns:
          description: Contains all deteted catalog columns
          items:
            $ref: "#/components/schemas/detectedCatalogColumn"
          type: array
        links:
          $ref: "#/components/schemas/detectedCatalogColumnListLinks"
      required:
        - links
      type: object
    detectedCatalogColumnListLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.Importation_GetDetectedCatalogColumnsLink"
      required:
        - self
      type: object
    displayGroupName:
      description: Indicate the display group name where the column must be putted
      example: Category
      type: string
    docUrl:
      description: The documentation related to this operation.
      example: https://api-docs.imn.io/#operation/EnableChannelCatalog
      format: uri
      type: string
      x-exclude: true
    downloadCatalogStrategy:
      description: Indicate the download strategy (simple uri, ftps, ftplatest file, etc...)
      enum:
        - SimpleUri
        - FtpLatest
        - Sftp
        - SftpLatest
        - Ftps
        - FtpsLatest
        - Local
      example: SimpleUri
      type: string
    duplicateProductValueConfiguration:
      description: Describe how you want to manage the duplication of the product value
      properties:
        compareOptions:
          $ref: "#/components/schemas/compareOptions"
        strategy:
          $ref: "#/components/schemas/duplicateProductValueStrategy"
      required:
        - strategy
        - compareOptions
      type: object
    duplicateProductValueStrategy:
      default: None
      description: Indicate the duplicate product sku strategy.
      enum:
        - None
        - SkipAllDuplicateProducts
        - KeepFirstDuplicateProductOnly
        - FailImportationIfAnyDuplicateProduct
      example: KeepFirstDuplicateProductOnly
      type: string
    email:
      description: The email
      example: paulsimon@mysupercompany.com
      format: email
      pattern: ^(.+)@(.+)$
      type: string
      x-exclude: true
      x-pattern: ^(.+)@(.+)$
    encryptedBlocklyExpression:
      description: The encrypted XML Blockly representation of the expression
      example: apokpoa,opz,sixsoisiosnoisn
      type: string
    encryptedExpression:
      description: The encrypted excel expression of the column
      example: uziushdczaniodnndonisodndsiondsoidsndoin
      type: string
    errorCode:
      description: Error Code
      type: string
    errorResponseMessage:
      properties:
        errors:
          items:
            $ref: "#/components/schemas/userErrorMessage"
          type: array
          uniqueItems: false
      required:
        - errors
      type: object
      x-exclude: true
    errorResponseMessagePaymentRequired:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.ErrorResponseMessage"
        - properties:
            links:
              $ref: "#/components/schemas/errorResponseMessagePaymentRequiredLinks"
          required:
            - errors
            - links
          type: object
    errorResponseMessagePaymentRequiredLinks:
      properties:
        offer:
          $ref: "#/components/schemas/links.getOfferLink"
      required:
        - offer
      type: object
    errorSummary:
      properties:
        errorArguments:
          additionalProperties:
            type: string
          type: object
        errorCode:
          type: string
        errorGuid:
          format: uuid
          type: string
        errorMessage:
          type: string
        exceptionDetail:
          $ref: "#/components/schemas/exceptionDetail"
        objectName:
          type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        source:
          type: string
        technicalErrorMessage:
          type: string
        utcDate:
          format: date-time
          type: string
      type: object
    etag:
      description: |
        ETag value to identify the order.\
        This information is required for the operation GetOrder and ChangeOrder.\
        For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
      example: '"ca071a4580129f932a03971968ffef69"'
      type: string
    exceptionDetail:
      properties:
        helpLink:
          type: string
        message:
          type: string
        stackTrace:
          type: string
        type:
          type: string
      type: object
    exchangedMessagesItem:
      properties:
        operationName:
          type: string
        requestUri:
          format: uri
          type: string
        requestUtcDate:
          format: date-time
          type: string
        responseUri:
          format: uri
          type: string
        responseUtcDate:
          format: date-time
          type: string
      required:
        - operationName
      type: object
    exclusionFilter:
      description: The exclusion filter
      properties:
        channelColumnId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelColumnId"
        enabled:
          description: indicates if the filter is currently enable.
          example: "true"
          type: boolean
        groupId:
          description: Indicate the filter's group. All filters in the same group means an "AND" operation in the filter group
          example: d9833f4b-718a-436f-bab5-89da3d21bf60
          format: guid
          type: string
        name:
          $ref: "#/components/schemas/exclusionFilterName"
        operatorName:
          $ref: "#/components/schemas/filterOperatorName"
        position:
          description: The position of the exclusion filter
          example: "1"
          format: int32
          minimum: 1
          type: integer
        positionInGroup:
          description: Indicate the filter group position. This information is used for the UI purpose and must be unique in the filter group.
          example: "1"
          format: int32
          minimum: 1
          type: integer
        value:
          description: The value indicate by the user when the filter operation requires it.
          example: sony
          maxLength: 4000
          type: string
      required:
        - name
        - position
        - groupId
        - positionInGroup
        - channelColumnId
        - operatorName
        - enabled
      type: object
    exclusionFilterName:
      description: The exclusion filter name
      example: Exclude sony products
      type: string
    exclusionFilters:
      description: The exclusion filter list
      items:
        $ref: "#/components/schemas/exclusionFilter"
      type: array
    exclusionFiltersResponse:
      properties:
        exclusionFilters:
          $ref: "#/components/schemas/exclusionFilters"
        links:
          $ref: "#/components/schemas/exclusionFiltersResponseLinks"
      required:
        - links
      type: object
    exclusionFiltersResponseLinks:
      properties:
        configure:
          $ref: "#/components/schemas/links.ConfigureChannelCatalogExclusionFiltersLink"
        self:
          $ref: "#/components/schemas/links.GetChannelCatalogExclusionFiltersLink"
      required:
        - self
      type: object
    executionId:
      description: The execution identifier of the catalog importation
      example: bf3bc288-604c-4267-925e-66b1a15dca75
      format: guid
      type: string
    executionUUID:
      description: The execution identifier
      example: 8D4176FA78D5A7Fffa91e9edc694ec5858be9a1b109507c
      format: uuid
      type: string
    expirationMonth:
      description: Expiration Month
      example: "12"
      format: int32
      maximum: 12
      minimum: 1
      type: integer
    expirationYear:
      description: Expiration Year
      example: "2017"
      format: int32
      maximum: 9000
      minimum: 2017
      type: integer
    exportOrderListFormat:
      default: csv
      description: The type of the file to export
      enum:
        - csv
      example: csv
      type: string
    exportOrderListRequest:
      description: The message request to export order list. The store identifier is requested to regroup the exportations.
      properties:
        format:
          $ref: "#/components/schemas/exportOrderListFormat"
        orderListRequestWithoutPagination:
          $ref: "#/components/schemas/orderListRequestWithoutPagination"
        storeId:
          $ref: "#/components/schemas/BeezUP.Common.StoreId"
      required:
        - storeId
        - orderListRequestWithoutPagination
      type: object
    externalLinks.Catalog_GetBeezUPColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/beezUPColumns
            method: GET
    externalLinks.GetChannelCatalogMarketplaceSettingsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/channelcatatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings
            method: GET
    externalLinks.GetChannelInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channels/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    externalLinks.GetExternalConfigurationPageLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
    feedType:
      description: The Feed Type
      enum:
        - Products
        - Inventory
        - Pricing
        - Images
        - Relationships
        - Unpublish
        - Offers
      example: Offers
      type: string
      x-lov: MarketplacePublicationFeedType
    fileFormatStrategy:
      description: CSV or XML
      enum:
        - Unknown
        - Csv
        - Xml
        - Json
      example: Csv
      type: string
    filterOperator:
      description: The filter operator
      properties:
        expectedChannelColumnDataType:
          $ref: "#/components/schemas/filterOperatorDataType"
        expectedValueDataType:
          $ref: "#/components/schemas/filterOperatorDataType"
        name:
          $ref: "#/components/schemas/filterOperatorName"
        valueRequired:
          description: This operator requires a value
          example: "true"
          type: boolean
      type: object
    filterOperatorDataType:
      default: string
      description: Data type of the operator
      enum:
        - string
        - number
      example: string
      type: string
    filterOperatorName:
      description: The exclusion filter operator name
      example: Contains
      type: string
      x-lov: ProductColumnFilterOperatorName
    firstName:
      description: Your first name
      example: Paul
      type: string
    fixedAndVariableClickModelInfo:
      description: "Internal usage: Old offer type. Describe the fix and variable model information"
      properties:
        clickIncludedAndAdditionalClickPrices:
          items:
            $ref: "#/components/schemas/clickIncludedAndAdditionalClickPrice"
          type: array
      required:
        - clickIncludedAndAdditionalClickPrices
      type: object
    footerContentHtml:
      description: Footer Content HTML
      maxLength: 1000
      type: string
      x-minValueLength: "0"
    friendCountryIsoCodeAlpha3:
      description: Your friend's user country iso code alpha 3
      example: USA
      type: string
      x-lov: Country
    friendEmail:
      description: Your friend's user email
      example: humphray.bogart@yahoo.ma
      format: email
      pattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
      type: string
    friendProfilePictureUrl:
      description: Your friend's user profile picture url
      example: https://www.biography.com/.image/c_fill,cs_srgb,dpr_1.0,g_face,h_300,q_80,w_300/MTE4MDAzNDEwNDU3MjMyOTEw/humphrey-bogart-9217486-1-402.jpg
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
    functionality:
      properties:
        code:
          description: The functionality code
          example: MARKETMANA
          type: string
        order:
          description: "UI purpose: Indicate the position of the functionality"
          example: "1"
          format: int32
          type: integer
      required:
        - code
        - order
      type: object
    functionalityRightInfo:
      description: Describe the rights for a functionality
      properties:
        functionalityCode:
          description: The functionality code
          example: COMPAMANA
          type: string
        maxValueInterger:
          description: The max value for this functionality code considering your rights
          example: "10"
          type: integer
        unlimited:
          description: If you can use this functionality unlimitedly
          example: "true"
          type: boolean
      required:
        - functionalityCode
      type: object
    generalSettings:
      description: Represents the general settings of your channel catalog
      properties:
        acceptToPublishInfo:
          description: If true then you authorize disclosure of my statistics generated from clicks and sales
          example: "true"
          type: boolean
        activeBeezUPTracking:
          default: "true"
          description: Activate BeezUP tracking for my statistics (checked by default)
          example: "true"
          type: boolean
        doNotExportOutOfStockProducts:
          description: |
            Do not export "out of stock" products. Note: this option is not taken into account by the counter.
          example: "true"
          type: boolean
      required:
        - acceptToPublishInfo
        - doNotExportOutOfStockProducts
        - activeBeezUPTracking
      type: object
    generateOrderInvoiceRequest:
      properties:
        invoiceSequenceNumber:
          $ref: "#/components/schemas/invoiceSequenceNumber"
      type: object
    getChannelCatalogProductInfoListRequest:
      properties:
        catalogCategoryFilter:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryFilter"
        channelCategoryFilter:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCategoryFilter"
        criteria:
          $ref: "#/components/schemas/productSetVisibilityCriteria"
        overridden:
          description: Search overridden products. If null the filter will not be taken in account.
          example: "true"
          type: boolean
        pageNumber:
          example: "1"
          format: int32
          minimum: 1
          type: integer
        pageSize:
          example: "100"
          format: int32
          minimum: 100
          type: integer
        productFilters:
          $ref: "#/components/schemas/channelCatalogProductFilters"
      required:
        - pageNumber
        - pageSize
        - criteria
      type: object
    getImportationProductsReportRequest:
      description: Get Importation Products Report Request
      properties:
        ean:
          description: Filter by EAN (equals)
          type: string
        errorCodes:
          $ref: "#/components/schemas/getImportationProductsReportRequestErrorCodes"
        mpn:
          description: Filter by MPN (equals)
          type: string
        pageNumber:
          $ref: "#/components/schemas/BeezUP.Common.PageNumber"
        pageSize:
          $ref: "#/components/schemas/BeezUP.Common.PageSize"
        sku:
          description: Filter by Sku (equals)
          type: string
        title:
          description: Filter by Title (StartsWith)
          type: string
      required:
        - pageNumber
        - pageSize
      type: object
    getImportationProductsReportRequestErrorCode:
      description: Get Importation Products Report Request Error Codes
      properties:
        errorCode:
          $ref: "#/components/schemas/errorCode"
        userColumnName:
          $ref: "#/components/schemas/userColumName"
      type: object
    getImportationProductsReportRequestErrorCodes:
      description: Get Importation Products Report Request Error Codes
      items:
        $ref: "#/components/schemas/getImportationProductsReportRequestErrorCode"
      type: array
    getImportationProductsReportResponse:
      description: Get Importation Products Report Response
      properties:
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
        productErrors:
          $ref: "#/components/schemas/productErrors"
      required:
        - paginationResult
    getImportationReportResponse:
      description: Get Importation Report Response
      properties:
        categories:
          $ref: "#/components/schemas/getImportationReportResponseDiff"
        columns:
          $ref: "#/components/schemas/getImportationReportResponseDiff"
        errors:
          $ref: "#/components/schemas/getImportationReportResponseErrors"
        executionId:
          $ref: "#/components/schemas/executionId"
        importationInfo:
          $ref: "#/components/schemas/getImportationReportResponseImportationInfo"
        productMetrics:
          $ref: "#/components/schemas/getImportationReportResponseProductMetrics"
        products:
          $ref: "#/components/schemas/getImportationReportResponseDiff"
      required:
        - executionId
        - importationInfo
        - errors
      type: object
    getImportationReportResponseDiff:
      properties:
        createdCount:
          type: integer
        deletedCount:
          type: integer
        unchangedCount:
          type: integer
        updatedCount:
          type: integer
      required:
        - createdCount
        - updatedCount
        - deletedCount
      type: object
    getImportationReportResponseError:
      properties:
        beezUPColumnName:
          $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
        errorCode:
          $ref: "#/components/schemas/errorCode"
        productCount:
          type: integer
        userColumName:
          $ref: "#/components/schemas/userColumName"
      required:
        - errorCode
        - userColumName
        - productCount
      type: object
    getImportationReportResponseErrors:
      items:
        $ref: "#/components/schemas/getImportationReportResponseError"
      type: array
    getImportationReportResponseImportationInfo:
      properties:
        beginUtcDate:
          description: The start date of the importation
          example: 2017-04-01T13:01:01Z
          format: date-time
          type: string
        endUtcDate:
          description: The start date of the importation
          example: 2017-04-01T13:01:01Z
          format: date-time
          type: string
        inputConfiguration:
          $ref: "#/components/schemas/inputFileConfiguration"
        userId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
      required:
        - beginUtcDate
        - endUtcDate
        - userId
        - inputConfiguration
      type: object
    getImportationReportResponseProductMetrics:
      properties:
        activeCount:
          type: integer
        detectedCount:
          type: integer
        duplicatedCount:
          type: integer
        failedCount:
          type: integer
      required:
        - detectedCount
        - duplicatedCount
        - failedCount
        - activeCount
      type: object
    getOrderInvoiceDesignPreviewResponse:
      properties:
        invoiceHtmlContent:
          $ref: "#/components/schemas/invoiceContentHtml"
      required:
        - invoiceHtmlContent
      type: object
    getOrderInvoiceGeneralSettingsResponse:
      allOf:
        - $ref: "#/components/schemas/orderInvoiceGeneralSettings"
        - properties:
            lastInvoiceSequenceNumber:
              $ref: "#/components/schemas/invoiceSequenceNumber"
          type: object
    getOrderInvoicePdfFromHtmlInvoiceUrlRequest:
      properties:
        orderInvoiceUri:
          $ref: "#/components/schemas/orderInvoiceUri"
      required:
        - orderInvoiceUri
      type: object
    getProductsRequest:
      description: The request message to get products based on these filters
      properties:
        categoryPath:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryPath"
        columnIdList:
          items:
            $ref: "#/components/schemas/BeezUP.Common.CatalogColumnId"
          maxItems: 5
          minItems: 1
          type: array
        ean:
          description: Search for product by ean
          example: MySku123
          type: string
        exists:
          description: Search for existing products or not. If null you will received both.
          example: "true"
          type: boolean
        mpn:
          description: Search for product by mpn
          example: MySku123
          type: string
        orderByCatalogColumnId:
          $ref: "#/components/schemas/BeezUP.Common.CatalogColumnId"
        pageNumber:
          $ref: "#/components/schemas/BeezUP.Common.PageNumber"
        pageSize:
          $ref: "#/components/schemas/BeezUP.Common.PageSize"
        productIdList:
          description: Filter with a list of product identifier
          items:
            $ref: "#/components/schemas/BeezUP.Common.ProductId"
          type: array
        sku:
          description: Search for product by sku
          example: MySku123
          type: string
        title:
          description: Search for products containing this title
          example: Frigo
          type: string
        withoutSubCategories:
          description: Do not retrieve sub categories. By default, this value is set to false
          example: "false"
          type: boolean
      required:
        - pageNumber
        - pageSize
      type: object
    gravatarProfilePictureUrl:
      description: Indicate the url of your picture profil based on gravatar
      example: https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?d=mm
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
    harvestOrderReporting:
      description: The reporting related to a harvest order operation
      properties:
        beezUPForcedStatus:
          description: The marketplace order status forced by BeezUP during the order change oepration. This could happend when there is no status on the marketplace side.
          example: In_progress_3
          type: string
        beezUPStatus:
          $ref: "#/components/schemas/beezUPOrderStatus"
        creationUtcDate:
          description: The creation UTC date of the execution
          example: 2017-04-01T13:10:03Z
          format: date-time
          type: string
        errorMessage:
          description: The warning message during the execution
          example: This is an error message
          type: string
        executionUUID:
          $ref: "#/components/schemas/executionUUID"
        lastUpdateUtcDate:
          description: The last update UTC date of the execution
          example: 2017-04-01T13:10:05Z
          format: date-time
          type: string
        marketplaceStatus:
          description: The order marketplace status
          example: In_progress_3
          type: string
        processingStatus:
          description: The processing status of the execution
          example: Done
          type: string
        warningMessage:
          description: The warning message during the execution
          example: This is a warning
          type: string
      type: object
    headerContentHtml:
      description: Header Content HTML
      maxLength: 1000
      type: string
      x-minValueLength: "0"
    href:
      description: Indicate the relative uri for this link
      example: /merchant/orders/v1/{marketplaceCode}/{IMNOrderId}
      type: string
      x-exclude: true
    httpMethod:
      default: GET
      description: Indicate the http method to use on this link
      enum:
        - GET
        - POST
        - PATCH
        - DELETE
        - PUT
        - HEAD
      example: GET
      type: string
      x-exclude: true
    httpUrl:
      description: The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
      example: http://www.mydomain.com
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      x-exclude: true
      x-pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
    importAlreadyInProgressResponse:
      properties:
        errors:
          description: The error message list
          items:
            $ref: "#/components/schemas/BeezUP.Common.UserErrorMessage"
          type: array
        links:
          $ref: "#/components/schemas/importAlreadyInProgressResponseLinks"
      required:
        - errors
        - links
      type: object
    importAlreadyInProgressResponseLinks:
      description: The action links
      properties:
        cancelCurrentImportation:
          $ref: "#/components/schemas/links.Importation_CancelLink"
        currentImportation:
          $ref: "#/components/schemas/links.Importation_GetImportationMonitoringLink"
      required:
        - currentImportation
        - cancelCurrentImportation
      type: object
    importationCustomColumn:
      description: The custom column configuration
      properties:
        configuration:
          $ref: "#/components/schemas/columnConfiguration"
        id:
          $ref: "#/components/schemas/columnId"
        links:
          $ref: "#/components/schemas/importationCustomColumnLinks"
        userColumName:
          $ref: "#/components/schemas/userColumName"
      required:
        - id
        - userColumName
        - configuration
        - links
      type: object
    importationCustomColumnLinks:
      properties:
        delete:
          $ref: "#/components/schemas/links.Catalog_DeleteCustomColumnLink"
        expression:
          $ref: "#/components/schemas/links.Catalog_GetCustomColumnExpressionLink"
        map:
          $ref: "#/components/schemas/links.Importation_MapCustomColumnLink"
        productSampleValue:
          $ref: "#/components/schemas/links.Importation_GetProductSampleCustomColumnValueLink"
        save:
          $ref: "#/components/schemas/links.Importation_SaveCustomColumnLink"
        unmap:
          $ref: "#/components/schemas/links.Importation_UnmapCustomColumnLink"
      required:
        - save
        - delete
        - expression
      type: object
    importationCustomColumnList:
      properties:
        customColumns:
          items:
            $ref: "#/components/schemas/importationCustomColumn"
          type: array
        links:
          $ref: "#/components/schemas/customColumnListLinks"
      required:
        - links
        - customColumns
      type: object
    importationCustomColumnListLinks:
      properties:
        add:
          $ref: "#/components/schemas/links.Importation_SaveCustomColumnLink"
        self:
          $ref: "#/components/schemas/links.Importation_GetCustomColumnsLink"
      required:
        - self
      type: object
    importationMonitoring:
      description: Describe the reporting of the catalog importation
      properties:
        beginUtcDate:
          description: The start date of the importation
          example: 2017-04-01T13:01:01Z
          format: date-time
          type: string
        errors:
          description: In case of error a description will be indicated
          items:
            $ref: "#/components/schemas/BeezUP.Common.UserErrorMessage"
          type: array
        executionId:
          $ref: "#/components/schemas/executionId"
        lastUpdateUtcDate:
          description: The last update of the reporting
          example: 2017-04-01T13:10:09Z
          format: date-time
          type: string
        links:
          $ref: "#/components/schemas/importationMonitoringLinks"
        steps:
          additionalProperties:
            type: boolean
          description: Contains all steps of the importation process with a boolean. If true the step has been passed, false the step is not complete
          example:
            isCatalogImportComputeDiffCompleted: "false"
            isCatalogImportPrepareReadCompleted: "false"
            isCatalogUpdateCompleted: "false"
            isSavedInDb: "false"
          type: object
        success:
          description: Indicates if the importation was successfully completed or not
          example: "true"
          type: boolean
        userId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
      required:
        - success
        - executionId
        - lastUpdateUtcDate
        - beginUtcDate
        - steps
      type: object
    importationMonitoringLinks:
      description: Applicable operations considering the state of the importation
      properties:
        activateAutoImport:
          $ref: "#/components/schemas/links.Importation_ActivateAutoImportLink"
        cancel:
          $ref: "#/components/schemas/links.Importation_CancelLink"
        catalogColumns:
          $ref: "#/components/schemas/links.Importation_GetDetectedCatalogColumnsLink"
        commit:
          $ref: "#/components/schemas/links.Importation_CommitLink"
        commitColumns:
          $ref: "#/components/schemas/links.Importation_CommitColumnsLink"
        configureRemainingCatalogColumns:
          $ref: "#/components/schemas/links.Importation_ConfigureRemainingCatalogColumnsLink"
        customColumns:
          $ref: "#/components/schemas/links.Importation_GetCustomColumnsLink"
        productSamples:
          $ref: "#/components/schemas/links.Importation_GetProductSampleLink"
        self:
          $ref: "#/components/schemas/links.Importation_GetImportationMonitoringLink"
        technicalProgression:
          $ref: "#/components/schemas/links.Importation_TechnicalProgressionLink"
      required:
        - self
        - technicalProgression
      type: object
    importationReporting:
      description: The catalog importation reporting
      properties:
        autoImported:
          description: Indicate if this importation is an auto import or not.
          example: "true"
          type: boolean
        beginUtcDate:
          description: Indicate the begin UTC date of this importation.
          example: 2017-04-01T13:01:01Z
          format: date-time
          type: string
        endUtcDate:
          description: Indicate the end UTC date of this importation.
          example: 2017-04-01T13:10:09Z
          format: date-time
          type: string
        errors:
          description: Indicate the error message list related to this importation.
          items:
            $ref: "#/components/schemas/BeezUP.Common.UserErrorMessage"
          type: array
        executionId:
          $ref: "#/components/schemas/executionId"
        inputConfigurationUrl:
          description: Indicate the input url of this importation.
          example: http://blal.com/catalog.csv
          format: uri
          type: string
        lastUpdateUtcDate:
          description: Indicate the last update UTC date of the reporting.
          example: 2017-04-01T13:10:09Z
          format: date-time
          type: string
        links:
          $ref: "#/components/schemas/importationReportingLinks"
        stepName:
          description: The last step name of the importation process
          example: IsSaveInDb
          type: string
        steps:
          additionalProperties:
            type: boolean
          description: Indicate the steps that have been passed during the importation process
          example:
            isCatalogImportComputeDiffCompleted: "false"
            isCatalogImportPrepareReadCompleted: "false"
            isCatalogUpdateCompleted: "false"
            isSavedInDb: "false"
          type: object
        success:
          description: Indicate if the importation succeed or not.
          example: "true"
          type: boolean
        totalProductCount:
          description: Indicate the total product count detected in the catalog during the importation.
          example: "101"
          format: int32
          type: integer
        totalProductErrorCount:
          description: Indicate the total product count in error detected in the catalog during the importation.
          example: "0"
          format: int32
          type: integer
        totalProductSuccessCount:
          description: Indicate the total product count in success in the catalog during the importation.
          example: "101"
          format: int32
          type: integer
        userId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
      required:
        - executionId
        - beginUtcDate
        - lastUpdateUtcDate
        - steps
      type: object
    importationReportingLinks:
      properties:
        report:
          $ref: "#/components/schemas/links.Importation_GetReportLink"
      type: object
    importationTechnicalProgression:
      properties:
        stepsProgression:
          additionalProperties:
            items:
              type: string
            type: array
          description: Indicate for each step of the importation the uris to look at
          type: object
      type: object
    importationsPerStoreResponse:
      additionalProperties:
        $ref: "#/components/schemas/importationsResponse"
      type: object
    importationsResponse:
      properties:
        importations:
          items:
            $ref: "#/components/schemas/importationReporting"
          type: array
        links:
          $ref: "#/components/schemas/importationsResponseLinks"
      type: object
    importationsResponseLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.Importation_GetReportingsLink"
        start:
          $ref: "#/components/schemas/links.Importation_StartManualUpdateLink"
      type: object
    infoSummaries:
      properties:
        errors:
          items:
            $ref: "#/components/schemas/errorSummary"
          type: array
        informations:
          items:
            $ref: "#/components/schemas/infoSummary"
          type: array
        successes:
          items:
            $ref: "#/components/schemas/successSummary"
          type: array
        warnings:
          items:
            $ref: "#/components/schemas/warningSummary"
          type: array
      type: object
      x-exclude: true
    infoSummary:
      properties:
        informationArguments:
          additionalProperties:
            type: string
          type: object
        informationCode:
          type: string
        informationMessage:
          type: string
        objectName:
          type: string
        propertyName:
          type: string
        propertyValue:
          type: string
      type: object
    initialsProfilePictureUrl:
      description: Indicate the url of your picture profil based on your initials
      example: https://dummyimage.com/50x50/000000/fff&text=AM
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
    inputConfiguration:
      description: Describe the input configuration
      properties:
        files:
          description: The list of files to get and read
          items:
            $ref: "#/components/schemas/inputFileConfiguration"
          minItems: 1
          type: array
        transformFileUrl:
          description: Can be null. Use to transform multiple files with an XSLT file.
          example: http://beezupblob.com/Mytransformation.xslt
          format: uri
          type: string
      required:
        - files
      type: object
    inputFileConfiguration:
      description: Describe how to get and read a file
      properties:
        fetch:
          $ref: "#/components/schemas/inputFileFetchConfiguration"
        fileNumber:
          description: The file number starting by 1
          example: "1"
          format: int32
          minimum: 1
          type: integer
        read:
          $ref: "#/components/schemas/inputFileReadConfiguration"
      required:
        - fileNumber
        - fetch
        - read
      type: object
    inputFileFetchConfiguration:
      description: Describe the way to download the file
      properties:
        compressedRelativePath:
          description: Indicate the relative path in the compressed file
          example: folder/file.xxx
          type: string
        compressionFormatStrategy:
          $ref: "#/components/schemas/compressionFormatStrategy"
        credential:
          $ref: "#/components/schemas/credential"
        downloadCatalogStrategy:
          $ref: "#/components/schemas/downloadCatalogStrategy"
        downloadTimeout:
          default: "30"
          description: Indicate the download time out in second
          example: "360"
          format: int32
          type: integer
        uri:
          description: Indicate the Uri of the file. (http, https, ftp, ftps, sftp are allowed)
          example: http://www.mywebsite.com/mycatalog.csv
          type: string
      required:
        - uri
        - downloadCatalogStrategy
      type: object
    inputFileReadConfiguration:
      description: |
        Describe how to read the file. If FileFormatStrategy is CSV, csvFileReadProperties is required. Otherwise the xmlFileReadProperties is required.
      properties:
        csvFileReadProperties:
          $ref: "#/components/schemas/inputFileReadCsvConfiguration"
        cultureName:
          default: ""
          description: The culture name of the file.  (i.e. fr-FR). If null then Invariant culture will be used.
          example: fr-FR
          type: string
        encodingTypeName:
          default: UTF-8
          description: The encoding type. UTF-8 by default.
          example: UTF-8
          type: string
        format:
          $ref: "#/components/schemas/fileFormatStrategy"
        xmlFileReadProperties:
          $ref: "#/components/schemas/inputFileReadXmlConfiguration"
      required:
        - format
      type: object
    inputFileReadCsvConfiguration:
      description: The CSV file description
      properties:
        csvSeparator:
          $ref: "#/components/schemas/csvSeparator"
        csvTextQualifier:
          default: '"'
          description: Indicate the text qualifier of the CSV file. Generally the value is "
          example: '"'
          type: string
        hasHeaderRecord:
          default: "true"
          description: Indicate if the csv file contains the column name at the first row
          example: "true"
          type: boolean
        ignoreHeaderRecord:
          default: "false"
          description: Indicate if the importation should not use the csv column name from the file
          example: "true"
          type: boolean
      required:
        - hasHeaderRecord
        - ignoreHeaderRecord
        - csvSeparator
      type: object
    inputFileReadXmlConfiguration:
      description: The XML file description
      properties:
        flattenXmlChildElements:
          description: Indicate if the children xml nodes should be flatten with there parent to take in account the sub node values.
          example: "true"
          type: boolean
        useXmlAttributes:
          description: Indicate if the importation should take in account the attribute in the xml nodes.
          example: "true"
          type: boolean
      required:
        - useXmlAttributes
        - flattenXmlChildElements
      type: object
    invoice:
      properties:
        amount:
          description: The amount of your invoice
          example: "101.42"
          format: double
          type: number
        amountToBePaid:
          description: The remaining amount to be paid for this invoice
          example: "0.0"
          format: double
          type: number
        contractId:
          $ref: "#/components/schemas/contractId"
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        dueDate:
          example: 2016-05-10
          format: date
          type: string
        invoiceDate:
          description: The invoice date
          example: 2016-05-01
          format: date
          type: string
        invoiceNumber:
          $ref: "#/components/schemas/invoiceNumber"
        invoiceUrl:
          description: The url of the invoice document
          example: https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf
          format: uri
          type: string
        paymentStatus:
          $ref: "#/components/schemas/invoicePaymentStatus"
      required:
        - invoiceDate
        - contractId
        - invoiceNumber
        - amount
        - amountToBePaid
        - currencyCode
        - paymentStatus
        - dueDate
      type: object
    invoiceAvailabilityType:
      description: Indicates on which invoice availability to filter
      example: All
      type: string
      x-lov: InvoiceAvailabilityType
    invoiceContentHtml:
      description: Invoice Content HTML
      type: string
    invoiceList:
      properties:
        invoices:
          example:
            - amount: "101"
              amountToBePaid: "0"
              contractId: 7098487a-86f6-4322-b8a5-b67f7363b3e7
              currencyCode: EUR
              dueDate: 2016-05-10
              invoiceDate: 2016-05-01
              invoiceNumber: B1234
              invoiceUrl: https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf
              paymentStatus: Paid
          items:
            $ref: "#/components/schemas/invoice"
          type: array
        links:
          $ref: "#/components/schemas/invoiceListLinks"
      required:
        - links
        - invoices
      type: object
    invoiceListLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.getInvoicesLink"
      required:
        - self
      type: object
    invoiceNumber:
      description: Your invoice number
      example: B1234
      type: string
    invoicePaymentStatus:
      description: The payment status
      enum:
        - Paid
        - NotPaid
        - PartiallyPaid
        - Loss
      example: Paid
      type: string
    invoicePrefix:
      description: "Invoice Prefix. Can contain 1 to 50 characters, with alphanumeric characters in lowercase uppercase and #, _, -"
      example: TOTO
      pattern: ^[a-zA-Z0-9#_-]{1,50}$
      type: string
      x-pattern: ^[a-zA-Z0-9#_-]{1,50}$
    invoiceSequenceNumber:
      description: Invoice Sequence Number
      example: "879"
      minimum: 0
      type: integer
    lastManualImportInputConfiguration:
      description: Last manual import input configuration
      properties:
        input:
          $ref: "#/components/schemas/inputConfiguration"
      required:
        - input
      type: object
    lastName:
      description: Your last name
      example: Simon
      type: string
    legacyTrackingChannelCatalog:
      description: The channel catalog
      properties:
        links:
          $ref: "#/components/schemas/legacyTrackingChannelCatalogLinks"
      required:
        - links
      type: object
    legacyTrackingChannelCatalogLinks:
      description: Indicates the actions you can do on a channel catalog
      properties:
        migrate:
          $ref: "#/components/schemas/links.MigrateLegacyTrackingChannelCatalogLink"
        self:
          $ref: "#/components/schemas/links.GetLegacyTrackingChannelCatalogLink"
      required:
        - self
      type: object
    legacyTrackingChannelCatalogList:
      description: This is the index of the channel catalog API
      properties:
        channelCatalogs:
          additionalProperties:
            $ref: "#/components/schemas/legacyTrackingChannelCatalog"
          description: The channel catalog list. The key is the channel catalog identifier
          type: object
        links:
          $ref: "#/components/schemas/legacyTrackingChannelCatalogListLinks"
      type: object
    legacyTrackingChannelCatalogListLinks:
      description: |
        Indicates how global actions you can do like how to create a channel catalog, exclusion filter operators, etc...
      properties:
        self:
          $ref: "#/components/schemas/links.GetLegacyTrackingChannelCatalogsLink"
      type: object
    link3:
      properties:
        allOptionalParamsProvided:
          description: indicates whether all optionals params have been provided
          type: boolean
        allRequiredParamsProvided:
          description: indicates whether all required params have been provided
          type: boolean
        description:
          description: The description of the link
          example: This is a description link
          type: string
        docUrl:
          $ref: "#/components/schemas/docUrl"
        href:
          $ref: "#/components/schemas/href"
        info:
          $ref: "#/components/schemas/infoSummaries"
        label:
          description: The label corresponding to the link. This label is automatically translated based on the Accept-Language http header.
          example: The translated label
          type: string
        method:
          $ref: "#/components/schemas/httpMethod"
        operationId:
          $ref: "#/components/schemas/operationId"
        parameters:
          $ref: "#/components/schemas/linkParameter3Types"
        rel:
          description: Indicate the relation name related to the link
          type: string
        urlTemplated:
          description: indicates whether the href is templated or not
          type: boolean
      required:
        - href
      type: object
      x-exclude: true
    linkClickToOrderType:
      default: OnPurchaseDate
      enum:
        - OnPurchaseDate
        - OnClickDate
      example: OnClickDate
      type: string
    linkParameter3:
      properties:
        description:
          description: description of the parameter
          example: the store identifier
          type: string
        in:
          $ref: "#/components/schemas/parameterIn"
        label:
          description: The label corresponding to the link parameter. This label is automatically translated based on the Accept-Language http header.
          example: The translated label
          type: string
        lovLink:
          $ref: "#/components/schemas/LOVLink3"
        lovRequired:
          description: If true, you MUST indicate a value from the list of values otherwise it's a freetext
          example: "true"
          type: boolean
        pattern:
          $ref: "#/components/schemas/validationPattern"
        properties:
          additionalProperties:
            $ref: "#/components/schemas/linkParameterProperty3"
          description: If the parameter is an object with flexible properties (additionProperties/dictionary), we will describe the properties of the object.
        required:
          default: "false"
          example: "true"
          type: boolean
        schema:
          description: schema of the parameter
          example: orderListRequest
          type: string
        value:
          description: The value of the parameter. It can be an integer a string or an object.
          type: object
      required:
        - in
      type: object
      x-exclude: true
    linkParameter3Types:
      additionalProperties:
        $ref: "#/components/schemas/linkParameter3"
      type: object
    linkParameterProperty3:
      properties:
        description:
          description: description of the parameter
          example: the store identifier
          type: string
        label:
          description: The label corresponding to the link parameter property. This label is automatically translated based on the Accept-Language http header.
          example: The translated label
          type: string
        lovLink:
          $ref: "#/components/schemas/LOVLink3"
        lovRequired:
          description: If true, you MUST use indicate a value from the list of values otherwise it's a freetext
          example: "true"
          type: boolean
        pattern:
          $ref: "#/components/schemas/validationPattern"
        required:
          example: "true"
          type: boolean
        schema:
          description: schema of the parameter
          example: orderListRequest
          type: string
        type:
          $ref: "#/components/schemas/parameterType"
        value:
          description: The value of the parameter. It can be an integer a string or an object.
          type: object
      required:
        - type
      type: object
      x-exclude: true
    links.AddChannelCatalogLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs
            method: POST
    links.AnalyticsIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics
            method: GET
    links.Auto_ConfigureAutoImportIntervalLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/interval
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: configureAutoImportIntervalRequest
                type: object
    links.Auto_GetAutoImportConfigurationLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport
            method: GET
    links.Auto_PauseAutoImportLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/pause
            method: POST
    links.Auto_ResumeAutoImportLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/resume
            method: POST
    links.Auto_ScheduleAutoImportLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/schedules
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: scheduleAutoImportRequest
                type: object
    links.Auto_StartAutoImportLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/start
            method: POST
    links.CatalogIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs
            method: GET
    links.CatalogStoreIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3
            method: GET
    links.Catalog_ChangeCatalogColumnUserNameLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/rename
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: changeUserColumnNameRequest
                type: object
    links.Catalog_ChangeCustomColumnExpressionLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
            method: PUT
            parameters:
              request:
                in: body
                required: true
                schema: changeCustomColumnExpressionRequest
                type: object
    links.Catalog_ChangeCustomColumnUserNameLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/rename
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: changeUserColumnNameRequest
                type: object
    links.Catalog_ComputeExpressionLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/computeExpression
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: computeExpressionRequest
                type: object
    links.Catalog_DeleteCustomColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
            method: DELETE
    links.Catalog_GetBeezUPColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/beezupColumns
            method: GET
    links.Catalog_GetCatalogColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns
            method: GET
    links.Catalog_GetCategoriesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/categories
            method: GET
    links.Catalog_GetCustomColumnExpressionLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
            method: GET
    links.Catalog_GetCustomColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns
            method: GET
    links.Catalog_GetProductsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/list
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: getProductsRequest
                type: object
    links.Catalog_GetRandomProductsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/random
            method: GET
    links.Catalog_SaveCustomColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/{columnId}
            method: POST
            parameters:
              columnId:
                in: path
                required: true
                type: string
              request:
                in: body
                required: true
                schema: createCustomColumnRequest
                type: object
    links.ChangeOrderLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - properties:
            rel:
              description: Indicate the relation name related to the link
              example: self
              type: string
          type: object
        - example:
            href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
            method: POST
            parameters:
              If-Match:
                in: header
                required: true
                type: string
                value: '"ca071a4580129f932a03971968ffef69"'
              request:
                in: body
                properties:
                  order_Shipping_CarrierName:
                    lovLink:
                      href: /v2/user/PriceMinisterCarrierName
                    lovRequired: "true"
                    required: true
                    type: string
                  order_Shipping_FulfillmentDate:
                    required: true
                    type: date-time
                  order_Shipping_Method:
                    lovLink:
                      href: /v2/user/ShippingMethod_PriceMinister
                    lovRequired: "false"
                    required: true
                    type: string
                  order_Shipping_ShipperTrackingNumber:
                    required: true
                    type: string
                schema: changeOrderRequest
                type: object
              testMode:
                in: query
                required: false
                type: boolean
                value: "false"
              userName:
                in: query
                required: true
                type: string
            rel: ShipOrder
            templated: "true"
    links.ChangeOrderV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - properties:
            rel:
              description: Indicate the relation name related to the link
              example: self
              type: string
          type: object
        - example:
            href: /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
            method: POST
            parameters:
              If-Match:
                in: header
                required: true
                type: string
                value: '"ca071a4580129f932a03971968ffef69"'
              request:
                in: body
                properties:
                  order_Shipping_CarrierName:
                    lovLink:
                      href: /v2/user/PriceMinisterCarrierName
                    lovRequired: "true"
                    required: true
                    type: string
                  order_Shipping_FulfillmentDate:
                    required: true
                    type: date-time
                  order_Shipping_Method:
                    lovLink:
                      href: /v2/user/ShippingMethod_PriceMinister
                    lovRequired: "false"
                    required: true
                    type: string
                  order_Shipping_ShipperTrackingNumber:
                    required: true
                    type: string
                schema: changeOrderRequest
                type: object
              testMode:
                in: query
                required: false
                type: boolean
                value: "false"
              userName:
                in: query
                required: true
                type: string
            rel: ShipOrder
            templated: "true"
    links.ClearChannelCatalogExportationCacheLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache/clear
            method: POST
    links.ClearMerchantOrderInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo
            method: POST
    links.ClearMerchantOrderInfoListLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/clearMerchantOrderInfos
            method: POST
    links.ClearMerchantOrderInfoListV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/clearMerchantOrderInfos
            method: POST
    links.ClearMerchantOrderInfoV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo
            method: POST
    links.ConfigureAutomaticTransitionsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/autoTransitions
            method: POST
            parameters:
              request:
                in: body
                request: "true"
                schema: configureAutomaticTransitionRequest
    links.ConfigureChannelCatalogCategoryLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/category/configure
            method: POST
    links.ConfigureChannelCatalogColumnMappingsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/columnMappings
            method: PUT
    links.ConfigureChannelCatalogCostSettingsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/cost
            method: POST
    links.ConfigureChannelCatalogExclusionFiltersCopyLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/copy
            method: POST
    links.ConfigureChannelCatalogExclusionFiltersLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters
            method: PUT
    links.ConfigureChannelCatalogGeneralSettingsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/general
            method: POST
    links.ConfigureChannelCatalogProductValueOverrideCopyLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides/copy
            method: POST
    links.CreateRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules
            method: POST
            parameters:
              request:
                in: body
                schema: createRuleRequest
                type: object
                value:
                  endUtcDate: 2017-09-30T10:42:40.001Z
                  optimisationActionName: reenable
                  reportFilterId: fb19c53c-2f63-4262-9d94-2d7faa500acd
                  ruleName: My rule
                  startUtcDate: 2016-08-29T09:12:33.001Z
    links.DeleteChannelCatalogLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: DELETE
    links.DeleteReportFilterLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd
            method: DELETE
    links.DeleteRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
            method: DELETE
    links.DisableChannelCatalogCategoryMappingLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories/disableMapping
            method: POST
    links.DisableChannelCatalogLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/disable
            method: POST
    links.DisableChannelCatalogProductLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/disable
            method: POST
    links.DisableRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/disable
            method: POST
    links.EnableChannelCatalogLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/enable
            method: POST
    links.EnableRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/enable
            method: POST
    links.ExportChannelCatalogProductInfoListLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/export
            method: POST
            parameters:
              format:
                in: query
                required: true
                type: string
                value: csv
    links.ExportOrdersLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/exportations
            method: POST
            properties:
              request:
                in: body
                required: true
                schema: exportOrderListRequest
                type: object
    links.GetAutomaticTransitionsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/autoTransitions
            method: GET
    links.GetChannelCatalogCategoriesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - description: If you did not configure the cost settings this link will not be displayed.
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories
            method: GET
    links.GetChannelCatalogExclusionFiltersCopyLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/copy
            method: GET
    links.GetChannelCatalogExclusionFiltersLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters
            method: GET
    links.GetChannelCatalogExportationCacheInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache
            method: GET
    links.GetChannelCatalogExportationHistoryLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/history
            method: GET
    links.GetChannelCatalogFilterOperatorsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/filterOperators
            method: GET
    links.GetChannelCatalogLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    links.GetChannelCatalogMarketplacePropertiesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/properties
    links.GetChannelCatalogMarketplaceSettingsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings
    links.GetChannelCatalogProductInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67
            method: GET
    links.GetChannelCatalogProductInfoListLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products
            method: POST
    links.GetChannelCatalogProductValueOverrideCopyLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides/copy
            method: GET
    links.GetChannelCatalogsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs
            method: GET
    links.GetChannelInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channels/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    links.GetChannelsIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/public/channels
            method: GET
    links.GetChannelsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/public/channels/FRA
            method: GET
    links.GetCustomerIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer
            method: GET
    links.GetLegacyTrackingChannelCatalogLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/legacyTracking/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    links.GetLegacyTrackingChannelCatalogsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/legacyTracking/channelCatalogs
            method: GET
    links.GetMarketplaceAccountsSynchronizationLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/status
            method: GET
    links.GetMarketplaceAccountsSynchronizationV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/status
            method: GET
    links.GetMarketplaceChannelCatalogsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/channelcatalogs
    links.GetOrderExportationsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/exportations
            method: GET
    links.GetOrderHistoryLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/history
            method: GET
    links.GetOrderHistoryV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/history
            method: GET
    links.GetOrderIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders
            method: GET
    links.GetOrderLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000
            method: GET
    links.GetOrderListFullLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            properties:
              Accept-Encoding:
                in: header
                required: true
                schema: string
                type: ​array
              request:
                in: body
                required: false
                schema: orderListRequest
                type: object
    links.GetOrderListFullV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/list/full
            method: POST
            properties:
              Accept-Encoding:
                in: header
                required: true
                type: string
              request:
                in: body
                required: false
                schema: orderListRequest
                type: object
    links.GetOrderListLightLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/list/light
            method: POST
            properties:
              request:
                in: body
                required: false
                schema: orderListRequest
                type: object
    links.GetOrderListLightV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/list/light
            method: POST
            properties:
              request:
                in: body
                required: false
                schema: orderListRequest
                type: object
    links.GetOrderV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000
            method: GET
    links.GetPublicListOfValuesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/public/lov/ChannelType
            method: GET
    links.GetPublicLovIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/public/lov
            method: GET
    links.GetPublicationsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/channelcatalogs/publications/Amazon/123/history
    links.GetReportFilterLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd
            method: GET
    links.GetReportFiltersLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters
            method: GET
    links.GetRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
            method: GET
    links.GetRulesExecutionsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/executions
            method: GET
    links.GetRulesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules
            method: GET
    links.GetStoreReportByCategoryLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/bycategory
            method: POST
            parameters:
              request:
                in: body
                schema: reportByCategoryRequest
                type: object
    links.GetStoreReportByChannelLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/bychannel
            method: POST
            parameters:
              request:
                in: body
                schema: reportByChannelRequest
                type: object
    links.GetStoreReportByDayLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/byday
            method: POST
            parameters:
              request:
                in: body
                schema: reportByDayRequest
                type: object
    links.GetStoreReportByProductLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/byproduct
            method: POST
            parameters:
              request:
                in: body
                schema: reportByProductRequest
                type: object
    links.GetStoreTrackedClicksLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/clicks
            method: GET
    links.GetStoreTrackedExternalOrdersLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/externalorders
            method: GET
    links.GetStoreTrackedOrdersLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/orders
            method: GET
    links.GetStoreTrackingStatusLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/status
            method: GET
    links.GetTrackingStatusLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/tracking/status
            method: GET
    links.GetUserListOfValuesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/lov/Go2CultureName
            method: GET
    links.GetUserLovIndexLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/lov
            method: GET
    links.HarvestAllLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/harvest
            method: POST
    links.HarvestAllV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/harvest
            method: POST
    links.HarvestOrderLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/harvest
            method: POST
    links.HarvestOrderV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/Amazon/1001#/00000000000000000000000000000000000000000000000/harvest
            method: POST
    links.Importation_ActivateAutoImportLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/activate
            method: POST
    links.Importation_CancelLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/cancel
            method: POST
    links.Importation_CommitColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commitColumns
            method: POST
    links.Importation_CommitLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commit
            method: POST
    links.Importation_ConfigureCatalogColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: configureCatalogColumnCatalogRequest
                type: object
    links.Importation_ConfigureRemainingCatalogColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/configureRemainingCatalogColumns
            method: POST
    links.Importation_DeleteCustomColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
            method: DELETE
    links.Importation_GetCustomColumnExpressionLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
            method: GET
    links.Importation_GetCustomColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns
            method: GET
    links.Importation_GetDetectedCatalogColumnsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns
            method: GET
    links.Importation_GetImportationMonitoringLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c
            method: GET
    links.Importation_GetManualUpdateLastInputConfigLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/inputConfiguration
            method: GET
    links.Importation_GetProductSampleCustomColumnValueLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
            method: GET
            parameters:
              productSampleIndex:
                in: path
                required: true
                type: integer
    links.Importation_GetProductSampleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}
            method: GET
            parameters:
              productSampleIndex:
                in: path
                required: true
                type: integer
    links.Importation_GetReportLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e911432/report
            method: GET
    links.Importation_GetReportingsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations
            method: GET
    links.Importation_IgnoreColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/ignore
            method: POST
    links.Importation_MapCatalogColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: mapBeezUPColumnRequest
                type: object
    links.Importation_MapCustomColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: mapBeezUPColumnRequest
                type: object
    links.Importation_ReattendColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/reattend
            method: POST
    links.Importation_SaveCustomColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/{columnId}
            method: POST
            parameters:
              columnId:
                in: path
                required: true
                type: string
              request:
                in: body
                required: true
                schema: createCustomColumnRequest
                type: object
    links.Importation_StartManualUpdateLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/start
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: startManualImportRequest
                type: object
    links.Importation_TechnicalProgressionLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/technicalProgression
            method: GET
    links.Importation_UnmapCatalogColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map
            method: POST
    links.Importation_UnmapCustomColumnLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map
            method: POST
    links.MigrateLegacyTrackingChannelCatalogLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/legacyTracking/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/migrate
            method: POST
    links.MoveDownRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/movedown
            method: POST
    links.MoveUpRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/moveup
            method: POST
    links.OptimiseAllLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/all/enable
            method: POST
            parameters:
              request:
                in: body
                schema: optimiseAllRequest
                type: object
                value:
                  advancedFilters:
                    globalmarginPercent: "10"
                    linkClickToOrderMaxDay: "5"
                    linkClickToOrderType: OnClickDate
                    marginType: Global
                    onlyDirectSales: "true"
                    onlyPaymentValidatedOrders: "true"
                    performanceIndicatorFormula:
                      firstParameter: Cost
                      operatorName: Multiply
                      secondParamter: ROI
                      thirdParameter: "100"
                  analyticsProductColumnFilters:
                    additionalAnalyticsProductColumnFilters:
                      - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c
                        operatorName: NumericalGreaterThan
                        values:
                          - "100"
                    sku: M1234
                    title: Refrigérateur
                  beginPeriodUtcDate: 2006-11-20T00:00:00Z
                  categoryFilter:
                    categoryPath:
                      - Home
                      - Bedroom
                  channelId: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
                  endPeriodUtcDate: 2006-12-20T00:00:00Z
                  performanceIndicatorFilters:
                    - operatorName: Equals
                      performanceIndicator: Cost
                      value: "10"
                  productState: All
    links.OptimiseByCategoryLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byCategory/4c376178-25b4-4656-a86e-e3bd3a25b139/enable
            method: POST
            parameters:
              request:
                in: body
                type: ​array
                value:
                  - a2d38563-50f0-43f1-be2b-b16e7ec4f007
    links.OptimiseByChannelLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byChannel/a2d38563-50f0-43f1-be2b-b16e7ec4f007/enable
            method: POST
    links.OptimiseByProductLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byProduct/6d469a54-8426-4855-abc2-9e062e2056b9/enable
            method: POST
            parameters:
              request:
                in: body
                type: ​array
                value:
                  - a2d38563-50f0-43f1-be2b-b16e7ec4f007
    links.OptimiseLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/enable
            method: POST
            parameters:
              request:
                in: body
                schema: optimiseRequest
                type: object
                value:
                  advancedFilters:
                    globalmarginPercent: "10"
                    linkClickToOrderMaxDay: "5"
                    linkClickToOrderType: OnClickDate
                    marginType: Global
                    onlyDirectSales: "true"
                    onlyPaymentValidatedOrders: "true"
                    performanceIndicatorFormula:
                      firstParameter: Cost
                      operatorName: Multiply
                      secondParamter: ROI
                      thirdParameter: "100"
                  analyticsProductColumnFilters:
                    additionalAnalyticsProductColumnFilters:
                      - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c
                        operatorName: NumericalGreaterThan
                        values:
                          - "100"
                    sku: M1234
                    title: Refrigérateur
                  beginPeriodUtcDate: 2006-11-20T00:00:00Z
                  categoryFilter:
                    categoryPath:
                      - Home
                      - Bedroom
                  channelId: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
                  endPeriodUtcDate: 2006-12-20T00:00:00Z
                  pageNumber: "1"
                  pageSize: "100"
                  performanceIndicatorFilters:
                    - operatorName: Equals
                      performanceIndicator: Cost
                      value: "10"
                  productState: All
    links.OverrideChannelCatalogProductValuesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides
            method: POST
    links.PublishCatalogToMarketplaceLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/channelcatalogs/publications/Cdiscount/123/publish
    links.ReenableChannelCatalogCategoryMappingLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories/reenableMapping
            method: POST
    links.ReenableChannelCatalogProductLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/reenable
            method: POST
    links.RunRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/run
            method: POST
    links.RunRulesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/run
            method: POST
    links.SaveReportFilterLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/{reportFilterId}
            method: PUT
            parameters:
              - in: path
                name: reportFilterId
                type: string
            templated: "true"
    links.SetChannelCatalogMarketplaceSettingsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings
            method: POST
            parameters:
              request:
                in: body
                schema: setChannelCatalogMarketplaceSettingsRequest
                type: object
    links.SetMerchantOrderInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo
            method: POST
            parameters:
              request:
                in: body
                schema: setMerchantOrderInfoRequest
                type: object
    links.SetMerchantOrderInfoListLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/marketplaces/orders/setMerchantOrderInfos
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: setMerchantOrderInfoRequest
                type: object
    links.SetMerchantOrderInfoListV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/setMerchantOrderInfos
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: setMerchantOrderInfoRequest
                type: object
    links.SetMerchantOrderInfoV3Link:
      allOf:
        - $ref: "#/components/schemas/link3"
        - example:
            href: /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo
            method: POST
            parameters:
              request:
                in: body
                schema: setMerchantOrderInfoRequest
                type: object
    links.UpdateRuleLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
            method: PATCH
            parameters:
              request:
                in: body
                schema: updateRuleRequest
                type: object
                value:
                  endUtcDate": 2016-08-29T09:12:33.001Z
                  ruleName: My Rule Renamed
                  startUtcDate: 2016-08-29T09:12:33.001Z
    links.activateUserAccountLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/activate
            method: POST
    links.changeEmailLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/changeEmail
            method: POST
    links.changePasswordLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/changePassword
            method: POST
    links.createContractLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/contracts
            method: POST
            parameters:
              request:
                in: body
                type: object
                value:
                  billingPeriodInMonth: "12"
                  couponDiscountCode: I-LOVE-BEEZUP
                  couponOfferCode: 04efc310-bc25-4710-a83a-faf200284fe5
                  offerId: "1"
                  storeCount: "1"
    links.createStoreLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores
            method: POST
    links.deleteNextContractLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/contracts/next
            method: DELETE
    links.deleteStoreLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
            method: DELETE
    links.deleteStoreShareLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares/277596c1-a5a9-4cce-9f34-b5906451a98f
            method: DELETE
    links.getBillingPeriodsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/billingPeriods
            method: GET
    links.getContractsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/contracts
            method: GET
    links.getCreditCardInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/creditCardInfo
            method: GET
    links.getFriendInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/friends/{userId}
            method: GET
            parameters:
              userId:
                in: path
                required: true
                type: string
    links.getInvoicesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/invoices
            method: GET
    links.getOfferLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/offers
            method: POST
            parameters:
              request:
                in: body
                required: true
                schema: offerRequest
                type: object
    links.getProfilePictureInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/profilePictureInfo
            method: GET
    links.getStandardOffersLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/offers
            method: GET
    links.getStoreLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
            method: GET
    links.getStoreSharesLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares
            method: GET
    links.getStoresLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores
            method: GET
    links.getUserAccountInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account
            method: GET
    links.logoutLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/security/logout
            method: POST
    links.reactivateCurrentContractLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/contracts/current/reenableAutoRenewal
            method: POST
    links.saveCompanyInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/companyInfo
            method: PUT
    links.saveCreditCardInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/creditCardInfo
            method: PUT
    links.savePersonalInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/personalInfo
            method: PUT
    links.saveProfilePictureInfoLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/account/profilePictureInfo
            method: PUT
    links.saveStoreAlertsLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/alerts
            method: POST
    links.shareStoreLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares
            method: POST
            parameters:
              email:
                in: body
                required: true
                type: string
    links.terminateCurrentContractLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/contracts/current/disableAutoRenewal
            method: POST
    links.updateStoreLink:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.Link3"
        - example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
            method: PATCH
    listOfValueItem:
      description: This object is used by LOV apis
      properties:
        codeIdentifier:
          example: FRA
          type: string
        intIdentifier:
          example: "1"
          format: int32
          type: integer
        position:
          example: "1"
          format: int32
          type: integer
        translationText:
          example: France
          type: string
      required:
        - codeIdentifier
        - intIdentifier
      type: object
    loginRequest:
      properties:
        login:
          $ref: "#/components/schemas/BeezUP.Common.Email"
        password:
          description: Your password
          example: I@mW0nder$Full
          format: password
          type: string
      required:
        - login
        - password
      type: object
    mapBeezUPColumnRequest:
      properties:
        beezUPColumnName:
          $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
      required:
        - beezUPColumnName
      type: object
    mappingStatus:
      enum:
        - required
        - optional
        - notConfigurable
      example: required
      type: string
    marginType:
      default: Tracker
      enum:
        - Tracker
        - Global
      example: Global
      type: string
    marketplaceChannelCatalog:
      description: This object indicates you the association between a channel catalog and a marketplace. The account identifier will be automatically defined based on your marketplace merchant identfier.
      properties:
        apiSettingsStatus:
          $ref: "#/components/schemas/BeezUP.Common.ApiSettingsStatus"
        beezUPChannelCatalogId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelCatalogId"
        beezUPChannelId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        beezUPMarketplaceName:
          description: The marketplace name
          example: ebay FRA
        beezUPStoreId:
          $ref: "#/components/schemas/BeezUP.Common.StoreId"
        beezUPStoreName:
          description: The store name
          example: My Store 1
          type: string
        enabled:
          description: The enabled status of the Channel Catalog
          example: "true"
          type: boolean
        links:
          $ref: "#/components/schemas/marketplaceChannelCatalogLinks"
        lovLinks:
          $ref: "#/components/schemas/marketplaceChannelCatalogLovLinks"
        marketplaceAccountId:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceAccountId"
        marketplaceBusinessCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceBusinessCode"
        marketplaceIsoCountryCodeAlpha2:
          description: The marketplace country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details)
          example: FR
          type: string
        marketplaceMarketPlaceId:
          description: The marketplace identifier in the marketplace
          example: "71"
          type: string
        marketplaceMerchantIdentifiers:
          additionalProperties:
            type: string
          description: The marketplace merchant identifier list
          example:
            Ebay_PayPalEmailAddress: yourEbayId@paypal.com
          type: object
        marketplaceTechnicalCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceTechnicalCode"
      required:
        - apiSettingsStatus
        - enabled
        - marketplaceTechnicalCode
        - marketplaceBusinessCode
        - marketplaceMarketPlaceId
        - marketplaceIsoCountryCodeAlpha2
        - beezUPMarketplaceName
        - beezUPChannelId
        - beezUPChannelCatalogId
        - beezUPStoreId
        - beezUPStoreName
        - lovLinks
        - links
      type: object
    marketplaceChannelCatalogLinks:
      description: Indicate the actions you can do on a channel catalog. If the settings are valid, you will be able to access to the publication history.
      properties:
        properties:
          $ref: "#/components/schemas/links.GetChannelCatalogMarketplacePropertiesLink"
        publications:
          $ref: "#/components/schemas/links.GetPublicationsLink"
        publishOptions:
          items:
            $ref: "#/components/schemas/marketplaceChannelCatalogPublicationOption"
          type: array
        settings:
          $ref: "#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink"
      required:
        - properties
        - settings
      type: object
    marketplaceChannelCatalogList:
      description: The marketplace channel catalog list
      properties:
        links:
          $ref: "#/components/schemas/marketplaceChannelCatalogListLinks"
        marketplaceChannelCatalogs:
          description: The list of marketplace channel catalog
          items:
            $ref: "#/components/schemas/marketplaceChannelCatalog"
          type: array
      required:
        - links
        - marketplaceChannelCatalogs
      type: object
    marketplaceChannelCatalogListLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetMarketplaceChannelCatalogsLink"
      required:
        - self
      type: object
    marketplaceChannelCatalogLovLinks:
      description: Indicates the List Of Values related to the marketplace
      properties:
        cancelationReasonCodeLOV:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        carrierCodeLOV:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        marketplaceStorePropertyGroupLOV:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        marketplaceStorePropertyLOV:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        refundReasonCodeLOV:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        shippingMethodLOV:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
      type: object
    marketplaceChannelCatalogPublicationOption:
      properties:
        feedType:
          $ref: "#/components/schemas/feedType"
        kind:
          $ref: "#/components/schemas/publicationStrategyKind"
        link:
          $ref: "#/components/schemas/links.PublishCatalogToMarketplaceLink"
        strategy:
          $ref: "#/components/schemas/publicationStrategy"
        withUnpublish:
          type: boolean
      required:
        - kind
        - feedType
        - withUnpublish
        - strategy
        - link
      type: object
    marketplaceOrderId:
      description: The order marketplace identifier
      example: AMAZON12345
      type: string
    marketplaceOrderStatus:
      description: The marketplace order state
      example: In_progress_3
      type: string
    messageId:
      description: The message identifier. It's a guid.
      example: b0d3faea-f881-439f-ba92-02b1168511ea
      format: MessageId
      type: string
      x-exclude: true
    nextContractInfo:
      allOf:
        - $ref: "#/components/schemas/contractInfo"
        - description: Get the conditions of your next contract
          properties:
            links:
              $ref: "#/components/schemas/nextContractInfoLinks"
          required:
            - links
          type: object
    nextContractInfoLinks:
      properties:
        delete:
          $ref: "#/components/schemas/links.deleteNextContractLink"
      type: object
    oMReadyMarketplaceBusinessCodeResponse:
      items:
        $ref: "#/components/schemas/listOfValueItem"
      type: array
    offer:
      properties:
        content:
          $ref: "#/components/schemas/offerContent"
        info:
          $ref: "#/components/schemas/BeezUP.Common.InfoSummaries"
        links:
          $ref: "#/components/schemas/offerLinks"
      type: object
    offerContent:
      properties:
        contractBillingPeriodInfo:
          $ref: "#/components/schemas/contractBillingPeriodInfo"
        contractBonusInfo:
          $ref: "#/components/schemas/contractBonusInfo"
        contractClickInfo:
          $ref: "#/components/schemas/contractClickInfo"
        contractCommitmentInfo:
          $ref: "#/components/schemas/contractCommitmentInfo"
        contractDiscountInfo:
          $ref: "#/components/schemas/contractDiscountInfo"
        contractMoneyInfo:
          $ref: "#/components/schemas/contractMoneyInfo"
        contractStoreInfo:
          $ref: "#/components/schemas/contractStoreInfo"
        contractTerminationReason:
          $ref: "#/components/schemas/contractTerminationReason"
        contractTerminationReasonType:
          $ref: "#/components/schemas/contractTerminationReasonType"
        notifyVatExemption:
          description: "Internal usage: Indicates if we have to notify you about VAT exemption."
          example: "true"
          type: boolean
        previousFixPeriodInvoiceProrataInfo:
          $ref: "#/components/schemas/previousFixPeriodInvoiceProrataInfo"
      required:
        - previousFixPeriodInvoiceProrataInfo
        - contractBillingPeriodInfo
        - contractClickInfo
        - contractCommitmentInfo
        - contractDiscountInfo
        - contractMoneyInfo
        - contractStoreInfo
        - contractBonusInfo
        - notifyVatExemption
      type: object
    offerFunctionality:
      properties:
        functionalityCode:
          description: The functionality code
          example: MARKETMANA
          type: string
        maxValueInteger:
          description: The max value in integer for this feature in this offer
          example: "4"
          format: int32
          type: integer
        text:
          description: A description text of this feature
          example: Marketplace management
          type: string
        unlimited:
          description: Is this feature is unlimited for this offer?
          example: "false"
          type: boolean
      required:
        - functionalityCode
        - unlimited
      type: object
    offerId:
      description: The offer id based on /offers. Not a free offer of course.
      example: "1"
      format: int32
      minimum: 1
      type: integer
    offerLinks:
      description: The different actions you can make on this offer
      properties:
        createContract:
          $ref: "#/components/schemas/links.createContractLink"
      type: object
    offerRequest:
      properties:
        billingPeriodInMonth:
          $ref: "#/components/schemas/billingPeriodInMonth"
        couponDiscountCode:
          $ref: "#/components/schemas/couponDiscountCode"
        couponOfferCode:
          $ref: "#/components/schemas/couponOfferCode"
        offerId:
          $ref: "#/components/schemas/offerId"
        storeCount:
          $ref: "#/components/schemas/storeCount"
      required:
        - offerId
        - storeCount
        - billingPeriodInMonth
      type: object
    operationId:
      description: The operationId to call.
      example: GetOrder
      type: string
      x-exclude: true
    optimisationActionName:
      description: The optimisation action
      enum:
        - reenable
        - disable
      example: reenable
      type: string
    optimiseAllRequest:
      allOf:
        - $ref: "#/components/schemas/orderedReportFilterCommonParameters"
        - properties:
            analyticsProductColumnFilters:
              $ref: "#/components/schemas/analyticsProductColumnFilters"
            productColumnsToDisplay:
              $ref: "#/components/schemas/productColumnsToDisplay"
            productState:
              $ref: "#/components/schemas/productStateFilter"
            reportType:
              $ref: "#/components/schemas/reportType"
          required:
            - beginPeriodUtcDate
            - endPeriodUtcDate
            - advancedFilters
            - reportType
          type: object
    optimiseRequest:
      allOf:
        - $ref: "#/components/schemas/optimiseAllRequest"
        - $ref: "#/components/schemas/paginationRequestParameters"
    order:
      allOf:
        - $ref: "#/components/schemas/orderHeader"
        - description: Describe in details all informations related to an order. All properties with the prefix order_ are translated in the list of values /user/lov/OrderMetaInfoOrderDetails.
          properties:
            links:
              $ref: "#/components/schemas/orderLinks"
            orderItems:
              items:
                $ref: "#/components/schemas/orderItem"
              type: array
            order_Buyer_AddressCity:
              description: The Buyer address city of this order
              example: Marseille
              type: string
            order_Buyer_AddressCountryIsoCodeAlpha2:
              description: The Buyer address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)
              example: FR
              type: string
            order_Buyer_AddressCountryName:
              description: The Buyer address country name
              example: France
              type: string
            order_Buyer_AddressLine1:
              description: The Buyer address line 1 of this order
              example: 5 rue amélie
              type: string
            order_Buyer_AddressLine2:
              description: The Buyer address line 2 of this order
              example: BDR
              type: string
            order_Buyer_AddressLine3:
              description: The Buyer address line 3 of this order
              example: RDC
              type: string
            order_Buyer_AddressPostalCode:
              description: The Buyer address postal code of this order
              example: "13014"
              type: string
            order_Buyer_AddressStateOrRegion:
              description: The Buyer address state or region of this order
              example: BDR
              type: string
            order_Buyer_Civility:
              description: The buyer civility for this order
              example: Marseille
              type: string
            order_Buyer_CompanyName:
              description: The buyer company name for this order
              example: Marsillia
              type: string
            order_Buyer_Email:
              description: The email of the buyer for this order
              example: client_000000@manomano.fr
              type: string
            order_Buyer_FirstName:
              description: Order Buyer first name
              example: Monroe
              type: string
            order_Buyer_Identifier:
              description: The buyer identifier for this order
              example: "1234567890"
              type: string
            order_Buyer_LastName:
              description: Order Buyer last name
              example: Monroe
              type: string
            order_Buyer_MobilePhone:
              description: The mobile phone number of the buyer for this order
              example: "+33000000042"
              type: string
            order_Buyer_Phone:
              description: The phone number of the buyer for this order
              example: "+33000000101"
              type: string
            order_Comment:
              description: The comment associated to this order
              example: This is a comment
              type: string
            order_FulfilledBy:
              description: The order FulfilledBy
              type: string
            order_IsBusiness:
              description: The order IsBusiness
              type: boolean
            order_IsPrime:
              description: Indicates if the order is considered as Prime (only on Amazon)
              example: "true"
              type: boolean
            order_MarketPlaceChannel:
              description: Useful to identify the origin of the order. For example in Amazon.
              example: Amazon France
              type: string
            order_OrderItemsSourceUri:
              description: |
                Technical information: The url to the source of this order items. We received this information from the marketplace.
              example: http://beezupblob.com/orderItems.xml
              format: uri
              type: string
            order_OrderSourceUri:
              description: |
                Technical information: The url to the source of this order. We received this information from the marketplace.
              example: http://beezupblob.com/order.xml
              format: uri
              type: string
            order_PayingUtcDate:
              description: The UTC date of the payment of this order
              example: 2017-04-01T13:22:01Z
              format: date-time
              type: string
            order_PaymentMethod:
              description: The payment method of this order
              example: 1 / 1X
              type: string
            order_Shipping_AddressCity:
              description: The shipping address city of this order
              example: Marseille
              type: string
            order_Shipping_AddressCountryIsoCodeAlpha2:
              description: The shipping address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)
              example: FR
              type: string
            order_Shipping_AddressCountryName:
              description: The shipping address country name
              example: France
              type: string
            order_Shipping_AddressLine1:
              description: The shipping address line 1 of this order
              example: 5 rue amélie
              type: string
            order_Shipping_AddressLine2:
              description: The shipping address line 2 of this order
              example: BDR
              type: string
            order_Shipping_AddressLine3:
              description: The shipping address line 3 of this order
              example: RDC
              type: string
            order_Shipping_AddressName:
              description: The name of the person in the shipping address for this order
              example: Jacques BAUREGARD
              type: string
            order_Shipping_AddressPostalCode:
              description: The shipping address postal code of this order
              example: "13014"
              type: string
            order_Shipping_AddressStateOrRegion:
              description: The shipping address state or region of this order
              example: BDR
              type: string
            order_Shipping_Civility:
              description: The civility of the person in the shipping address for this order
              example: MRS
              type: string
            order_Shipping_CompanyName:
              description: The company name of the shipping address for this order
              example: My Company
              type: string
            order_Shipping_EarliestShipUtcDate:
              description: The UTC date of the earliest ship for this order
              example: 2017-04-02T21:30:00Z
              format: date-time
              type: string
            order_Shipping_Email:
              description: The email of the person in the shipping address for this order
              example: client_000000@manomano.fr
              type: string
            order_Shipping_FirstName:
              description: Order Shipping first name
              example: Monroe
              type: string
            order_Shipping_LastName:
              description: Order Shipping last name
              example: Monroe
              type: string
            order_Shipping_LatestShipUtcDate:
              description: The UTC date of the latest ship for this order
              example: 2017-04-30T21:30:00Z
              format: date-time
              type: string
            order_Shipping_Method:
              description: The shipping method of this order
              example: DPD Domicile
              type: string
            order_Shipping_MobilePhone:
              description: The mobile phone number of the person in the shipping address for this order
              example: "+33000000042"
              type: string
            order_Shipping_Phone:
              description: The phone number of the person in the shipping address for this order
              example: "+33000000041"
              type: string
            order_Shipping_Price:
              description: The shipping price of this order
              example: "6.9"
              format: decimal
              type: number
            order_Shipping_ShippingTax:
              description: The shipping tax for this order
              example: "0.0"
              format: decimal
              type: number
            order_TotalCommission:
              description: The total commission of this order
              example: "0.0"
              format: decimal
              type: number
            order_TotalTax:
              description: The total tax of this order
              example: "0.0"
              format: decimal
              type: number
            transitionLinks:
              $ref: "#/components/schemas/orderTransitionLinks"
          required:
            - marketplaceTechnicalCode
            - accountId
            - beezUPOrderId
            - marketplaceBusinessCode
            - order_MarketplaceOrderId
            - order_Status_BeezUPOrderStatus
            - order_PurchaseUtcDate
            - order_LastModificationUtcDate
            - order_MarketplaceLastModificationUtcDate
            - processing
            - etag
            - links
            - orderItems
            - transitionLinks
          type: object
    orderByDirection:
      description: Indicate which direction to order results by
      enum:
        - Ascending
        - Descending
      example: Ascending
      type: string
    orderChangeType:
      description: The business operation type that can be done on an order
      type: string
      x-lov: OrderChangeBusinessOperationType
    orderExportationReporting:
      description: Represent the reporting of the Order report exportations
      properties:
        abortionUtcDate:
          example: 2017-04-01T13:10:12Z
          format: date-time
          type: string
        beginUtcDate:
          example: 2017-04-01T13:10:12Z
          format: date-time
          type: string
        blobNameUri:
          example: http://beezuporder2.blob.com/yourReport.csv
          type: string
        endUtcDate:
          example: 2017-04-01T15:10:12Z
          format: date-time
          type: string
        enqueuedUtcDate:
          example: 2017-04-01T13:09:12Z
          format: date-time
          type: string
        errorMessage:
          example: You have an error here
          type: string
        executionUUID:
          example: "00000000000000000000000000000000000000000000000"
          format: uuid
          type: string
        expirationUtcDate:
          example: 2017-04-01T13:39:12Z
          format: date-time
          type: string
        failureUtcDate:
          example: 2017-04-01T13:39:12Z
          format: date-time
          type: string
        ipAddress:
          example: 127.0.0.1
          type: string
        jsonCriteria:
          description: Raw representation of the JSON
          example: '{"StartDate:"2016-09-30T22:00:00Z","EndDate:"2016-10-30T23:00:00Z","OrderListingFilterDateSearchType:0,"MarketPlaceOrderIds:null,"BeezUPOrderStatusNames:null,"ResultByPage:20,"MerchantOrderIds:null,"PageIndex:0,"MarketPlaceTechnicalCodes:["PriceMinister","Amazon","CDiscount","Mirakl"],"MarketPlaceBusinessCodes:["PRICEMINISTER"],"AccountIds:[1234,987],"StoreIds:["00000000-0000-0000-0000-00000000007c"],"BuyerFullName:null}'
          type: string
        lastUpdateUtcDate:
          example: 2017-04-01T15:10:12Z
          format: date-time
          type: string
        orderCount:
          example: "1024"
          format: int32
          type: integer
        processingStatus:
          $ref: "#/components/schemas/orderExportationReportingProcessingStatus"
        remainingOrderCount:
          example: "0"
          format: int32
          type: integer
        resumedUtcDate:
          example: 2017-04-01T13:39:12Z
          format: date-time
          type: string
        sourceType:
          $ref: "#/components/schemas/sourceType"
        sourceUserId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
        sourceUserName:
          example: Marilyn monroe
          type: string
        suspendedUtcDate:
          example: 2017-04-01T13:39:12Z
          format: date-time
          type: string
        timeoutDuration:
          example: 00:30:00
          type: string
        warningMessage:
          example: You have a warning here
          type: string
      required:
        - enqueuedUtcDate
        - executionUUID
        - ipAddress
        - processingStatus
        - sourceType
        - sourceUserName
      type: object
    orderExportationReportingProcessingStatus:
      enum:
        - None
        - InProgress
        - Done
        - Failed
        - AlreadyInProgress
        - Aborted
        - Suspended
      example: Done
      type: string
    orderExportations:
      description: |
        The list of Order report exportations.\
        The paginationResult properties can be null if the list is empty.
      properties:
        exportations:
          items:
            $ref: "#/components/schemas/orderExportationReporting"
          type: array
        links:
          $ref: "#/components/schemas/orderExportationsLinks"
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
      required:
        - links
        - exportations
      type: object
    orderExportationsLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetOrderExportationsLink"
      required:
        - self
      type: object
    orderHarvestErrorValue:
      properties:
        errorMessage:
          type: string
        technicalCodePropertyName:
          type: string
      required:
        - technicalCodePropertyName
        - errorMessage
      type: object
    orderHarvestErrors:
      additionalProperties:
        $ref: "#/components/schemas/orderHarvestErrorValue"
      description: The key is the OrderMetaInfo.
      type: object
    orderHeader:
      description: Describe the basic information related to an order. All properties with the prefix order_ are translated in the list of values /user/lov/OrderMetaInfoOrderDetails
      properties:
        accountId:
          $ref: "#/components/schemas/accountId"
        beezUPOrderId:
          $ref: "#/components/schemas/beezUPOrderId"
        beezUPOrderUrl:
          $ref: "#/components/schemas/BeezUP.Common.HttpUrl"
        etag:
          $ref: "#/components/schemas/etag"
        links:
          $ref: "#/components/schemas/orderHeaderLinks"
        marketplaceBusinessCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceBusinessCode"
        marketplaceTechnicalCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceTechnicalCode"
        order_Buyer_Name:
          $ref: "#/components/schemas/order_Buyer_Name"
        order_CurrencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        order_Invoice_Number:
          description: The order invoice number
          type: string
        order_Invoice_Uri:
          description: The order invoice URI
          type: string
        order_LastModificationUtcDate:
          description: The last modification UTC date done by BeezUP of this order
          example: 2017-04-16T10:30:23Z
          format: date-time
          type: string
        order_MarketplaceLastModificationUtcDate:
          description: The last modification UTC date done by the marketplace on this order
          example: 2017-04-16T10:25:23Z
          format: date-time
          type: string
        order_MarketplaceOrderId:
          $ref: "#/components/schemas/marketplaceOrderId"
        order_MerchantECommerceSoftwareName:
          $ref: "#/components/schemas/order_MerchantECommerceSoftwareName"
        order_MerchantECommerceSoftwareVersion:
          $ref: "#/components/schemas/order_MerchantECommerceSoftwareVersion"
        order_MerchantOrderId:
          $ref: "#/components/schemas/order_MerchantOrderId"
        order_PurchaseUtcDate:
          description: The purchase date of this order
          example: 2017-03-31T21:30:23Z
          format: date-time
          type: string
        order_Status_BeezUPOrderStatus:
          $ref: "#/components/schemas/beezUPOrderStatus"
        order_Status_MarketplaceOrderStatus:
          $ref: "#/components/schemas/marketplaceOrderStatus"
        order_TotalPrice:
          description: The total price of this order (corresponding to the amount paid by the customer)
          example: "101.42"
          format: decimal
          type: number
        processing:
          $ref: "#/components/schemas/processing"
      required:
        - marketplaceTechnicalCode
        - accountId
        - beezUPOrderId
        - marketplaceBusinessCode
        - order_MarketplaceOrderId
        - order_Status_BeezUPOrderStatus
        - order_PurchaseUtcDate
        - order_LastModificationUtcDate
        - order_MarketplaceLastModificationUtcDate
        - processing
        - etag
        - links
      type: object
    orderHeaderLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetOrderLink"
      required:
        - self
      type: object
    orderHeaderWithLinks:
      allOf:
        - $ref: "#/components/schemas/orderHeader"
        - properties:
            links:
              $ref: "#/components/schemas/orderHeaderLinks"
          required:
            - links
          type: object
    orderHistory:
      description: Describe the history related to an order
      properties:
        changeOrderReportings:
          description: The list of change order operation
          items:
            $ref: "#/components/schemas/changeOrderReporting"
          type: array
        harvestOrderReportings:
          items:
            $ref: "#/components/schemas/harvestOrderReporting"
          type: array
        lastModificationUtcDate:
          format: date-time
          type: string
      type: object
    orderIdentifier:
      properties:
        accountId:
          $ref: "#/components/schemas/accountId"
        beezUPOrderId:
          $ref: "#/components/schemas/beezUPOrderId"
        marketplaceTechnicalCode:
          $ref: "#/components/schemas/BeezUP.Common.MarketplaceTechnicalCode"
      required:
        - marketplaceTechnicalCode
        - accountId
        - beezUPOrderId
      type: object
    orderIdentifierWithETag:
      allOf:
        - $ref: "#/components/schemas/orderIdentifier"
        - properties:
            etag:
              $ref: "#/components/schemas/etag"
          required:
            - marketplaceTechnicalCode
            - accountId
            - beezUPOrderId
            - etag
          type: object
    orderIndex:
      properties:
        links:
          $ref: "#/components/schemas/orderIndexLinks"
        lovLinks:
          $ref: "#/components/schemas/orderIndexLovLinks"
      required:
        - links
        - lovLinks
      type: object
    orderIndexLinks:
      description: Gives you all entry point operations you can do on this API
      properties:
        autoTransitions:
          $ref: "#/components/schemas/links.GetAutomaticTransitionsLink"
        clearMerchantInfos:
          $ref: "#/components/schemas/links.ClearMerchantOrderInfoListLink"
        export:
          $ref: "#/components/schemas/links.ExportOrdersLink"
        exportations:
          $ref: "#/components/schemas/links.GetOrderExportationsLink"
        harvest:
          $ref: "#/components/schemas/links.HarvestAllLink"
        lightOrders:
          $ref: "#/components/schemas/links.GetOrderListLightLink"
        orders:
          $ref: "#/components/schemas/links.GetOrderListFullLink"
        self:
          $ref: "#/components/schemas/links.GetOrderIndexLink"
        setMerchantInfos:
          $ref: "#/components/schemas/links.SetMerchantOrderInfoListLink"
        status:
          $ref: "#/components/schemas/links.GetMarketplaceAccountsSynchronizationLink"
      required:
        - self
        - status
        - harvest
        - setMerchantInfos
        - clearMerchantInfos
        - export
        - autoTransitions
        - orders
        - lightOrders
      type: object
    orderIndexLovLinks:
      description: Gives you all the LOV to get the translations realated to operation name, codes, property names and statuses.
      properties:
        orderChangeBusinessOperationType:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        orderProperty:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        orderPropertyPosted:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
        orderState:
          $ref: "#/components/schemas/BeezUP.Common.LOVLink3"
      required:
        - orderChangeBusinessOperationType
        - orderState
        - orderProperty
        - orderPropertyPosted
      type: object
    orderInvoiceDesignSettings:
      properties:
        footerContentHtml:
          $ref: "#/components/schemas/footerContentHtml"
        headerContentHtml:
          $ref: "#/components/schemas/headerContentHtml"
      type: object
    orderInvoiceGeneralSettings:
      description: Order Invoice General Settings
      properties:
        cultureName:
          $ref: "#/components/schemas/cultureName"
        invoicePrefix:
          $ref: "#/components/schemas/invoicePrefix"
        invoiceStartingSequenceNumber:
          $ref: "#/components/schemas/invoiceSequenceNumber"
        productVATPercent:
          $ref: "#/components/schemas/productVATPercent"
        shippingVATPercent:
          $ref: "#/components/schemas/shippingVATPercent"
      required:
        - cultureName
        - productVATPercent
        - shippingVATPercent
        - invoicePrefix
        - invoiceStartingSequenceNumber
      type: object
    orderInvoiceUri:
      description: order invoice url
      example: http://www.mydomain.com
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.?&\%-=])*\/?$
      type: string
      x-exclude: true
      x-pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.?&\%-=])*\/?$
    orderItem:
      description: Describe an order item. All properties with the prefix orderItem_ are translated in the list of values /user/lov/OrderMetaInfoOrderItems
      properties:
        beezUPOrderItemId:
          description: The BeezUP identifier of the order Item
          example: "1"
          type: string
        orderItem_BeezUPStoreId:
          description: The store id in the beezup system related to the order item. This property will help you to match the order to the inventory system.
          example: 00000000-cceb-4c20-b2c9-000000000000
          type: string
        orderItem_Condition:
          description: The merchant product condition of the order item
          example: New
          type: string
        orderItem_ImageUrl:
          description: The URL of the image of the order item
          example: http://blabla.com//das6-45.jpg
          type: string
        orderItem_ItemPrice:
          description: The price of the order item
          example: "6.86"
          format: decimal
          type: number
        orderItem_ItemTax:
          description: The tax of the order item
          example: "0.0"
          format: decimal
          type: number
        orderItem_MarketPlaceProductId:
          description: The marketplace product identifier of the order item
          example: ""
          type: string
        orderItem_MarketplaceImageUri:
          description: The marketplace image uri
          example: http://beezupblob.com/marketplaceImg.jpg
          type: string
        orderItem_MarketplaceProductUri:
          description: The merchant product uri of the order item
          example: http://beezupblob.com/productLink.xml
          type: string
        orderItem_MerchantImportedProductId:
          description: The product id indicated in the catalog importation in BeezUP system for this order item. This property will help you to match the order to the inventory system.
          example: "73267"
          type: string
        orderItem_MerchantImportedProductIdColumnName:
          description: The column name for the product id indicated in the catalog importation in BeezUP system related to this order item. This property will help you to match the order to the inventory system.
          example: reference
          type: string
        orderItem_MerchantImportedProductUrl:
          description: The product url indicated in the catalog importation in BeezUP system related to this order item
          example: http://blabla.com/my-folder/73267.html
          type: string
        orderItem_MerchantProductId:
          description: The merchant product id of the order item
          example: BlaLdas6-4.5
          type: string
        orderItem_MerchantProductIdColumnName:
          description: The column name indicate in the mapping for the product id related to the order item
          example: reference_produit
          type: string
        orderItem_OrderItemType:
          description: The order item type of the order item
          example: Product
          type: string
        orderItem_Quantity:
          description: The quantity of the order item
          example: "1.0"
          format: decimal
          type: number
        orderItem_Shipping_Price:
          description: The shipping price of the order item
          example: "0.0"
          format: decimal
          type: number
        orderItem_Title:
          description: The title of the order item
          example: bLA acide-plomb 6v-4.5ah 70x48x106mm
          type: string
        orderItem_TotalPrice:
          description: The total price of the order item
          example: "6.86"
          format: decimal
          type: number
        orderItem_gtin:
          description: The order item gtin
          example: gtin_sample
          type: string
      required:
        - beezUPOrderItemId
        - orderItem_OrderItemType
      type: object
    orderLinks:
      allOf:
        - $ref: "#/components/schemas/orderHeaderLinks"
        - properties:
            clearMerchantInfo:
              $ref: "#/components/schemas/links.ClearMerchantOrderInfoLink"
            harvest:
              $ref: "#/components/schemas/links.HarvestOrderLink"
            history:
              $ref: "#/components/schemas/links.GetOrderHistoryLink"
            setMerchantInfo:
              $ref: "#/components/schemas/links.SetMerchantOrderInfoLink"
          required:
            - self
            - history
            - harvest
            - setMerchantInfo
            - clearMerchantInfo
          type: object
    orderListDateSearchType:
      default: Modification
      description: Indicates on which date you want to make the filter
      enum:
        - Modification
        - Purchase
        - MarketPlaceModification
      type: string
    orderListFull:
      description: |
        The order list with all information we have from the orders and its items.\
        The paginationResult properties can be null if the list is empty.
      properties:
        links:
          $ref: "#/components/schemas/orderListFullLinks"
        orders:
          items:
            $ref: "#/components/schemas/order"
          type: array
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
      required:
        - orders
        - links
      type: object
    orderListFullLinks:
      allOf:
        - $ref: "#/components/schemas/orderListLinks"
        - properties:
            self:
              $ref: "#/components/schemas/links.GetOrderListFullLink"
          required:
            - self
            - harvest
            - setMerchantInfos
            - clearMerchantInfos
            - export
            - status
          type: object
    orderListFullWithLinks:
      properties:
        links:
          $ref: "#/components/schemas/orderListFullLinks"
        orders:
          items:
            $ref: "#/components/schemas/orderWithLinks"
          type: array
        paginationResult:
          $ref: "#/components/schemas/paginationResult"
      required:
        - paginationResult
        - orders
        - links
      type: object
    orderListLight:
      description: |
        The order list with minimum information we have from the orders.\
        The paginationResult properties can be null if the list is empty.
      properties:
        links:
          $ref: "#/components/schemas/orderListLightLinks"
        orders:
          items:
            $ref: "#/components/schemas/orderHeader"
          type: array
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
      required:
        - orders
        - links
      type: object
    orderListLightLinks:
      allOf:
        - $ref: "#/components/schemas/orderListLinks"
        - properties:
            self:
              $ref: "#/components/schemas/links.GetOrderListLightLink"
          required:
            - self
            - harvest
            - setMerchantInfos
            - clearMerchantInfos
            - export
            - status
          type: object
    orderListLightWithLinks:
      properties:
        links:
          $ref: "#/components/schemas/orderListLightLinks"
        orders:
          items:
            $ref: "#/components/schemas/orderHeaderWithLinks"
          type: array
        paginationResult:
          $ref: "#/components/schemas/paginationResult"
      required:
        - paginationResult
        - orders
        - links
      type: object
    orderListLinks:
      description: The list of actions you can do from the order list response
      properties:
        clearMerchantInfos:
          $ref: "#/components/schemas/links.ClearMerchantOrderInfoListLink"
        export:
          $ref: "#/components/schemas/links.ExportOrdersLink"
        harvest:
          $ref: "#/components/schemas/links.HarvestAllLink"
        setMerchantInfos:
          $ref: "#/components/schemas/links.SetMerchantOrderInfoListLink"
        status:
          $ref: "#/components/schemas/links.GetMarketplaceAccountsSynchronizationLink"
      required:
        - harvest
        - setMerchantInfos
        - clearMerchantInfos
        - export
        - status
      type: object
    orderListRequest:
      allOf:
        - $ref: "#/components/schemas/orderListRequestWithoutPagination"
        - properties:
            pageNumber:
              $ref: "#/components/schemas/pageNumber"
            pageSize:
              $ref: "#/components/schemas/pageSize"
          required:
            - beginPeriodUtcDate
            - endPeriodUtcDate
            - pageSize
            - pageNumber
          type: object
    orderListRequestWithoutPagination:
      properties:
        accountIds:
          description: Account Id list
          example:
            - "12345"
          items:
            $ref: "#/components/schemas/accountId"
          type: array
        beezUPOrderStatuses:
          example:
            - InProgress
          items:
            $ref: "#/components/schemas/beezUPOrderStatus"
          type: array
        beginPeriodUtcDate:
          description: |
            The begin period you want to make the search. \
            The period MUST not be greater than 30 days.
            The begin period MUST be lower than the end period.
          example: 2017-03-01T13:10:01Z
          format: date-time
          type: string
        dateSearchType:
          $ref: "#/components/schemas/dateSearchType"
        endPeriodUtcDate:
          description: |
            The end period of you search. \
            The period MUST not be greater than 30 days. \
            The end period MUST be greater than the begin period.
            The end period MUST be lower to the current date.
          example: 2017-04-01T13:10:01Z
          format: date-time
          type: string
        invoiceAvailabilityType:
          $ref: "#/components/schemas/invoiceAvailabilityType"
        marketplaceBusinessCodes:
          example:
            - PRICEMINISTER
          items:
            $ref: "#/components/schemas/BeezUP.Common.MarketplaceBusinessCode"
          type: array
        marketplaceOrderIds:
          example:
            - AmazonOrderId1234
          items:
            $ref: "#/components/schemas/marketplaceOrderId"
          type: array
        marketplaceTechnicalCodes:
          example:
            - PriceMinister
          items:
            $ref: "#/components/schemas/BeezUP.Common.MarketplaceTechnicalCode"
          type: array
        orderMerchantInfoSynchronizationStatus:
          $ref: "#/components/schemas/orderMerchantInfoSynchronizationStatus"
        order_Buyer_Name:
          $ref: "#/components/schemas/order_Buyer_Name"
        order_MerchantOrderIds:
          description: Merchant order id list
          example:
            - MyOrderId1234
          items:
            $ref: "#/components/schemas/order_MerchantOrderId"
          type: array
        storeIds:
          description: Store Id list
          items:
            $ref: "#/components/schemas/BeezUP.Common.StoreId"
          type: array
      required:
        - beginPeriodUtcDate
        - endPeriodUtcDate
      type: object
    orderMerchantInfoSynchronizationStatus:
      description: Indicates on which order merchant info synchronization status to filter
      example: All
      type: string
      x-lov: OrderMerchantInfoSynchronizationStatus
    orderOperationResponse:
      description: The response given by the batch operation for an order
      properties:
        errors:
          description: The error list
          items:
            $ref: "#/components/schemas/BeezUP.Common.UserErrorMessage"
          type: array
        order:
          $ref: "#/components/schemas/orderIdentifier"
        status:
          description: Indicates the http status corresponding to the individual operation
          example: "204"
          type: integer
        success:
          description: Indicates if the operation succeed or not
          example: "true"
          type: boolean
      required:
        - order
        - success
        - status
      type: object
    orderTransitionLinks:
      description: Contains the authorized change actions for an order
      example:
        - href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
          method: POST
          parameters:
            If-Match:
              in: header
              required: true
              type: string
              value: '"ca071a4580129f932a03971968ffef69"'
            request:
              in: body
              properties:
                order_Shipping_CarrierName:
                  lovLink:
                    href: /v2/user/PriceMinisterCarrierName
                  lovRequired: "true"
                  required: true
                  type: string
                order_Shipping_FulfillmentDate:
                  required: true
                  type: date-time
                order_Shipping_Method:
                  lovLink:
                    href: /v2/user/ShippingMethod_PriceMinister
                  lovRequired: "false"
                  required: true
                  type: string
                order_Shipping_ShipperTrackingNumber:
                  required: true
                  type: string
              schema: changeOrderRequest
              type: object
            testMode:
              in: query
              required: false
              type: boolean
              value: "false"
            userName:
              in: query
              required: true
              type: string
          rel: ShipOrder
          templated: "true"
        - href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/CancelOrder
          method: POST
          parameters:
            If-Match:
              in: header
              required: true
              type: string
              value: '"ca071a4580129f932a03971968ffef69"'
            request:
              in: body
              properties:
                order_Cancel_Reason:
                  required: true
                  type: string
              schema: changeOrderRequest
              type: object
            testMode:
              in: query
              required: false
              type: boolean
              value: "false"
            userName:
              in: query
              required: true
              type: string
          rel: CancelOrder
          templated: "true"
      items:
        $ref: "#/components/schemas/links.ChangeOrderLink"
      type: array
    orderWithLinks:
      allOf:
        - $ref: "#/components/schemas/order"
        - properties:
            links:
              $ref: "#/components/schemas/orderLinks"
            transitionLinks:
              $ref: "#/components/schemas/orderTransitionLinks"
          required:
            - links
            - transitionLinks
          type: object
    order_Buyer_Name:
      description: Buyer full name
      example: Monroe
      type: string
    order_MerchantECommerceSoftwareName:
      description: The e-commerce software name of the merchant
      example: Prestashop
      type: string
    order_MerchantECommerceSoftwareVersion:
      description: The e-commece software version of the merchant
      example: 123.0.1
      type: string
    order_MerchantOrderId:
      description: The order merchant identifier
      example: MyOrderMerchantId
      type: string
    orderedReportFilterCommonParameters:
      allOf:
        - $ref: "#/components/schemas/reportFilterCommonParameters"
        - properties:
            orderBy:
              $ref: "#/components/schemas/performanceIndicatorType"
            orderByDirection:
              $ref: "#/components/schemas/orderByDirection"
          type: object
      description: Contains common filter parameters with Order By functionnality
    pageNumber:
      default: "1"
      description: Indicates the page number
      example: "1"
      format: int32
      minimum: 1
      type: integer
    pageSize:
      default: "100"
      description: Indicate the order count per page
      example: "100"
      format: int32
      maximum: 100
      minimum: 25
      type: integer
    paginationRequestParameters:
      properties:
        pageNumber:
          $ref: "#/components/schemas/BeezUP.Common.PageNumber"
        pageSize:
          $ref: "#/components/schemas/BeezUP.Common.PageSize"
      type: object
    paginationResult:
      example:
        entryCount: "25"
        links:
          first:
            href: /merchant/orders/v1/list/full
            method: POST
            parameters:
              - in: body
                name: request
                schema: orderListRequest
                type: object
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageNumber: "1"
                  pageSize: "25"
          last:
            href: /merchant/orders/v1/list/full
            method: POST
            parameters:
              - in: body
                name: request
                schema: orderListRequest
                type: object
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageNumber: "38"
                  pageSize: "25"
          next:
            href: /merchant/orders/v1/list/full
            method: POST
            parameters:
              - in: body
                name: request
                schema: orderListRequest
                type: object
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageNumber: "2"
                  pageSize: "25"
        pageCount: "38"
        totalEntryCount: "943"
      properties:
        entryCount:
          description: The entry count currently returned
          example: "25"
          minimum: 0
          type: integer
        links:
          $ref: "#/components/schemas/paginationResultLinks"
        pageCount:
          description: The page count
          example: "38"
          minimum: 0
          type: integer
        totalEntryCount:
          description: The total entry count
          example: "943"
          minimum: 0
          type: integer
      required:
        - entryCount
        - pageCount
        - totalEntryCount
        - links
      type: object
      x-exclude: true
    paginationResultLinks:
      description: The navigation links 'first', 'last', 'next', 'previous'
      properties:
        first:
          $ref: "#/components/schemas/link3"
        last:
          $ref: "#/components/schemas/link3"
        next:
          $ref: "#/components/schemas/link3"
        previous:
          $ref: "#/components/schemas/link3"
      required:
        - first
        - last
      type: object
      x-exclude: true
    parameterIn:
      description: |
        * path: if the parameter must be pass in the path uri
        * header: if the parameter must be passed in http header
        * query: if the parameter must be passed in querystring
        * body: if the parameter must be passed in the body
        * file: if the parameter must be passed in a multipart/form-data (https://swagger.io/docs/specification/2-0/file-upload/)
      enum:
        - path
        - header
        - query
        - body
        - file
      example: path
      type: string
      x-exclude: true
    parameterType:
      default: string
      description: The value type of the parameter
      enum:
        - string
        - integer
        - number
        - boolean
        - object
        - array
        - date
        - date-time
        - file
      example: string
      type: string
      x-exclude: true
    paymentMethod:
      default: OnlinePayment
      description: Payment method
      enum:
        - Transfer
        - Debit
        - Paypal
        - Check
        - CreditNote
        - Loss
        - OnlinePayment
      type: string
    performanceIndicatorFilter:
      properties:
        operatorName:
          $ref: "#/components/schemas/performanceIndicatorFilterOperatorName"
        performanceIndicator:
          $ref: "#/components/schemas/performanceIndicatorType"
        value:
          description: Indicates the filter value to apply on this indicator
          example: "10.42"
          type: number
      required:
        - performanceIndicator
        - operatorName
        - value
      type: object
    performanceIndicatorFilterOperatorName:
      description: Indicates the operator you want to apply on this indicator
      example: Equals
      type: string
      x-lov: PerformanceIndicatorFilterOperatorName
    performanceIndicatorFormula:
      description: The KPI formula
      example:
        firstParameter: Cost
        operatorName: Multiply
        secondParamter: ROI
        thirdParameter: "100"
      properties:
        firstParameter:
          $ref: "#/components/schemas/performanceIndicatorFormulaParameterType"
        operatorName:
          $ref: "#/components/schemas/performanceIndicatorFormulaOperatorName"
        secondParameter:
          $ref: "#/components/schemas/performanceIndicatorFormulaParameterType"
        thirdParameter:
          default: "100"
          description: Indicate the value of the third parameter of your formula
          example: "100"
          type: integer
      type: object
    performanceIndicatorFormulaOperatorName:
      enum:
        - Multiply
        - Divide
      example: Multiply
      type: string
    performanceIndicatorFormulaParameterType:
      description: Indicate on which indicator or value you want to make your formula
      enum:
        - Cost
        - TotalSales
        - Margin
        - TotalSalesMinusCost
        - MarginMinusCost
        - OrderCount
        - ClickCount
        - SoldProductCount
        - One
      example: Cost
      type: string
    performanceIndicatorType:
      description: Indicate on which indicator or value you want to make your formula
      enum:
        - ClickCount
        - Cost
        - OrderCount
        - ProductCount
        - SoldProductCount
        - DisabledProductCount
        - EnabledProductCount
        - TotalSales
        - Margin
        - ROI
        - PerformanceIndicator
      example: Cost
      type: string
    personalInfo:
      properties:
        beezUPTimeZoneId:
          $ref: "#/components/schemas/beezUPTimeZoneId"
        firstName:
          $ref: "#/components/schemas/firstName"
        lastName:
          $ref: "#/components/schemas/lastName"
        phoneNumber:
          $ref: "#/components/schemas/phoneNumber"
        whatIDo:
          $ref: "#/components/schemas/whatIDo"
      required:
        - firstName
        - lastName
        - phoneNumber
        - beezUPTimeZoneId
      type: object
    phoneNumber:
      description: Your phone number
      example: "5551234"
      type: string
    postalCode:
      description: Your address postal code
      example: "13014"
      type: string
    previewOrderInvoiceRequest:
      properties:
        invoiceSequenceNumber:
          $ref: "#/components/schemas/invoiceSequenceNumber"
      type: object
    previewOrderInvoiceResponse:
      properties:
        invoiceHtmlContent:
          $ref: "#/components/schemas/invoiceContentHtml"
      required:
        - invoiceHtmlContent
      type: object
    previousFixPeriodInvoiceProrataInfo:
      description: Describe the prorata info based on your previous invoice
      properties:
        amountAfterTax:
          description: The amout after tax of the previous invoice
          example: "101.42"
          format: double
          type: number
        amountToBePaid:
          description: The amount to be payed of the previous invoice
          example: "0.0"
          format: double
          type: number
        computedProrataToBeDeducted:
          description: The prorata amount
          example: "194.66"
          format: double
          type: number
        contractId:
          description: The contract id related to the previous invoice
          example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
          format: guid
          type: string
        fixedPeriodEndDate:
          description: The fixed end period of the previous invoice
          example: 2017-05-01
          format: date
          type: string
        fixedPeriodStartDate:
          description: The fixed start period of the previous invoice
          example: 2017-04-01
          format: date
          type: string
        invoiceNumber:
          description: The previous invoice number
          example: B1234
          type: string
      type: object
    processing:
      description: If true, there is currently a harvest or an order change in progress. Otherwise false.
      example: "false"
      type: boolean
    product:
      description: Represent a catalog product
      properties:
        categoryId:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryId"
        exists:
          description: Indicates if the product exists in the current catalog
          example: "true"
          type: boolean
        productId:
          $ref: "#/components/schemas/BeezUP.Common.ProductId"
        values:
          $ref: "#/components/schemas/productValues"
      required:
        - productId
        - categoryId
        - values
        - exists
    productColumnsToDisplay:
      example:
        - 4b460e31-3d1f-4117-922d-b159a64ec1d2
      items:
        $ref: "#/components/schemas/BeezUP.Common.CatalogColumnId"
      maxItems: 1
      minItems: 0
      type: array
    productError:
      properties:
        ean:
          type: string
        errors:
          $ref: "#/components/schemas/productErrorCodes"
        lineNumber:
          type: integer
        mpn:
          type: string
        sku:
          $ref: "#/components/schemas/sku"
        title:
          type: string
      required:
        - lineNumber
        - errors
      type: object
    productErrorCode:
      properties:
        beezUPColumnName:
          $ref: "#/components/schemas/BeezUP.Common.BeezUPColumnName"
        errorCode:
          $ref: "#/components/schemas/errorCode"
        errorMessage:
          type: string
        userColumName:
          $ref: "#/components/schemas/userColumName"
      type: object
    productErrorCodes:
      items:
        $ref: "#/components/schemas/productErrorCode"
      type: array
    productErrors:
      description: Product Errors
      items:
        $ref: "#/components/schemas/productError"
      type: array
    productList:
      properties:
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
        products:
          items:
            $ref: "#/components/schemas/product"
          type: array
      required:
        - paginationResult
        - products
      type: object
    productOverrideWithCatalogValue:
      properties:
        catalogValue:
          description: The catalog product value
          example: Sony
          type: string
        override:
          description: The overridden product value
          example: Sony bravia
          type: string
      required:
        - override
      type: object
    productOverrides:
      additionalProperties:
        type: string
      description: The key is the channel column identifier
      example:
        0EA21509-1141-57BD-B679-371BC98B2ADA: http://www.blalbla.nl/images/cache/ldldld.jpg
        2A77749D-0AAB-5245-89B5-6A1A4E06DACA: http://www.blalbla.nl/images/cache/dldldl.jpg
        54B3B3CB-5CA5-5471-9DAE-5310C032059A: http://www.blalbla.nl/images/cache/dlmdl.jpg
        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA: Sony bravia
        8a76f06a-fefc-4c0d-bcfe-b210f1482977: "3563"
        B7B79A0B-A8DE-54DA-964C-E2704DF3738A: SHBELNL56
      type: object
    productOverridesCopyResponse:
      additionalProperties:
        type: string
      description: Product overrides compatibilites list
      example:
        0EA21509-1141-57BD-B679-371BC98B2ADA: http://www.blalbla.nl/images/cache/ldldld.jpg
        2A77749D-0AAB-5245-89B5-6A1A4E06DACA: http://www.blalbla.nl/images/cache/dldldl.jpg
        54B3B3CB-5CA5-5471-9DAE-5310C032059A: http://www.blalbla.nl/images/cache/dlmdl.jpg
        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA: Sony bravia
        8a76f06a-fefc-4c0d-bcfe-b210f1482977: "3563"
        B7B79A0B-A8DE-54DA-964C-E2704DF3738A: SHBELNL56
      type: object
    productOverridesWithCatalogValues:
      additionalProperties:
        $ref: "#/components/schemas/productOverrideWithCatalogValue"
      description: The key is the channel column identifier
      example:
        0EA21509-1141-57BD-B679-371BC98B2ADA:
          catalogValue: http://www.toto.com/thing/images/cache/ldldld.jpg
          override: http://www.blalbla.nl/images/cache/ldldld.jpg
        2A77749D-0AAB-5245-89B5-6A1A4E06DACA:
          catalogValue: http://www.toto.com/thing/images/cache/dldldl.jpg
          override: http://www.blalbla.nl/images/cache/dldldl.jpg
        54B3B3CB-5CA5-5471-9DAE-5310C032059A:
          catalogValue: http://www.toto.com/thing/cache/dlmdl.jpg
          override: http://www.blalbla.nl/images/cache/dlmdl.jpg
        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA:
          catalogValue: Sony
          override: Sony bravia
        8a76f06a-fefc-4c0d-bcfe-b210f1482977:
          catalogValue: x235
          override: "3563"
        B7B79A0B-A8DE-54DA-964C-E2704DF3738A:
          catalogValue: x_ezlSHBELNL56
          override: SHBELNL56
      type: object
    productSample:
      description: Describe a product sample
      properties:
        productValues:
          $ref: "#/components/schemas/productValues"
      type: object
    productSetVisibilityCriteria:
      properties:
        disabled:
          description: Search disabled products. If null the filter will not be taken in account.
          example: "false"
          type: boolean
        excluded:
          description: Search excluded products by at least an exclusion filter. If null the filter will not be taken in account.
          example: "false"
          type: boolean
        exist:
          description: If false, search for products absent from the current catalog. If true, search for products currently in the catalog. If null the filter will not be taken in account.
          example: "true"
          type: boolean
        logic:
          $ref: "#/components/schemas/productSetVisibilityCriteriaLogicType"
        uncategorized:
          description: Search product WITHOUT category mapped with the channel. If null the filter will not be taken in account.
          example: "false"
          type: boolean
      required:
        - logic
      type: object
    productSetVisibilityCriteriaLogicType:
      description: |
        Indicate how you want to combine the filters:
        * funnel: You will get the products which meet at least one of the product set criterion. The criteria are applied in the following order:
          - categorization
          - exclusion filters
          - deactivations
        * cumulative: You will get the products which have all the product set criteria
      enum:
        - funnel
        - cumulative
      type: string
    productStateFilter:
      default: All
      description: You can filter on the product state.
      enum:
        - All
        - Enabled
        - Disabled
      example: All
      type: string
    productVATPercent:
      description: Product VAT in percent
      example: "4.0"
      maximum: 100
      minimum: 0
      type: number
    productValues:
      additionalProperties:
        type: string
      description: The key is the column identifier
      example:
        012929c0-e78b-462a-a96e-25c061575385: http://media.conforama.fr/Medias/500000/80000/5000/500/10/G_585511_A.jpg
        46602e10-bc45-4944-a440-63d5f7ece1f8: "42"
        68082b11-4ffd-4bec-964a-465a471c7d37: SKU1234
        b6d74510-41ce-42ec-947a-0bdf62e9beee: Refrigerateur
        ba270fa0-8482-46be-905a-cae4ca746b92: http://www.conforama.fr/gros-electromenager/encastrable/refrigerateur-encastrable/refrigerateur-combine-161-litres-far-r5115s/p/585511
      type: object
    profilePictureInfo:
      properties:
        profilePictureSelected:
          $ref: "#/components/schemas/profilePictureSelected"
        profilePictureUrl:
          $ref: "#/components/schemas/profilePictureUrl"
      required:
        - profilePictureSelected
      type: object
    profilePictureInfoResponse:
      properties:
        links:
          $ref: "#/components/schemas/profilePictureInfoResponseLinks"
        profilePictureInfo:
          $ref: "#/components/schemas/profilePictureInfoWithDefault"
      required:
        - profilePictureInfo
        - links
      type: object
    profilePictureInfoResponseLinks:
      properties:
        save:
          $ref: "#/components/schemas/links.saveProfilePictureInfoLink"
        self:
          $ref: "#/components/schemas/links.getProfilePictureInfoLink"
      required:
        - self
        - save
      type: object
    profilePictureInfoWithDefault:
      allOf:
        - $ref: "#/components/schemas/profilePictureInfo"
        - properties:
            gravatarProfilePictureUrl:
              $ref: "#/components/schemas/gravatarProfilePictureUrl"
            initialsProfilePictureUrl:
              $ref: "#/components/schemas/initialsProfilePictureUrl"
          required:
            - profilePictureSelected
            - initialsProfilePictureUrl
            - gravatarProfilePictureUrl
          type: object
    profilePictureSelected:
      description: Your profile picture choice about usage of gravatar picture, initials picture or uploaded picture.
      enum:
        - gravatar
        - initials
        - uploaded
      example: initials
      type: string
    profilePictureUrl:
      description: Indicate the url of your picture profil
      example: https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Marlon_Brando_%28cropped%29.jpg/220px-Marlon_Brando_%28cropped%29.jpg
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
    promotionalCodeValidity:
      description: Indicate the validaty of the discount
      enum:
        - None
        - Valid
        - Invalid
        - ExpiredOrInactive
      example: Valid
      type: string
    publicChannelIndex:
      properties:
        channels:
          additionalProperties:
            $ref: "#/components/schemas/links.GetChannelsLink"
          description: The key is the country iso code
          example:
            DEU:
              href: /v2/public/channels/DEU
              method: GET
            ESP:
              href: /v2/public/channels/ESP'
              method: GET
            FRA:
              href: /v2/public/channels/FRA
              method: GET
            GBR:
              href: /v2/public/channels/GBR
              method: GET
            ITA:
              href: /v2/public/channels/ITA
              method: GET
          type: object
        links:
          example:
            channelCountryLov:
              href: /v2/public/lov/www_ChannelCountry
              method: GET
            channelTypeLov:
              href: /v2/public/lov/ChannelType
              method: GET
            sectorLov:
              href: /v2/public/lov/ParamSector
              method: GET
            self:
              href: /v2/public/channels
              method: GET
          properties:
            channelCountryLov:
              $ref: "#/components/schemas/links.GetPublicListOfValuesLink"
            channelTypeLov:
              $ref: "#/components/schemas/links.GetPublicListOfValuesLink"
            sectorLov:
              $ref: "#/components/schemas/links.GetPublicListOfValuesLink"
            self:
              $ref: "#/components/schemas/links.GetChannelsIndexLink"
          type: object
      type: object
    publicChannelInfo:
      properties:
        homeUrl:
          description: The channel home url
          example: http://www.amazon.fr
          format: uri
          type: string
        logoUrl:
          description: The channel logo url
          example: http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png
          format: uri
          type: string
        name:
          description: The channel name
          example: Amazon Direct FRA
          type: string
        sectors:
          description: The sector list related to a channel
          example:
            - BRICOLAGE
            - INFO
            - GENERALIST
          items:
            type: string
          type: array
        types:
          description: The type list related to a channel
          example:
            - Marketplace
          items:
            type: string
          type: array
      required:
        - name
        - homeUrl
        - logoUrl
        - types
      type: object
    publicChannelInfoList:
      properties:
        channels:
          items:
            $ref: "#/components/schemas/publicChannelInfo"
          type: array
        links:
          properties:
            self:
              $ref: "#/components/schemas/links.GetChannelsLink"
          type: object
      type: object
    publicListOfValuesResponse:
      properties:
        items:
          items:
            $ref: "#/components/schemas/BeezUP.Common.ListOfValueItem"
          type: array
        links:
          $ref: "#/components/schemas/publicListOfValuesResponseLinks"
      type: object
    publicListOfValuesResponseLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetPublicListOfValuesLink"
      type: object
    publicLovIndex:
      properties:
        links:
          $ref: "#/components/schemas/publicLovIndexLinks"
      type: object
    publicLovIndexLinks:
      properties:
        lists:
          $ref: "#/components/schemas/publicLovLinks"
        self:
          $ref: "#/components/schemas/links.GetPublicLovIndexLink"
      type: object
    publicLovLinks:
      additionalProperties:
        $ref: "#/components/schemas/links.GetPublicListOfValuesLink"
      description: List of lov link. The key is the list name.
      type: object
    publicationFeedReporting:
      description: Publication feed reporting
      properties:
        completed:
          description: Indicates if the publication is completed or not
          example: "true"
          type: boolean
        endUtcDate:
          description: The feed publication end time (UTC timezone)
          example: 2016-02-13T12:02:00Z
          format: date-time
          type: string
        errorMessage:
          description: The error message
          example: ""
          type: string
        exportedProducts:
          description: The product count downloaded from BeezUP Export
          example: "10142"
          format: int32
          type: integer
        failedItems:
          description: The item count (products or offers) the marketplace flagged as failed
          example: "1"
          format: int32
          type: integer
        feedType:
          $ref: "#/components/schemas/feedType"
        htmlReportGenerationErrorMessage:
          description: The error message if the Html Report generation failed
          example: Example error message
          type: string
        htmlReportUrl:
          description: The Url for the Html Report generated
          example: http://www.myreporthtml.com
          format: uri
          type: string
        processingStatus:
          description: The processing status
          example: Done
          type: string
        publishedItems:
          description: The item count (products or offers) the marketplace flagged as successful
          example: "10041"
          format: int32
          type: integer
        publishedItemsWithWarning:
          description: The item count (products or offers) the marketplace flagged as successful with warnings
          example: "123"
          format: int32
          type: integer
        startUtcDate:
          description: The feed publication start time (UTC timezone)
          example: 2016-02-13T12:01:11Z
          format: date-time
          type: string
        transmittedItems:
          description: The item count (products or offers) sent to the marketplace
          example: "10042"
          format: int32
          type: integer
      required:
        - feedType
        - processingStatus
        - startUtcDate
      type: object
    publicationReporting:
      description: Model for a publication reporting, can have multiple feeds
      properties:
        feeds:
          description: The feeds that were published
          example:
            - endUtcDate: 2016-02-13T12:02:00Z
              errorMessage: ""
              exportedProducts: "10142"
              failedItems: "1"
              feedType: Offers
              htmlReportGenerationErrorMessage: ""
              htmlReportUrl: http://www.myreporthtml.com
              processingStatus: Done
              publishedItems: "10041"
              publishedItemsWithWarning: "123"
              startUtcDate: 2016-02-13T12:01:11Z
              transmittedItems: "10042"
          items:
            $ref: "#/components/schemas/publicationFeedReporting"
          type: array
        publicationType:
          $ref: "#/components/schemas/publicationType"
      required:
        - publicationType
        - feeds
      type: object
    publicationStrategy:
      description: The Publication Type
      type: string
      x-lov: MarketplacePublicationV3Strategy
    publicationStrategyKind:
      default: Delta
      description: |
        Define the publication strategy kind, for that you have 2 choices 
        * Delta - This is the recommanded publication strategy kind, this strategy will push to the marketplace only the difference between your catalog and the previous published feeds done by BeezUP. 
        * Full - If you want to force the publication of all your catalog feeds to the marketplace. 
              !WARNING! Depending to the marketplace this operation will purge the existing offers on the marketplace that are not in the catalog or unknown from the publication feed referential.
      enum:
        - Delta
        - Full
      type: string
    publicationType:
      description: The Publication Type
      enum:
        - PublishProducts
        - PublishOffers
        - Unpublish
      example: PublishOffers
      type: string
      x-lov: MarketplacePublicationType
    publishCatalogToMarketplaceRequest:
      description: Publish the catalog to the marketplace
      properties:
        feedType:
          $ref: "#/components/schemas/feedType"
        publicationStrategyKind:
          $ref: "#/components/schemas/publicationStrategyKind"
        withUnpublish:
          description: In full publication strategy kind, for some marktetplace, you can ask to unpublish or not your existing feeds on the markeptlace absent from your exported catalog.
          type: boolean
      required:
        - feedType
        - publicationStrategyKind
        - withUnpublish
      type: object
    randomProductList:
      properties:
        products:
          items:
            $ref: "#/components/schemas/product"
          type: array
      required:
        - products
      type: object
    registerRequest:
      properties:
        commercialOwnerUserId:
          description: The user id of your commercial in BeezUP.
          example: 47ea14ab-195d-4f9a-a24e-32c329ee40f6
          format: uuid
          type: string
        cultureName:
          description: |
            Can be null. Default: en-GB. The culture name you want to use. FYI. \
            The email activation will use this culture.
          example: en-GB
          type: string
        email:
          description: Your email. We refuse disposable email.
          example: myemail@mycompany.com
          type: string
        password:
          description: |
            The password you want to use for your new account. \
            The password length must be greater or equals to 6 and lower or equals to 128. \
            The password must contains at least one number and one special character
          example: I@mW0nder$Full
          type: string
      required:
        - email
        - password
      type: object
    reportAdvancedFilters:
      properties:
        globalMarginPercent:
          description: If the margin type is 'Global', indicate the percentage of sale price.
          example: "10"
          maximum: 100
          minimum: 0
          type: integer
        linkClickToOrderMaxDay:
          default: "30"
          description: If the linkOrderType is OnClickDate, indicate the max day to search the click from the order
          example: "5"
          maximum: 180
          minimum: 0
          type: integer
        linkClickToOrderType:
          $ref: "#/components/schemas/linkClickToOrderType"
        marginType:
          $ref: "#/components/schemas/marginType"
        onlyDirectSales:
          default: "false"
          description: If true, you will get only direct sales. Otherwise the indirect sales will be included.
          example: "true"
          type: boolean
        onlyPaymentValidatedOrders:
          default: "false"
          description: If true, you will get the only the orders with payment validated. Otherwise, you will get all orders validated or not.
          example: "true"
          type: boolean
        performanceIndicatorFormula:
          $ref: "#/components/schemas/performanceIndicatorFormula"
      required:
        - marginType
        - linkClickToOrderType
        - onlyPaymentValidatedOrders
        - onlyDirectSales
        - performanceIndicatorFormula
      type: object
    reportByCategory:
      properties:
        allProductCount:
          description: The product count for this category. This includes all the products that have been imported and can still have associated clicks and orders.
          example: "101"
          type: integer
        catalogCategoryId:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryId"
        catalogCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryPath"
        catalogProductCount:
          description: The catalog product count for this category. This includes all products that are still present in your imported catalog.
          example: "101"
          type: integer
        clickCount:
          description: The click count for this category
          example: "1001"
          type: integer
        cost:
          description: The cost for this category
          example: "12.42"
          type: number
        enabledProductCount:
          description: The enabled product count for this category. This includes all products that are still present in your imported catalog and have not been disabled via the optimisation feature.
          example: "101"
          type: integer
        links:
          $ref: "#/components/schemas/reportByCategoryLinks"
        margin:
          description: The margin for this category
          example: "3.33"
          type: number
        orderCount:
          description: The order count for this category
          example: "25"
          type: integer
        performanceIndicator:
          description: The performance indicator based on the performance indicator formula indicated in the request for this category
          example: "25.33"
          type: number
        roi:
          description: The Return On Investment for this category
          example: "25.33"
          type: number
        soldProductCount:
          description: The product sold count count for this category
          example: "2"
          type: integer
        totalSales:
          description: The total sales for this category
          example: "234.42"
          type: number
      required:
        - catalogCategoryId
        - allProductCount
        - catalogProductCount
        - enabledProductCount
        - clickCount
        - cost
        - orderCount
        - performanceIndicator
        - totalSales
        - soldProductCount
        - links
      type: object
    reportByCategoryLinks:
      properties:
        disableProducts:
          $ref: "#/components/schemas/links.OptimiseByCategoryLink"
        enableProducts:
          $ref: "#/components/schemas/links.OptimiseByCategoryLink"
      type: object
    reportByCategoryRequest:
      allOf:
        - $ref: "#/components/schemas/orderedReportFilterCommonParameters"
        - $ref: "#/components/schemas/paginationRequestParameters"
    reportByCategoryResponse:
      properties:
        categories:
          items:
            $ref: "#/components/schemas/reportByCategory"
          type: array
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        links:
          $ref: "#/components/schemas/reportByCategoryResponseLinks"
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
      type: object
    reportByCategoryResponseLinks:
      allOf:
        - $ref: "#/components/schemas/reportByCommonResponseLinks"
    reportByChannel:
      properties:
        catalogProductCount:
          description: The catalog product count
          example: "101"
          type: integer
        channel:
          $ref: "#/components/schemas/BeezUP.Common.ChannelBasicInfo"
        clickCount:
          description: The click count
          example: "1024"
          type: integer
        cost:
          description: The cost for
          example: "1234.12"
          type: number
        enabledProductCount:
          description: The enabled product count
          example: "101"
          type: integer
        links:
          $ref: "#/components/schemas/reportByChannelLinks"
        margin:
          description: The margin
          example: "23.1"
          type: number
        orderCount:
          description: The order count
          example: "42"
          type: integer
        performanceIndicator:
          description: The performance indicator based on the performance indicator formula indicated in the request
          example: "12.21"
          type: number
        roi:
          description: The Return On Investment
          example: "42.42"
          type: number
        soldProductCount:
          description: The product sold count count
          example: "2"
          type: integer
        totalSales:
          description: The total sales
          example: "234.42"
          type: number
      required:
        - channel
        - catalogProductCount
        - enabledProductCount
        - clickCount
        - cost
        - orderCount
        - performanceIndicator
        - totalSales
        - soldProductCount
        - links
      type: object
    reportByChannelLinks:
      properties:
        disableProducts:
          $ref: "#/components/schemas/links.OptimiseByChannelLink"
        enableProducts:
          $ref: "#/components/schemas/links.OptimiseByChannelLink"
      type: object
    reportByChannelRequest:
      allOf:
        - $ref: "#/components/schemas/orderedReportFilterCommonParameters"
        - $ref: "#/components/schemas/paginationRequestParameters"
    reportByChannelResponse:
      properties:
        channels:
          items:
            $ref: "#/components/schemas/reportByChannel"
          type: array
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        links:
          $ref: "#/components/schemas/reportByChannelResponseLinks"
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
      required:
        - currencyCode
        - paginationResult
        - channels
        - links
      type: object
    reportByChannelResponseLinks:
      allOf:
        - $ref: "#/components/schemas/reportByCommonResponseLinks"
    reportByCommonResponseLinks:
      properties:
        disableAllProducts:
          $ref: "#/components/schemas/links.OptimiseAllLink"
        disableProducts:
          $ref: "#/components/schemas/links.OptimiseLink"
        enableAllProducts:
          $ref: "#/components/schemas/links.OptimiseAllLink"
        enableProducts:
          $ref: "#/components/schemas/links.OptimiseLink"
      type: object
    reportByDay:
      properties:
        allChannels:
          $ref: "#/components/schemas/reportByDayAllChannels"
        byChannels:
          items:
            $ref: "#/components/schemas/reportByDayByChannel"
          type: array
        day:
          example: 2017-04-23T00:00:00Z
          format: date
          type: string
      required:
        - day
        - allChannels
        - byChannels
      type: object
    reportByDayAllChannels:
      properties:
        clickCount:
          description: The click count
          example: "101"
          type: integer
        cost:
          description: The cost
          example: "10.42"
          type: number
        margin:
          description: The margin
          example: "42.42"
          type: number
        orderCount:
          description: The order count
          example: "42"
          type: integer
        performanceIndicator:
          description: The performance indicator based on the performance indicator formula indicated in the request
          example: "23.09"
          type: number
        roi:
          description: The Return On Investment
          example: "23.11"
          type: number
        soldProductCount:
          description: The product sold count count
          example: "2"
          type: integer
        totalSales:
          description: The total sales
          example: "234.42"
          type: number
      required:
        - clickCount
        - cost
        - orderCount
        - roi
        - margin
        - performanceIndicator
        - totalSales
        - soldProductCount
      type: object
    reportByDayByChannel:
      allOf:
        - $ref: "#/components/schemas/reportByDayAllChannels"
        - properties:
            channel:
              $ref: "#/components/schemas/BeezUP.Common.ChannelBasicInfo"
          required:
            - channel
          type: object
    reportByDayGlobal:
      properties:
        allChannels:
          $ref: "#/components/schemas/reportByDayGlobalAllChannels"
        byChannels:
          items:
            $ref: "#/components/schemas/reportByDayGlobalByChannel"
          type: array
      required:
        - allChannels
        - byChannels
      type: object
    reportByDayGlobalAllChannels:
      properties:
        performanceIndicator:
          description: Indicates the global performance indicator
          example: "10.42"
          type: number
      required:
        - performanceIndicator
      type: object
    reportByDayGlobalByChannel:
      allOf:
        - $ref: "#/components/schemas/reportByDayGlobalAllChannels"
        - properties:
            channel:
              $ref: "#/components/schemas/BeezUP.Common.ChannelBasicInfo"
          required:
            - channel
          type: object
    reportByDayPerStoreResponse:
      additionalProperties:
        $ref: "#/components/schemas/reportByDayResponse"
      description: The key is the StoreId.
      type: object
    reportByDayRequest:
      properties:
        advancedFilters:
          $ref: "#/components/schemas/reportAdvancedFilters"
        beginPeriodUtcDate:
          description: The begin date of the period for the report
          example: 2006-11-20T00:00:00Z
          format: date
          type: string
        catalogCategoryId:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryId"
        channelIds:
          description: Indicate the channel identifier list
          example:
            - 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
          items:
            $ref: "#/components/schemas/BeezUP.Common.ChannelId"
          type: array
        endPeriodUtcDate:
          description: The end date of the period for the report
          example: 2006-12-20T00:00:00Z
          format: date
          type: string
        productId:
          $ref: "#/components/schemas/BeezUP.Common.ProductId"
      required:
        - beginPeriodUtcDate
        - endPeriodUtcDate
      type: object
    reportByDayResponse:
      properties:
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        days:
          items:
            $ref: "#/components/schemas/reportByDay"
          type: array
        globalPerformanceIndicators:
          $ref: "#/components/schemas/reportByDayGlobal"
      required:
        - currencyCode
        - globalPerformanceIndicators
        - days
      type: object
    reportByProduct:
      properties:
        channelCount:
          description: The channel count where this product can be enabled
          example: "2"
          type: integer
        clickCount:
          description: The click count for this product
          example: "1234"
          type: integer
        cost:
          description: The cost for this product
          example: "101.42"
          type: number
        enabledOnChannelCount:
          description: The count of channel where this product is enabled
          example: "1"
          type: integer
        links:
          $ref: "#/components/schemas/reportByProductLinks"
        margin:
          description: The margin for this product
          example: "50.0"
          type: number
        orderCount:
          description: The order count for this product
          example: "234"
          type: integer
        performanceIndicator:
          description: The performance indicator based on the performance indicator formula indicated in the request for this product
          example: "10.12"
          type: number
        product:
          $ref: "#/components/schemas/BeezUP.Common.ProductBasicInfo"
        roi:
          description: The Return On Investment for this product
          example: "42.01"
          type: number
        soldProductCount:
          description: The product sold count count for this product
          example: "2"
          type: integer
        totalSales:
          description: The total sales for this product
          example: "234.42"
          type: number
      required:
        - product
        - enabledOnChannelCount
        - channelCount
        - clickCount
        - cost
        - orderCount
        - performanceIndicator
        - totalSales
        - soldProductCount
        - links
      type: object
    reportByProductAllChannelsLinks:
      properties:
        disableProductForAllChannels:
          $ref: "#/components/schemas/links.OptimiseByProductLink"
        enableProductForAllChannels:
          $ref: "#/components/schemas/links.OptimiseByProductLink"
      required:
        - enableProductForAllChannels
        - disableProductForAllChannels
      type: object
    reportByProductLinks:
      description: Depending if the report concerned multiple channels or one channel.
      properties:
        allChannelsLinks:
          $ref: "#/components/schemas/reportByProductAllChannelsLinks"
        oneChannelLinks:
          $ref: "#/components/schemas/reportByProductOneChannelLinks"
      type: object
    reportByProductOneChannelLinks:
      description: If the report concerned one product for one channel the channel catalog product info will give you all you need to enable or disable the product.
      properties:
        disableProductForOneChannel:
          $ref: "#/components/schemas/links.OptimiseByProductLink"
        enableProductForOneChannel:
          $ref: "#/components/schemas/links.OptimiseByProductLink"
        productInfo:
          $ref: "#/components/schemas/links.GetChannelCatalogProductInfoLink"
      required:
        - productInfo
        - enableProductForOneChannel
        - disableProductForOneChannel
      type: object
    reportByProductRequest:
      allOf:
        - $ref: "#/components/schemas/orderedReportFilterCommonParameters"
        - $ref: "#/components/schemas/paginationRequestParameters"
        - properties:
            analyticsProductColumnFilters:
              $ref: "#/components/schemas/analyticsProductColumnFilters"
            productColumnsToDisplay:
              $ref: "#/components/schemas/productColumnsToDisplay"
            productState:
              $ref: "#/components/schemas/productStateFilter"
          required:
            - beginPeriodUtcDate
            - endPeriodUtcDate
            - advancedFilters
            - productState
          type: object
    reportByProductResponse:
      properties:
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        links:
          $ref: "#/components/schemas/reportByProductResponseLinks"
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
        products:
          items:
            $ref: "#/components/schemas/reportByProduct"
          type: array
      required:
        - paginationResult
        - currencyCode
        - products
        - links
      type: object
    reportByProductResponseLinks:
      allOf:
        - $ref: "#/components/schemas/reportByCommonResponseLinks"
    reportFilter:
      properties:
        links:
          $ref: "#/components/schemas/reportFilterLinks"
        parameters:
          $ref: "#/components/schemas/reportFilterParameters"
        reportFilterId:
          description: Report filter identifier
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
          format: guid
          type: string
        reportFilterName:
          description: Report filter name
          example: My report filter
          type: string
      required:
        - reportFilterId
        - reportFilterName
        - parameters
      type: object
    reportFilterCommonParameters:
      description: Contains common filter parameters
      properties:
        advancedFilters:
          $ref: "#/components/schemas/reportAdvancedFilters"
        beginPeriodUtcDate:
          description: The begin date period you want to get the report. It's required only in case of custom period type !
          example: 2006-11-20T00:00:00Z
          format: date-time
          type: string
        categoryFilter:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryFilter"
        channelId:
          $ref: "#/components/schemas/BeezUP.Common.ChannelId"
        endPeriodUtcDate:
          description: The end date period you want to get the report. It's required only in case of custom period type !
          example: 2006-12-20T00:00:00Z
          format: date-time
          type: string
        performanceIndicatorFilters:
          example:
            - indicator: Cost
              operatorName: Equals
              value: "10"
          items:
            $ref: "#/components/schemas/performanceIndicatorFilter"
          type: array
        periodType:
          $ref: "#/components/schemas/reportFilterPeriodType"
      required:
        - periodType
        - advancedFilters
      type: object
    reportFilterHeader:
      properties:
        links:
          $ref: "#/components/schemas/reportFilterHeaderLinks"
        reportFilterId:
          description: Report filter identifier
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
          format: guid
          type: string
        reportFilterName:
          description: Report filter name
          example: My report filter
          type: string
        reportType:
          $ref: "#/components/schemas/reportType"
      required:
        - reportFilterName
        - reportFilterId
        - reportType
        - links
      type: object
    reportFilterHeaderLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetReportFilterLink"
      required:
        - self
      type: object
    reportFilterLinks:
      description: Indicates the actions you can do on this report filter
      properties:
        delete:
          $ref: "#/components/schemas/links.DeleteReportFilterLink"
        save:
          $ref: "#/components/schemas/links.SaveReportFilterLink"
        self:
          $ref: "#/components/schemas/links.GetReportFilterLink"
      type: object
    reportFilterList:
      properties:
        links:
          $ref: "#/components/schemas/reportFiltersLinks"
        reportFilters:
          items:
            $ref: "#/components/schemas/reportFilterHeader"
          type: array
      required:
        - reportFilters
        - links
      type: object
    reportFilterParameters:
      allOf:
        - $ref: "#/components/schemas/reportFilterCommonParameters"
        - properties:
            analyticsProductColumnFilters:
              $ref: "#/components/schemas/analyticsProductColumnFilters"
            productColumnsToDisplay:
              $ref: "#/components/schemas/productColumnsToDisplay"
            productState:
              $ref: "#/components/schemas/productStateFilter"
            reportType:
              $ref: "#/components/schemas/reportType"
          required:
            - beginPeriodUtcDate
            - endPeriodUtcDate
            - advancedFilters
            - reportType
          type: object
    reportFilterPeriodType:
      description: Indicates the period type we want use for the report filter
      enum:
        - Custom
        - Yesterday
        - Last7Days
        - LastWeek
        - ThisMonth
        - Last30Days
        - LastMonth
        - Last60Days
        - Last90Days
        - Last3Months
      type: string
    reportFiltersLinks:
      properties:
        save:
          $ref: "#/components/schemas/links.SaveReportFilterLink"
        self:
          $ref: "#/components/schemas/links.GetReportFiltersLink"
      required:
        - self
        - save
      type: object
    reportType:
      description: The report type
      enum:
        - ByChannel
        - ByCategory
        - ByProduct
        - ByDay
      example: ByProduct
      type: string
    rule:
      properties:
        actionName:
          $ref: "#/components/schemas/optimisationActionName"
        enabled:
          description: Is the rule enabled
          example: "true"
          type: boolean
        lastExecutionStatus:
          $ref: "#/components/schemas/ruleLastExecutionStatus"
        lastExecutionUtcDate:
          description: The utc date of the last execution
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        links:
          $ref: "#/components/schemas/ruleLinks"
        position:
          description: Rule execution position
          example: "1"
          type: integer
        reportFilterId:
          description: Report filter identifier linked to the rule
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
          format: guid
          type: string
        ruleId:
          description: The identifier of the rule
          example: c38006b4-29d0-4b8a-978b-701a0b12d5a8
          format: guid
          type: string
        ruleName:
          description: The name of the rule
          example: My Rule
          type: string
        validityEndUtcDate:
          description: Rule validity end utc date
          example: 3016-08-29T09:12:33.001Z
          format: date-time
          type: string
        validityStartUtcDate:
          description: Rule validity start utc date
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
        - ruleId
        - ruleName
        - actionName
        - reportFilterId
        - position
        - enabled
        - links
      type: object
    ruleExecutionReporting:
      properties:
        activeAffectedProductCount:
          description: The count of affected active products
          example: "1"
          type: integer
        affectedChannelCount:
          description: The count of affected Channels across all products
          example: "1"
          type: integer
        affectedProductCount:
          description: The count of affected products, active or not
          example: "1"
          type: integer
        completedUtcDate:
          description: The completed utc date of the execution of the rule
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        errorType:
          $ref: "#/components/schemas/ruleExecutionReportingErrorType"
        executionSource:
          $ref: "#/components/schemas/ruleExecutionReportingExecutionSource"
        links:
          $ref: "#/components/schemas/ruleExecutionReportingLinks"
        optimisationActionName:
          $ref: "#/components/schemas/optimisationActionName"
        reportUrl:
          description: The url for the excel report for this execution
          example: http://www.google.com
          type: string
        ruleId:
          description: The rule identifier
          example: fd9a23a1-569b-40af-af91-f7275a57bf89
          format: guid
          type: string
        ruleName:
          description: The name of the rule
          example: toto
          type: string
        startedUtcDate:
          description: The start utc date of the execution of the rule
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        status:
          $ref: "#/components/schemas/ruleExecutionReportingStatus"
        userId:
          description: The userId that executed the rule if any
          example: e8289350-69f8-45a6-b0ca-b641c83e0422
          format: guid
          type: string
      required:
        - ruleId
        - ruleName
        - status
        - executionSource
      type: object
    ruleExecutionReportingErrorType:
      description: The error type for this execution if any
      enum:
        - ChannelNotPresent
        - StoreIsInSystemBlockState
      example: ChannelNotPresent
      type: string
    ruleExecutionReportingExecutionSource:
      description: The requestor type for the execution of the rule
      enum:
        - Scheduler
        - User
      example: User
      type: string
    ruleExecutionReportingLinks:
      description: Links to retrieve/action on this rule execution
      properties:
        rule:
          $ref: "#/components/schemas/links.GetRuleLink"
      type: object
    ruleExecutionReportingStatus:
      description: The status of the execution of the rule
      enum:
        - InProgress
        - Succeeded
        - AlreadyInProgress
        - Aborted
        - Failed
        - Unknown
      example: Succeeded
      type: string
    ruleExecutionReportings:
      properties:
        executions:
          description: The rules executions history
          items:
            $ref: "#/components/schemas/ruleExecutionReporting"
          type: array
        paginationResult:
          $ref: "#/components/schemas/BeezUP.Common.PaginationResult"
      type: object
    ruleLastExecutionStatus:
      description: The status of the last execution
      enum:
        - InProgress
        - Succeeded
        - Failed
        - Unknown
      example: Succeeded
      type: string
    ruleLinks:
      description: Links to retrieve/action on other entities
      properties:
        delete:
          $ref: "#/components/schemas/links.DeleteRuleLink"
        disable:
          $ref: "#/components/schemas/links.DisableRuleLink"
        enable:
          $ref: "#/components/schemas/links.EnableRuleLink"
        movedown:
          $ref: "#/components/schemas/links.MoveDownRuleLink"
        moveup:
          $ref: "#/components/schemas/links.MoveUpRuleLink"
        reportFilter:
          $ref: "#/components/schemas/links.GetReportFilterLink"
        run:
          $ref: "#/components/schemas/links.RunRuleLink"
        self:
          $ref: "#/components/schemas/links.GetRuleLink"
        update:
          $ref: "#/components/schemas/links.UpdateRuleLink"
      required:
        - self
      type: object
    ruleList:
      properties:
        links:
          $ref: "#/components/schemas/ruleListLinks"
        rules:
          description: Rule list
          items:
            $ref: "#/components/schemas/rule"
          type: array
      required:
        - rules
        - links
      type: object
    ruleListLinks:
      description: Links to know if the user can create a rule or run all rules
      properties:
        create:
          $ref: "#/components/schemas/links.CreateRuleLink"
        history:
          $ref: "#/components/schemas/links.GetRulesExecutionsLink"
        run:
          $ref: "#/components/schemas/links.RunRulesLink"
        self:
          $ref: "#/components/schemas/links.GetRulesLink"
      required:
        - self
        - create
        - history
        - run
      type: object
    saveReportFilterRequest:
      properties:
        parameters:
          $ref: "#/components/schemas/reportFilterParameters"
        reportFilterName:
          description: Report filter name
          example: My report filter
          type: string
      required:
        - reportFilterName
        - parameters
      type: object
    saveStoreAlertRequest:
      properties:
        enabled:
          $ref: "#/components/schemas/alertEnabled"
        properties:
          description: Properties to configure the alert
          example:
            - propertyId: "2"
              propertyValue: "3"
          items:
            $ref: "#/components/schemas/storeAlertProperty"
          type: array
      required:
        - enabled
      type: object
    saveStoreAlertsRequest:
      additionalProperties:
        $ref: "#/components/schemas/saveStoreAlertRequest"
      description: The key is the alert identifier (alertId)
      type: object
    scheduleAutoImportRequest:
      description: The message request to schedule the auto import
      properties:
        localTimeZoneName:
          default: Romance Standard Time
          description: If null the local time zone name will be "Romance Standard Time"
          example: Romance Standard Time
          type: string
        schedules:
          description: Indicate the time span you want to import your catalog. (i.e. "21:00:00" to import your catalog at 9PM)
          example:
            - 21:00:00
            - 23:00:00
            - 08:30:00
          items:
            pattern: (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])
            type: string
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - schedules
      type: object
    schedulingType:
      default: Interval
      description: Indicate the scheduling type. Schedule or Interval. We recommand you to use interval for a better reporting.
      enum:
        - Schedule
        - Interval
      example: Schedule
      type: string
    setChannelCatalogMarketplaceSettingsRequest:
      description: The channel catalog marketplace settings to save
      properties:
        settings:
          $ref: "#/components/schemas/channelCatalogMarketplaceSettingArray"
      required:
        - settings
      type: object
    setMerchantOrderInfoListRequest:
      properties:
        order_MerchantECommerceSoftwareName:
          $ref: "#/components/schemas/order_MerchantECommerceSoftwareName"
        order_MerchantECommerceSoftwareVersion:
          $ref: "#/components/schemas/order_MerchantECommerceSoftwareVersion"
        orders:
          example:
            - accountId: "1234"
              beezUPOrderId: 8D47FF1427A26B064ca98e95f644361ada5a5be0bbb3b53
              marketplaceTechnicalCode: Amazon
              order_MerchantOrderId: BX1234
            - accountId: "5678"
              beezUPOrderId: 8D47FF149F213D055f26e3c413e4c9ba5c5cfda460547a4
              marketplaceTechnicalCode: Amazon
              order_MerchantOrderId: BX5678
            - accountId: "9876"
              beezUPOrderId: 8D47FF150217B60bdec05ab61c445d1a59e3da050b52823
              marketplaceTechnicalCode: Ebay
              order_MerchantOrderId: BX9876
          items:
            $ref: "#/components/schemas/setMerchantOrderInfoListRequestItem"
          maxItems: 100
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - order_MerchantECommerceSoftwareName
        - order_MerchantECommerceSoftwareVersion
        - orders
      type: object
    setMerchantOrderInfoListRequestItem:
      allOf:
        - $ref: "#/components/schemas/orderIdentifier"
        - properties:
            order_MerchantOrderId:
              $ref: "#/components/schemas/order_MerchantOrderId"
          required:
            - marketplaceTechnicalCode
            - accountId
            - beezUPOrderId
            - order_MerchantOrderId
          type: object
    setMerchantOrderInfoRequest:
      properties:
        order_MerchantECommerceSoftwareName:
          $ref: "#/components/schemas/order_MerchantECommerceSoftwareName"
        order_MerchantECommerceSoftwareVersion:
          $ref: "#/components/schemas/order_MerchantECommerceSoftwareVersion"
        order_MerchantOrderId:
          $ref: "#/components/schemas/order_MerchantOrderId"
      required:
        - order_MerchantOrderId
        - order_MerchantECommerceSoftwareName
        - order_MerchantECommerceSoftwareVersion
      type: object
    shippingVATPercent:
      description: Shipping cost VAT in percent
      example: "8.0"
      maximum: 100
      minimum: 0
      type: number
    sku:
      description: The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers. http://schema.org/sku
      maxLength: 50
      type: string
    sourceType:
      description: Indicates the origin of the operation
      enum:
        - Api
        - Go
      example: Api
      type: string
    standardOffer:
      properties:
        additionalClickPrice:
          description: The additional click price
          example: "0.1234"
          format: double
          type: number
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        fixedPrice:
          description: The fixed price of the offer
          example: "101.42"
          format: double
          type: number
        functionalities:
          example:
            - functionalityCode: MARKETMANA
              maxValueInteger: "4"
              text: Marketplace management
              unlimited: "false"
          items:
            $ref: "#/components/schemas/offerFunctionality"
          type: array
        includedClick:
          description: The included click
          example: "1200"
          format: int32
          type: integer
        isMostPopular:
          description: UI purpose. Is the offer is the most popular
          example: "true"
          type: boolean
        isOldOffer:
          description: Is an old offer
          example: "false"
          type: boolean
        links:
          $ref: "#/components/schemas/standardOfferLinks"
        name:
          description: The offer name
          example: Wonder offer
          type: string
        offerId:
          description: The offer Id
          example: "1234"
          format: int32
          type: integer
        position:
          description: UI purpose. The position of the offer
          example: "1"
          format: int32
          type: integer
      required:
        - offerId
        - name
        - links
      type: object
    standardOfferLinks:
      properties:
        getOffer:
          $ref: "#/components/schemas/links.getOfferLink"
      type: object
    standardOffers:
      properties:
        functionalities:
          description: All functionalities...
          example:
            - code: MARKETMANA
              order: "1"
          items:
            $ref: "#/components/schemas/functionality"
          type: array
        links:
          $ref: "#/components/schemas/standardOffersLinks"
        offers:
          description: All standard offers
          example:
            - additionalClickPrice: "0"
              currencyCode: EUR
              fixedPrice: "101"
              functionalities:
                - functionalityCode: MARKETMANA
                  maxValueInteger: "4"
                  text: Marketplace management
                  unlimited: "false"
              includedClick: "1200"
              isMostPopular: "true"
              name: Wonder offer
              offerId: "1234"
              position: "1"
          items:
            $ref: "#/components/schemas/standardOffer"
          type: array
      required:
        - links
        - offers
        - functionalities
      type: object
    standardOffersLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.getStandardOffersLink"
      required:
        - self
      type: object
    startManualImportRequest:
      description: The message request start a manual importation process. Indicate the way to handle duplicate product. Can be null if you want to reuse the configuration of the previous importation succeed.
      properties:
        duplicateProductSkuConfiguration:
          $ref: "#/components/schemas/duplicateProductValueConfiguration"
        input:
          $ref: "#/components/schemas/inputConfiguration"
      required:
        - input
      type: object
    store:
      properties:
        countryIsoCodeAlpha3:
          $ref: "#/components/schemas/storeCountryIsoCodeAlpha3"
        creationUtcDate:
          description: The creation date of the store
          example: 2017-04-01T22:30:00Z
          format: date-time
          type: string
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        goVersion:
          description: The version of GO to use
          example: "2"
          format: int32
          type: integer
        links:
          $ref: "#/components/schemas/storeLinks"
        name:
          $ref: "#/components/schemas/storeName"
        offerId:
          $ref: "#/components/schemas/offerId"
        offerName:
          description: The offer Name
          example: Premium
          type: string
        ownerUserId:
          description: The user id of the owner of the store
          example: 00000000-0000-0000-0000-000000000000
          format: guid
          type: string
        sectors:
          $ref: "#/components/schemas/storeSectors"
        shareCount:
          description: The share count related to this store
          example: "5"
          type: integer
        status:
          $ref: "#/components/schemas/storeStatus"
        storeId:
          $ref: "#/components/schemas/BeezUP.Common.StoreId"
        url:
          $ref: "#/components/schemas/storeUrl"
        userRole:
          $ref: "#/components/schemas/storeUserRole"
      required:
        - storeId
        - name
        - url
        - countryIsoCodeAlpha3
        - currencyCode
        - userRole
        - status
        - ownerUserId
        - shareCount
        - creationUtcDate
        - sectors
        - goVersion
        - links
        - offerId
        - offerName
      type: object
    storeAlert:
      properties:
        alertId:
          $ref: "#/components/schemas/alertId"
        alertName:
          $ref: "#/components/schemas/alertName"
        enabled:
          $ref: "#/components/schemas/alertEnabled"
        links:
          $ref: "#/components/schemas/storeAlertLinks"
        properties:
          description: The current configuration properties of the alert
          example:
            - propertyId: "2"
              propertyValidationExpression: \b0*([1-9]|[12][0-9]|30)\b
              propertyValue: "2"
          items:
            $ref: "#/components/schemas/storeAlertPropertyInfo"
          type: array
      required:
        - links
        - alertId
        - alertName
        - enabled
      type: object
    storeAlertLinks:
      description: The different actions you can make on this alert
      properties:
        save:
          $ref: "#/components/schemas/links.saveStoreAlertsLink"
      type: object
    storeAlertProperty:
      properties:
        propertyId:
          $ref: "#/components/schemas/alertPropertyId"
        propertyValue:
          $ref: "#/components/schemas/alertPropertyValue"
      required:
        - propertyId
        - propertyValue
      type: object
    storeAlertPropertyInfo:
      allOf:
        - $ref: "#/components/schemas/storeAlertProperty"
        - properties:
            propertyName:
              description: The property name of the alert
              example: NbDays
              type: string
            propertyValidationExpression:
              description: The regular expression related to the alert property
              example: \b0*([1-9]|[12][0-9]|30)\b
              type: string
          required:
            - propertyId
            - propertyName
            - propertyValue
          type: object
    storeAlerts:
      properties:
        alerts:
          example:
            - alertId: "8"
              alertName: NoImportSinceXDays
              isActive: "true"
              properties:
                - propertyId: "2"
                  propertyValidationExpression: \b0*([1-9]|[12][0-9]|30)\b
                  propertyValue: "2"
          items:
            $ref: "#/components/schemas/storeAlert"
          type: array
      type: object
    storeCount:
      description: The store count you want to have in your contract.
      example: "1"
      format: int32
      minimum: 1
      type: integer
    storeCountryIsoCodeAlpha3:
      description: The country iso code alpha 3 based on the list of values /user/lov/StoreCountry
      example: DEU
      type: string
      x-lov: StoreCountry
    storeId:
      description: The store identifier
      format: guid
      type: string
      x-exclude: true
    storeLinks:
      description: The action links for this store
      properties:
        deleteStore:
          $ref: "#/components/schemas/links.deleteStoreLink"
        self:
          $ref: "#/components/schemas/links.getStoreLink"
        share:
          $ref: "#/components/schemas/links.shareStoreLink"
        shares:
          $ref: "#/components/schemas/links.getStoreSharesLink"
        updateStore:
          $ref: "#/components/schemas/links.updateStoreLink"
      type: object
    storeList:
      properties:
        links:
          $ref: "#/components/schemas/storeListLinks"
        stores:
          items:
            $ref: "#/components/schemas/store"
          type: array
      required:
        - links
        - stores
      type: object
    storeListLinks:
      description: The action links you can do globally on stores
      properties:
        createStore:
          $ref: "#/components/schemas/links.createStoreLink"
        self:
          $ref: "#/components/schemas/links.getStoresLink"
      type: object
    storeName:
      description: The store name. Must be unique.
      example: My Store
      type: string
    storeSector:
      description: The store's sector based on the list of values /user/lov/ParamSector
      example: ANIMALERIE
      type: string
      x-lov: ParamSector
    storeSectors:
      description: The store's sectors based on the list of values /user/lov/ParamSector
      example:
        - ANIMALERIE
        - AUTOMOTO
      items:
        $ref: "#/components/schemas/storeSector"
      type: array
    storeShare:
      properties:
        links:
          $ref: "#/components/schemas/storeShareLinks"
        userId:
          $ref: "#/components/schemas/BeezUP.Common.UserId"
        userRole:
          $ref: "#/components/schemas/storeUserRole"
      required:
        - userId
        - userRole
        - links
      type: object
    storeShareLinks:
      description: The different actions you can make on this store share
      properties:
        deleteShare:
          $ref: "#/components/schemas/links.deleteStoreShareLink"
      type: object
    storeShares:
      properties:
        links:
          $ref: "#/components/schemas/storeSharesLinks"
        shares:
          items:
            $ref: "#/components/schemas/storeShare"
          type: array
      required:
        - links
        - shares
      type: object
    storeSharesLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.getStoreSharesLink"
        share:
          $ref: "#/components/schemas/links.shareStoreLink"
      type: object
    storeStatus:
      description: |
        The store status
        * Active:  When the store is active
        * SystemBlocked:  When the store is blocked by the system
        * UserBlocked: When the store is blocked on GO not on the system
      enum:
        - Active
        - SystemBlocked
        - UserBlocked
      example: Active
      type: string
    storeTrackingStatus:
      properties:
        clickSynchronizationUtcDate:
          description: The utc date of the latest synchronized click
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        marketplaceOrderSynchonizationUtcDate:
          description: The utc date of the latest synchronized marketplace order
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        orderSynchonizationUtcDate:
          description: The utc date of the latest synchronized order
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      type: object
    storeUrl:
      description: The url of your store
      example: http://www.mystore.com
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
    storeUserRole:
      description: |
        Indicates the role can have a user on a store.
        * Owner: Indicates that you are the owner of this store
        * User: Indicates that you are a simple user on this store
      enum:
        - Owner
        - User
      example: User
      type: string
    subscription:
      description: The subscription definition
      properties:
        consumerHealthStatus:
          $ref: "#/components/schemas/consumptionAvailabilityStatus"
        consumerLastRequestSentUri:
          $ref: "#/components/schemas/httpUrl"
        consumerUnvailableSinceUtcDate:
          description: This date indicates since when the subscription consumer is unavailable
          format: date-time
          type: string
        id:
          $ref: "#/components/schemas/subscriptionId"
        lastErrorMessage:
          $ref: "#/components/schemas/errorResponseMessage"
        lastOrderPushedModificationUtcDate:
          description: This modification date correspond to the last order pushed by your subscription consumer
          format: date-time
          type: string
        lastRetryUtcDate:
          description: The last date we retry to send orders
          format: date-time
          type: string
        lastSuccessfulOrderPushedUtcDate:
          description: The date of the last pushed order successfully received by your subscription consumer
          format: date-time
          type: string
        maxRetryCount:
          description: The maximum BeezUP will retry to push orders. When we the retry count will reach maximum retry count, the subscription will be deactivated.
          type: integer
        merchantApplicationName:
          $ref: "#/components/schemas/subscriptionMerchantApplicationName"
        merchantApplicationVersion:
          $ref: "#/components/schemas/subscriptionMerchantApplicationVersion"
        merchantEmailAlert:
          $ref: "#/components/schemas/email"
        name:
          $ref: "#/components/schemas/subscriptionName"
        nextScheduledRetryUtcDate:
          description: The next scheduled  date we retry to send orders
          format: date-time
          type: string
        recoverBeginPeriodOrderLastModificationUtcDate:
          description: Recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time.
          format: date-time
          type: string
        recoverEndPeriodOrderLastModificationUtcDate:
          description: |
            Recover existing orders using the begin and the end period order last modification date.
            Otherwise, you will receive new/updated orders in real-time.
          format: date-time
          type: string
        retryCount:
          description: The retry count. When we the retry count will reach maximum retry count, the subscription will be deactivated.
          type: integer
        status:
          $ref: "#/components/schemas/subscriptionStatus"
        targetUrl:
          $ref: "#/components/schemas/httpUrl"
      required:
        - id
        - targetUrl
        - status
        - name
        - merchantApplicationName
        - merchantApplicationVersion
      type: object
    subscriptionId:
      description: The identifier of the subscription to the orders for a merchant
      format: guid
      type: string
    subscriptionIndex:
      allOf:
        - $ref: "#/components/schemas/subscription"
        - properties:
            links:
              $ref: "#/components/schemas/subscriptionLinks"
          type: object
    subscriptionLinks:
      properties:
        activate:
          $ref: "#/components/schemas/link3"
        deactivate:
          $ref: "#/components/schemas/link3"
        delete:
          $ref: "#/components/schemas/link3"
        reporting:
          $ref: "#/components/schemas/link3"
        retry:
          $ref: "#/components/schemas/link3"
      type: object
    subscriptionMerchantApplicationName:
      description: The name of your application
      example: MyApp
      type: string
    subscriptionMerchantApplicationVersion:
      default: "1.0"
      description: The version of your application
      example: "1.0"
      type: string
    subscriptionName:
      description: The subscription name you want to use
      example: MySubscriptionName
      type: string
    subscriptionPushReporting:
      description: The subscription push reporting
      properties:
        duration:
          description: The duration of the push operation
          format: TimeSpan
          type: string
        errorMessage:
          $ref: "#/components/schemas/errorResponseMessage"
        eventId:
          $ref: "#/components/schemas/messageId"
        httpStatus:
          description: The HTTP status received from the consumer
          format: int32
          type: integer
        lastOrderModificationUtcDate:
          description: This modification date correspond to the last order pushed by your subscription consumer
          format: date-time
          type: string
        maxRetryCount:
          description: The maximum BeezUP will retry to push orders. When we the retry count will reach maximum retry count, the subscription will be deactivated.
          type: integer
        nextScheduledRetryUtcDate:
          description: The next scheduled  date we retry to send orders
          format: date-time
          type: string
        orderCount:
          description: The order count sent
          format: int32
          type: integer
        requestUri:
          $ref: "#/components/schemas/httpUrl"
        responseUri:
          $ref: "#/components/schemas/httpUrl"
        retryCount:
          description: The retry count. When we the retry count will reach maximum retry count, the subscription will be deactivated.
          type: integer
        subscriptionId:
          $ref: "#/components/schemas/subscriptionId"
        succeed:
          description: Indicates if the push operation has succeed
          type: boolean
      required:
        - subscriptionId
        - eventId
        - succeed
        - lastOrderModificationUtcDate
        - orderCount
        - duration
      type: object
    subscriptionStatus:
      description: The status of your subscription
      enum:
        - active
        - inactive
      example: active
      type: string
    successSummary:
      properties:
        objectName:
          type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        successArguments:
          additionalProperties:
            type: string
          type: object
        successCode:
          type: string
        successMessage:
          type: string
      type: object
    terminateContract:
      description: The contract termination info
      properties:
        contractTerminationReason:
          $ref: "#/components/schemas/contractTerminationReason"
        contractTerminationReasonType:
          $ref: "#/components/schemas/contractTerminationReasonType"
      required:
        - contractTerminationReasonType
      type: object
    trackedClick:
      properties:
        channel:
          $ref: "#/components/schemas/BeezUP.Common.ChannelBasicInfo"
        ipAddress:
          description: The user IP address for the click
          example: 127.0.0.1
          type: string
        product:
          $ref: "#/components/schemas/BeezUP.Common.ProductBasicInfo"
        utcDate:
          description: The utc date of the click
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
        - utcDate
        - product
        - ipAddress
        - channel
      type: object
    trackedClicks:
      properties:
        clicks:
          items:
            $ref: "#/components/schemas/trackedClick"
          type: array
      required:
        - clicks
      type: object
    trackedExternalOrder:
      properties:
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        merchantOrderId:
          description: The merchant order identifier
          example: My_Order_Merchant_Id
          type: string
        paymentValidated:
          description: Indicate if the payment of this external order has been validated or not
          example: "false"
          type: boolean
        products:
          description: Can be null. The product list included in the external order
          example:
            - margin: "9"
              merchantOrderId: My_Merchant_Order_Id
              productActive: "true"
              productImageUrl: http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051
              productSku: something
              productTitle: Something great
              quantity: "1"
              unitPrice: "101"
          items:
            $ref: "#/components/schemas/trackedExternalOrderProduct"
          type: array
        totalAmount:
          description: The total amount of the external order
          example: "101.42"
          type: number
        utcDate:
          description: The utc date of the external order
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        visitorId:
          description: Can be null. The visitor identifier of the external order
          example: A_VISITOR_ID
          type: string
      required:
        - utcDate
        - merchantOrderId
        - totalAmount
        - currencyCode
        - paymentValidated
      type: object
    trackedExternalOrderProduct:
      properties:
        margin:
          description: The product's margin for the external order. This property is voluntarily a string because the value could be an invalid one
          example: "9.66"
          type: string
        productActive:
          description: We tried to get the catalog product if it's still active based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
          example: "true"
          type: boolean
        productId:
          description: We tried to get the catalog product identifier based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
          example: 6d469a54-8426-4855-abc2-9e062e2056b9
          format: guid
          type: string
        productImageUrl:
          description: We tried to get the catalog product image Url based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
          example: http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051
          format: uri
          type: string
        productSku:
          description: The product sku received for the external order
          example: something
          type: string
        productTitle:
          description: We tried to get the catalog product title based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
          example: Something great
          type: string
        quantity:
          description: The quantity of this product for the external order. This property is voluntarily a string because the value could be an invalid one
          example: "1.00"
          type: string
        unitPrice:
          description: The product's unit price for the external order. This property is voluntarily a string because the value could be an invalid one.
          example: "101.42"
          type: string
      required:
        - productSku
      type: object
    trackedExternalOrders:
      properties:
        externalOrders:
          items:
            $ref: "#/components/schemas/trackedExternalOrder"
          type: array
      required:
        - externalOrders
      type: object
    trackedOrder:
      properties:
        channel:
          $ref: "#/components/schemas/BeezUP.Common.ChannelBasicInfo"
        currencyCode:
          $ref: "#/components/schemas/BeezUP.Common.CurrencyCode"
        merchantOrderId:
          description: The merchant order identifier
          example: My_Merchant_Order_Id
          type: string
        paymentValidated:
          description: Indicate if the payment of this order has been validated or not
          example: "false"
          type: boolean
        products:
          description: The product list of this order
          example:
            - margin: "9"
              productActive: "true"
              productId: 00000000-0000-0000-0000-000000000000
              productImageUrl: http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg
              productSku: SKU123345
              productTitle: My super product title
              quantity: "1"
              unitPrice: "101"
          items:
            $ref: "#/components/schemas/trackedOrderProduct"
          type: array
        totalAmount:
          description: The total amount of the order
          example: "101.42"
          type: number
        utcDate:
          description: The utc date of the order
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
        - utcDate
        - channel
        - merchantOrderId
        - totalAmount
        - currencyCode
        - paymentValidated
        - products
      type: object
    trackedOrderProduct:
      allOf:
        - $ref: "#/components/schemas/BeezUP.Common.ProductBasicInfo"
        - properties:
            margin:
              description: The product's margin for the order
              example: "9.66"
              type: number
            quantity:
              description: The quantity of this product for the order
              example: "1.0"
              type: number
            unitPrice:
              description: The product's unit price for the order
              example: "101.42"
              type: number
          required:
            - productId
            - productSku
            - productTitle
            - productImageUrl
            - productExists
            - unitPrice
            - quantity
            - margin
          type: object
    trackedOrders:
      properties:
        orders:
          items:
            $ref: "#/components/schemas/trackedOrder"
          type: array
      required:
        - orders
      type: object
    trackingStatus:
      properties:
        clickSynchronizationUtcDate:
          description: The utc date of the latest synchronized click
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        marketplaceOrderSynchonizationUtcDate:
          description: The utc date of the latest synchronized marketplace order
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        orderSynchonizationUtcDate:
          description: The utc date of the latest synchronized order
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
        - clickSynchronizationUtcDate
        - orderSynchonizationUtcDate
        - marketplaceOrderSynchonizationUtcDate
      type: object
    type:
      description: The Data Type
      enum:
        - string
        - integer
        - boolean
        - number
      example: string
      type: string
    unmapCategoryRequest:
      description: The request message to unmap a catalog category path to a channel category path
      properties:
        catalogCategoryPath:
          $ref: "#/components/schemas/BeezUP.Common.CatalogCategoryPath"
      required:
        - catalogCategoryPath
      type: object
    updateRuleRequest:
      description: This update will replace the following values.
      properties:
        endUtcDate:
          description: Not required. The end validity utc date of the rule
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        ruleName:
          description: The name of the rule
          example: My Rule Renamed
          type: string
        startUtcDate:
          description: Not required. The start validity utc date of the rule.
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
        - ruleName
      type: object
    updateStoreRequest:
      properties:
        name:
          $ref: "#/components/schemas/storeName"
        sectors:
          $ref: "#/components/schemas/storeSectors"
        url:
          $ref: "#/components/schemas/storeUrl"
      required:
        - name
        - url
        - sectors
      type: object
    upgradeOfferRequired:
      description: The message contains the offer identifier required to execute this operation
      properties:
        offerId:
          description: The offer identifier required
          example: "9"
          format: int32
          type: integer
      required:
        - offerId
      type: object
    userColumName:
      description: Column named by the user
      example: My SKU
      type: string
    userErrorMessage:
      properties:
        arguments:
          $ref: "#/components/schemas/userErrorMessageArguments"
        code:
          $ref: "#/components/schemas/errorCode"
        cultureName:
          $ref: "#/components/schemas/cultureName"
        docUrl:
          $ref: "#/components/schemas/docUrl"
        message:
          description: The error message
          example: |
            There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527
          type: string
      required:
        - code
        - message
      type: object
      x-exclude: true
    userErrorMessageArguments:
      additionalProperties:
        type: object
      description: a dictionary string/object
      type: object
      x-exclude: true
    userFriendInfo:
      properties:
        company:
          description: Your friend's user company name
          example: World company
          type: string
        countryIsoCodeAlpha3:
          $ref: "#/components/schemas/friendCountryIsoCodeAlpha3"
        email:
          $ref: "#/components/schemas/friendEmail"
        firstName:
          description: Your friend's user first name
          example: Bogart
          type: string
        lastName:
          description: Your friend's user last name
          example: Humphrey
          type: string
        profilePictureUrl:
          $ref: "#/components/schemas/friendProfilePictureUrl"
        userId:
          description: Your friend's user id
          example: 00c4a9d2-fc8e-4b3d-8e52-c4f276245bc1
          format: guid
          type: string
        whatIDo:
          description: Your friend's user occupation in his company
          example: I'm an actor...
          type: string
      required:
        - userId
        - lastName
        - firstName
        - email
        - countryIsoCodeAlpha3
        - company
      type: object
    userId:
      description: The user identifier
      example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
      format: guid
      type: string
      x-exclude: true
    userListOfValuesResponse:
      properties:
        items:
          items:
            $ref: "#/components/schemas/BeezUP.Common.ListOfValueItem"
          type: array
        links:
          $ref: "#/components/schemas/userListOfValuesResponseLinks"
      type: object
    userListOfValuesResponseLinks:
      properties:
        self:
          $ref: "#/components/schemas/links.GetUserListOfValuesLink"
      type: object
    userLovIndex:
      properties:
        links:
          $ref: "#/components/schemas/userLovIndexLinks"
      type: object
    userLovIndexLinks:
      properties:
        lists:
          $ref: "#/components/schemas/userLovLinks"
        self:
          $ref: "#/components/schemas/links.GetUserLovIndexLink"
      type: object
    userLovLinks:
      additionalProperties:
        $ref: "#/components/schemas/links.GetUserListOfValuesLink"
      description: List of lov link. The key is the list name.
      type: object
    validationPattern:
      description: The regular expression to validate the value
      example: "*.-api$"
      type: string
    variableModelInfo:
      description: "Internal usage: Old offer type. Describe the fix and variable model information"
      properties:
        clickIncludedAndVariablePrices:
          description: Click included with variable pricing information
          items:
            $ref: "#/components/schemas/clickIncludedAndVariablePrice"
          type: array
        overflowClickCount:
          description: The overflow click count
          format: int32
          type: integer
        overflowClickPrice:
          description: The overflow click price
          format: double
          type: number
      required:
        - clickIncludedAndVariablePrices
        - overflowClickCount
        - overflowClickPrice
      type: object
    vatNumber:
      description: Your company VATNumber. Used for french company. This number is checked with official web service before being saved.
      example: "1234567890"
      type: string
    warningSummary:
      properties:
        technicalErrorMessage:
          type: string
        warningArguments:
          additionalProperties:
            type: string
          type: object
        warningCode:
          type: string
        warningMessage:
          type: string
      type: object
    whatIDo:
      description: Your role in your company
      example: I'm the Manager on this company
      type: string
    zendeskToken:
      description: JWT token to access Zendesk restricted help center
      properties:
        token:
          description: A JWT token build from your name and email to use on Zendesk
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          type: string
      type: object
  securitySchemes:
    api_key:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
x-tagGroups:
  - name: Public - Security
    tags:
      - Public - Security - Security
  - name: Public - Channels
    tags:
      - Public - Channels - Public Channels
  - name: Public - List of Values
    tags:
      - Public - List of Values - LOV
  - name: User - List of Values
    tags:
      - User - List of Values - LOV
  - name: Customer
    tags:
      - Customer - Global
      - Customer - Account
      - Customer - Security
      - Customer - Stores
      - Customer - Shares
      - Customer - Alerts
      - Customer - Rights
      - Customer - Friends
      - Customer - Contracts
      - Customer - Invoices
  - name: Catalogs
    tags:
      - Catalogs - Auto
      - Catalogs - Global
      - Catalogs - Importation Process
      - Catalogs - Importation Catalog Info
      - Catalogs - Catalog
  - name: Channels
    tags:
      - Channels - Channels Global
  - name: Channel Catalogs
    tags:
      - Channel Catalogs - Global
      - Channel Catalogs - Settings
      - Channel Catalogs - Column Mappings
      - Channel Catalogs - Categories
      - Channel Catalogs - Exclusion Filters
      - Channel Catalogs - Products
      - Channel Catalogs - Products Overrides
      - Channel Catalogs - Products Optimisation
      - Channel Catalogs - Exportations
  - name: Marketplaces - Channel catalogs
    tags:
      - Marketplaces - Channel catalogs - Global
      - Marketplaces - Channel catalogs - Publications
      - Marketplaces - Channel catalogs - Settings
  - name: Marketplaces - Orders
    tags:
      - Marketplaces - Orders - Global
      - Marketplaces - Orders - AutoTransitions
      - Marketplaces - Orders - List
      - Marketplaces - Orders - Order
      - Marketplaces - Orders - Batches
      - Marketplaces - Orders - Exports
  - name: Marketplaces - Orders V3
    tags:
      - Marketplaces - Orders V3 - Global
      - Marketplaces - Orders V3 - List
      - Marketplaces - Orders V3 - Order
      - Marketplaces - Orders V3 - Batches
  - name: Marketplaces - Orders - Subscriptions
    tags:
      - Marketplaces - Orders - Subscriptions - Subscriptions
  - name: OM Invoice - API
    tags:
      - OM Invoice - API - Settings
      - OM Invoice - API - Generation
  - name: Analytics
    tags:
      - Analytics - Global
      - Analytics - Tracking
      - Analytics - Statistics
      - Analytics - Optimisations
      - Analytics - Reports
      - Analytics - Rules
  - name: Channel Catalogs - Legacy Tracking
    tags:
      - Channel Catalogs - Legacy Tracking - Global
