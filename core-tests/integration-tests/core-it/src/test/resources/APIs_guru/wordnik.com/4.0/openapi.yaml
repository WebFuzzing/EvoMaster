openapi: 3.0.0
servers:
  - url: https://api.wordnik.com/v4
info:
  description: Wordnik is the worlds biggest online English dictionary, by number of words
  title: Wordnik
  version: "4.0"
  x-apisguru-categories:
    - text
  x-logo:
    url: https://wordnik.com/img/logo-wordnik-home.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 2.6.2
      format: openapi
      url: https://developer.wordnik.com/api-docs/swagger.json
      version: "3.0"
  x-providerName: wordnik.com
externalDocs:
  url: http://developer.wordnik.com/
security:
  - {}
tags:
  - name: account
  - name: word
  - name: wordList
  - name: wordLists
  - name: words
paths:
  /account.json/apiTokenStatus:
    get:
      operationId: getApiTokenStatus
      parameters:
        - description: Wordnik authentication token
          in: header
          name: api_key
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApiTokenStatus"
          description: No response was specified
      summary: Returns usage statistics for the API account.
      tags:
        - account
  "/account.json/authenticate/{username}":
    get:
      operationId: authenticate
      parameters:
        - description: A confirmed Wordnik username
          in: path
          name: username
          required: true
          schema:
            type: string
        - description: The user's password
          in: query
          name: password
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AuthenticationToken"
          description: No response was specified
      summary: Authenticates a User
      tags:
        - account
    post:
      operationId: authenticatePost
      parameters:
        - description: A confirmed Wordnik username
          in: path
          name: username
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The user's password
        required: true
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AuthenticationToken"
          description: No response was specified
      summary: Authenticates a user
      tags:
        - account
  /account.json/user:
    get:
      description: Requires a valid auth_token to be set.
      operationId: getLoggedInUser
      parameters:
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/User"
          description: No response was specified
      summary: Returns the logged-in User
      tags:
        - account
  /account.json/wordLists:
    get:
      operationId: getWordListsForLoggedInUser
      parameters:
        - description: auth_token of logged-in user
          in: header
          name: auth_token
          required: true
          schema:
            type: string
        - description: Results to skip
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/WordList"
                type: array
          description: No response was specified
      summary: Fetches WordList objects for the logged-in user.
      tags:
        - account
  "/word.json/{word}/audio":
    get:
      description: The metadata includes a time-expiring fileUrl which allows reading the audio file directly from the API.  Currently only audio pronunciations from the American Heritage Dictionary in mp3 format are supported.
      operationId: getAudio
      parameters:
        - description: Word to get audio for.
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: Use the canonical form of the word
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/AudioFile"
                type: array
          description: No response was specified
      summary: Fetches audio metadata for a word.
      tags:
        - word
  "/word.json/{word}/definitions":
    get:
      operationId: getDefinitions
      parameters:
        - description: Word to return definitions for
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 200
            format: int32
            type: integer
        - description: CSV list of part-of-speech types
          in: query
          name: partOfSpeech
          required: false
          schema:
            enum:
              - noun
              - adjective
              - verb
              - adverb
              - interjection
              - pronoun
              - preposition
              - abbreviation
              - affix
              - article
              - auxiliary-verb
              - conjunction
              - definite-article
              - family-name
              - given-name
              - idiom
              - imperative
              - noun-plural
              - noun-posessive
              - past-participle
              - phrasal-prefix
              - proper-noun
              - proper-noun-plural
              - proper-noun-posessive
              - suffix
              - verb-intransitive
              - verb-transitive
            type: string
        - description: Return related words with definitions
          in: query
          name: includeRelated
          required: false
          schema:
            default: "false"
            type: string
        - description: "Source dictionary to return definitions from.  If 'all' is received, results are returned from all sources. If multiple values are received (e.g. 'century,wiktionary'), results are returned from the first specified dictionary that has definitions. If left blank, results are returned from the first dictionary that has definitions. By default, dictionaries are searched in this order: ahd, wiktionary, webster, century, wordnet"
          explode: false
          in: query
          name: sourceDictionaries
          required: false
          schema:
            enum:
              - all
              - ahd
              - century
              - cmu
              - macmillan
              - wiktionary
              - webster
              - wordnet
            items:
              type: string
            type: array
          style: form
        - description: If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: Return a closed set of XML tags in response
          in: query
          name: includeTags
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/Definition"
                type: array
          description: No response was specified
      summary: Return definitions for a word
      tags:
        - word
  "/word.json/{word}/etymologies":
    get:
      operationId: getEtymologies
      parameters:
        - description: Word to return
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  type: string
                type: array
          description: No response was specified
      summary: Fetches etymology data
      tags:
        - word
  "/word.json/{word}/examples":
    get:
      operationId: getExamples
      parameters:
        - description: Word to return examples for
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: Show duplicate examples from different sources
          in: query
          name: includeDuplicates
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: Results to skip
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 5
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ExampleSearchResults"
          description: No response was specified
      summary: Returns examples for a word
      tags:
        - word
  "/word.json/{word}/frequency":
    get:
      operationId: getWordFrequency
      parameters:
        - description: Word to return
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: Starting Year
          in: query
          name: startYear
          required: false
          schema:
            default: 1800
            format: int32
            type: integer
        - description: Ending Year
          in: query
          name: endYear
          required: false
          schema:
            default: 2012
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FrequencySummary"
          description: No response was specified
      summary: Returns word usage over time
      tags:
        - word
  "/word.json/{word}/hyphenation":
    get:
      operationId: getHyphenation
      parameters:
        - description: Word to get syllables for
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: If true will try to return a correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: "Get from a single dictionary. Valid options: ahd, century, wiktionary, webster, and wordnet."
          in: query
          name: sourceDictionary
          required: false
          schema:
            enum:
              - ahd
              - century
              - wiktionary
              - webster
              - wordnet
            type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/Syllable"
                type: array
          description: No response was specified
      summary: Returns syllable information for a word
      tags:
        - word
  "/word.json/{word}/phrases":
    get:
      operationId: getPhrases
      parameters:
        - description: Word to fetch phrases for
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 5
            format: int32
            type: integer
        - description: Minimum WLMI for the phrase
          in: query
          name: wlmi
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/Bigram"
                type: array
          description: No response was specified
      summary: Fetches bi-gram phrases for a word
      tags:
        - word
  "/word.json/{word}/pronunciations":
    get:
      operationId: getTextPronunciations
      parameters:
        - description: Word to get pronunciations for
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: If true will try to return a correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: Get from a single dictionary
          in: query
          name: sourceDictionary
          required: false
          schema:
            enum:
              - ahd
              - century
              - cmu
              - macmillan
              - wiktionary
              - webster
              - wordnet
            type: string
        - description: Text pronunciation type
          in: query
          name: typeFormat
          required: false
          schema:
            enum:
              - ahd
              - arpabet
              - gcide-diacritical
              - IPA
            type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/TextPron"
                type: array
          description: No response was specified
      summary: Returns text pronunciations for a given word
      tags:
        - word
  "/word.json/{word}/relatedWords":
    get:
      operationId: getRelatedWords
      parameters:
        - description: Word to fetch relationships for
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: Limits the total results per type of relationship type
          in: query
          name: relationshipTypes
          required: false
          schema:
            enum:
              - synonym
              - antonym
              - variant
              - equivalent
              - cross-reference
              - related-word
              - rhyme
              - form
              - etymologically-related-term
              - hypernym
              - hyponym
              - inflected-form
              - primary
              - same-context
              - verb-form
              - verb-stem
              - has_topic
            type: string
        - description: Restrict to the supplied relatinship types
          in: query
          name: limitPerRelationshipType
          required: false
          schema:
            default: 10
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/Related"
                type: array
          description: No response was specified
      summary: Given a word as a string, returns relationships from the Word Graph
      tags:
        - word
  "/word.json/{word}/scrabbleScore":
    get:
      operationId: getScrabbleScore
      parameters:
        - description: Word to get scrabble score for.
          in: path
          name: word
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                format: int64
                type: integer
          description: No response was specified
      summary: Returns the Scrabble score for a word
      tags:
        - word
  "/word.json/{word}/topExample":
    get:
      operationId: getTopExample
      parameters:
        - description: Word to fetch examples for
          in: path
          name: word
          required: true
          schema:
            type: string
        - description: If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
          in: query
          name: useCanonical
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Example"
          description: No response was specified
      summary: Returns a top example for a word
      tags:
        - word
  "/wordList.json/{permalink}":
    delete:
      operationId: deleteWordList
      parameters:
        - description: ID of WordList to delete
          in: path
          name: permalink
          required: true
          schema:
            type: string
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema: {}
          description: No response was specified
      summary: Deletes an existing WordList
      tags:
        - wordList
    get:
      operationId: getWordListByPermalink
      parameters:
        - description: permalink of WordList to fetch
          in: path
          name: permalink
          required: true
          schema:
            type: string
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/WordList"
          description: No response was specified
      summary: Fetches a WordList by ID
      tags:
        - wordList
    put:
      operationId: updateWordList
      parameters:
        - description: permalink of WordList to update
          in: path
          name: permalink
          required: true
          schema:
            type: string
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WordList"
        description: Updated WordList
      responses:
        "200":
          content:
            "*/*":
              schema: {}
          description: No response was specified
      summary: Updates an existing WordList
      tags:
        - wordList
  "/wordList.json/{permalink}/deleteWords":
    post:
      operationId: deleteWordsFromWordList
      parameters:
        - description: permalink of WordList to use
          in: path
          name: permalink
          required: true
          schema:
            type: string
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/StringValue"
              type: array
        description: Words to remove from WordList
      responses:
        "200":
          content:
            "*/*":
              schema: {}
          description: No response was specified
      summary: Removes words from a WordList
      tags:
        - wordList
  "/wordList.json/{permalink}/words":
    get:
      operationId: getWordListWords
      parameters:
        - description: ID of WordList to use
          in: path
          name: permalink
          required: true
          schema:
            type: string
        - description: Field to sort by
          in: query
          name: sortBy
          required: false
          schema:
            default: createDate
            enum:
              - createDate
              - alpha
            type: string
        - description: Direction to sort
          in: query
          name: sortOrder
          required: false
          schema:
            default: desc
            type: string
        - description: Results to skip
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int32
            type: integer
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/WordListWord"
                type: array
          description: No response was specified
      summary: Fetches words in a WordList
      tags:
        - wordList
    post:
      operationId: addWordsToWordList
      parameters:
        - description: permalink of WordList to user
          in: path
          name: permalink
          required: true
          schema:
            type: string
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/StringValue"
              type: array
        description: Array of words to add to WordList
      responses:
        "200":
          content:
            "*/*":
              schema: {}
          description: No response was specified
      summary: Adds words to a WordList
      tags:
        - wordList
  /wordLists.json:
    post:
      operationId: createWordList
      parameters:
        - description: The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
          in: header
          name: auth_token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WordList"
        description: WordList to create
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/WordList"
          description: No response was specified
      summary: Creates a WordList.
      tags:
        - wordLists
  /words.json/randomWord:
    get:
      operationId: getRandomWord
      parameters:
        - description: Only return words with dictionary definitions
          in: query
          name: hasDictionaryDef
          required: false
          schema:
            default: "true"
            type: string
        - description: CSV part-of-speech values to include (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: includePartOfSpeech
          required: false
          schema:
            type: string
        - description: CSV part-of-speech values to exclude (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: excludePartOfSpeech
          required: false
          schema:
            type: string
        - description: Minimum corpus frequency for terms
          in: query
          name: minCorpusCount
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximum corpus frequency for terms
          in: query
          name: maxCorpusCount
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Minimum dictionary count
          in: query
          name: minDictionaryCount
          required: false
          schema:
            default: 1
            format: int32
            type: integer
        - description: Maximum dictionary count
          in: query
          name: maxDictionaryCount
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Minimum word length
          in: query
          name: minLength
          required: false
          schema:
            default: 5
            format: int32
            type: integer
        - description: Maximum word length
          in: query
          name: maxLength
          required: false
          schema:
            default: -1
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/WordObject"
          description: No response was specified
      summary: Returns a single random WordObject
      tags:
        - words
  /words.json/randomWords:
    get:
      operationId: getRandomWords
      parameters:
        - description: Only return words with dictionary definitions
          in: query
          name: hasDictionaryDef
          required: false
          schema:
            default: "true"
            type: string
        - description: CSV part-of-speech values to include (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: includePartOfSpeech
          required: false
          schema:
            type: string
        - description: CSV part-of-speech values to exclude (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: excludePartOfSpeech
          required: false
          schema:
            type: string
        - description: Minimum corpus frequency for terms
          in: query
          name: minCorpusCount
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximum corpus frequency for terms
          in: query
          name: maxCorpusCount
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Minimum dictionary count
          in: query
          name: minDictionaryCount
          required: false
          schema:
            default: 1
            format: int32
            type: integer
        - description: Maximum dictionary count
          in: query
          name: maxDictionaryCount
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Minimum word length
          in: query
          name: minLength
          required: false
          schema:
            default: 5
            format: int32
            type: integer
        - description: Maximum word length
          in: query
          name: maxLength
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Attribute to sort by
          in: query
          name: sortBy
          required: false
          schema:
            enum:
              - alpha
              - count
            type: string
        - description: Sort direction
          in: query
          name: sortOrder
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 10
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  $ref: "#/components/schemas/WordObject"
                type: array
          description: No response was specified
      summary: Returns an array of random WordObjects
      tags:
        - words
  /words.json/reverseDictionary:
    get:
      operationId: reverseDictionary
      parameters:
        - description: Search term
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: Restricts words and finds closest sense
          in: query
          name: findSenseForWord
          required: false
          schema:
            type: string
        - description: Only include these comma-delimited source dictionaries
          in: query
          name: includeSourceDictionaries
          required: false
          schema:
            enum:
              - ahd
              - century
              - cmu
              - macmillan
              - wiktionary
              - webster
              - wordnet
            type: string
        - description: Exclude these comma-delimited source dictionaries
          in: query
          name: excludeSourceDictionaries
          required: false
          schema:
            enum:
              - ahd
              - century
              - cmu
              - macmillan
              - wiktionary
              - webster
              - wordnet
            type: string
        - description: Only include these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: includePartOfSpeech
          required: false
          schema:
            type: string
        - description: Exclude these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: excludePartOfSpeech
          required: false
          schema:
            type: string
        - description: Minimum corpus frequency for terms
          in: query
          name: minCorpusCount
          required: false
          schema:
            default: 5
            format: int32
            type: integer
        - description: Maximum corpus frequency for terms
          in: query
          name: maxCorpusCount
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Minimum word length
          in: query
          name: minLength
          required: false
          schema:
            default: 1
            format: int32
            type: integer
        - description: Maximum word length
          in: query
          name: maxLength
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Expand terms
          in: query
          name: expandTerms
          required: false
          schema:
            type: string
        - description: Return a closed set of XML tags in response
          in: query
          name: includeTags
          required: false
          schema:
            default: "false"
            enum:
              - "false"
              - "true"
            type: string
        - description: Attribute to sort by
          in: query
          name: sortBy
          required: false
          schema:
            enum:
              - alpha
              - count
            type: string
        - description: Sort direction
          in: query
          name: sortOrder
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Results to skip
          in: query
          name: skip
          required: false
          schema:
            default: "0"
            type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 10
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DefinitionSearchResults"
          description: No response was specified
      summary: Reverse dictionary search
      tags:
        - words
  "/words.json/search/{query}":
    get:
      operationId: searchWords
      parameters:
        - description: Search term is a Regular Expression
          in: query
          name: allowRegex
          required: false
          schema:
            default: "false"
            type: string
        - description: Search query
          in: path
          name: query
          required: true
          schema:
            type: string
        - description: Search case sensitive
          in: query
          name: caseSensitive
          required: false
          schema:
            default: "true"
            type: string
        - description: Only include these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: includePartOfSpeech
          required: false
          schema:
            type: string
        - description: Exclude these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
          in: query
          name: excludePartOfSpeech
          required: false
          schema:
            type: string
        - description: Minimum corpus frequency for terms
          in: query
          name: minCorpusCount
          required: false
          schema:
            default: 5
            format: int32
            type: integer
        - description: Maximum corpus frequency for terms
          in: query
          name: maxCorpusCount
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Minimum number of dictionary entries for words returned
          in: query
          name: minDictionaryCount
          required: false
          schema:
            default: 1
            format: int32
            type: integer
        - description: Maximum dictionary definition count
          in: query
          name: maxDictionaryCount
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Minimum word length
          in: query
          name: minLength
          required: false
          schema:
            default: 1
            format: int32
            type: integer
        - description: Maximum word length
          in: query
          name: maxLength
          required: false
          schema:
            default: -1
            format: int32
            type: integer
        - description: Results to skip
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Maximum number of results to return
          in: query
          name: limit
          required: false
          schema:
            default: 10
            format: int32
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/WordSearchResults"
          description: No response was specified
      summary: Searches words
      tags:
        - words
  /words.json/wordOfTheDay:
    get:
      operationId: getWordOfTheDay
      parameters:
        - description: Fetches by date in yyyy-MM-dd
          in: query
          name: date
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/WordOfTheDay"
          description: No response was specified
      summary: Returns a specific WordOfTheDay
      tags:
        - words
components:
  schemas:
    ApiTokenStatus:
      properties:
        expiresInMillis:
          format: int64
          type: integer
          uniqueItems: false
        remainingCalls:
          format: int64
          type: integer
          uniqueItems: false
        resetsInMillis:
          format: int64
          type: integer
          uniqueItems: false
        token:
          type: string
          uniqueItems: false
        totalRequests:
          format: int64
          type: integer
          uniqueItems: false
        valid:
          type: boolean
          uniqueItems: false
      uniqueItems: false
    AudioFile:
      properties:
        attributionText:
          type: string
          uniqueItems: false
        attributionUrl:
          type: string
          uniqueItems: false
        audioType:
          type: string
          uniqueItems: false
        commentCount:
          format: int32
          type: integer
          uniqueItems: false
        createdAt:
          format: date
          type: string
          uniqueItems: false
        createdBy:
          type: string
          uniqueItems: false
        description:
          type: string
          uniqueItems: false
        duration:
          format: double
          type: number
          uniqueItems: false
        fileUrl:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        voteAverage:
          format: float
          type: number
          uniqueItems: false
        voteCount:
          type: integer
          uniqueItems: false
        voteWeightedAverage:
          format: float
          type: number
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
        - id
      uniqueItems: false
    AudioType:
      properties:
        id:
          format: int32
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      uniqueItems: false
    AuthenticationToken:
      properties:
        token:
          type: string
          uniqueItems: false
        userId:
          format: int64
          type: integer
          uniqueItems: false
        userSignature:
          type: string
          uniqueItems: false
      uniqueItems: false
    Bigram:
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        gram1:
          type: string
          uniqueItems: false
        gram2:
          type: string
          uniqueItems: false
        mi:
          format: double
          type: number
          uniqueItems: false
        wlmi:
          format: double
          type: number
          uniqueItems: false
      uniqueItems: false
    Category:
      properties:
        id:
          format: int64
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      required:
        - id
      uniqueItems: false
    Citation:
      properties:
        cite:
          type: string
          uniqueItems: false
        source:
          type: string
          uniqueItems: false
      uniqueItems: false
    ContentProvider:
      properties:
        id:
          format: int32
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      uniqueItems: false
    Definition:
      properties:
        attributionText:
          type: string
          uniqueItems: false
        attributionUrl:
          type: string
          uniqueItems: false
        citations:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        exampleUses:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        extendedText:
          type: string
          uniqueItems: false
        labels:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        notes:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        partOfSpeech:
          type: string
          uniqueItems: false
        relatedWords:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        score:
          format: float
          type: number
          uniqueItems: false
        seqString:
          type: string
          uniqueItems: false
        sequence:
          type: string
          uniqueItems: false
        sourceDictionary:
          type: string
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
        textProns:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    DefinitionSearchResults:
      properties:
        results:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        totalResults:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
    Example:
      properties:
        documentId:
          format: int64
          type: integer
          uniqueItems: false
        exampleId:
          format: int64
          type: integer
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        provider:
          $ref: "#/components/schemas/ContentProvider"
        rating:
          format: float
          type: number
          uniqueItems: false
        score:
          $ref: "#/components/schemas/ScoredWord"
        sentence:
          $ref: "#/components/schemas/Sentence"
        text:
          type: string
          uniqueItems: false
        title:
          type: string
          uniqueItems: false
        url:
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
        year:
          type: integer
          uniqueItems: false
      uniqueItems: false
    ExampleSearchResults:
      properties:
        examples:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        facets:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    ExampleUsage:
      properties:
        text:
          type: string
          uniqueItems: false
      uniqueItems: false
    Facet:
      properties:
        facetValues:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      uniqueItems: false
    FacetValue:
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        value:
          type: string
          uniqueItems: false
      uniqueItems: false
    Frequency:
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        year:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
    FrequencySummary:
      properties:
        frequency:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        frequencyString:
          type: string
          uniqueItems: false
        totalCount:
          format: int64
          type: integer
          uniqueItems: false
        unknownYearCount:
          format: int32
          type: integer
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    Label:
      properties:
        text:
          type: string
          uniqueItems: false
        type:
          type: string
          uniqueItems: false
      uniqueItems: false
    Long:
      properties:
        value:
          format: int64
          type: integer
          uniqueItems: false
      uniqueItems: false
    Note:
      properties:
        appliesTo:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
        noteType:
          type: string
          uniqueItems: false
        pos:
          format: int32
          type: integer
          uniqueItems: false
        value:
          type: string
          uniqueItems: false
      uniqueItems: false
    PartOfSpeech:
      properties:
        allCategories:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        roots:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        storageAbbr:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    Related:
      properties:
        gram:
          type: string
          uniqueItems: false
        label1:
          type: string
          uniqueItems: false
        label2:
          type: string
          uniqueItems: false
        label3:
          type: string
          uniqueItems: false
        label4:
          type: string
          uniqueItems: false
        relationshipType:
          type: string
          uniqueItems: false
        words:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    Root:
      properties:
        categories:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      required:
        - id
      uniqueItems: false
    ScoredWord:
      properties:
        baseWordScore:
          format: double
          type: number
          uniqueItems: false
        docTermCount:
          format: int32
          type: integer
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        lemma:
          type: string
          uniqueItems: false
        partOfSpeech:
          type: string
          uniqueItems: false
        position:
          format: int32
          type: integer
          uniqueItems: false
        score:
          format: float
          type: number
          uniqueItems: false
        sentenceId:
          format: int64
          type: integer
          uniqueItems: false
        stopword:
          type: boolean
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
        wordType:
          type: string
          uniqueItems: false
      uniqueItems: false
    Sentence:
      properties:
        display:
          type: string
          uniqueItems: false
        documentMetadataId:
          format: int64
          type: integer
          uniqueItems: false
        hasScoredWords:
          type: boolean
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        rating:
          format: int32
          type: integer
          uniqueItems: false
        scoredWords:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    SimpleDefinition:
      properties:
        note:
          type: string
          uniqueItems: false
        partOfSpeech:
          type: string
          uniqueItems: false
        source:
          type: string
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
      uniqueItems: false
    SimpleExample:
      properties:
        id:
          format: int64
          type: integer
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
        title:
          type: string
          uniqueItems: false
        url:
          type: string
          uniqueItems: false
      uniqueItems: false
    StringValue:
      properties:
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    Syllable:
      properties:
        seq:
          format: int32
          type: integer
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
        type:
          type: string
          uniqueItems: false
      uniqueItems: false
    TextPron:
      properties:
        raw:
          type: string
          uniqueItems: false
        rawType:
          type: string
          uniqueItems: false
        seq:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
    User:
      properties:
        displayName:
          type: string
          uniqueItems: false
        email:
          type: string
          uniqueItems: false
        faceBookId:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        password:
          type: string
          uniqueItems: false
        status:
          format: int32
          type: integer
          uniqueItems: false
        userName:
          type: string
          uniqueItems: false
        username:
          type: string
          uniqueItems: false
      uniqueItems: false
    WordList:
      properties:
        createdAt:
          format: date
          type: string
          uniqueItems: false
        description:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        lastActivityAt:
          format: date
          type: string
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
        numberWordsInList:
          format: int64
          type: integer
          uniqueItems: false
        permalink:
          type: string
          uniqueItems: false
        type:
          type: string
          uniqueItems: false
        updatedAt:
          format: date
          type: string
          uniqueItems: false
        userId:
          format: int64
          type: integer
          uniqueItems: false
        username:
          type: string
          uniqueItems: false
      required:
        - id
      uniqueItems: false
    WordListWord:
      properties:
        createdAt:
          format: date
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        numberCommentsOnWord:
          format: int64
          type: integer
          uniqueItems: false
        numberLists:
          format: int64
          type: integer
          uniqueItems: false
        userId:
          format: int64
          type: integer
          uniqueItems: false
        username:
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
        - id
      uniqueItems: false
    WordObject:
      properties:
        canonicalForm:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        originalWord:
          type: string
          uniqueItems: false
        suggestions:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
        vulgar:
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
        - id
      uniqueItems: false
    WordOfTheDay:
      properties:
        category:
          type: string
          uniqueItems: false
        contentProvider:
          $ref: "#/components/schemas/ContentProvider"
        createdAt:
          format: date
          type: string
          uniqueItems: false
        createdBy:
          type: string
          uniqueItems: false
        definitions:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        examples:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        htmlExtra:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        note:
          type: string
          uniqueItems: false
        parentId:
          type: string
          uniqueItems: false
        publishDate:
          format: date
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
        - id
      uniqueItems: false
    WordSearchResult:
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        lexicality:
          format: double
          type: number
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    WordSearchResults:
      properties:
        searchResults:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        totalResults:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
  securitySchemes:
    api_key:
      in: query
      name: api_key
      type: apiKey
